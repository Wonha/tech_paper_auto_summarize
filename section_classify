#!/usr/bin/perl -w
use strict;
use 5.010;
use utf8;
binmode(STDOUT, ":utf8");
#fgrep \\section *.tex

$#ARGV == 0 || die "Usage: ./section_classify [NAME OF DOC]\n";


# set list of section devider
my (@list_intro, @list_conclusion, @list_test);
@list_intro = qw/はじめに/;
@list_test = qw/実験/;
@list_conclusion = qw/結論 おわりに 終わりに/;
## sample: $re_* = "intro|introduction|introduce";
my ($re_intro, $re_conclusion, $re_test);
$re_intro = join '|', @list_intro;
$re_test = join '|', @list_test;
$re_conclusion = join '|', @list_conclusion;
### 関連研究
### 提案手法


# read file contents
my ($file_name, $origin_file_lines);
$file_name = $ARGV[0];
open my $fh, '<:encoding(UTF-8)', $file_name || die "Can't open '$file_name': $!";
$origin_file_lines = join '', <$fh>;


# classify section (another implementation method : split operator | use m// in list context)
my ($file_lines, $content_intro, $content_conclusion, $content_test, $content_proposedtech);

## classify proposed technique
$file_lines = $origin_file_lines;
$content_proposedtech = $file_lines;

## classify intro
=begin MATCH_TWICE 
if( $file_lines =~ /^(\\section{$re_intro})(.*)(\\section{(?:[^\n])+)}/sump ) {
	print "found [${^MATCH}]\n";
#	if (${^POSTMATCH} =~ /^\\section{.*}/ump ) {
#		$content_intro = ${^PREMATCH};
#		print "[contents of intro section]\n$content_intro\n";
#	}
}
=end MATCH_TWICE
=cut
if( $content_proposedtech =~ s/^(\\section{(?:$re_intro)})(.*?)((?:\\section{(?:[^\n])+})|(?:\\end{document}))/$3/sump ) {
#	print "$content_proposedtech\n\n\n";
	$content_intro = $2;
	print "********************************************************************intro is \n $content_intro\n\n";
}

## classify test
=begin ORIGIN
if( $file_lines =~ /^\\section{(?:$re_test)(?:\S)*}/ump ) {
	print "found [${^MATCH}]\n";
}
=end ORIGIN
=cut
if( $content_proposedtech =~ s/^(\\section{(?:$re_test)})(.*?)((?:\\section{(?:[^\n])+})|(?:\\end{document}))/$3/sump ) {
#	print "$content_proposedtech\n\n\n";
	$content_test = $2;
	print "********************************************************************test is \n $content_test\n\n";
}

## classify conclusion
=begin ORIGIN
if( $file_lines =~ /^\\section{(?:$re_conclusion)(?:\S)*}/ump ) {
	print "found [${^MATCH}]\n";
}
=end ORIGIN
=cut
if( $content_proposedtech =~ s/^(\\section{(?:$re_conclusion)})(.*?)((?:\\section{(?:[^\n])+})|(?:\\end{document}))/$3/sump ) {
#	print "$content_proposedtech\n\n\n";
	$content_conclusion = $2;
	print "********************************************************************conclusion is \n $content_conclusion\n\n";
}

print "********************************************************************proposed technique is \n $content_proposedtech\n\n";
