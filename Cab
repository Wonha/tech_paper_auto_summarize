#!/usr/bin/perl
#####
# usage : 
# ```
# $ ./Cab [summarization rate] [list_of_source]
# ```
#
# 1. Latex2Text
# 1. classify_section
#
#####
use strict;
use warnings;
use utf8;
use open IO=> ':encoding(utf8)';
binmode STDIN, ':encoding(utf8)';
binmode STDOUT, ':encoding(utf8)';
binmode STDERR, ':encoding(utf8)';

use lib qw(lib);
use Latex2Text;
use CabCommon ':all';

$#ARGV >= 0 || die "Usage: ./Cab [NAME OF LATEX SOURCE FILES]\n";

##### Cab process
my @latex_files = <@ARGV>;
print "number of input latex files: ".scalar @latex_files."\n";

my $num_done = 0;
for my $path_latex (@latex_files) {

	make_log_dir($path_latex);
	my $struct = latex_to_section($path_latex);

#=begin DEBUG_STRUCT
	use Data::Dumper;
#	print Dumper($struct);
	for my $n (1..$#$struct) {
		print "####################################################################\n";
		print "####################################################################\n";
		print "type: $struct->[$n]{type}\n";
		print "section title: $struct->[$n]{title}\n";
		print "--------------------------------------------------------------------\n";
		print $struct->[0][$_]."\n" for ($struct->[$n]{start}..$struct->[$n]{end});
		if ( defined $struct->[$n]{subsec} ) {
			for my $i (0..$#{$struct->[$n]{subsec}}) {
				print "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
				print "subsection title : $struct->[$n]{subsec}[$i]{title}\n";
				print "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
				for my $j ($struct->[$n]{subsec}[$i]{start}..$struct->[$n]{subsec}[$i]{end}) {
					print $struct->[0][$j]."\n";
				}
			}
		}
	}
#=end DEBUB_STRUCT
#=cut

# &check_classified_rate();
# &get_rel_scored_paragraph();
# &check_classified_rate();

#	&summarize_section();
#	&combine_section();

# &make_tf_table();
# &weight_word_tf_idf();

	$num_done++;
}
print "number of processed files: $num_done\n";


