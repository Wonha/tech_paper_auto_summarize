パターン方式の関係指向手法とアンカー方式の類義指向手法を組み合わせる手法を提案する．
この手法の概要を\fig{overview}に記す．
この手法は述語対獲得と共有項同定の2つの過程からなる．
最初にパターン方式を用いて所与の関係を満たす述語対を獲得し，これを述語対候補とする．
次に，アンカー方式を用いて各述語対候補のフィルタリングと共有項同定を行う．
アンカーとして，インスタンスアンカーとタイプアンカーの2種類を用いる．
述語対候補のアンカーを発見した場合，述語対候補は確かに所与の関係にあると見なし，アンカーを共有している述語対の項対を共有項とする．
一方で，述語対候補のアンカーがない場合はその述語対候補を破棄する．
\sec{result}で示すように，パターン方式とアンカー方式を組み合わせて述語対の関係を判断することにより精度が向上した．
述語対獲得ではパターン方式の手法を用いて，所与の関係にある述語対を獲得する．
このとき，パターン方式の手法は，関係を詳細に識別して因果関係のような事態間関係を獲得することができれば任意の手法でもよい．
例えば，\ssec{related_patt}で挙げた手法はこの条件を備えているが，\ssec{related_anc}で挙げた手法はこの条件を備えていない．
実験ではパターン方式の手法として，Abeら[CITE]の手法を用いることにした．
その理由は，この手法が獲得した事態対の確からしさを表すスコアを持つため，このスコアを用いて信頼度の高い事態対だけを利用することができるという利点を備えているためである．
この手法の詳細は[CITE]に記されているが，概要を\sec{patt_method}にも記す．
共有項同定では，パターン方式を用いて獲得した所与の関係にある述語対候補に対して，アンカーを用いることで，フィルタリングと共有項同定を行う．
インスタンスアンカーとタイプアンカーの2種類のアンカーを用いる．
この2種類のアンカーはそれぞれ独立的かつ相補的な特徴を持つため，この2つのアンカーを組み合わせることで再現率を向上できる可能性がある．
Pekar [CITE]が動詞間の含意関係を獲得するためにアンカーを用いた方法に示唆を受けて，我々は次の3つの仮説を置いた．
同一談話内において2つの述語が項に同じ名詞表現を伴っているとき，この名詞表現は同じものを指している．
同一談話内において2つの述語の項が同じものを指しているのであれば，この2つの述語の項は共有されている．
同一談話内において2つの述語の項が同じものを指しているのであれば，この2つの述語は何らかの関係を満たす．
例えば\fig{overview}の(2a)はある文章中の談話である．
この談話において，名詞「パン」は2回出現し，1つめの「パン」は「焼く」のヲ格であり，2つめの「パン」は「焦げる」のガ格である．
仮説から，2回出現した「パン」は同じ「パン」を指していると仮定でき，「焼く」のヲ格と「焦げる」のガ格は項を共有し，さらに「焼く」と「焦げる」は何らかの関係にあると仮定できる．
ここで重要な役割を果す名詞（この例では「パン」）を我々はアンカーと呼び，このようなアンカーを\ssec{type_anc}で述べる「タイプアンカー」と対比させて「インスタンスアンカー」と呼ぶ．
述語対[MATH]，[MATH]が与えられたとき，次の条件を満たす3つ組\bracket{[MATH]-[MATH]; [MATH]-[MATH]; Anc}を探す．
Webページ中に出現した[MATH]の項の名詞句の主辞[MATH]をアンカーAncとする．
(a)と同じWebページに出現する[MATH]の項の名詞句の主辞[MATH]がAncと等しい．
Ancがストップリストに含まれていない．
条件[MATH]かつ[MATH]を満たす（ただし実験では[MATH]とした）．
実験では人手でストップリストを作成した．
リストには219語の代名詞，数字，「こと」，「もの」，「とき」のように非常に一般的な名詞を含んでいる．
条件(d)の[MATH]は，Pred[MATH]とArg[MATH]の間の自己相互情報量である．
この条件は，係り受け解析器のエラーが原因で誤認したアンカーを除くことを目的としている．
インスタンスアンカーの集合は，項の共有関係を持つ述語対の組Pred[MATH]-Arg[MATH]とPred[MATH]-Arg[MATH]から次のように求められる．
Pekarは談話の範囲をできるだけ正確に認識しようと勤めているのに対して，我々は同一Webページに含まれる文を同じ談話であると見なし，同一Webページ内でアンカーを共有している述語対は何らかの関係を持つと仮定した．
このようにPekarと比較してより少ない制約のみを用いているにもかかわらず，\sec{result}で示すように我々の手法を用いて良い実験結果を得ることができた．
この理由は，我々は少ない制約を用いて談話関係を認識したが，代りに語彙統語的パターンを用いて獲得した述語対を用いたため，これが強い制約となり精度の低下を防いでいると考えられる．
我々は次の仮説を置いた．
同一文内で共起する2つの述語は何らかの関係を満たす．
同一文内で2つの述語が共起するという状況下において，2つの述語の項が伴う名詞をそれぞれの項毎に独立に集めたとき，2つの名詞集合の両方において出現する名詞は，2つの述語の項の間で共有されるような名詞である．
\fig{overview}の文(3a)と(3b)について考察する．
この2文は独立した文であり，同一文章内の2文であっても，異なる文章の2文であってもよい．
この2文はともに述語「焼く」と述語「焦げる」を含む．
(3a)では名詞「パン」が「焼く」のヲ格にあり，(3b)では名詞「パン」が「焦げる」のガ格にある．
ここから名詞「パン」は，「焼く」のヲ格に伴うことができ，かつ「焦げる」のガ格に伴うこともできるということがわかる．
仮説から，「焼く」のヲ格と「焦げる」のガ格は同じ名詞（少なくとも名詞「パン」）を伴うことができるということがわかる．
このときの名詞「パン」は，「焼く」のヲ格と「焦げる」のガ格が共有項である可能性を示す名詞である．
このような名詞を「タイプアンカー」と呼ぶ．
この名称の理由は，(3a)の「パン」と(3b)の「パン」は同じものを指していないが，同じタイプであるためである．
タイプアンカーの集合は次のように求める．
述語対[MATH]と[MATH]が与えられたとき，コーパス全体から[MATH]と[MATH]が共起する文を探し，次に示すように，どちらか片方の述語の項を埋める名詞の出現頻度を計算する．
[MATH]の項[MATH]に名詞Ancがあれば，\bracket{[MATH]-[MATH]; [MATH]; Anc}の頻度を増やす．
[MATH]の項[MATH]に名詞Ancがあれば，\bracket{[MATH]; [MATH]-[MATH]; Anc}の頻度を増やす．
[MATH]-[MATH]と[MATH]-[MATH]の間で共有された名詞集合の交差集合を計算する．
すなわち，
となる．
このとき，
S_1 & ={Arg}|\langle\mathit{Pred}_1\text{-}\mathit{Arg}_1; \mathit{Pred}_2; \mathit{Anc}\rangle,
S_2 & ={Arg}|\langle\mathit{Pred}_1; \mathit{Pred}_2\text{-}\mathit{Arg}_2; \mathit{Anc}\rangle.
である．
インスタンスアンカーとタイプアンカーに共通する性質を利用して次の目的を達成する．
アンカーを持つ述語対候補は何らかの関係を満たすという性質を利用し，何らかの関係を満たさないような述語対候補を除く．
述語対の項対の共有項を見付けることができるというアンカーの性質を利用し，述語対候補の項対の共有項を同定する．
このとき，ある述語対のある項対に対応するアンカーが見付かった場合，その項対はアンカーを持つと言うことにする．
また，ある述語対の項対がアンカーを持てば，その述語対もアンカーを持つとみなす．
逆にある述語対の項対がアンカーを持てば，その述語対もアンカーを持つとみなす．
\fig{overview}の例を用いて，アンカーによる述語対候補のフィルタリングと共有項同定について説明する．
述語対獲得から述語対候補[MATH]を得る．
この述語対候補のインスタンスアンカーには「パン」「肉」「オーブン」「トースター」の4つの名詞が存在するため，この述語対候補はインスタンスアンカーを持つ．
同様に，タイプアンカーも4つの名詞を持つため，この述語対候補はタイプアンカーも持つ．
このときアンカーが存在しなければ，この述語対候補は何の関係も満たさないとみなして候補から除かれるが，この例ではインスタンスアンカーとタイプアンカーを持つため，所与の関係を満たす可能性のある述語対であると見なされる．
さらに，この述語対は，アンカー「パン」と「肉」より「焼く」のヲ格と「焦げる」のガ格が共有項であり，アンカー「オーブン」と「トースター」より「焼く」のデ格と「焦げる」のデ格も共有項であるとみなす．
アンカーを用いて，述語対獲得によって獲得した述語対候補それぞれに対して次の手続きを実行する．
アンカーを持たない述語対を除く．
述語対毎に項対を選ぶ．
このとき頻度の高い項対を最大で[MATH]個を選ぶ（実験では[MATH]）．
項対毎にアンカーを選ぶ．
このとき頻度の高いアンカーを最大で[MATH]個を選ぶ（実験では[MATH]）．
実験で用いたパターン方式の手法であるAbeら[CITE]の手法の概要を述べる．
本稿ではこの手法を拡張Espressoと言うことにする．
拡張Espresoは，共起パターンを利用して実体対を獲得する手法であるEspressoを，共起パターンを利用して事態対を獲得するように拡張したものである．
Espressoに対する拡張Espressoの主要な変更点は次の2つである．
Espressoにおける実体対は名詞句の対であるが，拡張Espressoの事態対は述語または述語句の対である．
Espressoにおける共起パターンは名詞句の対の間にある文字列であるが，拡張Espressoの共起パターンは係り受け関係の木を考えた場合の事態対の間のパスに相当する．
Espressoは，共起パターンを用いた実体間関係獲得手法のひとつであり，共起パターンを用いた手法に共通する，任意の関係のみを表現する共起パターンを用いて任意の関係にある実体対を獲得でき，任意の関係のみで表現される実体対を用いることで，任意の関係のみを表現する共起パターンを獲得できるという仮定を持っている．
さらにEspressoは，共起パターンまたは実体対が任意の関係を表わす程度を信頼度という指標で表わし，信頼度の高い共起パターンとよく共起する実体対は信頼度が高く，信頼度の高い述語対とよく共起する共起パターンも信頼度が高いという仮定をおいた．
このとき，Espressoは人手で作成した任意の関係にある信頼度の高い実体対を入力として，これと共起する信頼度の高い共起パターンを獲得する．
次に信頼度の高い共起パターンを用いて，信頼度の高い実体対を獲得する．
この操作をブートストラップ的に繰り返すことで，信頼度の高い実体対を大量に獲得する．
獲得したい関係にある実体対\bracket{[MATH]}が与えられたとき，Espressoは[MATH]と[MATH]の両方が含まれた文をコーパスから探し出す．
例えば，\textsl{is-a}関係の実体対\bracket{Italy,country}が与えられたとき，Espressoはテキストcountries such as Italyが含まれるような文を見つけ出し，共起パターンY such as Xを獲得する．
Espressoは共起パターン[MATH]の良さを測るために信頼度[MATH]という尺度を用いる．
共起パターンの信頼度[MATH]は，共起パターン[MATH]と共起する実体対[MATH]の信頼度[MATH]から求められる．
[MATH]は共起パターン[MATH]と共起する実体対[MATH]の集合である．
[MATH]は\eq{pmi}で定義される[MATH]と[MATH]のpointwise mutual information (PMI)であり，[MATH]と[MATH]の関連度を表現する．
[MATH]は，共起パターンと実体対が共起した場合全てのPMIの中で最大となるPMIである．
PMIは頻度が少ないときに不当に高い関連性を示すという問題が知られている．
この問題を軽減するために，Espressoでは\eq{pmi}の代りに[CITE]で定義された\eq{pmi2}を用いる．
[MATH]は[MATH]と[MATH]が同時に出現した回数，[MATH]は個々の[MATH]の出現した回数，[MATH]は個々の[MATH]の出現した回数，[MATH]は[MATH]の異り数，[MATH]は[MATH]の異り数である．
共起パターンの信頼度と同じように，実体対[MATH]の信頼度[MATH]を次のように定義する．
共起パターン[MATH]の信頼度[MATH]は，前述の\eq{rpi}で定義され，[MATH]は先の定義と同じであり，[MATH]は実体対[MATH]と共起する共起パターン[MATH]の集合である．
共起パターンの信頼度[MATH]と実体対の信頼度[MATH]は再帰的に定義され，人手で与えたシード[MATH]の信頼度を[MATH]とする．
なお，我々の拡張では，人手で与えた負例関係にある述語対の信頼度を[MATH]とした．
