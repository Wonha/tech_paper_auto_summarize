本節では，提案したフィルタリングおよび表領域抽出処理に関する評価実験について述べる．
実験対象となる製品は，パソコン，デジタルカメラおよびプリンタの3種類とした．
28の製品メーカサイトからHTMLダウンローダを用いて獲得したHTML文書群を評価実験の対象とした．
総データ数は86737文書であり，それら文書の製品ごとの内訳を表[REF_dataset]に示す．
但し，性能表を含んでいない文書群中には，別の製品の性能表が含まれている．
例えば，デジタルカメラの場合は，性能表を含んでいない文書にフィルムカメラやビデオカメラなどの性能表が含まれていることがある．
まず，フィルタリング処理について評価する．
実装には，SVM[MATH]を使用した．
評価の基準として，適合率，再現率，F値を用いる．
それぞれの値は以下の式で算出される．
フィルタリング処理では，訓練データ数を100文書，300文書，500文書，1000文書とした，4つの場合について評価した．
それぞれの訓練データは全データからランダムに5セットずつ抽出され，適合率および再現率は5セットの実験結果の平均値とした．
評価データは，ダウンローダによって獲得された全データから，サンプリングされた訓練データを除いたもので，訓練データと評価用のデータは重複しない．
TSVMのためのラベル無しデータとしては，評価データからサンプリングした1000文書を用いた．
ラベル無しデータと評価データは重複している．
素性選択としてベイズの定理を用いた場合の実験結果を表[REF_fi-bay]に，正規化[MATH]を用いた場合の実験結果を表[REF_fi-tf]に示す．
図[REF_keys]にベイズの定理もしくは正規化[MATH]によって素性として選択された単語の例を示す．
単語とともに記述されている数値は，それぞれの手法によって算出された，性能表を含む文書群([MATH])もしくは性能表を含まない文書群([MATH])における，その単語の重みを表す．
例えば，図中の正規化[MATH]の例では，メモリやスロットという単語は[MATH]で顕著に出現し，方法やロードなどは[MATH]で顕著に出現したことを表している．
この値を基にSVMのための素性が選択された．
フィルタリング処理で抽出された文書の例を示す．
図[REF_ok]は，デジタルカメラを対象とした場合の正解例である．
表の最左列に細分化された多くの属性が存在するため，訓練データから抽出された素性とマッチする．
このように最左列に多く属性が存在する場合は，正しく分類される．
一方で，図[REF_bad]は同じくデジタルカメラを対象とした場合の失敗例である．
この失敗例は，ある製品で撮影した写真の画像サンプルに関する文書であり，この文書には性能表が含まれていない．
しかし，文書中にあるいくつかの<TABLE>中の最左列に訓練データで抽出した素性がマッチしてしまい，誤抽出となった．
図[REF_miss]は，性能表を含んでいるにもかかわらず，フィルタリングで獲得できなかった例である．
この文書に含まれる性能表は，属性部分が細かく分類されておらず，属性値の欄に箇条書きで細分化された属性が記述されている．
提案手法では，分類器のための素性を表の最左列に限定しているため，このような性能表は正しく獲得できない場合がある．
ベイズの定理と正規化[MATH]によって選ばれた素性を比較すると，多くの場合，正規化[MATH]の方が高いF値を収めた．
製品種別で比較すると，デジタルカメラの精度が低くなる傾向があり，プリンタもパソコンに比べると精度が落ちる．
この理由としては，(1)パソコンの性能表は比較的大きな表であることが多く，有効なキーワードが得やすいこと，(2)デジタルカメラのメーカは，フィルムカメラやビデオカメラも扱っていることが多く，プリンタの場合にもコピー機やスキャナのような対象となる性能表によく似たノイズが同じサイト内に存在すること，などが挙げられる．
しかしながら，このように非常に似た性能表が混在しているにもかかわらず，比較的高いF値を得ることができている．
SVMとTSVMについて比較すると，ベイズの定理を用いて素性を選択した場合は殆どの実験でSVMに比べ，TSVMの方が高いF値を得た．
正規化[MATH]を用いた場合は，TSVMのF値の方が低くなることが多いが，両方の素性とも，訓練データが少ない場合は，TSVMのF値がSVMのF値を上回る傾向がみられた．
これは，訓練データが少ない場合のTSVMの有効性を示している．
TSVMがSVMのF値を上回っている殆どの場合では，再現率が大幅に向上している．
これは，TSVMが正例と負例の分布に基づいて再学習を行うためである．
今回の実験では，ラベル無しデータの正例と負例の分布については，訓練データ中の正例と負例の分布を用いたが，ここに全データから算出された正例と負例の比を適用すると実験結果は表[REF_right-dis]のようになる．
TSVMで使用する正例と負例の比が正確であれば，少数の訓練データの場合，さらなる精度向上に繋がることが確認できた．
実験結果より，本タスクでは，訓練データが少ない場合においてTSVMが有効に機能することが確認された．
続いて，素性選択に使用した条件について考察する．
[REF_sec3.3]節で示したように，素性は表の最左列のみを使用している．
この条件の有効性を検証するために，素性選択に最左列という条件を除いた場合の結果を表[REF_all_fea]に示す．
訓練および評価データは最左列に限定したものと同じものを使用しており，素性選択の手法には，正規化[MATH]を用いた．
表は，通常のSVMに関する実験結果である．
一部で，表中の全ての要素を素性選択に用いた場合の方が良いF値を得ることがあるが，平均で3〜4%程度，最大で約13%，素性選択を最左列に限定した方が良いという実験結果が得られた．
素性選択を最左列に限定しない場合にF値が落ちる原因は，1つの文書に含まれる<TABLE>タグが多いことが考えられる．
我々が用いた実験データでは，1つの文書に30個程度の<TABLE>タグが存在する．
最左列という条件を除くと，性能表を含む文書中の関係のない<TABLE>タグの中身まで素性候補としてしまう可能性が高くなり，それが精度に影響するものと考えられる．
実験結果より，素性選択に関する条件の有効性も確認できた．
続いて，表領域抽出処理について実験する．
ここでは，SVMおよびTSVMの素性選択に使用した，性能表を含む文書群([MATH])中で高い重みを持つ単語[MATH]をキーワードとし，その値[MATH]を用いる．
それらのキーワードによって，性能表を含む文書からどれだけの性能表の領域を正しく特定できるかを評価する．
すなわち，実験データは，表[REF_dataset]の各製品の「性能表を含んでいる文書」に含まれる文書となる．
実験には，フィルタリング処理で最もF値が良かった実験結果の素性をキーワードとして用いた．
実験結果を表[REF_tableext]に示す．
正解率は以下の式で算出される．
表中で，部分成功とは，ある製品の性能表が複数の並列した<TABLE>タグで構成されており(例えば，図[REF_numbering]の[MATH]と[MATH]が1つの性能表である場合)，その内のどれかが欠けている場合を指す．
過抽出は，正解領域だけでなく，別の<TABLE>タグも併せて抽出した場合を表しており，誤抽出は，性能表ではない<TABLE>タグを抽出した場合である．
実験結果より，パソコンの場合は非常に高い精度で表領域を特定できることがわかる．
パソコンの性能表の領域抽出の精度が高い理由としては，一般にパソコンの性能表が(1)比較的大きな表であること，(2)性能表が複数の並列した<TABLE>タグで記述されることが少ないこと，などが挙げられる．
それと比較すると，デジタルカメラとプリンタの表領域抽出精度は若干落ちる．
デジタルカメラやプリンタは，(3)性能表を含む文書中に存在する<TABLE>タグの数がパソコンに比べて若干多いこと，(4)複数の並列した<TABLE>タグで一つの性能表が記述されることが多いこと，などが精度が劣る原因である．
プリンタの場合で，誤抽出が多く見られるのは，(3)が大きな原因だと考えられる．
(4)に対しては，表領域抽出処理で，各<TABLE>の構造的な類似度を用いて結合処理を行っているが，並列する<TABLE>間に書式の異なる<TABLE>や性能表と関係のない<TABLE>が挿入されると，条件を満たさなくなり，<TABLE>が結合されない．
その例を図[REF_missint]に示す．
図[REF_missint](b)の例では，3つの<TABLE>は同じ深さで存在するが，[スキャナ付属品]の表が[スキャナ部分]と[プリンタ部分]の表の構造(セルの数とセルの幅，対応するセルへの背景色)と異なるため，結合されず，最もスコアが高い<TABLE>のみが抽出されることになる．
誤抽出や結合に失敗する場合の対処法として，スコアがある閾値以上の<TABLE>のみを性能表として抽出するという手法が考えられるが，一般的な閾値を見つけることは難しい．
また，現在我々が対象としているデータは，負例([MATH])に比べて，正例([MATH])の数が極端に少ないため，サンプリングする訓練データの数によっては，十分な正例が得られず，必ずしも十分なキーワードが得られるとは限らない．
その結果，設定した閾値によっては多くの性能表が棄却される場合もある．
精度向上のためには，訓練データ中の正例の数をいかに多く獲得するかが課題となる．
性能表には製品ごとやメーカごとに，その書式や使われている用語にある程度一貫性がある場合が多い．
精度向上のための別の手法としては，抽出処理に利用するキーワードを全データから獲得するのではなく，メーカごとに獲得し，それらを用いて表領域抽出処理を行うことなども今後の課題として考えられる．
また，この実験とは別に，各製品に対して5分割交差検定を行った．
すなわち，全データを5分割し，そのうち4つを性能表抽出のためのキーワード抽出処理の訓練データとし，残りの1つを評価データとした．
実験結果を表[REF_5cross]に示す．
5分割にして実験を行ったことにより，フィルタリングに使用した素性の場合に比べ，訓練データの数が多くなるため，有効なキーワードが獲得できた結果，全体的に誤抽出の数が減少した．
部分成功の数が増加したのは，フィルタリングに使用した素性ではキーワード不足で誤抽出となっていたものが，キーワードの増加によって抽出され，部分成功になったためである．
続いて，特殊な構造を持った文書について考察する．
<TD>.
..
</TD>内の要素が単一の<TABLE>タグで構成されている場合(以下，単一セルと呼ぶ)と複数の<TABLE>によって1つの性能表が構成されている場合(以下，複数テーブルと呼ぶ)の内訳と全体に占める割合を表[REF_unicellandmulti]に示す．
パソコンの場合は，単一セル，複数テーブルが存在する文書は正例中の1%以下だが，プリンタの場合は13%の文書が，例え，抽出のための十分なキーワードを獲得できていたとしても，特殊構造への処理を行わないと根本的に抽出できないことになる．
デジタルカメラの場合は単一セルと複数テーブルに重複があり，それを考慮すると，17%の文書(42文書)が同じく根本的に抽出できないことになる．
特殊構造への処理を行わなかった場合と行った場合の正解率を表[REF_nothing]に示す．
実験では，表[REF_tableext]の実験で使用したキーワードを利用した．
パソコンについては，単一セルと複数テーブルの数が全体に対して少ないため，正解率の上昇は1%以下であった．
一方で，特殊構造に対する処理を行わなかった場合，デジタルカメラの正解率は0.800，プリンタの場合は0.833となった．
すなわち，提案手法による特殊構造への処理は，プリンタの場合で5%程度，デジタルカメラの場合は約10%の正解率の向上に繋がっている．
特殊構造への対応にはいくつかの課題が残るが，この実験結果より，提案手法の有効性は確認できた．
本研究では，フィルタリングで性能表を含んでいる文書を絞り込み，続いて性能表を抽出するという流れを取った．
提案手法以外にも，まず従来の表抽出の研究に基づき，一般的な表抽出を実行し，その表から特定の内容を含んだ表を抽出するという手法も考えられる．
しかし，この手法を用いる場合，訓練データの獲得のために，全ての<TABLE>タグを人手でチェックし，正例もしくは負例のラベル付けをする必要がある．
我々の使用した実験データでは，1つの文書中に30前後の<TABLE>タグが存在する．
すなわち，膨大な数の<TABLE>タグへのチェックが必要になり，実用面を考えればコストが高い．
一方で，提案手法は，そのページに性能表が含まれているかもしくは含まれていないかのチェックをするだけで良いという利点がある．
また，表抽出処理では，フィルタリング処理で用いたSVMのような機械学習のアルゴリズムを使用しなかった．
これは，上記の表抽出を行い，内容を分類するという手法における問題点と同様に，性能表の正確な領域を膨大な<TABLE>タグをチェックしながら，人手で正例のラベルを付けることが，高コストなためである．
このように提案手法には，訓練データの作成に関して，実用的な面での大きな利点がある．
