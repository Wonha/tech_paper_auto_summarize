================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[2447] 提案手法では，Support Vector Machines (SVM)を用いて，Webページ中に存在する表領域が製品スペックかどうかの判定を行う．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[2974] 表は属性と属性値によって構造化された情報であり，その特性を考えると，表をテキストとして扱うのではなく，テキスト部分と切り離し，表として認識し，利用することが情報検索システムなどの精度向上に繋がる．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[3331] このような一般的な表抽出タスクでは，その<TABLE>タグ中にどのような内容が記述されているかを対象としないため，言語情報よりも構造情報(例えば，縦および横のセルの一貫性など)を重視する．

================================================================
[section type  : proposed_method]
[section title : フィルタリング]
================================================================
[2501] フィルタリングとは，製品メーカのサイトからHTMLダウンローダで獲得したWeb文書群から，性能表を含む文書を抽出することを指す．
-----------------------------------------------------
  [subsection title : Support Vector Machines]
-----------------------------------------------------
  [2617] SVMはVapnikらが考案したOptimal Separating Hyperplaneを起源とする，超平面による特徴空間の分割法であり，現在，二値分類問題を解決するための最も優秀な学習モデルの一つとして知られている[CITE]．
-----------------------------------------------------
  [subsection title : Transductive SVM]
-----------------------------------------------------
  [2920] Vapnik [CITE]が提案した理論を基にJoachims [CITE]によって具体化されたTransductive SVM (TSVM)は，Transductive法と呼ばれる，与えられたラベル無しデータの分布に注目し，ラベル無しデータの誤分類の最小化を目的とする学習方法をSVMに適用し，拡張したもので，学習時にラベル無しデータの分布を考慮する事で分類精度を上げる手法である．
-----------------------------------------------------
  [subsection title : 素性選択]
-----------------------------------------------------
  [2656] 表の属性部分を素性に使い，属性値を素性として用いない理由は，製品の属性(例えば，パソコンならCPUやメモリなど)は，新しい機種が発売されても変更されにくいのに対し，属性値(例えば，CPUでいえば，800MHz，2GHzなど)は，その値や表現に揺れが生じやすいためである．

================================================================
[section type  : proposed_method]
[section title : 表領域抽出]
================================================================
[2566] 一般に，1つのHTML文書中には複数の<TABLE>タグが存在するため，それらの中から特定の表のみを抽出する処理が必要となる．
-----------------------------------------------------
  [subsection title : スコアリング]
-----------------------------------------------------
  [2295] ここで，[MATH]は各<TABLE>[MATH]の最左列のセル中に存在する単語のリストを表し，[MATH]は，<TABLE>[MATH]の最左列の要素に生起したキーワード[MATH]の総数を表す．
-----------------------------------------------------
  [subsection title : 特殊な構造への処理]
-----------------------------------------------------
  [2590] 入れ子構造になった<TABLE>タグの場合，ある<TABLE>[MATH]が性能表と見なされたとすると，その<TABLE>より深さの深い<TABLE>は，性能表の一部だとして抽出する．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[2606] 例えば，デジタルカメラの場合は，性能表を含んでいない文書にフィルムカメラやビデオカメラなどの性能表が含まれていることがある．
-----------------------------------------------------
  [subsection title : フィルタリングに関する実験]
-----------------------------------------------------
  [3033] 今回の実験では，ラベル無しデータの正例と負例の分布については，訓練データ中の正例と負例の分布を用いたが，ここに全データから算出された正例と負例の比を適用すると実験結果は表[REF_right-dis]のようになる．
-----------------------------------------------------
  [subsection title : 表領域抽出に関する実験]
-----------------------------------------------------
  [3205] デジタルカメラやプリンタは，(3)性能表を含む文書中に存在する<TABLE>タグの数がパソコンに比べて若干多いこと，(4)複数の並列した<TABLE>タグで一つの性能表が記述されることが多いこと，などが精度が劣る原因である．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[2987] 並列した複数の<TABLE>タグからなる性能表をより正確に抽出するためには，訓練データ中の正例をいかに多く獲得できるかや，構造的類似度に関する新たな尺度の導入が課題となる．

