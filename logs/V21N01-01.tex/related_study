関連研究

ここでは，
述語項構造解析の先行研究における，
位置関係と項へのなりやすさの優先順序の扱いについて紹介する．
先行研究と提案手法の概要を
\tblref{tbl:rwork}にまとめた．

\subsection{決定的な解析を行う方法}

\subsubsection{優先順序を統計的に求める方法}

\begin{savenotes}
\begin{table}[b]
\caption{先行研究と提案手法の概要}
\label{tbl:rwork}
\input{01table01.tex}
\end{table}
\end{savenotes}

\newcite{Kawahara:2004:JNLP}は，
解析を
ゼロ代名詞検出と先行詞同定の2段階に分け，
統計的に求めた優先順序を先行詞同定の際に用いた．
彼らの手法では，まず，
格フレーム辞書に基づく格解析によって，
ゼロ代名詞の検出を行う．
そして，
項が存在すると判断された場合は，
あらかじめ求めておいた
優先順序に従って候補を探索し，
候補と格フレーム用例の類似度が閾値以上かつ
分類器でも正例と分類される候補を先行詞として同定する．
分類器は項の位置関係に関わらず，
共通のものを作成した．
素性には，
格フレームとの類似度や品詞などを用いた．


彼らは，
従属節，主節，埋め込み文などといった文・文章中の構造をもとに，
項の位置関係（彼らは「位置カテゴリ」と呼んだ）を
20種類に分類した．

彼らは，位置カテゴリごとに，先行詞の取りやすさを
\begin{equation}
\frac{先行詞がその位置カテゴリにある回数}{その位置カテゴリにある先行詞候補の数}	
\label{a}
\end{equation}
でスコア化した．
そして，
位置カテゴリごとに，
京都大学テキストコーパス\cite{Kawahara:2002:LREC}から
スコアを算出し，
得られたスコアを
降順にソートしてそれぞれの格について
優先順序を得た．


\subsubsection{文内候補を優先的に探索する方法}
\label{iida-bact}

\newcite{Iida:2007:TALIP}は，
先行詞候補とゼロ代名詞の統語的関係をパターン化するために，
木を分類するブースティングアルゴリズムBACT \cite{Kudo:2004:IPSJ}を用いた．
BACTは木構造データを入力とし，
全ての部分木の中から分類に寄与する部分木に対して大きな重みをつける．
彼らは，
先行詞候補とゼロ代名詞間の係り受け木や，
関係を表す素性を，
根ノードに子としてつなげてBACTの入力とした．



文間先行詞の同定には係り受け関係を利用できないため，
彼らは
先行詞の同定モデルを文内と文間に分け，文内候補を優先的に探索する以下の方法をとった．

\begin{enumerate}
\item 最尤先行詞同定モデル$M_{10}$で，文内最尤先行詞$C_1^*$を求める
\item 照応性判定モデル$M_{11}$で，
$C_1^*$の先行詞らしさのスコア$p_1$を求める．
あらかじめ定めておいた閾値$\theta_{\rm intra}$に対して，$p_1 \geq \theta_{\rm intra}$であれば，$C_1^*$を先行詞として決定する．
そうでなければ(\ref{iida-inter})に進む．
\item 最尤先行詞同定モデル$M_{20}$で，文間最尤先行詞$C_2^*$を求める \label{iida-inter}
\item 照応性判定モデル$M_{21}$で，
$C_2^*$の先行詞らしさのスコア$p_2$を求める．
あらかじめ定めておいた閾値$\theta_{\rm inter}$に対して，$p_2 \geq \theta_{\rm inter}$であれば，$C_2^*$を先行詞として決定する．
そうでなければ，先行詞なしとする．
\end{enumerate}
$M_{10} \cdots M_{21}$はそれぞれBACTを使って学習・分類し，
パラメータ$\theta_{\rm intra}$と$\theta_{\rm inter}$は，開発データを用いて最適なものを求める．
この手法では，文内の最尤先行詞同定や照応性判定には文間の候補の情報は参照せずに，決定的に解析している．


\subsubsection{優先順位を経験的に決める方法}

\newcite{Taira:2008:EMNLP}は，
決定リストを用いて
全ての格の解析を同時に行う方法を提案した．
決定リストは規則の集合に適用順位を付けたものであり，
機械学習の結果を人が分析しやすいという特長がある．
彼らは
項の位置関係やヴォイス・機能語に加えて，
単語の出現形・日本語語彙大系\cite{goitaikei}から得られる意味カテゴリ・品詞
のいずれか1つを加えたものを組として扱い，
それぞれの組を1つの素性とした．
そして，
述語ごとに
Support Vector Machineの学習
で素性の重みを得て，
素性を重みでソートしたものを決定リストとした．
すなわち，1つの素性を1つの決定リストのルールとして扱った．



彼らは項の単位を単語とし，
項の位置関係を係り受け関係に基づいて次の7種類に定義している．
なお，fwとbwは追加的な種類で，その他の種類と兼ねることができる．

\begin{itemize}
\item Incoming Connection Type (ic): 項を含む文節が述語を含む文節に係っている\\
日米\underline{交渉}$_{ガ:進展}$が \underline{進展}した
\item Outgoing Connection Type (oc): 述語を含む文節が項を含む文節に係っている\\
衝動\underline{買い}した 新刊\underline{本}$_{ガ:買い}$
\item Within the Same Phrase Type (sc): 項が述語と同じ文節内にある\\
\underline{日}米\underline{交渉}$_{ガ:日}$が
\item Connection into Other Case role Types (ga\_c, wo\_c, ni\_c): 項を含む文節が述語を含む文節に，他の格の項を介して係っている\\
\underline{トム}$_{ヲ:説得, ga\_c}$への 友人$_{ガ:説得}$による\underline{説得}
\item Non-connection Type (nc): 項が述語とは異なる文にある

\item Forward Type (fw): 文章内にて，項が述語の前方にある
\item Backward Type (bw): 文章内にて，項が述語の後方にある
\end{itemize}


実際の解析は，各述語について次の手順で行った．

\begin{enumerate}
\item ic, oc, ga\_c, wo\_c, ni\_cについて，決定リストを用いて項を決定する \label{firststep}
\item (\ref{firststep})で決まらなかった格について，scの決定リストを用いて項を決定する
\item 対象の述語が項を持つ確率が50\%以上であれば(\ref{laststep})に進む
\item nc, fw, bwに関する決定リストを用いて項を決定する \label{laststep}
\end{enumerate}

この手法は経験的に，優先順序を\\
\hspace{2zw}ic, oc, ga\_c, wo\_c, ni\_c $>$ sc $>>$ nc, fw, bw\\
のように定めたといえる．
ic, oc, ga\_c, wo\_c, ni\_c間での，探索の優先関係はない．

この方法は，
格と項の位置関係を考慮しつつ，
項になりやすいものから決めていくのが特徴である．
ただし，
着目している候補と述語の情報のみを用いて項らしいかどうかを判断していくため，
必ずしも全ての候補を参照してから最終的な出力を決定するわけではなく，
候補間でどれが項らしいかの相対的な判断は行われない．


\subsubsection{述語と係り受け関係にある候補を優先的に項であるとみなす方法}

\newcite{Sasano:IPSJ:2011}は，
解析対象述語の格フレーム候補それぞれに対して，
次の手順で
格フレームと談話要素の対応付け候補を生成した．

\begin{itemize}
\item 解析対象述語と直接係り受け関係にある談話要素を，選ばれた格フレームの格スロットと対応付ける．
談話要素が係助詞をともなって出現した場合や，被連体修飾節に出現した場合など，
複数の格スロットとの対応付けが考えられる場合は，考えうるすべての対応付けを生成する．
\item 
上記の処理で生成された対応付け候補に対し，対応付けられなかったガ格・ヲ格・ニ格と，
解析対象述語と係り受け関係にない談話要素の対応付けを行う．
\end{itemize}

そして，
対数線形モデルにて最も確率的評価が高い対応付けを解析結果として出力した．
素性には，意味クラスや固有表現情報の他に，
出現格と出現位置に関する85個の2値素性も用いた．


この手法では，
格ごとに独立に解析を行なっているのではなく，
同時に解析を行なう．
しかし，
述語と係り受け関係にある候補を優先的に項であるとみなすため，
係り受け関係にある候補と，係り受け関係にない候補または他の文にある候補との比較は行えない．


\subsection{優先順序を素性として表現する方法}

位置関係と項へのなりやすさの関係を
優先順序として利用し決定的な解析を行うのではなく，
素性として利用した研究もある．

\subsubsection{最大エントロピー法を用いる方法}

\newcite{Imamura:2009:ACL}は，
最大エントロピー法に基づく識別的モデルを用いた．
彼らは，位置関係ごとにモデルを分けるのではなく，
素性として，述語と候補の位置関係，係り受け関係を用いた．
そして候補集合に，項を持たないことを示す特別な名詞句NULLを加え，
その中から最尤候補を同定するというモデル化を行った．
なお，候補数削減のため，文間項候補は
述語を含む文の直前の文に出現したものと，
これまでの解析ですでに項として同定されたものに限定している．

この方法では格ごとにモデルは1つだけ学習すればよい．
ただし，この手法では，候補間の関係を素性として用いることはできない．


\subsubsection{Markov Logicを用いる方法}

\newcite{Yoshikawa:2013:JNLP}は，
Markov Logicを利用して，
文内の複数の述語の	
項構造解析を同時に行う手法を提案した．
Markov Logicは
一階述語論理とMarkov Networksを組み合わせたもので，
一階述語論理式の矛盾をある程度のペナルティの上で認めることができる
統計的関係学習の枠組みである．
彼らは
項同定・項候補削減・格ラベル付与を同時に行うモデルを提案した．

彼らは，文間の項候補を加えるのは計算量の問題から困難だとしている．
素性（観測述語）は
述語と候補の係り受け関係などを用いた．


