英日機械翻訳システムなどの対訳辞書を拡張するための手段の一つとして，対訳コーパスなどから語彙知識を自動的に獲得する方法が有望である．
適切な語彙知識を獲得するためには，(1)対訳コーパスにおいて英語表現と日本語表現を正しく対応付ける処理と，(2)対応付けられたを辞書に登録するか否かを判定する処理の二つが必要である．
後者の処理が必要な理由は，対応付けられたには，辞書に登録することによって翻訳品質が向上することがほぼ確実なものとそうでないものがあるため，これらを選別する必要があるからである．
例えば，対訳コーパスから次のようなの対応付けが得られたとする．
これらのうち第一のは辞書に登録すべきであるが，第二，第三のはそうではない．
なぜならば，``Minshuto and New Komeito''を我々の機械翻訳システムで処理すると「民主党，及び，公明党」という翻訳が得られるが，この翻訳と「民主党や公明党」とでは翻訳品質に大きな差はないと判断できるからである．
また，第三のは，``Miyagi''と``Yamagata''が県名を表わしていない文脈では不適切となり，文脈依存性が高いからである．
このように，翻訳品質が変化しなかったり，低下することが予想されたりするはふるい落とさなければならない．
我々がの対応付けと選別を分けて考えるもう一つの理由は，前者はシステム依存性が低いのに対して，後者は依存性が高いという違いがあるからである．
対応付けが正しいか否かは個々の機械翻訳システムにほとんど依存しない．
このため，正しい対応付けを得るための判定基準を設定する際には特定のシステムを想定する必要がない．
これに対して，対応付けられた(辞書登録候補)を登録するべきか否かは個々の機械翻訳システムに依存するため，選別は，特定の機械翻訳システムを想定した判定基準に基づいて行なわれなければならない．
例えば，我々の機械翻訳システムには``the Bank for [MATH]''を「[MATH]銀行」のように訳す(前置詞``for''を訳出しない)規則が存在しない．
このため，``the Bank for International Settlements''が「国際決済のための銀行」と訳されてしまう．
従って，我々のシステムの場合はこのと「国際決済銀行」の対を辞書に登録すると判定するのが妥当である．
しかし，もし前置詞``for''を訳出しないという規則を持つシステムが存在すれば，そのシステムにとっては登録する必要がないと判定するのが妥当であろう．
従って，対応付けと選別とでは異なる正解判定基準を導入する必要がある．
従来の研究では，異なる言語の表現同士を正しく対応付けることに焦点が当てられていることが多く[CITE]，(正しく)対応付けられた表現対を辞書に登録するか否かを判定する処理について，選別のシステム依存性を認識した上で明確に議論した研究はほとんど見当たらない．
専門用語とその対訳を獲得することを目的とした場合[CITE]は，表現がある程度定式化していることが多いため，選別の必要性は低いかもしれない．
しかし，本稿では``National Institute of Information and Communications Technology''(情報通信研究機構)のような前置詞句と等位構造の両方または一方を持つ英語固有名詞句とそれに対応する日本語名詞句を対象とするが，このような英日表現対の場合には，選別処理は重要である．
本稿では，対訳辞書に登録する目的で収集された英日表現対のうち，前置詞句と等位構造の両方または一方を持つ英語固有名詞句(以下では単にと呼ぶ)とそれに対応する日本語名詞句を辞書登録候補とし，この辞書登録候補を自動的に選別して適切な語彙知識を獲得する方法を提案する．
辞書登録候補を正しく選別するという課題の解決策としては，(1)人間の辞書開発者が候補を選別する作業過程を分析し，その知見に基づいて選別規則を人手で記述する方法と，(2)機械学習手法を利用して，人間の辞書開発者が選別した事例集から選別器を自動的に作成する方法とがある．
候補を登録するか否かは様々な要因によって決まるため，複雑に関連し合う要因を人手で整理し，その結果に基づいて規則を記述するより，機械学習手法を利用するほうが実現が容易であると考えられる．
このようなことから本稿では機械学習を利用した方法を採る．
辞書登録候補は，翻訳品質の観点から，登録すれば翻訳品質が向上するものと，登録しても変化しないものと，登録によって低下するものの三種類に分けられる．
このように分けた場合，翻訳品質が向上する候補は登録すべきものであり，翻訳品質に変化がない候補は登録する必要がないものであり，翻訳品質が低下する候補は登録すべきでないものであると言える．
しかし，実際には，登録する必要がない場合と登録すべきでない場合はまとめて考えることができるので，行なうべき判定は登録するか否かの二値となる．
この二値判定を行なうためにを利用する．
