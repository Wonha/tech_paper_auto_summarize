我々は，参照する空間の状況と対象物体を特定する参照表現との間の中間表現として，SOG (Sequence Of Groups)を提案した[CITE]．
これは，物体全体の群[MATH]から始まり対象物体のみを含む物体群[MATH]に至る物体群の列を表現したものである．
日本語では，物体全体からより小さな物体群へ参照範囲を絞り込みながら対象物体を特定する．
SOGはこの絞り込みの過程を抽象化したものである．
SOG中の物体群の順序は主要部後置型である日本語における群の表現順序に対応する．
[CITE]で想定している状況は同形同色同大の物体を複数配置した2次元空間であったため，物体群の間の関係は空間的関係のみであった．
したがって群間の関係を明示する必要はなく，SOGは以下のように定式化されている．
ここで[MATH]は物体群であり，[MATH]は物体全体の群，[MATH]は対象物体のみを含む群である．
また群間の関係は空間的な絞り込みの関係（内部参照関係）のみを利用している．
本論文では色，形，大きさ等の属性情報も利用した参照表現の生成を目的とするため物体群の間の関係が多様化する．
そこで我々はSOGの群間に関係を挿入する．
拡張したSOGは以下のように定式化できる．
ここで，[MATH]は群間の関係を示している．
以後，断りなしにSOGという場合は，この拡張したSOGを指す．
[MATH]は群[MATH]と群[MATH]を結ぶ関係を表す．
関係には内部参照関係と外部参照関係の2種類がある．
{内部参照関係}
群[MATH]から[MATH]への絞り込みの関係であり，[MATH]となる．
内部参照関係は，絞り込みに利用する素性の種類に応じて下位範疇に細分類できる．
これらの下位範疇を以下の記号で表す．
{外部参照関係}
[MATH]となり，この関係は空間的な関係に限られる．
外部参照関係は記号によって表す．
以上より，[MATH]は以下のように定式化できる．
図[REF_fig:GenSample]に示す状況で，物体[MATH]を指示する参照表現とその参照表現に対応するSOGの例を示す．
全体群は[MATH]と略記する．
下線は言語表現と群・関係の間の対応関係を表す．
本論文が提案する参照表現の生成アルゴリズムは以下の4ステップから成る．
知覚的群化
SOGの生成
言語表現の付与
順位付け
以降，これらのステップをそれぞれ説明する．
また，例として図[REF_fig:GenSample]中の状況を利用する．
提案手法は，物体の重なりを許すことで「〜の上の〜」という位置関係にも対応する．
知覚的群化は以下の5つの素性に対して行う．
物体のタイプ
物体の形
物体の色
物体の大きさ
物体の位置
ただし，「(5)物体の位置」に関しては以下の2種類の知覚的群化を行なう．
物体間の近接性：近接した物体を群化する．
閉包：他の物体または特定の領域に囲まれている物体を群化する．
\hskip3em図[REF_fig:GenSample]の例の場合，それぞれの机の上に乗っている玉を群化する．
物体間の近接性(5.1)については，[CITE]の手法を用いて知覚的群化を行なう．
同手法は色や大きさや形などの近接性以外の素性にも素性毎の「距離」を定義することによって適用可能であるが，本論文ではこれらの素性については物体毎に予め定めたカテゴリに分類した．
タイプには「机，植木，玉」，形には「四角，丸」，色には「赤，青，緑，黒」，大きさには「大，中，小」のカテゴリを用意し，Step 3で付与する言語表現もカテゴリ毎に用意した．
知覚的群化に際しては「(1)物体のタイプ」を特に重要視する．
なぜなら，人は一般的に異なるタイプの物体を同一の物体群として捕らえることは少なく，また「タイプ」という素性はその物体を最も単純に表現できるものだからである．
そこで本手法では，まず物体のタイプを利用した群化を行ない，それぞれのタイプの物体群に対して(2)〜(5)の素性を利用した群化を行なう．
Thorissonは下の3通りの素性の組み合わせを知覚的群化の異なる方略として認めている．
形と近接性
色と近接性
大きさと近接性
つまり，Thorissonの知覚的群化の手法では，形，色，大きさが類似しているだけでなく，各物体が相互に近接している場合のみそれらを群化する．
しかし，視覚情報から物体の群化を行なうだけの場合，この方略は有効だが，物体群を利用して参照表現を生成しようとする場合（例えば図[REF_fig:GenSample]の状況で「青い2つの玉のうち」の様に青い2つの玉を群化した表現を生成したい場合），距離の離れた物体同士を色や形，大きさ等の素性から1つの物体群として扱うことが必要となる．
よって本手法では，素性ごとに単独で知覚的群化を行なう．
生成した各物体群には，知覚的群化の際に利用した素性に応じてラベルを付与する．
このラベルは，次のステップのSOG生成において使用する．
本手法が対象とする状況では，{type, shape, color, size, space}の5つのラベルを定義する．
また特別な群として，全体群と各物体単体の群も生成する．
単体群に対してはspaceラベルを与える．
全体群にはラベルは必要ない．
下の例が示すように，一つの群は複数のラベルを持ちうる．
図[REF_fig:GenSample]の状況に対して知覚的群化を行なった結果生成される物体群を以下に示す．
Step 1で生成した群をもとに，SOGを生成する．
SOG生成は，自然言語生成のいわゆるコンテント・プランニングの段階に相当する．
生成アルゴリズムを図[REF_fig:makeSOG]〜図[REF_fig:search]に示す．
図[REF_fig:makeSOG]に定義した3つの変数，Target，AllGroups，SOGListは大域変数である．
Targetは参照表現によって指示する対象物，AllGroupsはStep 1で生成されたすべての群の集合，SOGListは生成されたSOGのリストである．
TargetとAllGroupsが与えられると，関数makeSOGはすべての可能なSOGを深さ優先で生成し，SOGListに追加する．
makeSOGは最初にSOGの第1要素として全体群を追加する．
次に空間内に存在する物体のタイプの中から対象物体より顕現性が高いか等しいタイプを選択し，SOGを拡張する．
顕現性の高い物体を優先的に手がかりとして使うことにより，聞き手の理解が容易になると期待できる．
ここでは，大きさに着目して，机，植木，ボールの順に顕現性が高いと仮定する．
これを繰り返し，選択する物体のタイプがなくなったら終了する．
この関数は生成途中のSOGを引数とする．
SOGの最後の要素をLastGroupとし，以下の場合に分けて処理を行なう．
LastGroupが対象物体のみからなる単体群の場合（05--06行）
この場合SOGは完成しているので，SOGListにSOGを追加して終了．
LastGroupが対象物体以外の単体群からなる場合（08--14行）
この場合は，LastGroupの単体群と外部参照関係によって関係付けられる対象物体を含む群を探し，この群によってSOGを拡張する．
まず，対象物体を含み，LastGroupに含まれる物体（参照物体）から適切な位置関係にある物体群を探しGroupListに代入する．
適切な位置関係とは，以下の条件(a)，(b)，(c)を満たすものである．
ここで実装上の効率化のため，条件(a)に該当する方向を記録しておく．
対象物体を含む群の全要素が参照物体から「奥，右奥，右，右手前，手前，左手前，左，左奥，上」のいずれかの表現で表せる同一の方向にある．
(a)と同一の方向で，なおかつ対象物体を含む群のいずれの要素よりも参照物体から近い位置に対象物体と同じタイプの他の物体が存在しない．
対象物体を含む群はいずれかのタイプの全体群ではない．
次に外部参照関係とGroupListの中のそれぞれの物体群を追加したSOGを生成し，関数search（図[REF_fig:search]）を再帰的に呼び出す．
GroupList中の物体群を全て適用したら終了．
LastGroupが対象物体を含む複数の物体を含む場合（17--26行）
この場合は，新しい素性（内部参照関係）を使ってLastGroupをさらに絞り込む．
AllGroups中の各物体群とLastGroupとの積集合をとった群NewGを生成し，付与されているラベルもコピーする．
NewGが対象物体を含むならば，その時点のSOGとNewGを引数として関数extend（図[REF_fig:extend]）を呼び出す．
ただし，NewGが重複しないようにGroupListを利用してチェックする．
AllGroups中の物体群を全て適用したら終了．
LastGroupが対象物体以外の複数の物体を含む場合（28--32行）
この場合は，当面の目標として対象物体以外の単体群を作る．
AllGroupsの中から，LastGroupに包含される物体群Groupを選択し，それぞれのGroupに対してその時点のSOGとGroupを引数として関数extend（図[REF_fig:extend]）を呼び出す．
LastGroupに包含される物体群Groupを全て適用したら終了．
この関数は生成途中のSOG (SOG)と次に追加する群(Group)を引数とする．
Groupに付与されているラベルのリストをLabelListに取り出す（ただしtypeラベルは除外する）．
それぞれのラベルからSOGの末尾の物体群とGroupを結ぶ関係，およびGroupをSOGのコピーSOGcopyに追加する．
そして関数search（図[REF_fig:search]）をSOGcopyに対して呼び出す．
図[REF_fig:GenSample]の状況において対象物体を[MATH]としたときに生成されるSOGを以下に示す．
全体群は[MATH]と略記する．
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
[MATH]
SOGの各要素に表現を付与することで，参照表現を生成する．
表現の付与には以下の規則を用いる．
規則1は物体群の表現を，規則2は群間の関係の表現を生成する規則である．
それぞれの規則の中では，各下位規則は表記順に優先度が高いものとする．
全体群([MATH])は言語化しない
[CITE]で述べられているとおり，全体群が明示的に言語化されることがまれであるという被験者実験の結果を参考にした．
各単体群には「タイプ名」もしくは「タイプ名＋『の』」を付与
単体群がSOGの最後の要素でない場合は，外部参照関係(\extrel)が後続するため「の」を付与する．
規則2.1によりタイプの絞り込みは言語化せず，単体群に対して「タイプ名」を付与することで必要な情報を言語化する．
各タイプの全体群は言語化しない
理由は規則1.1に同じ．
後続が内部参照関係[MATH]の場合，「個数＋タイプ名＋『のうち』」を付与，その他の関係が後続する場合は言語化しない
後続する関係が空間的な関係([MATH] )以外の場合，その関係は名詞（タイプ名）の前の関係の列として言語化できる．
例えば，「大きい玉のうちの赤い玉」は「大きい赤い玉」と表現できる．
外部参照関係については，単体群以外には後続しないので規則1.2で全て処理される．
タイプの関係(\rel{type})は言語化しない
規則1.2を参照．
各関係に関係を示す表現を付与
\rel{shape},\rel{color},\rel{size}にはそれぞれの属性の値の表現を付与する．
\extrel,\rel{space}に対する表現の付与は以下の場合分けに従って行なう．
ここで，[MATH]は[MATH]の要素数を表す．
[MATH]のとき
絞り込みの前後で要素数は必ず少なくなるため，[MATH]である．
各物体の座標から，4つの表現「［右/左/手前/奥］の」のいずれかを付与する．
[MATH]かつ[MATH]のとき
各物体の座標を参考にし，以下の表現の妥当性をこの順に調べ，妥当な表現を付与する．
「一番［手前/奥/右/左/右手前/左手前/右奥/左奥］の」
「真ん中の」
「［左/右/手前/奥］から[MATH]番目の」
[MATH]のとき
各物体群の座標を参考にし，「［右/左/手前/奥/真ん中/右手前/左手前/右奥/左奥］の」の中から妥当な表現を付与する．
searchの性質からこの場合は[MATH]となる．
ここではStep 2のSOG生成のときに記録した方向に対応する表現（「［奥/右奥/右/右手前/手前/左手前/左/左奥/上］の」）を付与する．
図[REF_fig:GenSample]の状況においてStep 2で生成したSOGに表現を付与すると以下のようになる．
\itemsep=0.8ex
[MATH]
「一番左の[MATH]机の[MATH]上の[MATH]玉[MATH]」
[MATH]
「丸い[MATH] 2つの机のうち[MATH]左の[MATH]机の[MATH]上の[MATH]玉[MATH]」
[MATH]
「一番左の[MATH]玉[MATH]」
[MATH]
「青い[MATH] 2つの玉のうち[MATH]左の[MATH]玉[MATH]」
[MATH]
「青い[MATH]小さい[MATH]玉[MATH]」
[MATH]
「小さい[MATH] 3つの玉のうち[MATH]一番左の[MATH]玉[MATH]」
[MATH]
「小さい[MATH]青い[MATH]玉[MATH]」
[MATH]
「左の[MATH] 4つの玉のうち[MATH]一番左の[MATH]玉[MATH]」
[MATH]
「左の[MATH]青い[MATH]玉[MATH]」
[MATH]
「左の[MATH]小さい[MATH] 3つの玉のうち[MATH]一番左の[MATH]玉[MATH]」
[MATH]
「左の[MATH]小さい[MATH]青い[MATH]玉[MATH]」
出力表現を決定するために，表現中で使用された関係と表現の長さを考慮して，各表現にスコアを与える．
最初にSOG内の各関係に対して[MATH]の範囲でコストを与える．
関係のコストは以下のように決定する．
これらのコストは[CITE]で述べられている素性の優先順位に従う．
次に，関係のコスト[MATH]を各関係のコストの平均値として求める．
そして表現長のコスト[MATH]を以下の式で求める．
表現長は文字数で測る．
コスト[MATH]及び[MATH]を用い，表現のスコア[MATH]を以下のように定める．
[MATH]の値は，次節の実験では0.5に固定した．
図[REF_fig:GenSample]の状況において生成した表現にコストを付与し，スコアの高い順に示す．
各行の表現の右の数値はその表現のスコア([MATH], [MATH])，括弧内の数値は左から関係のコスト([MATH])，表現長のコスト([MATH])である．
