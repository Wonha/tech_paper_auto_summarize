================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:1, score:280] 既存のテキスト入力システムにおいては，言語が切り替わるたびに，ユーザーが手動で，テキスト入力ソフトウェア(IME)を切り替えなければならない点が，ユーザーにとって負担になっていた．
[i:3, score:342] は，ユーザーが行うキー入力からユーザーが入力しようとしている言語を判別して，IMEの切り替えを自動で行う．
[i:4, score:288] これによって，ユーザーがIMEを切り替える操作量が減るため，複数の言語をスムーズに切り替えながら入力することが可能になる．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:11, score:260] 言語入力には，ユーザーが入力したキー列を，その言語での文字列に変換するために，input method engine (IME)と呼ばれるソフトウェアが欠かせない．
[i:12, score:246] 例えば，日本語のローマ字入力のIMEは，ユーザが``tagengo''というキー列を入力した時，これを``多言語''という文字列に変換する役割を担う．
[i:14, score:220] 従来は，入力する言語を切り替えるたびに，このIMEをユーザが手動で切り替えていた．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[i:28, score:231] 日本語のかな入力のIMEでは，``多言語''に対応する(1)のキー列は``q:@yb@''であり，ローマ字入力の場合とは異なっている．
[i:39, score:277] IME切り替え操作は，主に，多言語の入力時に言語を切り替える際に発生する．
[i:40, score:418] \secref{sec:introduction}で述べたように，このIME切り替え操作を，キー列からユーザーが入力している言語を判別することで，自動化するのが本論文の主旨である．

================================================================
[section type  : proposed_method]
[section title : 準備と設計方針]
================================================================
[i:72, score:266] 既存の手法では，\figref{fig:toyota}の文章を入力するためには，日本語から英語への切り替えと戻す操作で2回，日本語から中国語への切り替えと戻す操作が2対あるので4回，合計6回のIME切り替え操作が必要となる．
[i:73, score:236] このようなIME切り替え操作は，文字種が違う言語間だけでなく，同じアルファベットを使う英語やフランス語の間でも，アクセント記号付きの文字を入力する場合に必要になる．
[i:74, score:261] 一方，では，キー列から言語を判別し，IMEを自動的に切り替える．

================================================================
[section type  : proposed_method]
[section title : 言語判別]
================================================================
[i:103, score:0] 
-----------------------------------------------------
  [subsection title : 言語判別モデル]
-----------------------------------------------------
  [i:lead, 98] 言語判別の確率モデルには，隠れマルコフモデル(HMM)を用いた．
.....
  [i:104, score:98] 言語判別の確率モデルには，隠れマルコフモデル(HMM)を用いた．
  [i:105, score:70] 隠れ状態を言語として，隠れている言語からトークンが記号列として観測されるとする．
  [i:111, score:60] & \approx\argmax_{l_1^m \in L} \left(\prod_{i=1}^m P(t_i|l_i) \right) \left(\prod_{i=1}^m P(l_i|l_{i-k}^{i-1}) \right)
-----------------------------------------------------
  [subsection title : 出力確率の推定]
-----------------------------------------------------
  [i:lead, 77] 出力確率[MATH]は，ある1つの言語[MATH]からトークン[MATH]が出力される確率である．
.....
  [i:126, score:131] PPMは，データ圧縮の分野で提案されたため，学習を動的に行いながら判別を行うことが，可能なように設計されているという特徴がある．
  [i:127, score:173] この特徴によって，ユーザーが誤判別を訂正した場合，瞬時にその情報を確率値にフィードバックして次の判別に利用することが可能となる．
  [i:144, score:148] \eqref{eq:PPMC}から，PPMCでは，次のキー[MATH]の確率[MATH]は，キー列の[MATH]-gramの頻度[MATH]と[MATH]-gramの後に続くキーの異なり数[MATH]が分かれば，推定することが可能であることがわかる．
-----------------------------------------------------
  [subsection title : 遷移確率の推定]
-----------------------------------------------------
  [i:lead, 107] ここでは，\eqref{eq:approx}の第2項である，[MATH]-gramまでの，言語[MATH]-gramによる文脈を考慮した遷移確率[MATH]を推定する手法について述べる．
.....
  [i:148, score:136] ユーザーが過去に確定した言語列[MATH]を正解とみなし，[MATH]から動的に遷移確率を推定することが可能であれば，この学習データの入手の問題を回避することが可能となる．
  [i:149, score:126] この方法は，\secref{sec:output}と同様で，学習データが少量であることを，利用中のユーザーからの情報を動的に利用して補い，精度を向上させることが狙いである．
  [i:150, score:145] したがって，遷移確率の推定方法には，\secref{sec:output}と同様，PPMを用いた．

================================================================
[section type  : proposed_method]
[section title : ユーザーインターフェース]
================================================================
[i:179, score:306] 現在のトークンは日本語と判別されているので，デリミタとなるスペースキーを打鍵すると，日本語のIMEを通じて日本語の文字列への変換が行われる．
[i:197, score:298] 一方，誤判別2は，特に多言語コーパスの大半が1言語から構成されているような場合において，既存手法と比較した場合のIME切り替え操作回数を増加させてしまう可能性がある．
[i:198, score:329] したがって，の有効性は，言語を切り替える点での自動判別によるIME切り替え操作の減少量と，言語を切り替えるべきない点での誤判別2によるIME切り替え操作の増加量とのトレードオフによって決まる．

================================================================
[section type  : experiment_result]
[section title : 評価]
================================================================
[i:200, score:2] を2つの観点から評価した．
[i:201, score:87] まず，人工的に作成した多言語なコーパスを用いて，言語判別の精度を測定した．
[i:202, score:87] 次に，実際の多言語を入力した場合の，打鍵数の減少量を測定した．
-----------------------------------------------------
  [subsection title : 言語判別精度による評価実験]
-----------------------------------------------------
  [i:lead, 76] ここでは，言語判別の精度を測定した．
.....
  [i:225, score:197] 凡例中の「PPM」は遷移確率もPPMを用いて学習させた場合，「ML」は出力確率のみを用いて判別させた場合（最尤推定に相当），「Baseline」は最も頻度の高い1言語を常に正解として返す場合である．
  [i:226, score:141] どの言語も等確率で出現するテスト1（\figref{fig:graphtest1}）では，PPMとMLの精度が非常に近くなっている．
  [i:231, score:201] この結果から，各言語について少量のコーパスしか入手できない場合でも，単純にMLを使って言語を最尤推定するのではなく，遷移確率をPPMを用いて推定することによって，言語判別の精度を向上させることが可能であると考えられる．
-----------------------------------------------------
  [subsection title : IME切り替え操作回数による評価実験]
-----------------------------------------------------
  [i:lead, 259] 次に，の実用性を評価するため，実際の多言語を入力した場合に，IME切り替え操作回数が減少する量を測定した．
.....
  [i:237, score:307] \secref{sec:design}で述べたように，キー操作は3種に分類されるが，が関わるのはIME切り替え操作回数のみであるため，これを測定した．
  [i:250, score:337] この実験は，実際に多言語を入力する場合に，IME切り替え操作回数が減少する量を測定することが目的であるため，実験中は，出力確率も遷移確率もPPMCを用いて動的に学習されるようにした．
  [i:262, score:272] すなわち，入力頻度の少ない言語において，IME切り替え操作回数を増加させる誤判別2が起こった場合でも，訂正を繰り返し行うことでが学習し，以後の誤判別2を防ぐことが可能である．

================================================================
[section type  : conclusion]
[section title : 結論]
================================================================
[i:265, score:370] は，ユーザーが入力したキー列から言語を判別して，IMEを自動的に切り替えることで，多言語入力におけるユーザーの負担を軽減するシステムである．
[i:270, score:242] また，実際に多言語を入力した場合，既存手法と比較してIME切り替え回数が\decreaserate%減少した．
[i:272, score:161] 今後の課題としては，識別モデルを用いて精度を向上することや，IMEを頻繁に切り替える必要のある語学教材の作成を容易にするシステムとして語学教育分野に応用すること，携帯端末など計算機の性能に制限がある状況でも幅広く利用可能にすることなどが挙げられる．

