自動獲得された上位概念の問題 \label{sec:hh-problems}

本節では，隅田ら \cite{隅田:吉永:鳥澤:2009}の手法の出力を例に，
自動獲得された上位概念に見られがちな問題点について述べる．

自動獲得された上位概念の中には，
一般的なシソーラスにおいてルートノードの近くに位置して広範囲な下位概念をカバーするものや，
意味的に曖昧なものが存在するという問題が見られる．
例えば\isa{作品}{七人の侍}における上位概念は\xmp{作品}だが，
世の中には\xmp{作品}と呼べる物が数多く存在する．
さらに極端な例として，上位概念が\xmp{物}や\xmp{事}になっている上位下位関係も，自動で獲得されてしまう可能性がある．
このような上位概念を質問応答などの自然言語処理のアプリケーションで利用すると，より詳細な上位概念と比較してその有用性が低いことが多い．
例えば1節の例で言及したように「``七人の侍''とは何ですか？」という質問に対しては，
より詳細な上位概念である「黒澤明の映画作品」のほうが「作品」より適切な回答
と考えられる．また，「黒澤明の作品には何がありますか？」といったリスト形式の回答を求め
るような質問に対して，上位下位関係を回答の知識源として使うことによって，上位概念「黒
澤明の作品」の下位概念をリスト形式で回答できる\footnote{リスト形式の質問応答を行うタスクは，評価型ワークショップであるTREC QA task \cite{Dang2006,Dang2007}
で実施された．例えば「チューインガムの名前は？」といった質問に対して，そのインスタンスをすべて回答する．}
．一方，上位概念「作品」は他の映画作品や小説作品，音楽作品などの下位概念を持つため，「作品」が上位概念として含まれる上位下位関係のみを知識源として利用しても，このような質問に回答することは難しい．

表\ref{tab:hh-problems}に，
隅田らの手法で獲得された上位下位関係で頻出した
上位概念を挙げる．
例えば，\xmp{アルバム}は，写真のアルバムなのか音楽が収録されているアルバ
ムなのか分からず，曖昧である．
一方，\xmp{出演者}は，これだけでは何に出演したのか分からない．
この表から，自動獲得した上位下位関係の上位概念には，曖昧，または
広範囲な下位概念をカバーする
語が頻出していることがわかる．

\begin{table}[b]
\caption{隅田らの手法で獲得された上位下位関係中の上位概念（出現頻度の降順上位20語）}
\label{tab:hh-problems}
\input{02table01.txt}
\end{table}


このような問題点は，隅田らの手法に限らず発生すると考えられる．
「AなどのB」といった上位下位関係を明示する構文パターンから抽出する手法\cite{hearst92}においても，例えば「七人の侍などの作品」というフレーズからは，「七人の侍」の上位概念として「作品」が抽出される．
つまり，他の多くの上位下位関係獲得手法についても当てはまる．



\section{Wikipediaを用いた上位下位関係の獲得
\label{sec:Base-hh}}

本節では，隅田らが提案したWikipediaを用いた上位下位関係の獲得手法\cite{隅田:吉永:鳥澤:2009}について述べる．
この手法により獲得した上位下位関係が，\ref{sec:proposed-method}節で説明する詳細な上位下位関係獲得の処理対象となる．

\begin{figure}[b]
\begin{center}
\includegraphics{19-1ia2f1.eps}
\end{center}
\caption{Wikipedia記事の例：アップル　インコーポレイテッド}
\label{fig:wikip-article}
\end{figure}

この手法では，
Wikipedia記事の階層的なレイアウト構造を利用して上位下位関係
を獲得する．
図\ref{fig:wikip-article}に，Wikipedia記事の例として\xmp{アップル　インコーポレイテッド}
の記事を挙げる．
この記事は\xmp{Appleショップ}や\xmp{製品}という節があり，\xmp{Appleショップ}の下位には\xmp{北海道地方}，
\xmp{製品}の下位には
\xmp{コンピュータ}，\xmp{iPod}，\xmp{iPhone}などの小節がある．
さらに小節の中には，\xmp{Mac mini}や\xmp{MacBook}，
\xmp{MacBook Air}といった項目が存在する．
以後，これらの節見出し，小節タイトル，項目名をtermと呼ぶことにする．

\begin{figure}[b]
\begin{center}
\includegraphics{19-1ia2f2.eps}
\end{center}
\caption{Media Wikiソースコードの例：アップル　インコーポレイテッド}
\label{fig:mediawiki}
\end{figure}

図\ref{fig:wikip-article}に示すWikipedia記事から上位下位関係候補を抽出する処理では，Wikipediaがデータベースのダンプデータとして提供しているMediaWikiソースコード（図\ref{fig:mediawiki}）を利用する．
MediaWikiソースコードでは，節見出し，小節タイトル，項目名を表現するために特殊な修飾記号が用いられる．
例えば節見出しでは「==製品==」，項目名では「*** Mac mini」などの記号が用いられ，その修飾記号の種類，繰り返し数により，レイアウト構造上の上下関係が決定する．


隅田らの手法では，
まず，記事のレイアウト構造上の上下関係（節タイトルは小節
タイトルより上位にあり，小節タイトルは項目名より上位にある）を守りながら，
2つのtermから1つの上位下位関係候補を獲得する．
例えば図\ref{fig:wikip-article}の場合，
\isa{製品}{コンピュータ}や
\isa{コンピュータ}{Mac mini}，
\isa{製品}{Mac mini}などが獲得される．
次に，SVM \cite{Vapnik:1995}を用いて，獲得された上位下位関係候補
を正しそうなものとそうでないものに分類する．
素性として，以下に示す特徴を上位概念候補，下位概念候補から抽出して利用する．
\begin{itemize}
\item 上位概念候補，下位概念候補の品詞．
\item 上位概念候補，下位概念候補に含まれる形態素．
\item 上位概念候補，下位概念候補の表層文字列．
\item 上位概念候補，下位概念候補が属性語Xに一致するか否か．（属性語として，各記事の根ノード以外のノードに出現する単語を利用．）
\item 上位概念候補，下位概念候補の修飾記号（``=''，``*'' など）．
\item 上位概念候補と下位概念候補間のレイアウト構造上の距離．
\item 上位概念候補が「主な〜」，「〜のリスト」などの上位概念を表現する典型的なパターンに一致するか．
\item 上位概念候補と下位概念候補の末尾の1文字が一致するか．
\end{itemize}
訓練データは，隅田らが実験で用いたデータと同じものを使用した\footnote{この訓練データにより学習されたモデルファイルと上位下位関係獲得ツールは http://\linebreak[2]alaginrc.nict.go.jp/\linebreak[2]hyponymy/\linebreak[2]index.htmlで公開されている．}．
このデータは，Wikipediaから獲得した上位下位関係候補から29,900対を抽出し，人手により上位下位関係か否かを判定することにより作成している．


この処理を
2009-09-27版のWikipediaに適用することにより，1,925,676ペアの上位下位関係を適合率90\%で
獲得した．
この上位下位関係をベース上位下位関係（図\ref{fig:whole-procedure}(a)）と呼び，\ref{sec:proposed-method}節で説明する詳細な上位下位関係獲得の処理対象とする．

階層的なレイアウトを利用する手法とは別に，隅田らは，Wikipedia記事の定義文（記事の第一文に該当）を用いた手法と，
記事下部にあるカテゴリ情報を用いた手法も提案している．
これらの手法では記事タイトルが下位概念として使われるため，我々が提案する
記事タイトルによる上位下位関係の詳細化が適用できない．
そこで，
これら2つの手法により得られた上位下位関係はベース上位下位関係として用いず，
\ghype{}の生成の際に用いる（\ref{sec:G-hh}節）．
この処理により，2009-09-27版のWikipediaからは，522,709個の記事タイトルに対して1,472,035個の上位概念を適合率90\%で
獲得した．



\section{詳細な上位下位関係の獲得手法
\label{sec:proposed-method}}

\begin{figure}[b]
\begin{center}
\includegraphics{19-1ia2f3.eps}
\end{center}
\caption{提案手法の処理の流れ}
\label{fig:whole-procedure}
\end{figure}

\ref{sec:hh-problems}節で述べた通り，ベース上位下位関係の上位概念の
中には
広範囲な下位概念をカバーするもの
や意味的に曖昧なものが存在する．
そこで本節では，ベース上位下位関係を処理対象とした詳細な上位下位関係の獲得手法について述べる．
図\ref{fig:whole-procedure}に，提案手法の処理の流れの全体像を示す．
まず，ベース上位下位関係の各上位概念をWikipedia記事のタイトルで詳細化し，
詳細化された上位概念を元の上位概念と下位概念の間に中間ノードとして挿入す
る（\ref{sec:T-hh}節）．
以降では，Wikipedia記事のタイトルで詳細化された上位概念を\thype{}と
呼ぶ．
また，\thype{}を中間ノードとして挿入された上位下位関係をT-上位下位関係と
呼ぶ（図\ref{fig:whole-procedure}(b)）．
次に，\thype{}中の記事タイトル箇所をその上位概念で抽象化する事で，
元の上位概念よりは詳細だが\thype{}よりは抽象的な新たな上位概念を得る．
以降では，この上位概念を\ghype{}と呼ぶ．
\ghype{}は，T-上位下位関係の上から二番目，つまり元の上位概念の直下に挿入
される（\ref{sec:G-hh}節）．
\thype{}に加え\ghype{}が挿入された上位下位関係を，これ以降，
G-上位下位関係と呼ぶ（図\ref{fig:whole-procedure}(c)）．
なお本手法では，上位概念
に関わらず，全ての
ベース上位下位関係を本提案手法により詳細化する．
以下，各処理手順を詳しく説明する．


\subsection{T-上位下位関係の獲得
\label{sec:T-hh}}

Wikipediaの記事に出現する節タイトル，小節タイトル，項目名などは，その記事のタイトルによって情報を補足できると考えられる．
ベース上位下位関係の上位概念は，Wikipediaの記事に出現する節タイトル，小節タイトル，項目名などに対応するため，
T-上位下位関係の獲得処理では，ベース上位下位関係の上位概念をWikipedia記事タイトルで情報を補い，\thype{}を生成する．
上位概念を補う記事タイトルは，その上位概念と下位概念の抽出元の記事から取得する．


\thype{}は，
元の上位概念とWikipedia記事タイトルを，助詞「の」によって連結して生成する．
例えば，上位概念\xmp{作品}と記事タイトル\xmp{黒澤明}は，助詞「の」によっ
て連結されて\xmp{黒澤明の作品}という\thype{}になる．


生成した\thype{}は，元の上位概念と下位概念の中間に挿入する．
この結果，
\isaThree{作品}{黒澤明の作品}{七人の侍}のように，三階層のT-上位下位関係が生成される（図\ref{fig:whole-procedure}(b)）．


\subsection{G-上位下位関係の獲得
\label{sec:G-hh}}

\thype{}は，Wikipedia記事タイトルとベース上位概念を「の」で連結して生成した．
次に，
\thype{}の中のWikipedia記事タイトルの箇所を，その上位概念で置
き換えることによって，さらなる上位概念となる\ghype{}を生成する．
例えば\xmp{黒澤明の作品}という\thype{}の場合，そのWikipedia記事タイトルの
箇所である\xmp{黒澤明}を上位概念である\xmp{映画監督}で置き換えて，
\xmp{映画監督の作品}という\ghype{}を生成する．

\ghype{}の生成では，Wikipedia記事タイトルの上位概念が必要になる．
Wikipedia記事タイトルの上位概念は，
隅田らの手法のうち，\ref{sec:Base-hh}節の最後で述べた，
Wikipedia記事の第一文を用いる手法と，
記事下部のカテゴリ情報を用いる手法によって獲得する．
例えば図\ref{fig:wikip-article}の場合，記事タイトルである
\xmp{アップル　インコーポレイテッド}の上位概念の候補がその第一文（「アップル社は，アメリカ合衆国...製造する多国籍企業である．」）と記事下部にあるカテゴリ情報
（カリフォルニアの企業，多国籍企業，携帯電話メーカー，
$\ldots$）に記載されている．
これらの上位概念候補は，\ref{sec:Base-hh}節で述べたSVM分類器に
よって上位概念か否か判定される．

生成した\ghype{}を，T-上位下位関係の中の元の上位概念と\thype{}の間に挿入
し，G-上位下位関係を生成する．
G-上位下位関係は，
例えば\isaFour{作品}{映画監督の作品}{黒澤明の作品}{七人の侍}のように，
四階層の上位下位関係となる．



応用 \label{sec:discussion}

本節では，\ghype{}をより簡潔に言い換える手法と，
T-上位概念ペアの
\attval{対象}{属性}{属性値}関係としての解釈について議論する．

\subsection{\ghype{}のより簡潔な表現への言い換え}

\ghype{}のいくつかはより簡潔な表現に言い換えることができる．
この言い換え処理が自動化できれば，本提案手法で獲得した上位下位関係を
既存のシソーラスと関連づけることが可能になる．
例えば，\ghype{}として生成された
\xmp{映画監督の作品}は
\xmp{映画}に言い換えても問題ないと考えられる\footnote{「映画監督の作品」には「小説」などの可能性もあるが，ここでは主となる言い換え対象のみを扱う．}．
この言い換えにより，
本提案手法で獲得した\xmp{映画監督の作品}の下位概念
（映画のタイトルなどのインスタンスを含む）を既存のシソーラスの
\xmp{映画}の位置に追加することができる．

\begin{table}[b]
\caption{\ghype{}の簡潔な言い換え表現の例}
\label{tab:paraphrase-rules}
\input{02table06.txt}
\end{table}

そこで予備実験として，本提案手法で獲得した\ghype{}のうち最頻出の
20概念に対して簡潔な言い換え表現を手作業で作成し，
それらによって上位概念が言い換えられたG-上位下位関係の適合率を評価した．
表\ref{tab:paraphrase-rules}に，\ghype{}とその言い換え表現の例を挙げる．
言い換え対象の20の\ghype{}を含む\ghype{}ペアは
全部で59,890ペア，
この\ghype{}に含まれる下位概念の異なり数は54,981個であった．
その中から200ペアをサンプリングし，言い換え後の上位概念と下位概念のペアが上位下位関係であるか判定する実験を行った．
実験では，筆者を含まない三名の被験者により判定を行い，二名以上が支持した結果を最終的な判定として使用した．
三名の被験者の一致率を示すKappa値は0.674で，十分な一致率であると考えられる．
実験の結果，言い換え後の上位概念と下位概念のペアが上位下位関係として正しいと判定された適合率は78.0\%であった．

言い換え後の上位概念は既存のシソーラスに存在する単語を利用しているため，言い換え表現を20表現用意するだけで，異なり数54,981個の下位概念を
適合率78.0\%で既存のシソーラスに追加できることがわかる．
全ベース上位下位関係における下位概念異なり数は1,199,826個であり，わずか20個の言い換え表現で，下位概念全体の4.6\%をカバーしていることがわかる．
今後，重複する下位概念などの情報を利用することによりこの言い換え表現を自動獲得し，
カバー率を向上させることが課題となる．


\subsection{T-上位概念ペアの\attval{対象}{属性}{属性値}関係としての解釈}

T-上位概念ペアは，Wikipedia記事から獲得したベース上位下位関係と，
そのWikipedia記事のタイトルから構成される．
このWikipedia記事のタイトルとベース上位下位関係の上位概念，下位概念は，対象とその属性，属性値
という3つ組として
解釈することができる．
例として\isa{黒澤明の作品}{七人の侍}というT-上位概念ペアを挙げる．
このT-上位概念ペアでは，\xmp{黒澤明}がWikipedia記事のタイトルで，
\isa{作品}{七人の侍}がその記事から獲得された元のベース上位下位関係である．
この場合，\xmp{作品}と\xmp{七人の侍}を\xmp{黒澤明}という対象の属性，属性
値と解釈することができる．
同様に，\isa{シリコングラフィックスの製品}{IRIS Crimson}というT-上位概念ペアの
場合も，\xmp{製品}と\xmp{IRIS Crimson}を
\xmp{シリコングラフィックス}という対象の属性，属性値と解釈することができる．

\ref{sec:evaluation}節にある通り本提案手法による上位概念の詳細化は高い性能を示しているが，
このことは，T-上位概念ペアが\attval{対象}{属性}{属性値}関係として解釈可
能であるという上記の観察結果によって，次のように説明できる．
一般的に，属性は，それがどの対象の属性かを明示することで詳細化できる
と言える．
本提案手法は，属性と上位概念のterm，対象とWikipedia記事タイトルを対応づ
けた上でこの一般論に倣い，
上位概念のtermがどのタイトルのWikipedia記事から得られたtermかを明示する
ことで上位概念を詳細化している．
従って，どの対象かを明示することで属性を詳細化できるという一般論が正しい
限りにおいて，本提案手法は正しく上位概念を詳細化できる．

T-上位概念ペアが\attval{対象}{属性}{属性値}関係として解釈でき
るという仮説が正しいかどうかを明らかにするために，
T-上位概念ペアを\attval{対象}{属性}{属性値}関係として評価した．
まず，\ref{sec:evaluation}節の評価実験で使用したG-上位下位関係200サンプル
（普通名詞で表される下位概念を持つ上位下位関係も含む）から，
ベース上位下位関係に対応する元の上位概念と下位概念，\thype{}のWikipedia
記事タイトル箇所を取り出し，
\attval{Wikipedia記事タイトル}{上位概念}{下位概念}の3つ組を200個
用意した．
この評価データを「T-上位概念セット」と呼ぶ．
これらとは別に，比較のため，隅田らの手法の処理途中で得られる
上位下位関係候補（SVMで分類される前のベース上位下位関係の候補．
\ref{sec:Base-hh}節を参照）と，
それらの出所であるWikipedia記事のタイトルによって，
\attval{Wikipedia記事タイトル}{上位概念候補}{下位概念候補}の3つ組を200個
用意した．
この評価データを「上位下位候補セット」と呼ぶ．
2つの評価データの違いは，上位下位候補セットには上位下位関係とし
ては不適切な上位概念と下位概念がより多く含まれているという点にある．

次に，3名の被験者（いずれも著者ではない）によって，これらの3つ組が\attval{対象}{属性}{属性値}として正しいかを評価する実験を行った．
評価サンプルは，T-上位概念セットの200と上位下位候補セットの200の計
400である．
これら400サンプルはシャッフルした上で被験者に提示した．
評価の際は，
次の3種類の評価ラベルを使用した．

\begin{description}
 \item[Vital:] \attval{対象}{属性}{属性値}として適切．
 \item[Okay:] \attval{対象}{属性}{属性値}として適切だが，その対象に
	    とって当該の属性，属性値は本質的なものとは言えない．
 \item[Wrong:] \attval{対象}{属性}{属性値}として不適切．
\end{description}

\ref{sec:evaluation}節の評価実験と同様，
2名以上の被験者が付与したラベルを各3つ組の最終的な評価ラベルとした．
もし3名の被験者が皆異なる判断をした場合，著者の一人が最終的な評価ラベル
を決定した\footnote{
著者の一人が評価ラベルを決めたケースは400サンプル中9サンプルであった．}．
被験者3名による評価ラベリングのKappa値は0.51であり，
本実験の評価ラベリングにまずまずの安定性があることを示している．
重み付き適合率は，\ref{sec:evaluation}節の評価実験で使用した，
式(\ref{formula:precision})
と同様に，ラベルがVitalであるものを1.0，Okeyを0.5，Wrongを0として正解サンプル数をカウントして算出した
\cite{pasca2007,pasca2009}．
評価結果を表\ref{tab:result-attval}に示す．

\begin{table}[b]
\caption{T-上位概念ペアの\attval{対象}{属性}{属性値}としての評価結果}
\label{tab:result-attval}
\input{02table07.txt}
\end{table}

T-上位概念セットの\attval{対象}{属性}{属性値}関係としての重み付き適合率が94.0\%
であることから，T-上位概念ペアが\attval{対象}{属性}{属性値}関係として解釈
できるという仮説は正しいと考えられる．
この重み付き適合率は，表\ref{tab:result-hyp}におけるT-上位下位概念ペアの重み付き適合率より高い．これは，
\ref{sec:evaluation}節で述べたエラータイプ3のものが，\attval{対象}{属性}{属性値}関係としては，
正しい関係と判定されることに起因する．
例えば，エラータイプ3の例\attval{大垣市}{公共施設}{図書館}は，\attval{対象}{属性}{属性値}関係としては正しい．

一方，上位下位候補セットの\attval{対象}{属性}{属性値}関係としての適
合率は53.5\%と低い．
このことは，
Wikipedia記事タイトルとその記事から取り出した2つのterm
（節タイトル，小節タイトル，項目名）ならどんなものでも
\attval{対象}{属性}{属性値}関係として解釈できるわけではない，ということ
を示唆している．
つまり，2つのtermが上位下位関係として適切な場合にのみ，
\attval{Wikipedia記事タイトル}{上位概念のterm}{下位概念のterm}が
\attval{対象}{属性}{属性値}関係として解釈できる，ということを
意味している．

