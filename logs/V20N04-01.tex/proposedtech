\documentclass[japanese]{jnlp_1.4}
\usepackage{jnlpbbl_1.3}
\usepackage[dvips]{graphicx}
\usepackage{amsmath}
\usepackage{hangcaption_jnlp}
\usepackage{udline}
\setulminsep{1.2ex}{0.2ex}
\let\underline
\usepackage{lingmacros}
\usepackage{array}


\Volume{20}
\Number{4}
\Month{September}
\Year{2013}

\received{2013}{1}{9}
\revised{2013}{3}{29}
\rerevised{2013}{5}{14}
\accepted{2013}{5}{22}


\setcounter{page}{539}

\jtitle{複数の言語的特徴を用いた日本語述部の同義判定}
\jauthor{泉　　朋子\affiref{NTT}\affiref{KyotoUniv} \and 柴田　知秀\affiref{KyotoUniv} \and 齋藤　邦子\affiref{NTT} \and 松尾　義博\affiref{NTT} \and 黒橋　禎夫\affiref{KyotoUniv}}
\jabstract{
大量のテキストから有益な情報を抽出するテキストマイニング技術では，ユーザの苦情や要望を表す述部表現の多様性が大きな問題となる．本稿では，同じ出来事を表している述部表現をまとめ上げるため，「メモリを消費している」と「メモリを食っている」の「消費している」と「食っている」のような述部表現を対象に，異なる2つの述部が同義か否かを認識する同義判定を行う．述部の言語構造分析をもとに，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という複数の言語知識を用い，それらを素性とした識別学習で同義判定を行った．実験の結果，既存手法に比べ，高い精度で述部の同義性を判定することが可能になった．
}
\jkeywords{同義判定，述部，機能表現，テキストマイニング，言い換え，分布類似度}

\etitle{Recognizing Semantically Equivalent Predicate Phrases Based on Several Linguistic Clues}
\eauthor{Tomoko Izumi\affiref{NTT}\affiref{KyotoUniv} \and Tomohide Shibata\affiref{KyotoUniv} \and Kuniko Saito\affiref{NTT} \and Yoshihiro Matsuo\affiref{NTT} \and Sadao Kurohashi\affiref{KyotoUniv}} \eabstract{
This paper proposes the recognition of semantically equivalent predicate 
phrases such as ``consumes'' and ``eats'' in ``it consumes/eats a lot of 
memory.'' Differences in predicate expressions pose a serious problem in 
natural language processing applications such as text mining, which extracts 
text data according to a user's needs and wants. We propose a novel 
technique that uses various linguistic clues ranging from abstract semantic 
features to contextual features in order to detect a semantic similarity in 
different predicates. The results indicate that our proposed method achieved 
the highest f-score compared with baseline methods.
}
\ekeywords{synonym recognition, predicate phrases, functional expressions, text mining, paraphrasing, distributional similarity}

\headauthor{泉，柴田，齋藤，松尾，黒橋}
\headtitle{複数の言語的特徴を用いた日本語述部の同義判定}

\affilabel{NTT}{日本電信電話株式会社 NTTメディアインテリジェンス研究所}{NTT Media Intelligence Laboratories, Nippon Telegraph and Telephone Corporation}
\affilabel{KyotoUniv}{京都大学大学院情報学研究科}{Graduate School of Infomatics, Kyoto University}



\begin{document}
\maketitle


\section{述部の言語的特徴}

2節で述べたように，既存手法を日本語の述部の同義判定にそのまま適用した場合，再現率もしくは精度に問題が出る．そこで，本節では述部の同義性を正しく計算機で判別するために必要な情報を考察するため，述部の言語構造を言語学的な視点で分析する．本稿の対象である述部は，(4)のように内容語と複数の機能語の集まりである「機能表現」(松吉 他 2007)で構成されている．「／」は形態素の区切りを表す．

\enumsentence{
捨て／【内容語】 なく／て／は／いけ／ない【機能表現】 
}
述部の主な意味は，動詞，形容詞，形容動詞，名詞などの内容語が担っており，機能表現は内容語で表現される意味に対し，時制（アスペクト），モダリティ，否定などの意味を加えている(Narrog 2005; Portner 2005)．

ここで，述部の主な意味を担っている内容語の言語構造を考える．図1はRamchand (2010, p.~4)から抜粋した動詞``run''の言語的情報を，複数の言語レベルに分類したものである\footnote{これらの情報が人間の言語理解のどのレベルに存在するかは複数の議論が存在するが，それらは本稿の趣旨とは異なるためここでは論じない．}．図1の，``$+$dynamic''と``-telic''は，``run''という動詞そのものが，動作の変化を伴う動詞であるが($+$dynamic)，動作に終点がない動詞(-telic)であることを表している（Dowty (1979)の``Activities'', 金田一(1976)の「継続動詞」を表している）．

\begin{figure}[b]
\begin{center}
\includegraphics{20-4ia1f1.eps}
\end{center}
\caption{動詞``run''の言語構造}
\end{figure}

図1が表すように，述部の意味を考えた場合，複数の言語レベルの要素が絡み合って意味を構成していることがわかる．我々が知らない単語に出くわした場合，その単語の意味を理解するために，辞書を引いたり(Lexical-Encyclopedic information)，周辺単語を手掛かりに推測したり(Syntax, Context)，また見覚えのある単語であればその本来の意味から派生されそうな意味(Semantic)を考え，対象単語の言語情報をできるだけ集めて意味を理解する．さらに，時制や否定，モダリティ表現なども手掛かりに，述部の意味を推測する．つまり，図1の複数の言語的情報を埋めていくことで，意味を理解すると考えることができる\footnote{Phonetics/Phonologyのような音の情報に関しては，オノマトペを除き意味と直接かかわりがないため，本提案手法の言語情報には取り入れない．}．

計算機に意味を理解させるためには，これらの複数の言語的特徴を与えなくてはいけないと言える．そこで，本稿では述部の言語情報を複数のレベルに分類し，同義述部の認識という観点で必要な情報を用い
て，計算機に同義の述部を認識させる．


\section{提案手法：複数の言語的特徴を用いた同義判定}

\begin{figure}[b]
\begin{center}
\includegraphics{20-4ia1f2.eps}
\end{center}
\caption{同義判定処理フロー}
\end{figure}

本稿では，述部の同義判定を行うために，4つの言語情報を素性とし，識別学習を用いて同義か否かを判定する．処理の流れを図2に示す．4つの言語情報は，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」である．以下に素性の具体的な説明を行う．


\subsection{辞書定義文を用いた相互補完性・定義文類似性}

述部の同義性を判別するためには，まず単語そのものの定義が必要となる(Lexical-Encyclopedic information)．我々が，単語の意味を調べるために辞書を用いるように，本稿でも国語辞書の定義文からの情報を素性として用いる．なお，国語辞書などの定義文は，言い換え研究においても有効性が確認されている．（e.g., 土屋・黒橋 2000; 藤田・乾 2001; 鍜治，河原，黒橋，佐藤 2003）

述部の同義性を判別するという目的で，辞書定義文を考察すると，2つの有益な特徴を見出すことができる．1つ目は，同義の述部同士は，お互いの定義文内に現れやすいという点である．これを，定義文の相互補完性とここでは呼ぶ．下記は，同義述部のペアである「出来上がる」と「完成する」の定義文の一例である．

\enumsentence{
[出来上がる]\\
定義文：すっかりできる．\textbf{\underline{完成する}}．
}
\enumsentence{
[完成する]\\
定義文：すっかり\textbf{\underline{できあがる}}こと．全部しあげること．
}
「出来上がる」の意味を定義するために，同義の「完成する」という述部を用いており，同様に，「完成する」の意味を定義するために，同義の「できあがる（出来上がる）」という述部を用いている．このように，同じ意味をあらわす述部同士は，お互いの定義文内に現れやすいという特徴がある．そこで，2つの述部が与えられた際に，それぞれの述部に対して「相手述部の辞書定義文内に現れるか」という相互補完性の有無を第一の素性として用いる．また，「プリンターが‐動かない」といった「項‐述部」の単位で同義判定を行うため，項（プリンター）もしくは項と同様の名詞クラスが相手の定義文に現れたか否かも素性として用いる．名詞クラスは，日本語語彙大系(池原，宮崎，白井，横尾，中岩，小倉，大山，林 1999)の一般名詞意味属性を用いる．

次に，意味が似ている述部同士は，定義文同士も似ているという特徴がある．下記は，「高値だ」と「高い」という同義の述部の定義文の一例である．

\enumsentence{
[高い]\\
定義文：買うのに多額の金銭がかかる．量や質にくらべて，\textbf{\underline{値段}}が多い．
}
\enumsentence{
[高値]\\
定義文：\textbf{\underline{値段}}が高いこと．高い\textbf{\underline{値段}}．
}
(7)，(8)が示すように，双方の定義文に「値段」という単語が含まれている．そこで，これらの定義文同士の語彙の重なりを，定義文間の内容語の重なり数を用いて素性とする．

このように，同義判別に必要なLexical-encyclopedicな情報として，辞書定義文の相互補完性と定義文中の語彙の重なりを素性として用いる．なお，「辞書定義文内に相互補完性があり，かつ片方の述部にのみに否定表現が入っているか否か」を区別する素性も作成した．これは，本稿が機能表現を含んだ述部を対象としており，機能表現に含まれる否定表現が同義関係を逆転させてしまうために特別に組み込んだ素性である．


\subsection{用言属性を用いた述部の抽象的意味属性}

同義の述部は，辞書的な意味だけではなく，より抽象的な意味レベル(Semantics)でも共通性があると考えられる．例えば(9)の同義述部は，日本語語彙大系(池原 他 1999)において以下のような用言属性を持つ．

\enumsentence{
用言属性の例\\
a. 出来上がる　　　\textbf{\underline{【生成】}}\\
b. 完成する　　　　\textbf{\underline{【生成】}}，【属性変化】
}

双方とも，「新しく何かを作り上げる」事を意味する，「生成」という属性を共通に保持している．

そこで，同義判定に必要なSemanticレベルの素性として，日本語語彙大系(池原 他 1999)の用言属性を用いて，述部同士の抽象的な意味の重なりを抽出する．日本語語彙大系の用言属性には，「生成」，「知覚状態」，「物理的移動」など36種類の用言属性ラベルがあり，それらが階層的に構造化されている（図3）．これらの用言属性を用いて，次の2種類の素性を抽出する．

1つ目は，共通して保持している用言属性そのものである．(9)の場合，「出来上がる」と「完成する」が共通して保持している「生成」という用言属性を素性として用いる．2つ目は，用言属性の重なり度合いである．(9b)が表すように，1つの述部が複数の用言属性を持つ場合がある．複数の用言属性が付与されている場合，それらの重なりが大きければ大きいほど，2つの述部は似ていると考えられる．また，重なっている用言属性がより具体的であればあるほど，より類似していると考えられる．

\begin{figure}[t]
\begin{center}
\includegraphics{20-4ia1f3.eps}
\end{center}
\caption{日本語語彙大系用言属性 (池原 他 1999)}
\end{figure}

そこで，用言属性の重なり度というものを用いて，2つの述部の用言属性の共通性を計算する．より詳細なレベルで用言属性が重なっている方がより共通性が高いと言えるため，重なり度の算出の際に，下層の用言属性に重みをつける．重みは，ヒューリスティックに決定した．下記が，用言属性の重なり度の算出方法である．
\[
\text{・用言属性重なり度} = 
	\frac{\vbox{\hbox{$(|\text{Pred1 の階層 1 用言属性集合}\cap \text{Pred2の階層1 用言属性集合}|)*1$}
		\hbox{${}+(|\text{Pred 1 の階層2の用言属性集合}\cap \text{Pred2の階層2の用言属性集合}|)*1.5$}
		\hbox{${}+(|\text{Pred 1 の階層3の用言属性集合} \cap \text{Pred2の階層3の用言属性集合}|)*2.0$}
		\hbox{${}+(|\text{Pred1の階層4の用言属性集合}\cap \text{Pred2の階層4の用言属性集合}|)*2.5$}
}}{(|\text{Pred1の用言属性集合} \cup \text{Pred2の用言属性集合}|)}
\]
これらの用言属性を用いることで，辞書定義文など語義そのものの重なり以外に，抽象的な意味レベル(Semantics)での共通性を素性として用いることができる．


\subsection{分布類似度}

述部が同義であれば，それら述部が現れる文脈も類似していると考えられる．Firth (1957)で述べられたように，対象の述部がどのような単語とともに現れるかが，述部の意味類似度を測るための重要な言語情報となる．

そこで，本稿ではこれらの周辺の項や文脈の情報を，分布類似度の値を用いて表す．分布類似度の計算は，柴田・黒橋(2010)の手法を用いて，「項‐述部」もしくは「述部」を単位として行う．柴田・黒橋(2010)は，「メモリを‐消費している」のような「項‐述部」，もしくは「消費する」という述部を単位 (u)として，係り受け関係にある単語を素性に，分布類似度の計算を行っている．素性は，対象の単位 (u)に前出する素性をpre，対象の単位 (u)に後続する素性をpostとして抽出する．例えば，「ソフトが常駐し，メモリを消費している」というような文があった場合，「メモリを‐消費する」に対して，素性「常駐する：pre」を抽出する．(10)が具体的な素性の種類である．

\enumsentence{
柴田・黒橋(2010)の類似度計算の単位と素性（e.g., メモリを‐消費する）
}
\vspace{0.5\Cvs}
\begin{center}
\begin{tabular}{p{11zw}|p{22zw}}
\hline
\multicolumn{1}{c|}{単位(u)} & \multicolumn{1}{c}{素性(f)} \\
\hline
項‐述部 \par ``メモリを‐消費する''& 
前後の係り受け関係にある述部 \par 　-常駐する：pre, 立ち上げる：pre, \par 　-重たくなる：post, 固まる：post \\
\hline
述部 \par ``消費する''& 
前後の係り受け関係にある格要素，ならびに述部 \par 　-[格要素]‐カロリーを，燃料を，メモリを \par 　-[述部] 燃焼する：pre, 代謝する：pre, \par 　\phantom{-[述部]} 排出する：post \\
\hline
\end{tabular}
\end{center}
\vspace{1\Cvs}

分布類似度の計算は，Curran (2004)をもとに，下記のようにweight関数とmeasure関数に分けて行う．weight関数は，素性ベクトルの値を適切な値に変換するためのものであり，柴田・黒橋 (2010)では，下記のように定義した．

・weight関数
\[
 \text{weight} = \begin{cases}
	1 & (\text{MI} > 0) \\
	0 & (\text{Otherwise})
 \end{cases}
\]

MI は，下記の式を用いて計算する．P(u) は，素性ベクトルを作る対象単位(u)の出現確率を表す（すなわち，「項‐述部」また「述部」の出現確率）．P(f)は，対象に対する素性(f)の出現確率を表す（すなわち，対象単位と係り受け関係にある格要素もしくは述部）．P(u,f)は分布類似度計算の対象単位とその素性の共起確率である．
\[
 \text{MI} = \log \frac{\mathrm{P(u,f)}}{\mathrm{P(u)P(f)}}
\]

分布類似度の計算には，JACCARD係数とSIMPSON係数の平均値を用いる．JACCARD係数は，分布類似度を計算する対象(u)（項‐述部もしくは述部）が共通して持つ素性(f)を，それぞれがもつ素性の和集合で割った値である．SIMPSON係数は，2つの対象が共通して持つ素性を，2つの対象の間で素性の数が少ない方の素性の数で割った値である．

・measure関数
{\allowdisplaybreaks
\begin{align*}
 & \text{measure} = \frac{1}{2} (\text{JACCARD}+\text{SIMPSON}) \\
 & \quad \text{JACCARD} = \frac{|(\mathrm{u1}, \ast) \cap (\mathrm{u2}, \ast)|}{|(\mathrm{u1}, \ast) \cup (\mathrm{u2}, \ast)|} \\
 & \quad \text{SIMPSON} = \frac{|(\mathrm{u1}, \ast) \cap (\mathrm{u2}, \ast)|}{\min (|\mathrm{u1}, \ast|, |\mathrm{u2}, \ast|)}\\
 & \quad \text{where} \\
 & \quad (\mathrm{u},\ast) \equiv \{ f|\text{weight}(\mathrm{u},\mathrm{f})=1\}
\end{align*}
}
上記で算出された，述部および項‐述部を単位とした分布類似度を文脈(Context)の情報として用いる．


\subsection{述部の機能表現}

述部は「内容語」と「機能表現」から構成されている．この，機能表現の意味そのものも述部の同義性に影響する．

\eenumsentence{
\item
辞書に‐入っ\underline{て／い／ない【てい（る）：継続】【ない：否定】}

\item
辞書に‐載っ\underline{て／い／ない【てい（る）：継続】【ない：否定】}

\item
辞書に‐載る
}

(11a)と(11b)は，機能表現「て／い／ない」を共有しており，同義述部になるが，機能表現を共有しない(11a)と(11c)は同義ではない．このように，述部の機能表現が重なっているか否かにより，同義か否かが変わってくる．

そこで，松吉 他(2007)の日本語機能表現辞書を用いて，述部の機能表現に「継続」や「否定」と言った意味ラベルを付与し，対象述部の機能表現の意味ラベルが重なっている場合に，その重なった意味ラベルを素性として抽出する．またどの程度，機能表現の意味を共有しているかを表す指標として，意味ラベルの重なり率を素性として用いる．意味ラベルの重なり率は，
下記のように算出する．
\[
  \text{機能表現意味ラベル重なり率}=\frac{(|\text{述部1の意味ラベルの集合}\cap \text{述部2の意味ラベルの集合}|)}{(|\text{述部1の意味ラベルの集合}\cup \text{述部2の意味ラベルの集合}|)}
\]
以上のように，提案手法では，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という4つの異なる言語的特徴を用いて，述部の同義判定を行う．素性の一覧を表1に示す．


\begin{table}[t]
\caption{素性一覧}
\input{01table01.txt}
\end{table}

\section{同義述部コーパスの作成}

同義判定モデルの作成と提案手法の評価のため，「メモリを‐消費している」のような「項‐述部」を単位とした同義述部コーパスを作成した．

2010年4月のブログからランダム抽出した約810万文を対象に，係り受け関係にある「項‐述部」を抽出した．述部は，Izumi, Imamura, Kikui, and Sato (2010)を用いて，述部の機能表現から終助詞など出来事の意味に影響を与えない表現を自動で削除し，単純な述部表現に正規化した．項は，日本語語彙大系(池原 他 1999)の具体名詞に属する名詞のブログ出現頻度上位700語を使用した．

抽出した「項‐述部」の集合から，項をキーとして「同義」，「含意」，「推意」，「反義」，「その他」の意味関係に属する述部のペアを抽出した．これらの意味関係を明確にするため，Chierchia 
and McConnell-Ginet (2000)を参考に，異なる2つの述部の意味関係を下記のように5種類に分類し，言語テストを作成した．これに基づき作業者は「同義」，「含意」，「推意」，「反義」，「その他」を判断した．（＃は「文法的には正しいが意味的におかしい文」を表す．）

・同義 (Mutual Entailment)

　　　定義：表層が異なる2つの述部が同じ出来事(Event)を表している

　　　言語テスト1：片方の述部を否定すると，意味が通じない

　　　　　　　　　×「\underline{\mbox{述部A}}，\textbf{でも，}\underline{\mbox{述部B}}\textbf{という訳ではない}」

　　　　　　　　　×「\underline{\mbox{述部B}}，\textbf{でも，}\underline{\mbox{述部A}}\textbf{という訳ではない}」

　　　例：＃「土産を\underline{買った}．\textbf{でも，}（その土産を）\underline{購入した}\textbf{という訳ではない．}」

　　　言語テスト2：片方の述部を推測表現（または疑問表現）にすると，意味が通じない

　　　　　　　　　×「\underline{\mbox{述部A}}，\underline{\mbox{述部B}} \textbf{かも知れない／のか？}」

　　　　　　　　　×「\underline{\mbox{述部B}}，\underline{\mbox{述部A}} \textbf{かも知れない／のか？}」

　　　例：＃「土産を\underline{購入した}．（その土産を）\underline{買った}\textbf{かも知れない／のか？}」

・含意（Entailment，「衝動買いした」は「買った」を含意する）

　　　定義：どちらか一方の述部がもう一方の述部の意味を包含していること

　　　言語テスト：含意されている述部を否定することができない

　　　　　　　　　×「\underline{\mbox{述部A}}，\textbf{でも，}\underline{\mbox{述部B}}\textbf{という訳ではない}」

　　　　　　　　　○「\underline{\mbox{述部B}}，\textbf{でも，}\underline{\mbox{述部A}}\textbf{という訳ではない}」

　　　例：＃「土産を\underline{衝動買いした}．でも，（その土産を）\underline{買った}\textbf{という訳ではない}．」

　　　　　○「土産を\underline{買った}．でも，\underline{衝動買いした}\textbf{という訳ではない}．」

・推意 （Implicature，「（土産が）お買い得だった」は「（土産を）買った」を推測させる）

　　　定義：どちらか一方の述部によってもう一方の述部が「自然に推測される」

{\addtolength{\leftskip}{4zw}\noindent 言語テスト：もう一方の述部が自然に推測されるが，含意と異なり推測される述部を否定することができる\par}

　　　　　　　　　○「\underline{\mbox{述部A}}，\textbf{でも，}\underline{\mbox{述部B}}\textbf{という訳ではない}」

　　　　　　　　　○「\underline{\mbox{述部B}}，\textbf{でも，}\underline{\mbox{述部A}}\textbf{という訳ではない}」

　　　例：○「土産が\underline{お買い得だった}．でも，\underline{買った}\textbf{という訳ではない}．」 

・反義 (Contradiction)

　　　定義：表層が異なる2つの述部において，両方の述部が真であることが成立しない

　　　言語テスト：両方の述部を「でも」でつなげると，意味が矛盾する

　　　　　　　　　×「述部A．\textbf{でも}述部B」

　　　　　　　　　×「述部B．\textbf{でも}述部A」

　　　例：＃「土産が\underline{多い}．\textbf{でも，}（その土産が）\underline{少ない}．」

・その他 (Others)

　　　定義：異なる 2 つの述部において意味的な関係がない

上記の言語テストをもとに，同義述部コーパスを作成した．コーパスは，1次作業者が述部ペアの作成・意味関係の付与を行い，1次評価者が指針にあっているか否かを評価した\footnote{1次作業者と1次評価者の一致率（kappa率）は0.85であった．}．2人が合意した意味関係を付与したデータを1次データとし，2次作業者と2次評価者（第一著者）が 1 次データの修正（2 次作業者）とそのチェック（2次評価者）を行った．その際，「推意」に関する述部ペアに関しては 1 次データでの一致率が良くなかったため，本研究のデータから排除した．これは，推意の定義にある「自然に推測される」という判断に個人差があるからだと考えられる．最終的には，「同義」，「含意」，「反義」，「その他」の意味関係に対し，4名の合意が取れた述部ペアを使用した．下記が，作成されたデータの例と総数である．

\enumsentence{
同義ペア（2,843ペア）\\
\begin{tabular}{p{14zw}l}
 車が‐ぶつかっていた & 車が‐衝突していた \\
 食パンが‐出来上がった & 食パンが‐焼けた \\
 バスが‐発車した & バスが‐発した
\end{tabular}
}
\enumsentence{
含意ペア（2,368ペア）\\
\begin{tabular}{p{14zw}l}
 時計を‐チェックした & 時計を‐見た \\
 庭を‐散策した & 庭を‐歩いた \\
\end{tabular}

\begin{tabular}{p{14zw}l}
 バッグを‐新調した & バッグを‐買った
\end{tabular}
}
\enumsentence{
反義ペア（2,227ペア）\\
\begin{tabular}{p{14zw}l}
 車が‐渋滞していた & 車が‐流れていた \\
 食パンを‐購入した & 食パンが‐売り切れていた \\
 バスを‐降りた & バスに‐乗った
\end{tabular}
}
\enumsentence{
その他ペア（4,948ペア）\\
\begin{tabular}{p{14zw}l}
 車が‐ぶつかっていた & 車を‐止める \\
 食パンに‐挟んだ & 食パンが‐焼けた \\
 バスを‐降りた & バスに‐間に合った
\end{tabular}
}


\section{考察}

同義・類義表現等を集めた大規模シソーラスである日本語WordNet (Bond et al., 2009) を用いた場合，同義まとめ上げのPrecisionは高いものの (0.873)，Recallが低かった (0.331)．実験で用いたデータは，提案手法の個々の素性の精度を正確に測るため，学研国語大辞典と日本語語彙大系に存在し，かつ分布類似度計算の「項‐述部」の出現頻度10以上のデータのみ使用するという制約を加えた．そのため，正確な比較は難しいものの，語彙大系や国語辞書などにエントリがある語彙のみを対象にした場合でも，WordNetのような大規模シソーラスのSynsetsだけでは，カバーできない同義表現があると考えられる．下記は，BL1 (WordNet) で同義と判定することができなかった同義述部表現の一例である．

\eenumsentence{
\item メモリを‐食っている
\item メモリを‐消費している
}
\eenumsentence{
\item 酒を‐満喫する
\item 酒を‐楽しむ
}
上記の例は，本提案手法では，正しく「同義である」と判別された述部ペアである．

一方，大規模コーパスから構築した分布類似度計算のみを用いた場合 (BL2 (DistPAVerb-$\theta )$, BL3 (DistMultiAve-$\theta )$)，Recallは最も高い値を出したものの，下記のように，「反義述部ペア」や「時間経過を表す述部ペア」も高い類似度を出してしまい，Precisionが低下してしまった．

\enumsentence{
分布類似度が閾値以上の反義ペア \\
a. ハンドルを‐握る \\
b. ハンドルを‐離す
}

\enumsentence{
分布類似度が閾値以上の時間経過を表す述部ペア\\
a. カレーを‐食べた \\
b. カレーが‐美味しかった
}
これらは，本提案手法では，正しく「同義ではない」と認識された．

このように，提案手法では，従来の大規模シソーラスでは同義と判断できなかった幅広い同義の述部を認識しつつ，同義ではない述部を正しく判別することができた．分布類似度が高い値を出してしまう反義関係・時間経過を表す述部の識別が，本提案手法で正しく行われたのには次のような理由があると考えられる．第一に，反義関係の識別に辞書定義文からの素性が効いた点である．下記の，動詞「握る」の定義文が表すように，辞書定義文には，同義の単語を使ってその語彙の意味を定義する傾向があるが，反義の単語を使って定義することが少ない．

\enumsentence{
「握る」の定義文の一例\\
物を\underline{つかんだり持ったり}する．
}
「握る」という単語を別の同義の単語である「つかむ」や類義表現である「持つ」という単語で表現しており，「離さない事」のように，反対の意味を表す単語にさらに否定表現をつけて定義することが少ない．相互補完性や語彙の重なりを特徴としたことで，同義述部を認識するだけでなく，同義ではない述部を正しく排除することができたと考えられる．

次に，時間経過を表す述部ペアも，本提案手法では正しく「同義ではない」と識別できた．これは，抽象的な述部の意味を表す用言属性の重なりを素性として加えたことによるものと考えられる．

\enumsentence{
時間経過を表す述部ペアの用言属性 \\
a. 食べた 【身体動作】，【状態】\\
b. 美味しかった 【属性】
}

上記のように，「食べた」と「美味しかった」は時間経過の関係を表す述部ではあるが，同義の述部と異なり，必ずしも同じ意味属性を持っているとは限らない．そのため，用言属性にも重なりがなく，正しく「同義ではない」と判別できたと考えられる．

このように，提案手法では，WordNetのような大規模シソーラスと同等のPrecisionを保ちつつ，Recallをあげることできた．述部の言語構造に関する分析をもとに，複数の言語情報を素性として組み込むことによって，同義の述部は同義，それ以外の述部は同義ではないと正しく判別できるようになった．

一方，提案手法でうまく同義と識別できなかった述部ペアは，片方の内容語が「入れる」のように多義性の高い述部ペアや，内容語と機能表現の意味の組み合わせを考慮しなくてはいけない同義述部ペアであった．

\eenumsentence{
\item カラオケに‐入れてほしい（入れる＋願望）
\item カラオケに‐参加したい（参加する＋願望）
}
\eenumsentence{
\item 筆が‐重い
\item 筆が‐進まない（進む＋否定）
}
\eenumsentence{
\item マンガが‐大好きだ（大好き）
\item マンガに‐はまっている（はまる＋継続）
}
提案手法では，「否定」や「継続」など機能表現が共有されていると素性として考慮されるが，上記の例のように，片方にのみ特定の機能表現が入ることによって同義になる述部を識別することは不可能である．今後は，機能表現の素性の加え方を工夫し，上記のように特定の機能表現をもった述部とのみ同義になるような述部ペアの同義判定も考慮していきたい．また，本提案手法では項にあたる名詞句は同じ条件での同義判定であるため，「景気が‐冷え込む」と「経済が‐悪化する」のように名詞句が異なる場合の同義判定への適用には，名詞句のまとめ上げも検討する必要がある．今後は，項が異なる場合の同義判定も考慮し，大規模データからの情報抽出・集計を行うマイニングでの本提案手法の有効性を検討したい．


\end{document}


