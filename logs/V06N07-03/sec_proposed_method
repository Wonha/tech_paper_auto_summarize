Millerは短期記憶の容量を計る，言葉，音感，味覚，視覚などを対象とした種々の実験におけるデータが，いずれも概ね７±２であったことから，人間の短期記憶の容量は７±２程度のチャンクであることを提唱した．
７±２の「±２」は個人差を意味しており，一般の人は7個程度，人によっては二つ多いめに，もしくは二つ少なめに覚えることができることを意味している．
７±２の研究は心理学の分野に属するものではあるが，工学の分野にも応用することができる．
例えば，文生成の研究では７±２の容量を越える文を作成するとわかりにくい文になるであろうから[CITE]，その条件を満足するように文生成を行なうということがある[CITE]．
また，画像処理の分野では最近はやりのカーナビを構築する際に，一画面に多くの情報を与えすぎると人間の認識に支障をきたすので，７±２程度のものしか提示しないようにするなどの研究を行なっているものもある[CITE]．
７±２の研究は，単なる知的好奇心による人間の解明に役に立つだけでなく，実際の社会においても利用されうる有益な研究なのである．
本節では実際に京大コーパスを用いて行なった調査結果を報告する．
(京大コーパスは1995年の毎日新聞のデータをもとに作成されたタグつきコーパスである．
)まず調査方法を述べる．
本研究では文の理解とは文の係り受け構造の解析であるとみなし，文を理解するときに短期記憶に格納することが必要とされるものは，係り先が未決定な文節であると考える．
図[REF_fig:jap]に例を示す．
図は「その少年は小さい人形を持っている．
」という文の係り受け構造を頭から解析するときに，各文節において係り先が未決定になっている文節の数を数えているものである．
図の矢印は係り受け構造を示し，数字は係り先が未決定な文節の個数を示し，その下に係り先が未決定な文節として短期記憶に格納しなければならない要素を示している．
この文を頭から見てみると，「その」が入ってきたときはそれの係り先はまだ決まっていないのでそれは覚えておかなければならず，係り先が未決定なものとして短期記憶に格納される．
次に「少年は」が入ってきたときは，「その」は「少年は」に係るとわかり「その」単独ではもう今後係り受けの解析に利用する必要はないので単独で認識する必要はなく，「少年は」とくっつけて「その少年は」という形で認識され，結局係り先が未決定な「その少年は」が一つだけ短期記憶に格納されることになる．
その次に「小さい」が入ってくる．
このときは新たに係り受け関係が定まるものはないので，「その少年は」と「小さい」が短期記憶に格納される．
その次の「人形を」が入ってきたときは，「小さい」は「人形を」に係るので「小さい」はもう今後単独では解析に用いられることはないので，「人形を」とくっつけて「小さい人形を」とまとめて認識され，前から覚えていた「その少年は」とあわせて二つ覚えるだけでよい．
最後に文末の「持っている。
」が入ってくると，すべての係り受け関係が定まるので係り先の未決定数は0となり，短期記憶に覚えていたものはすべて忘れてもよいこととなる．
本稿では，人間が文を理解する際に以上のような過程をたどると想定し，実際に係り受け構造のタグがふってある京大コーパスにおいて，実際に上記の方法で係り先が未決定な文節の数を数えあげた．
その結果を表[REF_tab:hindo_toukei]に示す．
この表の「文節数」の列の数字は，京大コーパス(未定義のタグがふってあった2文を除く19,954文, 192,352文節)の全文節において上記の方法で係り先が未決定な文節の数を調べ，その係り先未決定文節数ごとに，文節の頻度を調べたものである．
また，表の「文数」の列は，一文中で最も大きかった係り先未決定文節数をその文の係り先未決定文節数と考えて，係り先未決定文節数ごとに文の頻度を調べたものである．
この表では，未決定文節数が10つまり，Millerの7±2の上限9を越える文が二つあったが，おおよそ7±2の理論の範囲でおさまっていることを意味する．
7±2を越えた二つの文を表[REF_tab:10deatta_bun]に示す．
これらの文は極めて読解が難解なもので真剣に読んでもなかなか理解ができない文である．
7±2の上限の9を越えた文が少ないこと，また，7±2の上限の9を越えた二文も読解が難解な文であったことから，この調査結果はMillerの7±2の理論と矛盾しないものとなっている．
本研究では京大コーパスの係り受けのタグにしたがって係り先が未決定な文節の個数を数えたが，京大コーパスは助詞「は」がつく文節が複数の係り先が想定される場合なるべく後ろの文節に係るようにタグづけされており，これを近くにかかるようにすれば統計結果は変化するだろう．
また，接続詞など，記憶が必要でないかもしれない文節も数えてしまっている．
これらに対して適切な処理を施せば，係り先の未決定な文節の個数はさらに少なくなると予想される．
前節は日本語コーパスを用いて文の理解に必要な短期記憶の上限を調査するものだった．
本節では，英語コーパスにおける調査結果について記述する．
まず，Yngveにより提案されている英語コーパスでの短期記憶の容量の計算方法を述べる．
次にSampsonが行なった英語のSUSANNEコーパスにおける同様な調査[CITE]の紹介と，われわれが行なった英語のPenn Treebankコーパスにおける調査結果を報告する．
英語での文の構造解析に必要な短期記憶の容量を求める方法はYngve[CITE]によってすでに提案されている．
この方法は文をプッシュダウンオートマトンでトップダウンに解析する際にスタックに蓄えられるSやNPなどの非終端記号を短期記憶するべきものと考え，このスタックにつまれる記号の個数を数えるものである．
図[REF_fig:eng]は``The boy has a small doll.''をプッシュダウンオートマトンで解析したときにスタックに蓄える非終端記号の数の数え方を示したものである．
[t]
図[REF_fig:eng_3]の下の方にある四角い箱は人間の短期記憶の格納庫に相当するスタックを表す．
この文を頭から見て``The''が入ってきたときに，トップダウンで解析するのでまず最初にSから始まってSを(NP VP)に変形しVPを覚えておいてNPを(DT N)に変形してNを覚えておいてDTの部分を``The''と認識するので[MATH]，都合``The''のところではVPとNの二つをスタックに覚えておく必要がある．
同様な考え方でスタックに積む必要のある非終端記号は図[REF_fig:eng]のようになり各単語でのスタックに積んでおく必要のある数は図[REF_fig:eng]のように``2,1,1,2,1,0''となる．
Yngveはこのスタックに積んでおく必要のある数を簡単に数える方法も示している．
それは，図[REF_fig:eng]の構文木の各枝に図[REF_fig:eng_1]に示した要領で数字をふりSから単語までの経路の数字を足したものがスタックに積む個数とする方法である．
``The''を見るとS,NP,DTと見て1と1があるので足して2となりスタックの数2と一致する．
この方法を用いてSampsonはSUSANNEコーパス(約13万語)において表[REF_tab:hindo_toukei_eng_sussane](a)の結果を得ている．
表の「頻度(単語数)」はスタックに積まれる非終端記号数ごとの単語の頻度を意味している．
詳細な計算方法はSampsonの論文を参照のこと．
この結果では，7±2の上限9を越える文が多く存在している．
そこで，Sampsonは各ノードでふられている数字を図[REF_fig:eng_3]のように変更して計数している．
図[REF_fig:eng_3]のトップダウンの文の構造認識においてAを認識する際にB, C, D, Eを個々に覚えておくのではなく，B, C, D, Eをまとめて認識し覚えておくのは(B, C, D, E)の一つのセットでよい(もしくは，Aを認識する際にB, C, D, Eを個々に覚えておくのではなく，その親のノードを一個だけを覚えておく)と仮定するものである．
この計数方法によりSampsonは表[REF_tab:hindo_toukei_eng_sussane](b)の結果を得ている．
この結果は7±2の下限5以下でおさえられており，Millerの7±2の理論と矛盾しないものとなっている．
われわれは上記の調査をPenn Treebank[CITE]のWall Street Journalのコーパス(49,208文，1,122,857単語)で行なってみた．
SUSANNEコーパスで調査を行なわなかったのは，SUSANNEコーパスの構造が若干複雑なことと，Penn Treebankの方がデータ量が多いこととSUSANNEコーパスではすでにSUSANNEコーパスの作成者のSampsonが調査を行なっていたことに起因する．
Penn Treebankにおける実験結果を表[REF_tab:hindo_toukei_eng]に示す．
表の「単語数」はスタックに積まれる非終端記号数ごとの単語の頻度を意味し，「文数」は一文で最も多く積んだときの非終端記号数をその文の非終端記号数としたときの非終端記号数ごとの文の頻度を意味する．
ただし，ピリオドなどの記号は削除し，また``and''などによって構成される並列節の表現形式がこのコーパスではスタックの非終端記号の数を余分に数えるような構造になっていたので，その部分は図[REF_fig:eng_2]のように数値をふり直すことで余分に数えなくてすむようにして数えあげた．
表[REF_tab:hindo_toukei_eng]の結果は表[REF_tab:hindo_toukei_eng_sussane](a)の結果とよく似ていることがわかる．
この結果でも7±2の上限9を越える文が多く存在することが気になる．
そこで，Sampsonの修正した方法で計数してみた．
その結果を表[REF_tab:hindo_toukei_engb]に示す．
SampsonのSUSANNEコーパスでの結果では5でおさえられていたが，Penn Treebankの結果では7のものもあることがわかる．
われわれはさらにYngveとSampsonと異なる英語コーパスにおける新しい計数方法を考えた．
これは，日本語では文節を単位としてカウントし英語では単語を単位としてカウントするのは若干不公平ではないだろうかという考えに基づく．
そのわれわれの方法は，人間は日本語の文節のように個々の単語にまで分解せずにNP程度のものはまとめて認識すると仮定してNPの部分におけるスタックの数を勘定するものである．
つまり，SからNPにいたる経路に書いてある数字を足しあわせたものを用いて集計した．
その結果を表[REF_tab:hindo_toukei_engc]に示す．
この結果では，10のものがありMillerの7±2を逸脱している文もいくつかあるが，表[REF_tab:hindo_toukei]の日本語文での結果とよく似ており，またMillerの7±2のプラス2の部分に相当する8,9の文もあるということで我々の計数方法も有力ではないかと考えている．
いずれにせよ，Yngveの方法のまま計数すればMillerの7±2の理論を満足しないが，Sampsonの新しい計数方法か我々の新しい計数方法を採用すれば，Millerの7±2と矛盾しない説明をつけることができることがわかる．
また，Sampsonの計数方法に比べわれわれの計数方法は以下の二つの利点がある．
われわれの英語における計数方法は，計数の単位に文節に対応するNPを考慮するものであり，われわれの日本語における計数方法から学んだものであるという理由づけがある．
Sampsonの方法だとMillerの7±2の7あたりまで(SUSANNEコーパスでは5あたりまで)しか出現しないことになるが，われわれの方法ではMillerの7±2の8,9あたりの文も出現している．
Millerは短期記憶の容量を計る，言葉，音感，味覚，視覚などを対象とした種々の実験におけるデータが，いずれも概ね７±２であったことから，人間の短期記憶の容量は７±２程度のチャンクであることを提唱した．
７±２の「±２」は個人差を意味しており，一般の人は7個程度，人によっては二つ多いめに，もしくは二つ少なめに覚えることができることを意味している．
７±２の研究は心理学の分野に属するものではあるが，工学の分野にも応用することができる．
例えば，文生成の研究では７±２の容量を越える文を作成するとわかりにくい文になるであろうから[CITE]，その条件を満足するように文生成を行なうということがある[CITE]．
また，画像処理の分野では最近はやりのカーナビを構築する際に，一画面に多くの情報を与えすぎると人間の認識に支障をきたすので，７±２程度のものしか提示しないようにするなどの研究を行なっているものもある[CITE]．
７±２の研究は，単なる知的好奇心による人間の解明に役に立つだけでなく，実際の社会においても利用されうる有益な研究なのである．
本節では実際に京大コーパスを用いて行なった調査結果を報告する．
(京大コーパスは1995年の毎日新聞のデータをもとに作成されたタグつきコーパスである．
)まず調査方法を述べる．
本研究では文の理解とは文の係り受け構造の解析であるとみなし，文を理解するときに短期記憶に格納することが必要とされるものは，係り先が未決定な文節であると考える．
図[REF_fig:jap]に例を示す．
図は「その少年は小さい人形を持っている．
」という文の係り受け構造を頭から解析するときに，各文節において係り先が未決定になっている文節の数を数えているものである．
図の矢印は係り受け構造を示し，数字は係り先が未決定な文節の個数を示し，その下に係り先が未決定な文節として短期記憶に格納しなければならない要素を示している．
この文を頭から見てみると，「その」が入ってきたときはそれの係り先はまだ決まっていないのでそれは覚えておかなければならず，係り先が未決定なものとして短期記憶に格納される．
次に「少年は」が入ってきたときは，「その」は「少年は」に係るとわかり「その」単独ではもう今後係り受けの解析に利用する必要はないので単独で認識する必要はなく，「少年は」とくっつけて「その少年は」という形で認識され，結局係り先が未決定な「その少年は」が一つだけ短期記憶に格納されることになる．
その次に「小さい」が入ってくる．
このときは新たに係り受け関係が定まるものはないので，「その少年は」と「小さい」が短期記憶に格納される．
その次の「人形を」が入ってきたときは，「小さい」は「人形を」に係るので「小さい」はもう今後単独では解析に用いられることはないので，「人形を」とくっつけて「小さい人形を」とまとめて認識され，前から覚えていた「その少年は」とあわせて二つ覚えるだけでよい．
最後に文末の「持っている。
」が入ってくると，すべての係り受け関係が定まるので係り先の未決定数は0となり，短期記憶に覚えていたものはすべて忘れてもよいこととなる．
本稿では，人間が文を理解する際に以上のような過程をたどると想定し，実際に係り受け構造のタグがふってある京大コーパスにおいて，実際に上記の方法で係り先が未決定な文節の数を数えあげた．
その結果を表[REF_tab:hindo_toukei]に示す．
この表の「文節数」の列の数字は，京大コーパス(未定義のタグがふってあった2文を除く19,954文, 192,352文節)の全文節において上記の方法で係り先が未決定な文節の数を調べ，その係り先未決定文節数ごとに，文節の頻度を調べたものである．
また，表の「文数」の列は，一文中で最も大きかった係り先未決定文節数をその文の係り先未決定文節数と考えて，係り先未決定文節数ごとに文の頻度を調べたものである．
この表では，未決定文節数が10つまり，Millerの7±2の上限9を越える文が二つあったが，おおよそ7±2の理論の範囲でおさまっていることを意味する．
7±2を越えた二つの文を表[REF_tab:10deatta_bun]に示す．
これらの文は極めて読解が難解なもので真剣に読んでもなかなか理解ができない文である．
7±2の上限の9を越えた文が少ないこと，また，7±2の上限の9を越えた二文も読解が難解な文であったことから，この調査結果はMillerの7±2の理論と矛盾しないものとなっている．
本研究では京大コーパスの係り受けのタグにしたがって係り先が未決定な文節の個数を数えたが，京大コーパスは助詞「は」がつく文節が複数の係り先が想定される場合なるべく後ろの文節に係るようにタグづけされており，これを近くにかかるようにすれば統計結果は変化するだろう．
また，接続詞など，記憶が必要でないかもしれない文節も数えてしまっている．
これらに対して適切な処理を施せば，係り先の未決定な文節の個数はさらに少なくなると予想される．
前節は日本語コーパスを用いて文の理解に必要な短期記憶の上限を調査するものだった．
本節では，英語コーパスにおける調査結果について記述する．
まず，Yngveにより提案されている英語コーパスでの短期記憶の容量の計算方法を述べる．
次にSampsonが行なった英語のSUSANNEコーパスにおける同様な調査[CITE]の紹介と，われわれが行なった英語のPenn Treebankコーパスにおける調査結果を報告する．
英語での文の構造解析に必要な短期記憶の容量を求める方法はYngve[CITE]によってすでに提案されている．
この方法は文をプッシュダウンオートマトンでトップダウンに解析する際にスタックに蓄えられるSやNPなどの非終端記号を短期記憶するべきものと考え，このスタックにつまれる記号の個数を数えるものである．
図[REF_fig:eng]は``The boy has a small doll.''をプッシュダウンオートマトンで解析したときにスタックに蓄える非終端記号の数の数え方を示したものである．
[t]
図[REF_fig:eng_3]の下の方にある四角い箱は人間の短期記憶の格納庫に相当するスタックを表す．
この文を頭から見て``The''が入ってきたときに，トップダウンで解析するのでまず最初にSから始まってSを(NP VP)に変形しVPを覚えておいてNPを(DT N)に変形してNを覚えておいてDTの部分を``The''と認識するので[MATH]，都合``The''のところではVPとNの二つをスタックに覚えておく必要がある．
同様な考え方でスタックに積む必要のある非終端記号は図[REF_fig:eng]のようになり各単語でのスタックに積んでおく必要のある数は図[REF_fig:eng]のように``2,1,1,2,1,0''となる．
Yngveはこのスタックに積んでおく必要のある数を簡単に数える方法も示している．
それは，図[REF_fig:eng]の構文木の各枝に図[REF_fig:eng_1]に示した要領で数字をふりSから単語までの経路の数字を足したものがスタックに積む個数とする方法である．
``The''を見るとS,NP,DTと見て1と1があるので足して2となりスタックの数2と一致する．
この方法を用いてSampsonはSUSANNEコーパス(約13万語)において表[REF_tab:hindo_toukei_eng_sussane](a)の結果を得ている．
表の「頻度(単語数)」はスタックに積まれる非終端記号数ごとの単語の頻度を意味している．
詳細な計算方法はSampsonの論文を参照のこと．
この結果では，7±2の上限9を越える文が多く存在している．
そこで，Sampsonは各ノードでふられている数字を図[REF_fig:eng_3]のように変更して計数している．
図[REF_fig:eng_3]のトップダウンの文の構造認識においてAを認識する際にB, C, D, Eを個々に覚えておくのではなく，B, C, D, Eをまとめて認識し覚えておくのは(B, C, D, E)の一つのセットでよい(もしくは，Aを認識する際にB, C, D, Eを個々に覚えておくのではなく，その親のノードを一個だけを覚えておく)と仮定するものである．
この計数方法によりSampsonは表[REF_tab:hindo_toukei_eng_sussane](b)の結果を得ている．
この結果は7±2の下限5以下でおさえられており，Millerの7±2の理論と矛盾しないものとなっている．
われわれは上記の調査をPenn Treebank[CITE]のWall Street Journalのコーパス(49,208文，1,122,857単語)で行なってみた．
SUSANNEコーパスで調査を行なわなかったのは，SUSANNEコーパスの構造が若干複雑なことと，Penn Treebankの方がデータ量が多いこととSUSANNEコーパスではすでにSUSANNEコーパスの作成者のSampsonが調査を行なっていたことに起因する．
Penn Treebankにおける実験結果を表[REF_tab:hindo_toukei_eng]に示す．
表の「単語数」はスタックに積まれる非終端記号数ごとの単語の頻度を意味し，「文数」は一文で最も多く積んだときの非終端記号数をその文の非終端記号数としたときの非終端記号数ごとの文の頻度を意味する．
ただし，ピリオドなどの記号は削除し，また``and''などによって構成される並列節の表現形式がこのコーパスではスタックの非終端記号の数を余分に数えるような構造になっていたので，その部分は図[REF_fig:eng_2]のように数値をふり直すことで余分に数えなくてすむようにして数えあげた．
表[REF_tab:hindo_toukei_eng]の結果は表[REF_tab:hindo_toukei_eng_sussane](a)の結果とよく似ていることがわかる．
この結果でも7±2の上限9を越える文が多く存在することが気になる．
そこで，Sampsonの修正した方法で計数してみた．
その結果を表[REF_tab:hindo_toukei_engb]に示す．
SampsonのSUSANNEコーパスでの結果では5でおさえられていたが，Penn Treebankの結果では7のものもあることがわかる．
われわれはさらにYngveとSampsonと異なる英語コーパスにおける新しい計数方法を考えた．
これは，日本語では文節を単位としてカウントし英語では単語を単位としてカウントするのは若干不公平ではないだろうかという考えに基づく．
そのわれわれの方法は，人間は日本語の文節のように個々の単語にまで分解せずにNP程度のものはまとめて認識すると仮定してNPの部分におけるスタックの数を勘定するものである．
つまり，SからNPにいたる経路に書いてある数字を足しあわせたものを用いて集計した．
その結果を表[REF_tab:hindo_toukei_engc]に示す．
この結果では，10のものがありMillerの7±2を逸脱している文もいくつかあるが，表[REF_tab:hindo_toukei]の日本語文での結果とよく似ており，またMillerの7±2のプラス2の部分に相当する8,9の文もあるということで我々の計数方法も有力ではないかと考えている．
いずれにせよ，Yngveの方法のまま計数すればMillerの7±2の理論を満足しないが，Sampsonの新しい計数方法か我々の新しい計数方法を採用すれば，Millerの7±2と矛盾しない説明をつけることができることがわかる．
また，Sampsonの計数方法に比べわれわれの計数方法は以下の二つの利点がある．
われわれの英語における計数方法は，計数の単位に文節に対応するNPを考慮するものであり，われわれの日本語における計数方法から学んだものであるという理由づけがある．
Sampsonの方法だとMillerの7±2の7あたりまで(SUSANNEコーパスでは5あたりまで)しか出現しないことになるが，われわれの方法ではMillerの7±2の8,9あたりの文も出現している．
