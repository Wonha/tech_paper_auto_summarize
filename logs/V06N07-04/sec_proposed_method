本論文では，文章全体にわたる広範な情報（大域的情報）を用いて行なう要約を大域的要約と呼ぶ．
大域的情報とは文章中に含まれる単語の出現頻度や，文章中での文の位置などである．
例えば，これらの情報を使って重要文を抽出し連結することで要約を行う手法が提案されている[CITE]．
このような要約手法は，実現の容易さから，市販の自然言語処理システム（ワードプロセッサ，機械翻訳システム）の一機能として組み込まれていることもある．
しかし，要約文章は重要文を単に連結したものであるため，文章全体の概要を知るという用途には利用できるものの，文章としての自然さに欠ける．
一方，注目個所の近傍の情報（局所的情報）を用いて行なう要約を局所的要約と呼ぶ．
局所的情報とは注目個所そのものや，その前後の単語列などである．
例えば，ある単語列に注目してそれをより短い単語列に言い換えることにより要約を行なう手法が提案されている[CITE] ．
これらの手法には，どの単語列をどのように言い換えるか（置換規則），また，どのような場合に言い換えるか（置換条件）という要約知識が必須となる．
要約対象を拡大したり要約精度をあげるためには，このような要約知識を増やしたり精練したりしなければならない．
しかし，従来はこうした知識を人手で作成していたため大規模なシステムはない．
文章を自動要約するには大域的要約と局所的要約の両方を用いることが望まれるが，本論文では局所的要約だけに焦点をあてる．
これは，我々が自動要約の当面の応用としてニュースの字幕原稿の自動作成を考えているからである．
ニュースの字幕原稿とはアナウンサーが話す元原稿を要約して画面に表示したものである．
字幕は，すべての情報を与えるという観点からはむしろ元原稿を要約しないで作成するほうが望ましいが，字幕の表示速度や読み易さという観点からはやはり元原稿を要約して作成する必要がある．
この元原稿の要約に従来の大域的要約手法を適用すると文全体を省略してしまうので，大きな情報の欠落を伴うという問題が生じる．
また，元原稿の文は局所的情報で要約できる場合が多いので，ニュースの字幕原稿作成には局所的要約のほうが適している．
以下，単に「要約」と書いた場合には局所的要約を指すものとする．
本論文で提案する要約知識自動獲得手法では，原文と要約文からなる電子化されたコーパスが大量に必要となる．
この章では我々が使用している原文−要約文コーパスについて説明する．
我々は原文にＮＨＫニュース原稿，要約文にＮＨＫ文字放送の原稿を使っている．
ＮＨＫニュース原稿とは，主にＮＨＫ総合ＴＶ（ＧＴＶ）のニュース（例えば，「７時のニュース」）でアナウンサーが読む原稿の元になるものであり，電子的に保存されている．
アナウンサーが読んで伝えることを目的として書かれているため，新聞記事と比較すると冗長な表現も少なくない．
一方ＮＨＫ文字放送の原稿とは，ＧＴＶの電波に多重され放送されている文字放送（テレビジョン文字多重放送）の番組の原稿である．
文字放送は専用のデコーダーで受信することができ，わずかの例外を除いては市販の受信ソフトにより文字コードとして計算機に取り込むことが可能である．
ＧＴＶの文字放送は数百の番組があるが，本論文で用いている番組はテレモケイザイニュース，テレモコクサイニュース，テレモサンギョウ，ＮＨＫニュース，ＮＨＫフルサトネットワークの５つの番組である．
文字放送の原稿の記事数は番組や日によって異なるが，１番組当たり４〜８記事であり，一日に数回ニュース内容が更新される．
また，１記事は１画面の中に収まるように作成されている．
ＮＨＫニュース原稿とＮＨＫ文字放送の原稿の一例を図１に示す．
はじめに，ＮＨＫニュース原稿とＮＨＫ文字放送の原稿の１記事全体を定量的に比較する．
比較は9,243記事に対して，文の数，文字数の平均を計算して行った．
結果を表１に示す．
文の数では，ニュース原稿は１記事当たり５〜６文であるのに対して，文字放送の原稿はほとんどの場合が２文である．
文字数でみると，文字放送の原稿の１文は短く，ニュース原稿が約２０％に縮約されている．
図１の例で，ニュース原稿と文字放送の原稿を各文ごとに具体的に比較する．
文字放送の原稿の第１文とニュース原稿の第１文は共通に存在する単語列が多い．
また，異なっている部分は局所的要約が行なわれている．
すなわち，次のようにニュース原稿の単語列が文字放送の原稿中では短い単語列に置換されている．
（ここで，矢印の左辺が原文中の単語列，右辺が要約文中の単語列である．
また，記号φは空を表す．
）
「ごみの焼却場などから出る」（連体節）→「φ」
「有害物質のダイオキシン」→「有害物質ダイオキシン」
「摂取基準を引き下げること」→「摂取基準引き下げ」
「受けて」→「受け」
「国内の基準」→「国内基準」
「なりました」→「なった」
文字放送の原稿の第２文はニュース原稿の第２，３文から要約されている．
文字放送の原稿の第２文は「１０ピコグラム」というキーワードを中心にして要約が生成されている．
すなわち，前半はニュース原稿第２文の「１０ピコグラム」辺りの節までを要約し，後半は第３文の「１０ピコグラム」からの節を要約し，これらを繋げることにより要約が行なわれている．
つまり，第２文の要約は「１０ピコグラム」という共通単語列を考慮して要約しており，節を対象にした大域的要約である．
ニュース原稿の第４，５，６文は文字放送の原稿中では省略されている．
すなわち，これらは文を対象にした大域的要約が行なわれたものである．
我々の要約知識は置換規則と置換条件からなる．
置換規則とは原文の単語列を短い単語列に置き変えよというものである．
例えば，次の規則は連体格助詞「の」という単語を省略するという置換規則である．
【置換規則の例】
「の／体助」→「φ」
（ここで「の」は表層文字列，「体助」は品詞が“連体格助詞”であることを表す．
）
一方，置換条件とは置換規則が適用できるか否かを判定する条件である．
置換規則の適用はその前後の単語列で決まる．
例えば，次は上述の置換規則の例に対する置換条件の一部である．
【置換条件の例】
「日本の経済」のときは置換規則適用可
「日本の銀行」のときは置換規則適用不可
この置換条件の例では，「日本の経済」中の「の／体助」は省略可能であるが，「日本の銀行」中の「の／体助」は省略できないということを表している．
この例のように，置換規則は必ず適用できるわけではなく，適用してはいけない場合もある．
実際には後述するように，適用できる程度を[0.0, 1.0]の実数値で表現している．
以下では，置換規則と置換条件をコーパスから自動的に獲得する手法について具体的に説明する．
置換規則は，原文と要約文の差分として自動的に獲得する．
本手法でははじめに原文−要約文コーパスのそれぞれの文を形態素解析し，単語単位に分割する．
形態素解析は我々独自のシステムを使っている．
次に，形態素解析で得られた原文中の単語と要約文中の単語の最適な単語対応を求める．
これは，原文中の単語[MATH]（表層文字列を[MATH]，品詞を[MATH]と表す）と要約文中の単語[MATH]（表層文字列[MATH]，品詞[MATH]）のすべての組み合わせに対して単語間の距離を計算し，その距離に基づいて単語間のＤＰマッチングを取ることによって実現している．
この中で単語間の距離をどのように定義するかが重要となる．
単語間の距離は，対応する単語の有無や単語の類似性により式(1)のように３つの場合に分けて定義した．
【単語間の距離】
ここで，φは空を表す記号であり，[MATH]は対応する単語が省略されたことを表す．
また，内容語判定関数[MATH]は単語[MATH]が内容語であるかないかをその品詞（[MATH]）から判定する関数であり，式(2)で定義する．
【内容語判定関数】
式(1a)は２つの単語が共に内容語であるか，共にそうではない場合であり，式(3)，式(4)を用いて計算される．
単語間の距離は，シソーラス上の距離と品詞間の距離を重み付け（[MATH]）して計算される．
シソーラス上の距離は表層文字列が完全一致する場合には0.0（式(3a)）をとる．
一致しない場合には，それぞれの単語が内容語であれば，意味的な距離をシソーラスを使って計算する．
実際には角川類語新辞典[CITE]の分類番号の一致する桁に基づき，式(3b)〜(3d)で計算している．
【シソーラス上の距離】
式(1a)の第２項である品詞間の距離は，式(4)のように３つの場合に分けて定義している．
【品詞間の距離】
ここで式(4b)は，「名詞とサ変名詞」のように，完全一致しないが類似している品詞同士であり，人手で指定した．
しかし，現在のところその数はあまり多くない．
式(1a)は，定義式からわかるように[0.0, 1.0]の値を取る．
さて，式(1b)は内容語である単語と内容語でない単語が対応する場合であり，このような対応は不適切である場合が多いので他の場合よりも大きい値にした．
式(1c)は対応する単語が省略されている場合であり，式(1b)と式(1a)の最大値（[MATH]）の間の値とした．
以上のように定義した単語間の距離に基づいて単語間のＤＰマッチングをとると，図２のように，前の単語列が一致し（単語数[MATH]個），一部が不一致となり（[MATH]個），その後にまた単語列が一致する（[MATH]個）という部分が求められる．
この不一致となる単語列が置換規則となる．
さらに，一致する部分が長く，不一致の部分が短いほうが置換規則としての信頼性が高いと考えられる．
そこで置換規則自動獲得の信頼度として式(5)を定義すると，この値の大きいほうが知識として有効である．
実際にはあるしきい値（[MATH]）を決め，式(5)の値がしきい値より大きいものを収集した．
【置換規則自動獲得の信頼度】
さらに置換規則としての信頼度を高めるために，収集された置換規則の頻度統計をとり，頻度が高い置換規則を最終的に有効な置換規則とした．
置換条件には置換規則の前後の単語ｎグラムが使われている．
置換条件は置換規則と同時に収集されるが，原文の単語列が置換される場合[MATH]（正例と呼ぶ）とともに，原文の単語列がそのまま保存される場合[MATH]（負例と呼ぶ）も収集している．
負例を自動獲得する場合にも式(5)による信頼度を使っている．
置換規則の前のｎグラムを置換前条件，後のｎグラムを置換後条件と呼び，それぞれのｎの値を[MATH]，[MATH]とおく．
すると，要約知識は図３のように表すことができる．
この図で[MATH]は[MATH]番目にある置換条件を表すのに用いている．
このような置換条件を参照して，ある置換規則[MATH]が適用できるかどうかの程度は，式(6)で定義された置換条件上の距離として計算される．
置換条件上の距離の計算ではまず，それぞれの[MATH]に対して，原文の単語列の前[MATH]グラム（[MATH]）と[MATH]番目の置換前条件（[MATH]）との距離（式(6b)），原文の単語列の後[MATH]グラム（[MATH]）と[MATH]番目の置換後条件（[MATH]）との距離（式(6c)）を求める．
次にそれらを重み付けた和（式(6a)）を計算し，さらにすべての[MATH]に対する最小値を求め，この最小値を置換条件上の距離とする．
定義から明らかなように，式(6)は[0.0, 1.0]の値をとる．
【置換条件上の距離】
[MATH]                                                     (6a)
[MATH]
[MATH]
[MATH]
(6b)
(6c)
[MATH]                                                                                          (6d)
[MATH]                                                                                    (6e)
（[MATH], [MATH]は定数，[MATH],   [MATH]）
ただし，[MATH]，[MATH]はそれぞれ，原文と収集された置換前条件，置換後条件間の距離を計算する関数であり，置換規則となる単語列から離れるほど，その影響が少なくなるように[MATH]で重み付けしている．
さらに，置換前条件と置換後条件は[MATH]で重み付けしている．
式(6)で最小値を与える置換条件が正例に関するものであるならば，置換規則が適用され局所的に要約される．
しかし，置換規則の適用を式(6)で単純に判定してしまうと，負例，すなわち置換規則を適用しない方を解とする場合が多くなってしまう．
これは，置換条件の正例が置換しなければならないというものではなく，置換してもよいという程度の意味しか持たないからである．
そこで後述する要約知識の評価実験では，あるしきい値（[MATH]）を決め，式(6)で求められた最小値を与える解が負例であっても正例での最小値がしきい値以下であるならば，正例を解とした．
本論文では，文章全体にわたる広範な情報（大域的情報）を用いて行なう要約を大域的要約と呼ぶ．
大域的情報とは文章中に含まれる単語の出現頻度や，文章中での文の位置などである．
例えば，これらの情報を使って重要文を抽出し連結することで要約を行う手法が提案されている[CITE]．
このような要約手法は，実現の容易さから，市販の自然言語処理システム（ワードプロセッサ，機械翻訳システム）の一機能として組み込まれていることもある．
しかし，要約文章は重要文を単に連結したものであるため，文章全体の概要を知るという用途には利用できるものの，文章としての自然さに欠ける．
一方，注目個所の近傍の情報（局所的情報）を用いて行なう要約を局所的要約と呼ぶ．
局所的情報とは注目個所そのものや，その前後の単語列などである．
例えば，ある単語列に注目してそれをより短い単語列に言い換えることにより要約を行なう手法が提案されている[CITE] ．
これらの手法には，どの単語列をどのように言い換えるか（置換規則），また，どのような場合に言い換えるか（置換条件）という要約知識が必須となる．
要約対象を拡大したり要約精度をあげるためには，このような要約知識を増やしたり精練したりしなければならない．
しかし，従来はこうした知識を人手で作成していたため大規模なシステムはない．
文章を自動要約するには大域的要約と局所的要約の両方を用いることが望まれるが，本論文では局所的要約だけに焦点をあてる．
これは，我々が自動要約の当面の応用としてニュースの字幕原稿の自動作成を考えているからである．
ニュースの字幕原稿とはアナウンサーが話す元原稿を要約して画面に表示したものである．
字幕は，すべての情報を与えるという観点からはむしろ元原稿を要約しないで作成するほうが望ましいが，字幕の表示速度や読み易さという観点からはやはり元原稿を要約して作成する必要がある．
この元原稿の要約に従来の大域的要約手法を適用すると文全体を省略してしまうので，大きな情報の欠落を伴うという問題が生じる．
また，元原稿の文は局所的情報で要約できる場合が多いので，ニュースの字幕原稿作成には局所的要約のほうが適している．
以下，単に「要約」と書いた場合には局所的要約を指すものとする．
本論文で提案する要約知識自動獲得手法では，原文と要約文からなる電子化されたコーパスが大量に必要となる．
この章では我々が使用している原文−要約文コーパスについて説明する．
我々は原文にＮＨＫニュース原稿，要約文にＮＨＫ文字放送の原稿を使っている．
ＮＨＫニュース原稿とは，主にＮＨＫ総合ＴＶ（ＧＴＶ）のニュース（例えば，「７時のニュース」）でアナウンサーが読む原稿の元になるものであり，電子的に保存されている．
アナウンサーが読んで伝えることを目的として書かれているため，新聞記事と比較すると冗長な表現も少なくない．
一方ＮＨＫ文字放送の原稿とは，ＧＴＶの電波に多重され放送されている文字放送（テレビジョン文字多重放送）の番組の原稿である．
文字放送は専用のデコーダーで受信することができ，わずかの例外を除いては市販の受信ソフトにより文字コードとして計算機に取り込むことが可能である．
ＧＴＶの文字放送は数百の番組があるが，本論文で用いている番組はテレモケイザイニュース，テレモコクサイニュース，テレモサンギョウ，ＮＨＫニュース，ＮＨＫフルサトネットワークの５つの番組である．
文字放送の原稿の記事数は番組や日によって異なるが，１番組当たり４〜８記事であり，一日に数回ニュース内容が更新される．
また，１記事は１画面の中に収まるように作成されている．
ＮＨＫニュース原稿とＮＨＫ文字放送の原稿の一例を図１に示す．
はじめに，ＮＨＫニュース原稿とＮＨＫ文字放送の原稿の１記事全体を定量的に比較する．
比較は9,243記事に対して，文の数，文字数の平均を計算して行った．
結果を表１に示す．
文の数では，ニュース原稿は１記事当たり５〜６文であるのに対して，文字放送の原稿はほとんどの場合が２文である．
文字数でみると，文字放送の原稿の１文は短く，ニュース原稿が約２０％に縮約されている．
図１の例で，ニュース原稿と文字放送の原稿を各文ごとに具体的に比較する．
文字放送の原稿の第１文とニュース原稿の第１文は共通に存在する単語列が多い．
また，異なっている部分は局所的要約が行なわれている．
すなわち，次のようにニュース原稿の単語列が文字放送の原稿中では短い単語列に置換されている．
（ここで，矢印の左辺が原文中の単語列，右辺が要約文中の単語列である．
また，記号φは空を表す．
）
「ごみの焼却場などから出る」（連体節）→「φ」
「有害物質のダイオキシン」→「有害物質ダイオキシン」
「摂取基準を引き下げること」→「摂取基準引き下げ」
「受けて」→「受け」
「国内の基準」→「国内基準」
「なりました」→「なった」
文字放送の原稿の第２文はニュース原稿の第２，３文から要約されている．
文字放送の原稿の第２文は「１０ピコグラム」というキーワードを中心にして要約が生成されている．
すなわち，前半はニュース原稿第２文の「１０ピコグラム」辺りの節までを要約し，後半は第３文の「１０ピコグラム」からの節を要約し，これらを繋げることにより要約が行なわれている．
つまり，第２文の要約は「１０ピコグラム」という共通単語列を考慮して要約しており，節を対象にした大域的要約である．
ニュース原稿の第４，５，６文は文字放送の原稿中では省略されている．
すなわち，これらは文を対象にした大域的要約が行なわれたものである．
我々の要約知識は置換規則と置換条件からなる．
置換規則とは原文の単語列を短い単語列に置き変えよというものである．
例えば，次の規則は連体格助詞「の」という単語を省略するという置換規則である．
【置換規則の例】
「の／体助」→「φ」
（ここで「の」は表層文字列，「体助」は品詞が“連体格助詞”であることを表す．
）
一方，置換条件とは置換規則が適用できるか否かを判定する条件である．
置換規則の適用はその前後の単語列で決まる．
例えば，次は上述の置換規則の例に対する置換条件の一部である．
【置換条件の例】
「日本の経済」のときは置換規則適用可
「日本の銀行」のときは置換規則適用不可
この置換条件の例では，「日本の経済」中の「の／体助」は省略可能であるが，「日本の銀行」中の「の／体助」は省略できないということを表している．
この例のように，置換規則は必ず適用できるわけではなく，適用してはいけない場合もある．
実際には後述するように，適用できる程度を[0.0, 1.0]の実数値で表現している．
以下では，置換規則と置換条件をコーパスから自動的に獲得する手法について具体的に説明する．
置換規則は，原文と要約文の差分として自動的に獲得する．
本手法でははじめに原文−要約文コーパスのそれぞれの文を形態素解析し，単語単位に分割する．
形態素解析は我々独自のシステムを使っている．
次に，形態素解析で得られた原文中の単語と要約文中の単語の最適な単語対応を求める．
これは，原文中の単語[MATH]（表層文字列を[MATH]，品詞を[MATH]と表す）と要約文中の単語[MATH]（表層文字列[MATH]，品詞[MATH]）のすべての組み合わせに対して単語間の距離を計算し，その距離に基づいて単語間のＤＰマッチングを取ることによって実現している．
この中で単語間の距離をどのように定義するかが重要となる．
単語間の距離は，対応する単語の有無や単語の類似性により式(1)のように３つの場合に分けて定義した．
【単語間の距離】
ここで，φは空を表す記号であり，[MATH]は対応する単語が省略されたことを表す．
また，内容語判定関数[MATH]は単語[MATH]が内容語であるかないかをその品詞（[MATH]）から判定する関数であり，式(2)で定義する．
【内容語判定関数】
式(1a)は２つの単語が共に内容語であるか，共にそうではない場合であり，式(3)，式(4)を用いて計算される．
単語間の距離は，シソーラス上の距離と品詞間の距離を重み付け（[MATH]）して計算される．
シソーラス上の距離は表層文字列が完全一致する場合には0.0（式(3a)）をとる．
一致しない場合には，それぞれの単語が内容語であれば，意味的な距離をシソーラスを使って計算する．
実際には角川類語新辞典[CITE]の分類番号の一致する桁に基づき，式(3b)〜(3d)で計算している．
【シソーラス上の距離】
式(1a)の第２項である品詞間の距離は，式(4)のように３つの場合に分けて定義している．
【品詞間の距離】
ここで式(4b)は，「名詞とサ変名詞」のように，完全一致しないが類似している品詞同士であり，人手で指定した．
しかし，現在のところその数はあまり多くない．
式(1a)は，定義式からわかるように[0.0, 1.0]の値を取る．
さて，式(1b)は内容語である単語と内容語でない単語が対応する場合であり，このような対応は不適切である場合が多いので他の場合よりも大きい値にした．
式(1c)は対応する単語が省略されている場合であり，式(1b)と式(1a)の最大値（[MATH]）の間の値とした．
以上のように定義した単語間の距離に基づいて単語間のＤＰマッチングをとると，図２のように，前の単語列が一致し（単語数[MATH]個），一部が不一致となり（[MATH]個），その後にまた単語列が一致する（[MATH]個）という部分が求められる．
この不一致となる単語列が置換規則となる．
さらに，一致する部分が長く，不一致の部分が短いほうが置換規則としての信頼性が高いと考えられる．
そこで置換規則自動獲得の信頼度として式(5)を定義すると，この値の大きいほうが知識として有効である．
実際にはあるしきい値（[MATH]）を決め，式(5)の値がしきい値より大きいものを収集した．
【置換規則自動獲得の信頼度】
さらに置換規則としての信頼度を高めるために，収集された置換規則の頻度統計をとり，頻度が高い置換規則を最終的に有効な置換規則とした．
置換条件には置換規則の前後の単語ｎグラムが使われている．
置換条件は置換規則と同時に収集されるが，原文の単語列が置換される場合[MATH]（正例と呼ぶ）とともに，原文の単語列がそのまま保存される場合[MATH]（負例と呼ぶ）も収集している．
負例を自動獲得する場合にも式(5)による信頼度を使っている．
置換規則の前のｎグラムを置換前条件，後のｎグラムを置換後条件と呼び，それぞれのｎの値を[MATH]，[MATH]とおく．
すると，要約知識は図３のように表すことができる．
この図で[MATH]は[MATH]番目にある置換条件を表すのに用いている．
このような置換条件を参照して，ある置換規則[MATH]が適用できるかどうかの程度は，式(6)で定義された置換条件上の距離として計算される．
置換条件上の距離の計算ではまず，それぞれの[MATH]に対して，原文の単語列の前[MATH]グラム（[MATH]）と[MATH]番目の置換前条件（[MATH]）との距離（式(6b)），原文の単語列の後[MATH]グラム（[MATH]）と[MATH]番目の置換後条件（[MATH]）との距離（式(6c)）を求める．
次にそれらを重み付けた和（式(6a)）を計算し，さらにすべての[MATH]に対する最小値を求め，この最小値を置換条件上の距離とする．
定義から明らかなように，式(6)は[0.0, 1.0]の値をとる．
【置換条件上の距離】
[MATH]                                                     (6a)
[MATH]
[MATH]
[MATH]
(6b)
(6c)
[MATH]                                                                                          (6d)
[MATH]                                                                                    (6e)
（[MATH], [MATH]は定数，[MATH],   [MATH]）
ただし，[MATH]，[MATH]はそれぞれ，原文と収集された置換前条件，置換後条件間の距離を計算する関数であり，置換規則となる単語列から離れるほど，その影響が少なくなるように[MATH]で重み付けしている．
さらに，置換前条件と置換後条件は[MATH]で重み付けしている．
式(6)で最小値を与える置換条件が正例に関するものであるならば，置換規則が適用され局所的に要約される．
しかし，置換規則の適用を式(6)で単純に判定してしまうと，負例，すなわち置換規則を適用しない方を解とする場合が多くなってしまう．
これは，置換条件の正例が置換しなければならないというものではなく，置換してもよいという程度の意味しか持たないからである．
そこで後述する要約知識の評価実験では，あるしきい値（[MATH]）を決め，式(6)で求められた最小値を与える解が負例であっても正例での最小値がしきい値以下であるならば，正例を解とした．
