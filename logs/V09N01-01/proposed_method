我々の提案する格フレーム辞書の自動構築の過程は以下のとおりである(図[REF_格フレームに関連するデータ]の点線で囲まれた部分)．
コーパスのテキストに対して，KNP[CITE]を用いて構文解析を行い，その結果から，ある程度信頼できる用言・格要素間の関係を取り出す．
ここで取り出すデータを用例と呼ぶ．
抽出した関係を用言と直前の格要素の組ごとにまとめる．
このようにして作成したデータを用例パターンと呼ぶ．
シソーラスを用いて，用例パターンのクラスタリングを行う．
この結果できたものを用例格フレームと呼び，本研究ではこれが最終的に得られるものである．
以下では「荷物」，「物資」，「経験」などの格要素になる単語を格用例，用例格フレームにおけるある格の格用例の集合，例えば「積む」の1つめの用例格フレームのヲ格の格用例集合{「荷物」,「物資」}を格用例群と呼ぶ．
格要素は格用例と格の組である．
次に，格フレームに関連するさまざまなデータ処理を図[REF_格フレームに関連するデータ]に沿って議論する．
まず，図[REF_格フレームに関連するデータ]のIの用例をそのまま個別に使うことが考えられるが，この場合データスパースネスが問題になる．
例えば，この2つの用例がコーパスにあったとしても，「車に物資を積む」という表現が妥当であるかどうかはわからない．
一方，用例を二項関係に分割すると，図[REF_格フレームに関連するデータ]のIIのような共起データを作ることができる．
これは統計パーサによって用いられているデータ形式であり，データスパースネスの問題を回避することができる[CITE]．
しかし，その副作用として用言の用法の多様性の問題が生じる．
例えば，この2つの用例から「車に積む」，「荷物を積む」，「経験を積む」という共起データが得られるが，これらのデータだけでは「車に経験を積む」のような間違った表現を許すことになる．
また，図[REF_格フレームに関連するデータ]のIIIのように用例を単純にまとめたものも，もっている情報は共起データと同じであり，やはり用言の用法の多様性が問題となる．
これに対して，本手法で得られる用例格フレームでは，用言とその直前の格要素を組にして扱うという方法で，用法の多様性の問題を解決しつつ，データスパースネスにも対処している．
一方，用例を直接クラスタリングすることによって用例格フレームを作成する方法も考えられる(図[REF_格フレームに関連するデータ]のIV)．
この方法でも，用言の用法ごとに分かれた用例格フレームが得られるので，我々の作成する用例格フレームに近いといえる．
しかし，この方法ですべての格要素を等しく扱うと，用言の用法にあまり関係しない格要素(用言の直前ではない格要素)が類似していることによって，用言の用法の異なる用例がひとつの用例格フレームにマージされてしまうことがある．
例えば，この2つの用例は，用法が異なっているが，ガ格の「従業員」が同じであるためにマージされる可能性がある．
このような問題があるため，用例を直接クラスタリングする方法では，必ずしもよい精度の格フレームにはならないと思われる．
格フレームは辞書として利用されるものであり，精度は非常に高いものが要求されるため，この方法は格フレームの作成には適当ではないと考えられる．
コーパスを構文解析した結果から，図[REF_格フレームに関連するデータ]に示したような用例の収集を行う．
質の高い用例を収集するために，コーパスの解析結果から確信度の高い係り受けを抽出する．
用例を収集するときに，格，格用例，格要素に以下の条件を設定する．
収集する格要素の格として，日本語の基本的な格すべてを対象とする．
対象とした格を以下に示す．
ガ格,ヲ格,ニ格,ト格,デ格,カラ格,ヨリ格,ヘ格,マデ格,無格
これらに加えて，次のものも格として扱う．
ニ格，無格，カラ格，マデ格で，意味素「時間」(後述)をもっている格要素はまとめてひとつの格にする．
これは，格フレームを作成する際には，その用言が時間に強く関係しているかどうかが重要であり，表層格の区別は重要でないからである．
例:  &３時に,来年から
格と同じように振る舞う複合辞を，それぞれひとつの格として扱う．
例:  &〜をめぐって,〜によって,
&〜について,〜として
個別の単語を扱うことにあまり意味がなく，明確な意味を考えることできる格用例はクラスとしてまとめて扱う．
この汎化したクラスを以下のように3種類設定した．
この場合，格用例として単語のかわりにクラスを記述する．
時間
品詞細分類が時相名詞の形態素を含む文節
例:  &朝,春,来年
時間助数辞を含む文節
例:  &１９９９年,１２月,６日,９時,３５分,２３秒
「前」，「中」，「後」という接尾辞をもち，自立語がシソーラス上の意味属性「場所」をもたない文節
例:  &会議中,戦争後,書く前
数量
数詞を含む(助数辞を含まない)文節
例:  &１,２,一,二,十,百
数詞と，「つ」，「個」，「人」のような助数辞を含む文節については，「＜数量＞つ」，「＜数量＞個」，「＜数量＞人」のように数量クラスと助数辞のペアにして扱う．
例:  &１つ[MATH]＜数量＞つ
&２個[MATH]＜数量＞個
補文
引用節「〜と」，連体修飾+形式名詞またはそれに準ずる表現(〜の〜,〜くらい〜, )
例:  &書くと,書いたことを,書くのを,
&書くくらいが
次のような格要素は収集に用いない．
提題助詞をもつ格要素と用言の連体修飾先は，表層格が明示されていないので収集に用いない．
例:  &その議員は〜を提案した．
&〜を提案している議員が〜
ニ格，デ格で副詞的に使われる格要素は，係る用言との関係が任意的であるので収集から除外する．
これらの格要素については人手で辞書を作成した．
例:  &ために,無条件に,うえで,せいで
KNPでは，「〜では」，「〜でも」はデ格，「〜には」，「〜にも」はニ格の格要素として扱われるが，副助詞，あるいは従属節の場合もあるので収集の対象から除外する．
例:  &足の１本でも折ってやろうかと思った．
&育成しないことには世界で通用しない．
格要素が複合名詞の場合には，もっとも意味的に重要であると考えられる最後の自立語を収集に用いる．
例えば，
という文からは，
＜時間＞:時間格大臣:が＜数量＞人:に賞:を  贈る
という用例を得る．
収集する用言は動詞，形容詞，名詞+判定詞とする．
名詞+判定詞として収集する用言には体言止めの名詞も含む．
ただし，以下のような用言は収集に用いない．
用言が受身，使役，「〜もらう」，「〜たい」，「〜ほしい」，「〜できる」の形であれば，格の交替が起こり，格と格要素の関係が通常の場合と異なるので収集に用いない．
「〜で」は，判定詞かデ格かの自動判定が難しいので，KNPが判定詞と認識しても，用言として収集に用いない．
例:  &彼は京都で，試験を受け… (助詞)
&彼が好きな町は京都で，… (判定詞)
形態素解析において，活用形から原形が一意に決まらない用言は収集に用いない．
例:  &あった:ある,あう
&いった:いる,いう
用言として用いられているサ変名詞の直後に読点か句点がある場合，そのサ変名詞が受身か能動であるのかを区別することは難しいので，これは収集に用いない．
例:  &世界選手権は約１２００人が出場して福井県鯖江市で開催．
コーパスを構文解析した結果から用例を収集するときに問題となるのは，解析結果に誤りが含まれていることである．
そこで，誤りの影響を軽減するために，解析の精度が低い係り受けは捨てて，ある程度確信度が高い係り受けを格フレームの収集に用いる．
KNPでは，次のような優先規則によって文節の係り先を決定している．
文中の強い区切りを見つけることによって，係り先の候補の絞り込みを行う(ここで候補がひとつになるなら，係り先をそれに決定する)．
係り先の候補の用言のうち，格要素の係り先にならないことが多い用言を候補から除外する．
``読点のない文節はもっとも近い候補に係り，読点のある文節は2番目に近い候補に係る''という優先規則に従って，候補の中から係り先を決定する．
用例の収集では，Rule1は信頼し，Rule2とRule3は信頼しない(多くの場合正しいが，誤っていることもある)こととする．
つまり，Rule1で候補がひとつになり決定される係り受けは用例の収集に用い，Rule2やRule3の処理が適用された係り受けは収集に用いない．
この例では，「〜ので」はKNPによって強い区切りであると認識され，「英語を」の係り先の候補は「勉強した」の1つしかないので，この用例が取り出される．
「スコアが」の係り先の候補は，「大きく」がRule2によって除外されており，「上がった」の1つだけであるが，この用例は取り出されない．
「アドバイスに」の係り先の候補は「従って」，「勉強した」の2つであり，Rule3の優先規則により係り先は「従って」に決定されるが，この用例は取り出されない．
上の例ではルールがすべて正しく働いていたが，Rule2によって係り先の候補から除外した用言は，場合によっては係り先になる可能性があるので，このときの用例は収集しないことにしている．
例えば，次の例のように，形容詞「早い」の直後に「救う」のような強い用言がある場合，このような形容詞は格要素の係り先になりにくいために，係り先の候補から除外される．
この例では，「回りが」は形容詞「早く」に係るのが正解であるが，「早く」は係り先の候補から除外されており解析が誤っている．
また，Rule3の処理の例を次に示す．
KNPは，「質問に」の係り先の候補として，「切って」，「答えた」の2つの可能性を考慮する．
この場合，``より近くに係る''という優先規則に従って係り先は「切って」に決定されるが，この解析は誤りである．
この例のように，係り先の候補が複数存在すると，係り先に曖昧性があり確信度が低いので，このような用例は収集しない．
京都大学テキストコーパスから確信度の高い係り受けを抽出して，その精度の評価を行った．
対象としている格をもつ格要素の係り受けの精度は90.9%であるのに対し，抽出した確信度の高い係り受けの精度は97.2%であった．
抽出した係り受けは，対象としている格をもつ係り受け全体の44.0%であった．
これより，この処理はかなり効果的であることがわかる．
[REF_本手法]章の例文で示したように，用言の用法の異なる用例をひとつの格フレームとしてまとめてしまうと，誤った表現を許す格フレームを作ってしまう．
従って，格パターンの異なる格フレームは別々に作成する必要がある．
用言の用法を決定する重要な格要素は用言の直前にくることが多い．
また，用言とその直前の格要素をペアにして考えると，用言の用法はほとんど一意に決定される．
そこで，用例を，用言とその直前の格要素の組を単位としてまとめるという処理を行い，用例パターン(図[REF_格フレームに関連するデータ])を作る．
用例パターンの用言の直前の格要素を直前格要素，直前格要素の格を直前格と呼ぶ．
用例パターンは，ひとつの用言について，直前格要素の数だけ存在している．
そのため，次の例のように，用法がほとんど同じパターンまで個別に扱われている．
そこで，ほとんど用法が同じ用例パターンをマージするために，用例パターンのクラスタリングを行う．
以下では，このクラスタリングの詳細について述べる．
用例パターンのクラスタリングは，用例パターン間の類似度を用いて行う．
用例パターン間の類似度は，格の一致度と格用例群間の類似度の積とする(図[REF_用例パターン間の類似度の計算の例]に類似度の計算の例を示す)．
まず，単語[MATH]間の類似度[MATH]を，日本語語彙大系のシソーラスを利用して以下のように定義する．
ここで，[MATH]は意味属性であり，[MATH]はそれぞれ[MATH]の日本語語彙大系における意味属性の集合である(日本語語彙大系では，単語に複数の意味属性が与えられている場合が多い)．
[MATH]は意味属性[MATH]間の類似度であり，[MATH]は[MATH]のシソーラスの根からの階層の深さ，[MATH]は[MATH]と[MATH]の意味属性で一致している階層の深さを表す．
類似度[MATH]は0から1の値をとる．
用例パターン[MATH]の格の一致度[MATH]は，[MATH]に含まれるすべての格用例に対する，[MATH]の共通格に含まれている格用例の割合とし，
と定義する．
ただし，用例パターン[MATH]中の格を[MATH]，用例パターン[MATH]中の格を[MATH]，[MATH]と[MATH]間の共通格を[MATH]とする．
また，[MATH]は[MATH]内の格[MATH]に含まれる格用例群であり，[MATH], [MATH], [MATH]も同様である．
[MATH]などの絶対値記号は頻度を表す．
用例パターン[MATH]の共通格に含まれる格用例群間の類似度[MATH]は，格用例の類似度の和を正規化したもので，
とする．
用例パターン[MATH]間の類似度は，格の一致度[MATH]と[MATH]の共通格の格用例群間の類似度の積とし，次のようにして計算する．
用例パターンのクラスタリングの手順を以下に示す．
まず，直前の格要素の出現頻度がある閾値以上あるという条件で足切りを行う．
これは，直前の格以外にも格用例がある程度の回数以上出現しているような安定した用例パターンだけを対象にするためである．
この閾値は5に設定した．
直前格が同じ用例パターンのクラスタリング
あらゆる2つ組の用例パターンの類似度を計算し，用例パターンの意味属性を固定する．
これらの処理は，[REF_用例パターンの意味属性の固定]節で述べるように繰り返す．
用例パターン間の類似度が閾値を越える組について，用例パターンのマージを行う．
直前格を限定しない用例パターンのクラスタリング
直前格が同じ用例パターンのクラスタリングでは，次の例のように，格パターンが同じで用言の用法もほとんど同じ用例パターンであっても，直前格が異なっていれば別の用例パターンとなってしまう．
このように，直前格が異なっていても格パターンがほとんど同じ格フレームをマージする必要がある．
行う処理は，[REF_クラスタリング::基本クラスタリング]の処理で得られた用例パターンのクラスタリングである．
類似度，閾値とも[REF_クラスタリング::基本クラスタリング]と同じものを用いる．
[REF_クラスタリング::基本クラスタリング]と異なる点は用例パターンの意味属性の固定を行わないことである．
残りの用例パターンのふりわけ
頻度の閾値を越えない用例パターン(残りの用例パターン)をこれまでの処理で作成された用例パターンにふりわける．
これまでと同様に用例パターン間の類似度を計算し，類似度が閾値を越え，もっとも類似している用例パターンにマージする．
クラスタリング結果に対象としている用言の格フレームがないときは，残りの用例をひとつの格パターンとしてまとめる．
用例パターン間の類似度は，用例パターンの直前格要素の意味属性が大きく影響する．
そのため，用例パターンの直前格要素に多義性があるときに問題がある．
例えば，「合わせる」の用例パターンのクラスタリングにおいて，用例パターンの組(手,顔)と(手,焦点)がそれぞれマージされる．
(手,顔)は意味属性＜動物（部分）＞，(手,焦点)は意味属性＜論理・意味等＞を共通にもつためである．
この2つの用例パターンの組から結果的に(手,顔,焦点)という意味的におかしい組が作られてしまう．
この問題は，「手」が複数の意味属性＜動物（部分）＞，＜論理・意味等＞をもち，多義であるにもかかわらず，その多義性をまったく考慮せずに単純にクラスタリングしていることに起因している．
この問題に対処するために，もっとも類似度が高い用例パターンの組から意味属性を固定する処理，すなわち用例パターンの意味の曖昧性解消を行う．
この処理は，用例パターンの直前格要素の意味属性を固定することによって，次のような手順で行う．
類似度が高い用例パターンの組(p, q)から順に，両方の用例パターンの直前格要素n[MATH], n[MATH]の意味属性を固定する．
固定する意味属性は，n[MATH], n[MATH]間の類似度を最大にする意味属性s[MATH], s[MATH]とする．
ここで扱う用例パターンは，直前格が同じものに限定する．
p, qに関係する用例パターンの類似度を再計算する．
閾値を越える用例パターンの組がなくなるまで，この2つの処理を繰り返す．
次に，この処理の例を示す．
用言「飛ぶ」について，直前格の単語が「声」，「怒声」，「機」，「質問」であり，用例パターン間の類似度がクラスタリングの閾値(ここでは0.65とする)を越える組み合わせが以下の4通りであったとする．
この表より，もっとも類似度が高い用例パターンの組は(a)であり，「声」を直前格とする用例パターンと「怒声」を直前格とする用例パターンの類似度が0.90となっている．
このとき，「声」の意味属性が＜声＞で，「怒声」の意味属性も＜声＞のときに，「声」，「怒声」という単語間の類似度，そしてこの用例パターン間の類似度が最大になっている．
ここで，「声」の意味素を＜声＞，「怒声」の意味属性も＜声＞に固定する．
「声」と「怒声」の意味属性が限定されたので，それらの用例パターンに関係する類似度(b)，(c)，(d)の再計算を行う．
再計算の結果，(c)，(d)の類似度は変わらないが，(b)は，
となり，類似度0.29は閾値を下回り，結局この用例パターン間のクラスタリングは行われない．
クラスタリングを行った結果得られる用例格フレームについて，格用例の頻度が少ない格は除く．
これは，ひとつには構文解析結果の誤りへの対策であり，また頻度の少ない格はその用言と関係が希薄であると考えられるからである．
ただし，ガ格についてはすべての用言がとると考え，頻度が少なくても削除せず，逆にガ格の格用例がない場合には，意味属性＜主体＞を補うことにした．
頻度の閾値は，現在のところ経験的に[MATH]と定めている．
ただし，[MATH]はその用言においてもっとも多く出現した格の延べ格用例数である．
例えば，ある用言について，もっとも多く出現した格がヲ格で，[MATH]であり，ニ格の格用例数が16であったすると，このニ格は頻度が20未満なので捨てられることになる．
毎日新聞約9年分の460万文から実際に格フレーム辞書を構築した．
クラスタリングの閾値は[MATH]に設定した．
これは，格パターンが違ったり，意味が違う格フレームが同じ格フレームにならないという基準で設定したものである．
従って，格フレームは基本的にはばらばらで，意味がほとんど同じ格フレームを最小限まとめたものになっている．
格フレームの例を表[REF_構築した格フレームの例]に示す．
この表では，＜主体＞，＜場所＞の意味属性をもつ格用例を【主体】，【場所】という意味属性でまとめて表示している．
71,000個の用言について格フレームが構築され，用言あたりの平均格フレーム数は1.9個，格フレームあたりの格の平均数は1.7個，格あたりの平均異なり格用例数は4.3個であった．
また，クラスタリングによって用例格フレーム数は用例パターン数の53%になった．
構築した格フレーム辞書をみると，「賛成」のような名詞+判定詞の格フレームや，「ただす」の「について」のような複合辞の格についても得られている．
また，「告知する」は，語順の問題への対処が有効に働いて，次の2つの分割する必要のない用例格フレームが1つにマージされている．
