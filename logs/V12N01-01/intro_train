0 近年情報化 が 進む につれて 大量 の 電子テキスト が 流通 する よう に なっ た 
0 これ を 有効活用 する ため に 情報検索 や 情報抽出機械翻訳 など 計算機 で 自然言語 を 処理 する 技術 の 重要性 が 増し て いる 
0 この 自然言語処理技術 は 様々 な 知識 を 必要 と する が その 中 で 構文解析 の 際 に 最も よく 用い られる もの は 文脈自由文法CFG以下文法 と 略す で ある 
0 ところが 人手 で 作成 し た 大 規模 な 文法 は 作成者 の 想定 する 言語現象 に どうしても もれ が ある ため網羅性 に 欠ける という 問題 が ある 
1 一方 最近 で は コーパス から 抽出 し た 統計情報 を 用い て 自然言語 を 解析 する コーパスベース の 研究 が 成果 を あげ て おり それ に 伴い 電子コーパス の 整備 が 進ん で いる 
0 この コーパス から 文法 を 自動的 に 抽出 する 研究 も あり CITE文法作成者 に 大きな 負担 を かける こと なく コーパス内 に 出現 する 多様 な 言語現象 を 扱える 大 規模 な 文法 を 作成 する こと が 可能 で ある 
0 しかし コーパス から 抽出 し た 文法 に は 問題 が ある 
0 それ は コーパス から 抽出 し た 文法 で 構文解析 を 行う と 一般 に 膨大 な 量 の 構文解析結果曖昧性 が 出力 さ れる こと で ある 
1 その 要因 について は 後述 する が これ が 解析精度 の 低下 や 解析時間使用メモリ量 の 増大 の 要因 と なる 
0 コーパス から 抽出 し た 大 規模文法 が これ まで 実用 に 供 さ れ なかっ た 最大 の 理由 は ここ に ある 
0 コーパス に は 意味 を 考慮 し た 構文構造 が 付与 さ れ て いる こと が 普通 で あり その コーパス から 抽出 し た 文法 で 構文解析 を 行う と 意味解釈 に 応じ た 異なる 構文解析結果 が 多数生成 さ れる 
0 しかし 意味情報 を 用い ない 構文解析 の 段階 で は 意味的 に 妥当 な 少数 の 構文構造 に 絞り 込め ず 可能 な 構文構造 を 全て列挙 せ ざる を 得 ない 
1 我々 は 構文解析結果構文木 に 沿っ て 意味解析 を 進める 構文主導意味解析SyntaxDirectedSemanticAnalysisSDSACITE を 想定 し 構文解析 の 段階 で 生じる 曖昧性 を 極力 抑え 次 の 意味解析 の 段階 で 意味的 に 妥当 な 意味構造 を 抽出 する という 2段階 の 解析手法 を 採用 する 
0 
0 
1 本 論文 で は 構文解析 の 段階 の 曖昧性 を 極力 抑え その後 の 意味解析 の 段階 に も 有効 な 構文構造 を 生成 する 大 規模日本語文法 について 検討 する 
0 if0そこ で 我々 は 既存 の 構文構造付きコーパス を 出発点 と し 以下 の 手順 で 文法 を 作成 する こと を 試み て いる 
0 既存 の 構文構造付きコーパス から 文法 を 抽出 する 
0 構文解析結果 の 曖昧性 を 増大 さ せる 要因 を 分析 する 
0 分析結果 を もと に 構文構造付きコーパス の 変更方針 を 作成 する 
0 変更方針 に従って コーパス を 変更 し そこ から 新しい 文法 を 再 抽出 する 
0 24 を 繰り返す 
0 ただし 文法 の 抽出 は Charniak による treebankgrammar の 抽出方法CITE と 同様 の 方法 を とる 
0 上述 の 文法作成手順 で は 構文構造付きコーパス の 変更 に 重点 が 置か れ 文法 の 作成変更 と いう より むしろ コーパス の 作成変更 の よう に 思わ れる かも しれ ない 
0 しかし 実際 の 変更過程 で は 抽出 し た 文法 を 変更 し それ を コーパス中 の 構文構造 に 反映 さ せる 方法 を とっ て いる 
0 文法 の 変更 を コーパス に まで 反映 さ せる の は PCFGモデル等 の 確率モデル による 学習 の 際 に 訓練データ として 必要 で ある から で あり 文法 の 作成変更 と コーパス の 作成変更 は 同時に 扱う べき 問題 で ある 
0 つまり 曖昧性 を 抑え た 構文構造 を 出力 する よう に 文法 を 変更 する こと と コーパス に 付与 さ れ て いる 構文構造 を 曖昧性 を 抑え た もの に 変更 する こと は 結局 の ところ 同じ こと で ある と 考え て いる 
0 fi その 結果検討前 の 文法 と 比較 し て 出力 さ れる 解析木 の 数 を MATHオーダ から MATHオーダ まで 大幅 に 減少 さ せる こと が 可能 に なっ た 
0 さらに この 文法 から 得 た 解析結果 に対して 意味情報 を まったく 用い ず 確率一般化LRモデルPGLRモデルCITE による スコア付け1位 の 解析木 の 文 の 正解率 は 約 60 で あっ た 
0 一方 スコア付け1位 の 解析木 に対し 機械的 な 方法 で 文節 の 係り受け の 精度 を 測定 し た ところ意味情報 を 用い なく て も 896 という 高い 係り 受け 精度 が 得 られ た 
0 意味情報 を 本格的 に 利用 する こと で さらなる 精度向上 が 図れる という 見通し を 得 て いる 
0 以下 に 本 論文 の 構成 を 述べる 
0 第 REF_secRelated節 で は コーパス から 文法 を 抽出 する 主 な 研究 を 二つ紹介 する 
0 第 REF_secProcedure節 で は 我々 が 大 規模日本語文法 を 作成 する 際 の 手順 について 述べる 
0 第 REF_secProblem節 で は コーパス から 抽出 し た 文法 が 構文解析 において 膨大 な 量 の 曖昧性 を 出力 する 要因 を 考察 する 
0 第 REF_secModification節 で は 構文解析結果 の 曖昧性 の 削減 を 考慮 し た 具体的 な 文法 と コーパス の 変更方針 を 述べ 第 REF_secEvaluation節 第 REF_secSDDA節 で は 変更 し た コーパス から 抽出 し た 文法 の 有効性 を 実験 により 明らか に する 
0 最後 に 第 REF_secConclusion節 で 本 研究 を 総括 し 今後 の 課題 を 述べる 
