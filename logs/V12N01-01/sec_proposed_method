我々は，既存の構文構造付きコーパスを出発点とし，以下の手順で文法を作成することを試みている(図[REF_fig:procedure])．
既存の構文構造付きコーパスから文法を抽出する
構文解析結果の曖昧性を増大させる要因を分析する
分析結果をもとに構文構造付きコーパスの変更方針を作成する
変更方針に従ってコーパスを変更し，そこから新しい文法を再抽出する
(2)〜(4)を繰り返す
文法の抽出は，Charniakによるtree-bank grammarの抽出方法[CITE]と同様の方法をとる．
出発点として使用した構文構造付きコーパスの概要については，付録[REF_sec:Corpus]節で述べる．
上述の文法作成手順では，変更対象が構文構造付きコーパスであり，文法はコーパスから抽出されるだけであるため，「文法の作成」という表現に違和感を感じるかもしれない．
しかし，既存のコーパスから抽出した文法は，コーパス作成者の意図に反し，きわめて多数の構文解析結果を出力する．
そのため，コーパスの作成は，そこから抽出した文法による構文解析結果を考慮しながら行うことが望ましい．
換言すれば，文法の作成，変更とコーパスの作成，変更は並行して進める必要があると考えている．
このようにして作成したコーパスは，PCFGモデル等の確率モデルによる学習の際に，訓練データとしても利用できる．
繰り返し述べたように，大規模な構文構造付きコーパスから抽出したCFGをそのまま利用して構文解析を行うと，多数の曖昧性を生じる．
曖昧性が増大すると，解析に必要な時間，メモリ量が増大するだけでなく，その中から構文的に正しいものを選択することが困難になる．
この問題を解決するためには，曖昧性を増大させる要因を分析しなければならない．
曖昧性を増大させる要因は，以下の4種類に大別できる．
構文構造は人手で付与するため，誤りは避けられない．
誤った構造が付与されたコーパスから抽出した文法は，誤った構造を生成し，それが無意味な曖昧性の増大につながる．
大規模なコーパスを作成する際，作業は一人ではなく複数で行うことが一般的である．
この時，作業者による構造の付け方の``ゆれ''が問題となる．
一貫性のない構文構造付きコーパスから抽出した文法は冗長な文法規則を持ち，それが無意味な曖昧性の増大につながる．
構文構造を付与する際，コーパス作成者は文全体の構造を考慮しながら，部分的な構造を決定することが多い．
ところが，CFGの各規則はノードの親子関係に関する情報しか持たず，それ以外の周辺文脈情報(各子ノードを根とする部分木の情報や，親ノードを根とする部分木の外側の構文情報)を持たない．
構文構造の曖昧性を解消する上で有用な構文情報が欠落することで，構文解析において，構文的に誤った解析木を余分に生成することがある．
例えば，図[REF_fig:lack_of_syn]に示す2つの構文木が存在した場合，構文木(a)からは``[MATH]連体句[MATH]動詞句[MATH]''という規則が，構文木(b)からは``[MATH]連用句[MATH]動詞句[MATH]''という規則が抽出される．
しかし，これらの規則には動詞の活用形に関する情報が欠落しているため，活用形に関係なく，すべての動詞句が連体句にも連用句にもなれてしまう．
その結果，連用形の動詞句が連体句として体言を修飾したり，終止・連体形の動詞句が連用句として用言を修飾したりする解析木が生成でき，これが曖昧性を不必要に増大させる要因となる．
曖昧性の中には，その解消において，構文情報だけではなく意味情報も必要とするものがある．
例えば，「彼の目の色」の「彼の」が「目」と「色」のどちらを修飾するかの曖昧性の解消には，各語の意味を考慮する必要があり，構文情報だけでは解消できない．
詳細は後述するが，我々が想定する自然言語解析では，構文解析時は構文情報のみを利用し，意味情報を必要とする曖昧性の解消は，構文解析後の意味解析で行うこととしている．
構文解析時に解消できない曖昧性を列挙することは，構文解析結果を組み合わせ的に増大させることになる．
要因1と2は，コーパスの誤りであるため，訂正すべきもとのして，以下の考察から除外する．
一方，要因3と4はコーパスの誤りではない．
要因3の解決には，どの構文情報が必要であるかを考察し，その情報を非終端記号に追加し，細分化する．
要因4の解決には，意味情報を利用しない限り解決が困難な曖昧性を包含した単一の構文構造をコーパスに付与し，CFGを再抽出する．
すなわち，再抽出したCFGによる構文解析結果では，要因4による曖昧性を区別しない．
こうすることで，構文解析結果の曖昧性を抑えられるだけでなく，意味解析で解消すべき曖昧性の所在が明らかになる．
次節では，我々の具体的な変更方針について述べる．
要因3の曖昧性はすべて除外することが理想である．
EisnerやKomagataは，Categorial Combinatory Grammar(CCG)について，解析器側を変更することによってこの曖昧性を完全に除外し，一つの意味解釈に対して一つの解析木を出力する(exactly one syntactic structure per semantic reading)手法を提案している[CITE]．
本研究ではCFGを使用し，解析器に変更を加えるのではなく，文法とコーパスそのものを変更しながら，この曖昧性を抑える．
さらに，我々は，要因4の曖昧性を包含した単一の構造を生成する(意味的情報は利用しないことを前提とした)，構文解析のための大規模日本語文法の構築を目的としている．
しかし，この方針によって，出力される構文解析木の数を抑えることは，その後の意味解析を困難にすることもあり得る．
そのため，構文解析時には包含された曖昧性を意味解析で解消することを念頭に置きながら，要因4の曖昧性のうち，どれを単一の構文構造で表現し，構文解析結果の曖昧性を抑えるかを詳細に検討する必要がある．
我々が使用しているコーパスには，以下のような不備や欠点があった．
用言の活用形に関する情報の欠落(要因3)
複合名詞内の構造の曖昧性(要因4)
連用修飾句，連体修飾句の係り先の曖昧性(要因4)
並列構造の曖昧性(要因4)
これらについて，具体的に変更方針を述べる．
用言の活用形の情報が欠落しているためにそれが連体修飾句になるか連用修飾句になるかで曖昧になることを，第[REF_sec:Problem]節で，要因3の曖昧性の例として挙げた．
実際，我々が使用しているコーパスで，この問題があった．
これを解決するために，用言等の語尾や助動詞の活用形に関する情報を構文構造に引き継ぐように変更する(図[REF_fig:conjugation])．
ただし，未然形，連用形等すべての活用形を付与するのではなく，その語が末尾に現れることで連用修飾句，または連体修飾句になり得る場合にのみ，それぞれ「連用」，「連体」というラベルを追加する．
これは，活用形の情報を付与する目的が，その用言が連用修飾句になり得るものか，連体修飾句になり得るものかを区別するためであり，それ以外の情報は必要ないからである．
複合名詞内の構造の曖昧性を構文解析で解消することは困難であり，この曖昧性を構文解析結果の違いとして出力すべきではないと考えている．
白井らも，この曖昧性を構文解析結果の違いとして出力しないよう文法を変更している[CITE]．
我々もその方針に倣い，複合名詞については，語構成に関係なく右下がりの構造に統一する(図[REF_fig:convert_compound_noun])．
次に，連用修飾句，連体修飾句の係り先の曖昧性の扱いを検討する．
我々は，連用修飾関係の曖昧性は従来通り別の構造として区別し(すなわち，構造は変更しない)，連体修飾関係を表す構造を，複合名詞の場合と同様，意味に関係なく同一の構造にする(図[REF_fig:convert_adn_phrase])．
つまり，連用修飾関係の曖昧性は構文解析結果の曖昧性として残し，連体修飾関係の曖昧性は構文解析の段階では出さず，後の意味解析でこの曖昧性を解消することになる．
上述の方針に決定した理由は二つある．
一つは，連用修飾関係を表す構造を意味に関係なく同一の構造にすることは，構文解析後の意味解析を困難にすることになるからである．
例えば，「欧米/諸国/は/日本/の/流通/制度/の/改善/を/求めている」という単文を考える．
ただし，スラッシュは単語区切りを表す(「求めている」は動詞語幹，助動詞語幹，語尾に分割されるが，簡単のため，ここでは1語として表記する)．
この文に対してボトムアップに(意味的に正しい)構文構造を付与すると，次の手順になる．
「欧米諸国」，「流通制度」のそれぞれを一つの複合名詞にまとめる(図[REF_fig:structure]の破線で囲まれた部分)．
「日本の」と「流通制度」，そして「(日本の)流通制度の」と「改善」のそれぞれを一つの連体修飾関係にまとめる(図[REF_fig:structure]の細い実線で囲まれた部分)．
「(日本の流通制度の)改善を」と「求めている」，「欧米諸国は」と「(日本の流通制度の改善を)求めている」の二つの連用修飾関係をまとめる(図[REF_fig:structure]の太い実線で囲まれた部分)．
このように考えると，単文では，連用修飾関係を表すレベルが連体修飾を表すレベルより上にある．
複文や重文は，この単文を組み合わせることで構成される．
上位レベルである連用修飾関係を表す構造を意味に関係なく同一構造にすることは，複文や重文を構成する単文のまとまりを破壊することになり，文全体の構造がとらえにくくなる．
その結果，構文解析後の意味解析が困難になる．
下位レベルである連体修飾関係を表す構造を，意味に関係なく同一構造にし，連用修飾関係を表す構造は従来通り別の構造として区別することで，その後の意味解析を困難にせずに，構文解析の段階の曖昧性を抑えられると考えている．
もう一つの理由は，連用修飾句の係り先の曖昧性の解消は，連体修飾句の係り先の曖昧性の解消に比べて，構文解析での解決が容易であるからである．
連用修飾句の係り先は，助詞と動詞の関係，副詞と助動詞の関係等を利用することで，決定できる可能性があるのに対し，連体修飾句の係り先は，連用修飾句の場合に比べて，品詞レベルでの解決が難しい．
そこで，品詞レベルでの解決が比較的容易な連用修飾関係を表す構造は従来通りとし，連体修飾関係を表す構造は，意味に関係なく同一構造にすべきであると，我々は考えている．
ただし，連体修飾句の係り先の曖昧性が，大別して2種類あることに注意したい．
連用修飾句の範囲を変えないもの
連用修飾句の範囲を変えるもの
図[REF_fig:adnominal_phrase]にそれぞれの例を示す．
太い実線で囲まれた句は連用修飾句を，細い実線で囲まれた句は連体修飾句を，破線で囲まれた句は動詞を，網掛けの長方形で囲まれた句は連体修飾を受ける名詞を，矢印の始点は修飾関係の係り元を，終点は係り先を表す．
「新しい環境への適応能力を調べる」の場合，連体修飾句「新しい」が「環境」に係る場合でも「適応能力」に係る場合でも，動詞「調べる」に係る連用修飾句は「新しい環境への適応能力を」であることには変わりはない(図[REF_fig:adnominal_phrase](a)，(b))．
ところが，「百年の歴史を持つ祭り」では，連体修飾句「百年の」が「歴史」に係る場合の動詞「持つ」に係る連用修飾句は「百年の歴史を」であるのに対し，「百年の」が「祭り」に係る場合も考えられないこともない．
後者の場合は，「歴史を」のみが「持つ」に係る連用修飾句となる(図[REF_fig:adnominal_phrase](c)，(d))．
我々は，連用修飾句の範囲と係り先は従来のまま変更せず，そこから抽出した文法は，その曖昧性を構文解析の段階に出力することにしている．
その方針に合わせ，連用修飾句の範囲を変えない場合に限り，連体修飾関係を表す構造を同一の構造に統一する(すなわち，「新しい環境への適応能力を調べる」の場合は図[REF_fig:adnominal_phrase](b)の構造に変更し，「百年の歴史を持つ祭り」の場合は図[REF_fig:adnominal_phrase](c)の構造のままにしておく)．
並列構造の曖昧性の解消には意味的情報が必要であり，係り受け解析において並列構造を含む文の正解率は，含まない文に比べて低くなる．
予備実験によると，並列構造を含む文の正解率は，含まない文の正解率の半分程度しかない[CITE]．
文の正解率を全体的に上げるためには，並列構造の曖昧性について検討する必要がある．
KNP[CITE]では，先に並列関係にある部分を決定し，次にその内部の構造を分析するアプローチを採用している[CITE]．
しかし，我々は，並列関係にあるかどうかの判定は構文解析に先立って行わず，その後の意味解析の段階で行うこととする．
言い換えると，注目している二つの部分が並列関係にあるかどうかの曖昧性は，構文解析の段階では区別しない．
日本語には，並列名詞句，並列述語句，並列助詞句の3種類の並列構造がある．
我々は，これらの構造を以下の方針で変更する．
名詞句「日本と中国の関係」において，「日本」と「中国」が並列関係にあるのか，それとも「日本」と「関係」が並列関係にあるのかという曖昧性の解消には，各語の意味的情報が必要となる．
「ＡのＢのＣ」，「ＡとＢのＣ」の二つの名詞句を考えると，どちらの場合も名詞「Ａ」，「Ｂ」，「Ｃ」の間の関係を分析することになる．
このことから，並列名詞句の分析は連体修飾句の係り受けの解析に似ている．
構文解析の段階では「Ａと」を連体修飾句と同様に扱い，並列構造の曖昧性の解消は，次の意味解析の段階で，連体修飾関係の曖昧性の解消と同時に行うこととする(図[REF_fig:convert_para_noun])．
予備実験[CITE]によると，並列述語句を含む文の正解率は，それ以外の並列構造を含む文の正解率と比べて大幅に低くなる．
これは，二つの述語句が並列関係にあるか否かの判断が，構文解析の段階では難しいためである．
例えば，「歌を歌い，踊りを踊る」という文が並列構造を持つか否かは，並列関係の定義を明確にしなければ，コーパス作成者によっても判断が分かれるところである．
構文解析の段階では並列述語句は連用修飾関係と同様に扱い，二つの述語句が並列関係にあるか否かの判断は，後の意味解析の段階で行うこととする(図[REF_fig:convert_para_verb])．
並列助詞句は，「国政段階でも個別産業レベルでも影響力は小さい」のように，並列関係にある二つの助詞句に含まれる助詞が同じであることが多いので，並列助詞句を含む文の正解率はそれほど低くならないと思われるかもしれない．
ところが，予備実験[CITE]によると，並列助詞句を含む文の正解率は並列述語句を含む場合よりは高いが，並列名詞句を含む場合とほぼ同じであった．
二つの助詞句が並列関係にあるか否かの判定には意味的情報が必要であり，構文解析の段階で解決することは困難である．
構文解析の段階では，とりあえず並列関係にある助詞句は別個に動詞に係る構造を作ることとし，二つの助詞句が並列関係にあるか否かの判定は意味解析の段階で行うこととする(図[REF_fig:convert_para_pp])．
以上をまとめると，我々の文法とコーパスの変更方針は以下のようになる．
\if0
複合名詞内の構造の曖昧性，連用修飾句の範囲を変えない連体修飾句の係り先の曖昧性はタイプ3の曖昧性とし，構文解析の段階では一つの構文構造を出力する．
連用修飾句の係り先の曖昧性，連用修飾句の範囲を変える連体修飾句の係り先の曖昧性はタイプ1の曖昧性とし，構文解析の段階で係り受け構造を反映した異なる構造を出力する．
並列構造の曖昧性はタイプ3の曖昧性とし，二つの句が並列関係にあるか否かの曖昧性は，構文解析の段階では一つの構文構造を出力する．
\fi
複合名詞内の構造，連用修飾句の範囲を変えない連体修飾句の係り受け関係の構造は，語構成や意味に関係なく同一の構造にする．
連用修飾句の係り受け関係の構造，連用修飾句の範囲を変える連体修飾句の係り受け関係の構造は，従来通りの構造にする．
ただし，用言のとる表層格の情報は無視する．
二つの句が並列関係にあるか否かの判定は構文解析の段階では行わず，並列関係にあるか否かで構造の区別はしない．
以上の方針に従って構築した文法を使用し，「道路の両側には水を流すための溝が掘ってあります」という文を構文解析すると，図[REF_fig:example_of_policy]に示す4個の構文構造が生成される．
ただし，実線で囲まれた句は連用修飾句を，破線で囲まれた句は動詞を，矢印の始点は連用修飾関係の係り元を，終点は係り先を表す．
これら4個の構文構造は，連用修飾句の範囲とその係り先の違いを表し，この中から一つの構文構造を選択することは，連用修飾句の範囲とその係り先を決定することを意味する．
一方，連体修飾句の係り先は，各構文構造が持つ意味的曖昧性の中から一つの意味解釈を生成することによって決定する．
例えば，構文構造(b)では連体修飾句「道路の両側には水を流す」が「ため」に係るか「溝」に係るかを決定し，構文構造(c)では連体修飾句「道路の」と「両側には水を流す」が，それぞれ「ため」に係るか「溝」に係るかを決定する．
一方，構文構造(b)では，「道路の」が「ため」や「溝」に係る可能性は，動詞「流す」を連用修飾する「道路の両側には」という句の範囲を変えることになるので考慮する必要はない．
前節で，我々の方針により作成したコーパスから抽出した大規模日本語文法が，構文解析結果の曖昧性を抑え，文の正解率が約10%向上することを示した．
しかし，構文解析結果の曖昧性を抑えるために，一部の曖昧性を同一の構造で表現することとし，その内部構造を厳密に決定していないため，文の正解率が高くなるのは当然であるという疑問が残る．
そこで，PGLRモデルによる解析結果を利用した文節係り受け解析を行い，係り受け精度を調べた．
文節の係り受け関係は，構文木から取り出す．
その手順を以下に示す．
文節区切りを決定する
構文構造をもとに，各文節について，係り先となる文節を決定する
例えば，図[REF_fig:example_tree]の構文木の場合，文節区切りと各文節の係り先となる文節は表[REF_tab:extracted_dep]のようになる．
我々が使用しているコーパスに付与されている構造は句構造であり，文節中のどの語に係るかをさらに厳密に決定することも可能である．
しかし，今回の実験では，どの文節に係るかのみを決定する．
変更後の文法では，連体修飾句の係り受け関係の構造は連用修飾句の範囲を変えない場合に限り，同一の構造(右下がりの構造)に制限している．
そのため，連体修飾句の係り受け解析を行う際は，連体修飾関係の曖昧性をすべて考慮しなければならない．
しかし，今回は，PGLRモデルによる生成確率1位の構文木中の連体修飾句は(意味的情報を用いず)係り得る名詞の中で最も近いものを含む文節に係ることとする．
例えば，「青い目のアメリカから来た男性に会う」という文の「青い目のアメリカから来た男性に」という助詞句を考える．
変更後の文法でこの文を構文解析すると，この助詞句について，図[REF_fig:sdda_adn](a)，(c)，(e)の3通りの解析木が出力される(中間ノードのラベルは省略する)．
図[REF_fig:sdda_adn](a)のような構文木が生成された場合，その係り受けは，図[REF_fig:sdda_adn](b)に示すように，文節「青い」が文節「目の」に，文節「目の」が文節「男性に」に直接係るとして係り受け精度を計算する(文節「アメリカから」は文節「来た」に，文節「来た」は文節「男性に」に係る)．
図[REF_fig:sdda_adn](c)，(e)の場合は，それぞれ図[REF_fig:sdda_adn](d)，(f)に示すような係り受け構造となる．
連用修飾句の係り先の曖昧性は構文解析結果の曖昧性として残しているので，構文解析結果として出力された構造をそのまま利用する．
複合名詞の内部の構造は語構成に関係なく同一の構造としているが，今回の実験では文節の係り受け構造を抽出するだけであるので，複合名詞の内部の構造までは考慮されない．
2つの文節が並列関係にあるか否かの曖昧性は，今回の評価実験では無視し，並列名詞句は連体修飾関係として，並列述語句と並列助詞句は連用修飾関係として扱う．
評価は，変更後のコーパス8912文で行った．
このうち，評価用として100文をランダムに選択し，残りをPGLRモデルの学習用とした．
この評価用データの100文は，1文あたり平均19.84形態素，7.16文節であり，並列構造を持つ文は17文含まれている．
PGLRモデルにより評価用データ100文を構文解析し，生成確率が1位の構文木から，第[REF_sec:DepExtraction]節で述べた方法により，半自動的に係り受け構造を抽出し，その精度を以下の3つの尺度で評価した．
「係り受けA型」とは，全ての係り受け関係の正解率であり，「係り受けB型」とは，文末2文節の係り受け関係以外の係り受け正解率である．
「文正解率」とは，文全体の文節の係り受け関係の正解率である．
テスト文の正しい係り受け関係は，変更前のコーパスに付与されている構文木から，先に述べた方法で取り出した．
その結果を表[REF_tab:result_sdda]に示す．
ただし，「文節不一致」は文節区切りが正解と一致しなかった文の数を表す．
表[REF_tab:result_sdda]より，意味情報を全く利用しなくとも，PGLRモデルのみによる係り受け正解率が90%前後と非常に高いことが分かる．
これは，Support Vector Machineや最大エントロピー法を用いた文節係り受け解析の手法の正解率と同程度である[CITE]．
我々は，構文解析結果に対して意味解析を行うことを想定している．
現在，本格的な意味解析の代わりに，SDSAの枠組みのみを利用して，単語の共起に関する統計データを用いた小規模な係り受け解析の実験を行っているが，非常に単純なスコア付けであるにも関わらず，93.0%の係り受け正解率(係り受けB型)，68.8%の文正解率が得られることを確認している[CITE]．
今回は評価用データを100文として実験を行ったが，この規模は非常に小規模であるため，SDSAの有効性を示すには至っていない．
しかし，我々は，実験結果からSDSAによるアプローチが有効である可能性があると考えている．
今後，コーパスサイズを大きくし，SDSAベースの本格的な意味解析への移行を検討する予定である．
