本手法の有効性を評価するために，実験用の感情推定システムを構築し，連続する会話文の感情推定実験を行った．
プロトタイプシステムの構成を図[REF_fig:structure]に示す．
システムは，大きく分けて文解析モジュール，感情推定モジュール，感情文蓄積モジュール，推定結果比較モジュールの4つの部分からなる．
入力された発話テキストデータは文解析モジュールでCaboCha (CaboCha)により係り受け解析され，表層格の決定が行われる．
次に，感情推定モジュールで感情推定処理が行われ，感情文蓄積モジュールにおいて入力発話テキストは感情推定結果と共にデータベースに蓄積される．
その後，推定結果比較モジュールにおいて人手により付与された正解感情（人手による正解感情）との比較が行われ，各発話テキストごとの評価結果が出力される．
評価は，人が判断した話者の感情と，システムが推定した結果との比較により行った．
正解として，シナリオ会話文に正解とする感情を人手により付与したものを用いた．
今回，人手による解を作成するにあたり，システム構築と感情辞書構築に関与していない5人の学生に対して，1シナリオずつを分担して行った．
人手による解の作成者は，文脈を理解しながら割り当てられたシナリオを読み，シナリオ中の全発話に対して1発話ごとに選択候補（感情語，感情イディオムに付与された割合の高かった感情属性の上位45種類）の中から話者の生起している感情として考えられる数種類を選択する．
付与の際，選択候補中に適するものが無いと判断した場合に，新たに感情の種類を自由入力できるようにした．
また，感情が生起していないと判断したものについては「平静」を付与するように指示した．
作成者が自由入力し，追加された感情で，感情辞書中に含まれていなかったものとして，以下に示すようなものがあった．
嫌味，不思議，苛立ち，納得，同意，同情，否定，からかい，心配，満足，あわれみ，切望，緊張
対象とする文は，Webサイトから収集した連続する会話文から構成される5種類の演劇用台本から抽出したシナリオ文章（合計1774発話）である．
各シナリオについてのデータを表[REF_tb:scenario-info]に示す．
シナリオ会話文は，あらかじめ各話者の発話（ターン単位）ごとに分割しておいた．
これらの発話の単位を1発話テキストと定義した．
システムは，1発話テキストごとの推定結果として複数の感情属性を出力する．
出力結果の例を，表[REF_tb:sample]に示す．
今回，感情推定結果と，人手による正解感情とを比較することで提案手法の有効性の評価を行ったが，評価にあたり，解の作成者ごとの感情の種類の認識の差を考慮するため，感情属性の種類の大まかな分類（感情属性の大分類）を表[REF_tb:lclass]に示すように定義した．
正しいもの（人手による正解感情と完全一致）は○，完全に正しいとはいえないが，間違いではないと判断できるもの（完全には一致しないが，人手により付与された感情と同じ大分類に属するもの）は△，明らかな間違い（完全一致せず，人手による正解感情と同じ大分類にも属さないもの）であるものは×として定義した．
また，感情推定結果として1発話に何も感情属性が付与されない「無感情」については，「平静」と同じ大分類に属するものとして評価を行うことにした．
表[REF_tb:result1]に，実験の結果得られた感情属性ごとの評価結果を示す．
表[REF_tb:result1]中の合計は，すべての発話において付与された感情属性の数を示す．
また，それぞれの評価ラベルに対し，○(1.0),△(0.5),×(0.0)と重み付けを行い，各文の平均値を評価スコアとして算出した．
評価スコアの算出方法を，式[REF_eq:score]に示す．
[MATH]は，各評価ラベルに対する重みを表す．
また，[MATH]はその発話文の推定結果として出力された（値が0より大きい）感情属性の数を表す．
評価スコアが0.5以上と判定されたものを正しく感情属性が付与された発話テキストとみなし，正解文として集計した結果，該当する文は1006文であり，全体の約57%であった．
評価スコアの詳細を表[REF_tb:result2]に示す．
また，シナリオの種類ごとの成功率を表[REF_tb:result3]に示す．
ここでは，評価実験の結果，感情生起事象文型パターンに当てはまらず，推定誤りとなった発話テキストについてその原因を考察し，対処方法について述べる．
推定誤りの原因の内訳を表[REF_tb:error_rate]に示す．
複数の原因が考えられる場合には，考えられる全ての原因を付与する．
また，誤り原因の解析は，失敗とみなした発話テキスト（評価スコアが0.5より小さかったもの）に対して行った．
以下，それぞれの原因による推定誤りの例を示し，感情推定結果との比較を行う．
文脈による誤り例
「それは，ちょっと．
」
（推定感情）：“無感情”
（人手による正解感情）：“ためらい”
（誤り原因）：文脈によるものに加え，文末要素が副詞になっており，述語が省略された形になっているため．
述語には，否定的な言葉が当てはまると思われる．
{文脈}話者(Y)「じゃあ，電話で言う．
」
話者(S)「いやぁ．
電話はどうだろう．
」
話者(Y)「そう．
じゃあメールで．
」
話者(S)「それは，ちょっと．
」
「全く．
」
（推定感情）：“無感情”
（人手による正解感情）：“あきれ”
（誤り原因）：文脈によって，「全く」の後に続く語が限定される．
この場合，「全く」の後には相手を非難する言葉が続くと思われる．
（相手に呆れてしまい，その先の言葉に詰まる状況）
{文脈}話者(M)  「嫌なら他の人に頼みなさいよ．
」
話者(F)  「そりゃちょっと気が引ける…」
話者(M)  「私ならいいわけ？」
話者(F)  「もう習慣みたいなもんだから．
」
話者(M)  「全く．
」
「そのたんびに母親に怒鳴られていたよ．
」
（推定感情）：“怒り”
（人手による正解感情）：“愛”かつ“受容”
（誤り原因）：文脈からは，同年代の子供達に，愛する自分の息子について楽しそうに話す話者の心情がうかがえる．
「母親に怒鳴られる」という事象のみからでは推定が不可能．
{文脈}話者(M)「…ほら，これがうちの子．
浩っていうんだ．
汚い格好だろう？いつもこうなんだ．
隣の家へ行っては，自分より小さな子を泣かして帰ってきたり，どこへ遊びに行ってたのやら，体中泥だらけにして帰ってきたりな．
そのたんびに母親に怒鳴られていたよ．
」
「顔くらい，いーだろ．
」
（推定感情）：“受容”
（人手による正解感情）：“不平不満”かつ“嫌悪”
（誤り原因）：文脈からは，相手の怒りを受けての発言であることが分かる．
{文脈}話者(M)「何すんのよ！ヘンタイ！」
話者(F)「そりゃねーだろ．
お化けの次はヘンタイかよ．
」
話者(M)「女の子に触っていいと思ってんの！」
話者(F)「顔くらい，いーだろ．
」
「おかしいなあ．
」
（推定感情）：“楽しみ”かつ“喜び”
（人手による正解感情）：“不安”かつ“不審”
（誤り原因）：「おかしい」の意味を，「違和感がある」という意味でなく，「可笑しい」ととってしまったため．
「おかしい」の意味を判定するには，文脈の考慮が必要．
{文脈}話者(A)「おい！！あれ！！」
話者(B)「ちょうどいいところに来たな．
」
話者(C)「おかしいなあ．
俺，武器も一緒においてっちまったんだっけかな…？」
モダリティの未登録，照合失敗，感情生起主体の判定失敗など
「怒られたくも，叩かれたくもないでしょ？」
（推定感情）：“怒り”
（人手による正解感情）：“受容”
（誤り原因）：「〜でしょ」の未登録，主体の判定失敗（話者として判定）
（対処方法）：「〜でしょ」の登録（「受容」を生起するルール），受身形「〜られる」の判定による感情生起主体の判定．
{モダリティ，感情生起主体の判定が正しく行われる場合}
(a)問いかけのモダリティ「〜でしょ」が抽出される．
（このモダリティが受容を生起するとする）
(b)モダリティによる感情属性値ルールにより「受容」を生起．
(c)“生起主体が「怒られる」”という事象であるが，主体判定の結果「他者」と判定されればこの事象からの感情は推定されない．
(d)結果として(b)で生起した「受容」が話者感情として推定される．
「お前何そんなに怒ってんの？」
（推定感情）：“怒り”
（人手による正解感情）：“受容”
（誤り原因）：疑問の様相「〜てんの」の未登録，生起主体の判定失敗（話者として判定）
（対処方法）：生起主体判定方法の改善と「〜てんの」の登録．
「そお，そこそこ．
どんなにしっかりしていても，君もまだ子供なんだ．
笑ったり，怒ったり，泣いたり，していいんだよ．
その子と同じようにね．
」
（推定感情）：“喜び”かつ“怒り”かつ“悲しみ”
（人手による正解感情）：“受容”
（誤り原因）：「許可」を表すモダリティ「V-ていい」の抽出失敗．
「笑ったり」，「怒ったり」，「泣いたり」からそれぞれの感情属性が結果に表れたため，推定結果のような感情属性が得られてしまった．
（対処方法）：モダリティの照合方法の改善
感情語・感情イディオムの未登録
「みんな大袈裟に騒ぎ立てちゃって．
」
（推定感情）：“嫌悪”
（人手による正解感情）：“呆れ”
（誤り原因）：感情語としての「大袈裟」が未登録．
（対処方法）：「大袈裟」を感情語として登録．
{「大袈裟」が登録されている場合}表層格判定：“みんな”（ガ格），“大袈裟”（ニ格），“騒ぎ立てる”（述語）
(1)感情語として「大袈裟」に，感情属性として「呆れ」が付与される．
(2)述語「騒ぎ立てる」に，感情属性「嫌悪」が付与される．
→述語とニ格の感情属性から，「嫌悪」+「呆れ」が推定される．
実験結果より，感情語が含まれていて，主語や述語が明確な比較的単純な構造の文でも，推定が上手くいかない場合が多かった．
この原因として，文脈を受けて感情語の表す感情の程度が変化してしまうということがある．
例えば，笑い話をしている最中に，不快を表すような感情語が出現することも多く，そのような場合，単純に感情語から「感情表出発話」として話者の感情を推定してしまうことには問題がある．
会話全体のムード（雰囲気）も考慮しなければならない．
また，感情の種類によって推定数，推定成功率共にばらつきが出た．
この原因として，対象のシナリオの内容によって，感情の種類ごとに含まれる文の数に差があったということと，感情辞書に含まれる感情語やイディオムに付与されている感情属性の種類ごとの数の偏りがあることが挙げられる（図[REF_fig:emotion_dictionary]参照）．
また，感情語の表記のゆれや，感情語・感情イディオムのパターン不足による照合失敗も多かった．
このような照合失敗については，照合処理の改善と単語拡充による対応で解決できると考えている．
また，感情推定への影響が大きいモダリティの照合処理の改善とモダリティのパターン拡充も必要である．
また，今回実験に用いたシナリオには，登録されている文型パターンに一致する文がほとんど含まれていなかった．
さらに係り受け解析の出力による表層格決定の失敗も多数あった．
これらのことから，提案手法における文型パターン照合手法が話し言葉特有の表現に対応できていないことが問題であるといえる．
また，文脈による誤りが推定失敗の原因の50%を超えていたことから，これらの文から正しく感情推定を行うために，文脈を考慮した感情推定を行えるようにしなければならない．
評価実験1の結果から，単純な文からの感情推定に失敗する原因として「文脈誤り」が多かった．
したがって，対話の流れ（会話全体のムード）に応じて感情推定を行う必要がある．
そこで，各シナリオの登場人物ごとに感情状態を保持し，感情の持続性を考慮した感情パラメータ蓄積ルールを適用することにより対話全体の雰囲気を考慮することにした．
感情は，一時的なものと継続的なものの2種類に分けることができる．
一時的な感情の場合，生起した時点から発話が進むにしたがって減少し，収束していくと考えられる．
一方，継続的な感情は，対話中にほとんど減少しないと考えられる．
感情の種類について述べている[CITE]によると，感情を継続性と対人性の観点から分類すると，表[REF_tb:emotion_category]のようになる．
したがって，継続的感情は，発話の進行に影響されず感情状態が維持させる．
また，一時的感情は発話の進行に伴い，1発話テキストにおける感情パラメータの合成時と同様に，同じ対話中の過去に生起した感情を忘却曲線の近似式によって減衰させ，最新の感情パラメータに足し合わせる．
また，対話が終了するまで継続的感情を蓄積し続けることにより，後に生起した感情よりも強度が大きくなってしまうことを避けるため，継続的感情と一時的感情とで減少の割合を変更することで対処する．
具体的には継続的感情は一時的感情よりも減少率を低くする．
この感情の持続性を考慮したルールを感情パラメータ蓄積ルールとする．
ここで，ある発話者による2発話における感情パラメータを合成する例を示す．
対話例として，表[REF_tb:para_ex]に示すように各話者ごとの発話において感情パラメータが計算されたとする．
表中の感情パラメータは，1発話テキスト内のみで計算されたものとする．
発話は，[MATH]の順に行われたとする．
この対話中の[MATH]において，直前の発話[MATH]で計算された感情パラメータとの合成を行う．
一時的感情と継続的感情の減少の割合の比を1.5と定義し，計算を行う．
計算の過程を図[REF_fig:katei]に示す．
評価実験2として，1発話のみからでは推定が困難な場合に，直前の発話から推定された感情パラメータを利用する感情パラメータ蓄積ルールによる効果が得られるかどうかを確かめるための実験を行った．
評価実験1に用いた同じシナリオ文（5種類，合計1774文）と人手による解のデータを実験対象とした．
図[REF_fig:etra]は，実験システムにおいて，ある話者の感情状態（嫌悪）の時間的変化を表示させたところである．
感情パラメータ蓄積ルール適用前と，適用後の発話ごとの評価スコアの平均を比較すると（表[REF_tb:score_comp]参照），適用前が0.42で，適用後が0.47と，適用後の方が高くなっている．
また，表[REF_tb:paraHyoka]に示す通り，成功率も上がっている．
実験1で推定に失敗したような文脈を考慮する必要のある短い文からの推定に効果があったと考えられる．
一方，この評価実験において，シナリオの場面転換による時間経過を考慮しなかったため，本来ならば0になっているべき感情が推定されてしまうような誤りも見られた．
表[REF_tb:error_param]にその例を示す．
感情パラメータ蓄積ルールを適用することにより，前の発話からの感情の持続性を考慮することができ，成功率が57%から76%へと大幅に改善された．
しかし，依然として人手による正解感情と推定結果との完全一致率は低かった．
また，感情推定の成功率を上げるために，話者自身の発話による感情状態の維持に加え，直前の対話者の発言の影響を考慮する必要があると考える．
本手法の有効性を評価するために，実験用の感情推定システムを構築し，連続する会話文の感情推定実験を行った．
プロトタイプシステムの構成を図[REF_fig:structure]に示す．
システムは，大きく分けて文解析モジュール，感情推定モジュール，感情文蓄積モジュール，推定結果比較モジュールの4つの部分からなる．
入力された発話テキストデータは文解析モジュールでCaboCha (CaboCha)により係り受け解析され，表層格の決定が行われる．
次に，感情推定モジュールで感情推定処理が行われ，感情文蓄積モジュールにおいて入力発話テキストは感情推定結果と共にデータベースに蓄積される．
その後，推定結果比較モジュールにおいて人手により付与された正解感情（人手による正解感情）との比較が行われ，各発話テキストごとの評価結果が出力される．
評価は，人が判断した話者の感情と，システムが推定した結果との比較により行った．
正解として，シナリオ会話文に正解とする感情を人手により付与したものを用いた．
今回，人手による解を作成するにあたり，システム構築と感情辞書構築に関与していない5人の学生に対して，1シナリオずつを分担して行った．
人手による解の作成者は，文脈を理解しながら割り当てられたシナリオを読み，シナリオ中の全発話に対して1発話ごとに選択候補（感情語，感情イディオムに付与された割合の高かった感情属性の上位45種類）の中から話者の生起している感情として考えられる数種類を選択する．
付与の際，選択候補中に適するものが無いと判断した場合に，新たに感情の種類を自由入力できるようにした．
また，感情が生起していないと判断したものについては「平静」を付与するように指示した．
作成者が自由入力し，追加された感情で，感情辞書中に含まれていなかったものとして，以下に示すようなものがあった．
嫌味，不思議，苛立ち，納得，同意，同情，否定，からかい，心配，満足，あわれみ，切望，緊張
対象とする文は，Webサイトから収集した連続する会話文から構成される5種類の演劇用台本から抽出したシナリオ文章（合計1774発話）である．
各シナリオについてのデータを表[REF_tb:scenario-info]に示す．
シナリオ会話文は，あらかじめ各話者の発話（ターン単位）ごとに分割しておいた．
これらの発話の単位を1発話テキストと定義した．
システムは，1発話テキストごとの推定結果として複数の感情属性を出力する．
出力結果の例を，表[REF_tb:sample]に示す．
今回，感情推定結果と，人手による正解感情とを比較することで提案手法の有効性の評価を行ったが，評価にあたり，解の作成者ごとの感情の種類の認識の差を考慮するため，感情属性の種類の大まかな分類（感情属性の大分類）を表[REF_tb:lclass]に示すように定義した．
正しいもの（人手による正解感情と完全一致）は○，完全に正しいとはいえないが，間違いではないと判断できるもの（完全には一致しないが，人手により付与された感情と同じ大分類に属するもの）は△，明らかな間違い（完全一致せず，人手による正解感情と同じ大分類にも属さないもの）であるものは×として定義した．
また，感情推定結果として1発話に何も感情属性が付与されない「無感情」については，「平静」と同じ大分類に属するものとして評価を行うことにした．
表[REF_tb:result1]に，実験の結果得られた感情属性ごとの評価結果を示す．
表[REF_tb:result1]中の合計は，すべての発話において付与された感情属性の数を示す．
また，それぞれの評価ラベルに対し，○(1.0),△(0.5),×(0.0)と重み付けを行い，各文の平均値を評価スコアとして算出した．
評価スコアの算出方法を，式[REF_eq:score]に示す．
[MATH]は，各評価ラベルに対する重みを表す．
また，[MATH]はその発話文の推定結果として出力された（値が0より大きい）感情属性の数を表す．
評価スコアが0.5以上と判定されたものを正しく感情属性が付与された発話テキストとみなし，正解文として集計した結果，該当する文は1006文であり，全体の約57%であった．
評価スコアの詳細を表[REF_tb:result2]に示す．
また，シナリオの種類ごとの成功率を表[REF_tb:result3]に示す．
ここでは，評価実験の結果，感情生起事象文型パターンに当てはまらず，推定誤りとなった発話テキストについてその原因を考察し，対処方法について述べる．
推定誤りの原因の内訳を表[REF_tb:error_rate]に示す．
複数の原因が考えられる場合には，考えられる全ての原因を付与する．
また，誤り原因の解析は，失敗とみなした発話テキスト（評価スコアが0.5より小さかったもの）に対して行った．
以下，それぞれの原因による推定誤りの例を示し，感情推定結果との比較を行う．
文脈による誤り例
「それは，ちょっと．
」
（推定感情）：“無感情”
（人手による正解感情）：“ためらい”
（誤り原因）：文脈によるものに加え，文末要素が副詞になっており，述語が省略された形になっているため．
述語には，否定的な言葉が当てはまると思われる．
{文脈}話者(Y)「じゃあ，電話で言う．
」
話者(S)「いやぁ．
電話はどうだろう．
」
話者(Y)「そう．
じゃあメールで．
」
話者(S)「それは，ちょっと．
」
「全く．
」
（推定感情）：“無感情”
（人手による正解感情）：“あきれ”
（誤り原因）：文脈によって，「全く」の後に続く語が限定される．
この場合，「全く」の後には相手を非難する言葉が続くと思われる．
（相手に呆れてしまい，その先の言葉に詰まる状況）
{文脈}話者(M)  「嫌なら他の人に頼みなさいよ．
」
話者(F)  「そりゃちょっと気が引ける…」
話者(M)  「私ならいいわけ？」
話者(F)  「もう習慣みたいなもんだから．
」
話者(M)  「全く．
」
「そのたんびに母親に怒鳴られていたよ．
」
（推定感情）：“怒り”
（人手による正解感情）：“愛”かつ“受容”
（誤り原因）：文脈からは，同年代の子供達に，愛する自分の息子について楽しそうに話す話者の心情がうかがえる．
「母親に怒鳴られる」という事象のみからでは推定が不可能．
{文脈}話者(M)「…ほら，これがうちの子．
浩っていうんだ．
汚い格好だろう？いつもこうなんだ．
隣の家へ行っては，自分より小さな子を泣かして帰ってきたり，どこへ遊びに行ってたのやら，体中泥だらけにして帰ってきたりな．
そのたんびに母親に怒鳴られていたよ．
」
「顔くらい，いーだろ．
」
（推定感情）：“受容”
（人手による正解感情）：“不平不満”かつ“嫌悪”
（誤り原因）：文脈からは，相手の怒りを受けての発言であることが分かる．
{文脈}話者(M)「何すんのよ！ヘンタイ！」
話者(F)「そりゃねーだろ．
お化けの次はヘンタイかよ．
」
話者(M)「女の子に触っていいと思ってんの！」
話者(F)「顔くらい，いーだろ．
」
「おかしいなあ．
」
（推定感情）：“楽しみ”かつ“喜び”
（人手による正解感情）：“不安”かつ“不審”
（誤り原因）：「おかしい」の意味を，「違和感がある」という意味でなく，「可笑しい」ととってしまったため．
「おかしい」の意味を判定するには，文脈の考慮が必要．
{文脈}話者(A)「おい！！あれ！！」
話者(B)「ちょうどいいところに来たな．
」
話者(C)「おかしいなあ．
俺，武器も一緒においてっちまったんだっけかな…？」
モダリティの未登録，照合失敗，感情生起主体の判定失敗など
「怒られたくも，叩かれたくもないでしょ？」
（推定感情）：“怒り”
（人手による正解感情）：“受容”
（誤り原因）：「〜でしょ」の未登録，主体の判定失敗（話者として判定）
（対処方法）：「〜でしょ」の登録（「受容」を生起するルール），受身形「〜られる」の判定による感情生起主体の判定．
{モダリティ，感情生起主体の判定が正しく行われる場合}
(a)問いかけのモダリティ「〜でしょ」が抽出される．
（このモダリティが受容を生起するとする）
(b)モダリティによる感情属性値ルールにより「受容」を生起．
(c)“生起主体が「怒られる」”という事象であるが，主体判定の結果「他者」と判定されればこの事象からの感情は推定されない．
(d)結果として(b)で生起した「受容」が話者感情として推定される．
「お前何そんなに怒ってんの？」
（推定感情）：“怒り”
（人手による正解感情）：“受容”
（誤り原因）：疑問の様相「〜てんの」の未登録，生起主体の判定失敗（話者として判定）
（対処方法）：生起主体判定方法の改善と「〜てんの」の登録．
「そお，そこそこ．
どんなにしっかりしていても，君もまだ子供なんだ．
笑ったり，怒ったり，泣いたり，していいんだよ．
その子と同じようにね．
」
（推定感情）：“喜び”かつ“怒り”かつ“悲しみ”
（人手による正解感情）：“受容”
（誤り原因）：「許可」を表すモダリティ「V-ていい」の抽出失敗．
「笑ったり」，「怒ったり」，「泣いたり」からそれぞれの感情属性が結果に表れたため，推定結果のような感情属性が得られてしまった．
（対処方法）：モダリティの照合方法の改善
感情語・感情イディオムの未登録
「みんな大袈裟に騒ぎ立てちゃって．
」
（推定感情）：“嫌悪”
（人手による正解感情）：“呆れ”
（誤り原因）：感情語としての「大袈裟」が未登録．
（対処方法）：「大袈裟」を感情語として登録．
{「大袈裟」が登録されている場合}表層格判定：“みんな”（ガ格），“大袈裟”（ニ格），“騒ぎ立てる”（述語）
(1)感情語として「大袈裟」に，感情属性として「呆れ」が付与される．
(2)述語「騒ぎ立てる」に，感情属性「嫌悪」が付与される．
→述語とニ格の感情属性から，「嫌悪」+「呆れ」が推定される．
実験結果より，感情語が含まれていて，主語や述語が明確な比較的単純な構造の文でも，推定が上手くいかない場合が多かった．
この原因として，文脈を受けて感情語の表す感情の程度が変化してしまうということがある．
例えば，笑い話をしている最中に，不快を表すような感情語が出現することも多く，そのような場合，単純に感情語から「感情表出発話」として話者の感情を推定してしまうことには問題がある．
会話全体のムード（雰囲気）も考慮しなければならない．
また，感情の種類によって推定数，推定成功率共にばらつきが出た．
この原因として，対象のシナリオの内容によって，感情の種類ごとに含まれる文の数に差があったということと，感情辞書に含まれる感情語やイディオムに付与されている感情属性の種類ごとの数の偏りがあることが挙げられる（図[REF_fig:emotion_dictionary]参照）．
また，感情語の表記のゆれや，感情語・感情イディオムのパターン不足による照合失敗も多かった．
このような照合失敗については，照合処理の改善と単語拡充による対応で解決できると考えている．
また，感情推定への影響が大きいモダリティの照合処理の改善とモダリティのパターン拡充も必要である．
また，今回実験に用いたシナリオには，登録されている文型パターンに一致する文がほとんど含まれていなかった．
さらに係り受け解析の出力による表層格決定の失敗も多数あった．
これらのことから，提案手法における文型パターン照合手法が話し言葉特有の表現に対応できていないことが問題であるといえる．
また，文脈による誤りが推定失敗の原因の50%を超えていたことから，これらの文から正しく感情推定を行うために，文脈を考慮した感情推定を行えるようにしなければならない．
評価実験1の結果から，単純な文からの感情推定に失敗する原因として「文脈誤り」が多かった．
したがって，対話の流れ（会話全体のムード）に応じて感情推定を行う必要がある．
そこで，各シナリオの登場人物ごとに感情状態を保持し，感情の持続性を考慮した感情パラメータ蓄積ルールを適用することにより対話全体の雰囲気を考慮することにした．
感情は，一時的なものと継続的なものの2種類に分けることができる．
一時的な感情の場合，生起した時点から発話が進むにしたがって減少し，収束していくと考えられる．
一方，継続的な感情は，対話中にほとんど減少しないと考えられる．
感情の種類について述べている[CITE]によると，感情を継続性と対人性の観点から分類すると，表[REF_tb:emotion_category]のようになる．
したがって，継続的感情は，発話の進行に影響されず感情状態が維持させる．
また，一時的感情は発話の進行に伴い，1発話テキストにおける感情パラメータの合成時と同様に，同じ対話中の過去に生起した感情を忘却曲線の近似式によって減衰させ，最新の感情パラメータに足し合わせる．
また，対話が終了するまで継続的感情を蓄積し続けることにより，後に生起した感情よりも強度が大きくなってしまうことを避けるため，継続的感情と一時的感情とで減少の割合を変更することで対処する．
具体的には継続的感情は一時的感情よりも減少率を低くする．
この感情の持続性を考慮したルールを感情パラメータ蓄積ルールとする．
ここで，ある発話者による2発話における感情パラメータを合成する例を示す．
対話例として，表[REF_tb:para_ex]に示すように各話者ごとの発話において感情パラメータが計算されたとする．
表中の感情パラメータは，1発話テキスト内のみで計算されたものとする．
発話は，[MATH]の順に行われたとする．
この対話中の[MATH]において，直前の発話[MATH]で計算された感情パラメータとの合成を行う．
一時的感情と継続的感情の減少の割合の比を1.5と定義し，計算を行う．
計算の過程を図[REF_fig:katei]に示す．
評価実験2として，1発話のみからでは推定が困難な場合に，直前の発話から推定された感情パラメータを利用する感情パラメータ蓄積ルールによる効果が得られるかどうかを確かめるための実験を行った．
評価実験1に用いた同じシナリオ文（5種類，合計1774文）と人手による解のデータを実験対象とした．
図[REF_fig:etra]は，実験システムにおいて，ある話者の感情状態（嫌悪）の時間的変化を表示させたところである．
感情パラメータ蓄積ルール適用前と，適用後の発話ごとの評価スコアの平均を比較すると（表[REF_tb:score_comp]参照），適用前が0.42で，適用後が0.47と，適用後の方が高くなっている．
また，表[REF_tb:paraHyoka]に示す通り，成功率も上がっている．
実験1で推定に失敗したような文脈を考慮する必要のある短い文からの推定に効果があったと考えられる．
一方，この評価実験において，シナリオの場面転換による時間経過を考慮しなかったため，本来ならば0になっているべき感情が推定されてしまうような誤りも見られた．
表[REF_tb:error_param]にその例を示す．
感情パラメータ蓄積ルールを適用することにより，前の発話からの感情の持続性を考慮することができ，成功率が57%から76%へと大幅に改善された．
しかし，依然として人手による正解感情と推定結果との完全一致率は低かった．
また，感情推定の成功率を上げるために，話者自身の発話による感情状態の維持に加え，直前の対話者の発言の影響を考慮する必要があると考える．
