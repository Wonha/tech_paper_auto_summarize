提案手法によって解析した構文・述語項構造の評価実験を行った．
各パラメータは表[REF_Table::ParameterEstimation]のリソースから最尤推定によって計算した．
これらのリソースは一度の処理で得られたものではなく，構文解析，格フレーム構築，格解析という順番で処理を行い，得られたものである．
ここにおける格解析は，シソーラスに基づく類似度を用いた格解析[CITE]である．
格フレームはウェブテキスト約5億文から自動構築したものを用い，格解析済みデータはウェブテキスト約600万文を格解析することによって得たものを用いた．
構文構造の候補としては，ルールベースの構文解析器KNPが出力するすべての候補を用いた．
構文解析実験は，ウェブテキスト675文を形態素解析器JUMANに通した結果を提案システムに入力することによって行う．
その675文には，京都テキストコーパスと同じ基準で係り受けのタグ付けを行い，これを用いて係り受けの評価を行った．
文末から2つ目までの文節以外の係り受けを評価し，その評価結果を表[REF_Table::Accuracy]に示す．
表において，「CaboCha」とは，SVMに基づく統計的構文解析器CaboChaを表し，「KNP」とは，構文解析器KNPを表しており，いずれのシステムにも同じ形態素解析結果を入力している．
係り受けの精度比較のため，「CaboCha」には「KNP」による文節区切りの結果を入力し，文節区切りも一致させている．
表[REF_Table::Accuracy]より，提案手法は「CaboCha」や「KNP」より精度がよいことがわかる．
マクネマー検定を行った結果，提案手法の精度は「CaboCha」と「KNP」より有意([MATH])に上回っていることがわかった．
また，表には，係り受けのタイプごとの精度も併せて示してある．
述語項構造と密接に関係しているのは，「体言[MATH]用言」の係り受けであり，その中で中心的なのは「係助詞句以外」である．
その精度は「KNP」と比べて1.6%向上しており，エラー率は10.9%減少している．
これより提案手法が，述語項構造に関係する係り受けの解析に有効であることがわかる．
表[REF_Table::GoodExamples]に，「KNP」では誤りになるが，提案手法によって正解になった例を挙げる．
四角形で囲まれた文節の係り先が×下線部から○下線部に変化したことを示している．
また，以下に提案手法の主な誤り原因を挙げる．
提案モデルは，語彙的な選好を強く考慮して係り受けを決定する．
しかし，解析結果が，係り受けの正解基準とずれるために，誤りとなる場合がある．
行政相談委員は，いつでも自宅でみなさんからのご相談に\qline{応じていますが，}{×}この期間中は次のところで行政相談所を\qline{開きます．
}{○}
この文において，「行政相談委員は，」の正解係り先は「開きます．
」であるが，提案手法は係り先を「応じていますが，」と解析し，誤りとなる．
「開きます．
」，「応じていますが，」のどちらも意味的には係り先として正しいと考えられるが，基準としては文末の「開きます．
」であるのでずれが生じる．
このような問題を解決するには，省略関係の正解を考慮しながら評価を行う必要がある．
KNPが出力している構文構造の候補中に，正解の構造が含まれていないことがある．
本当に，美味いコーヒーを\qline{お探しの}{○}方にオススメの\qline{サイトです．
}{×}
この文において，「コーヒーを」の正解係り先は「お探しの」であるが，「お探しの」は「コーヒーを」の係り先候補にはなっていないために解析が誤る．
「お探しの」のような体言の文節は，通常，連体修飾しか受けないためこのような扱いになっているが，この問題を解決するためにはこのような制約を緩める，より多くの候補を探索する必要がある．
提案モデルにおいて，各確率を重み付けすることは行っていない．
実際には，読点を考慮する確率と用例を生成する確率のどちらかを強く考慮するかの重みを最適化した方がよい場合があり，機械学習手法を用いてそのような最適化を行うことが考えられる．
述語項構造が正しく認識されているかを評価するために，係助詞句と被連体修飾詞の格が正しく認識できているかどうかを調べた．
ウェブテキスト215文に対して京都コーパスと同様の基準で関係タグを付与し，それと自動解析結果を比較した．
精度を表[REF_Table::CaseAccuracy]に示す．
ベースラインとは，類似度に基づく格解析手法[CITE]である．
この表より，ベースラインから大幅に改善しており，提案手法が有効であることがわかる．
解析における格フレームのカバレージを調べるために，格要素がその係り先用言の格フレームの用例になっているかどうかを調べた．
正しい係り受けのみを評価したところ，60.7%の格要素が格フレームの用例となっていた．
比較のため，新聞記事26年分の2,600万文から構築した格フレームで同様の実験を行ったところ，35.1%であった．
これより，ウェブテキスト5億文から構築した格フレームは高いカバレージをもっていることが確認された．
また，英語の統計的構文解析器において，テスト文中の2項間の依存関係が学習コーパス中に存在する割合が約1.5%であるという報告がある[CITE]．
言語・リソースの違いがあるので直接の比較はできないが，格フレームのカバレージは非常に高いと思われる．
