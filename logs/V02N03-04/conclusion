考察

  本論文の実験により，述語型定型表現には少なくとも２つの種類が
あることが分かる．それは動詞が名詞を引っ張っているものと
名詞が動詞を引っ張っているものである．慣用表現を機械処理する場合には，
その慣用表現の情報を構成語のどの単語の辞書情報に記述するかという
中心語の問題がある．
本手法はその１つの対処方法を示している．つまり引っ張っている方の
単語を中心語とすれば良い．この場合，
慣用表現のチェックが少なくてすむために，
解析の効率化も図れるはずである．

  99 種類を取り出した実験では，
本手法のみに現れる慣用表現は16種類，
相互情報量のみに現れる慣用表現は9種類，
共通して現れる慣用表現は14種類であった．
つまり相互情報量で抽出でき，本手法では抽出できない表現も
少なからず存在する．
これは述語型定型表現には本手法で設定した
「動詞が名詞を引っ張るもの」，「名詞が動詞を引っ張るもの」，
以外に「お互いが適度に引き合っているもの」が存在していると考えられる．
これらをうまく切り分けて抽出することを今後考えたい．

定型表現を取り出す場合，接続の割合が大きな鍵になっているが，
その上に頻度をどのように反映させるかも重要な問題である．
機械処理の効率化の観点だけから見れば，接続の割合よりも
頻度の方が重要な要素である\cite{kita2}．
しかし本手法では基本的に頻度の大きさは考慮していない．
頻度の大きさを基準値に
反映させるような基準値の設定方法をいくつか試みたが，
どの結果も頻度の大きさを考えないものよりも良い結果が得られなかった．
この点も今後の課題である．
一つの方法として，
データの信頼度のようなものを設定し\cite{tamoto}，
総頻度が少ないものは信頼度が小さくなるようにし，
その信頼度を判断基準に取り込みことが考えられる．
当然，この場合も信頼度の取り込み方が本質的に問題だが，
その信頼度は抽出システムをツールとして捉えた場合に，
最終的に行なう人間の判断の際に，有効に利用できると予想している．

定型表現を機械翻訳に利用することを考えてみる．
この場合，強い共起性があっても，一般の表現と同じ規則によって
翻訳が可能であれば，その表現を抽出する意味はない．
このため機械翻訳をアプリケーションに設定しいているのなら，
対訳コーパスを用いて，一般の規則で翻訳困難な
表現を取り出すことが正当なアプローチだと思われる\cite{matsumoto}．
ただし対訳コーパスは入手の困難性，抽出手法の複雑性などから
やや現実性が低い．
単言語からの抽出であっても，
語義の違いまで推測できるようになれば，
機械翻訳で役立つ知識の抽出は可能であると予想しているので，
この点からの考察を今後深めたい．

最後に共起データついて述べる．本論文では
格助詞と動詞の間に副詞が入ったものと入らない場合とを区別なく抽出している．
通常，構成語の間に別の単語が挿入されていれば，
その表現を構成する単語間の共起の強さは弱いと考えられる．
このため共起データを収集する際に，副詞などの挿入が
おきるものに関してはマイナスのポイントを与えておき，
そのポイントを定型表現の判定に利用すべきであった．
またこのマイナスポイントは，
共起データを収集する際に取り除いた
以下のパターンの［Ａ，Ｂ，Ｅ］にも与えることができる．
\begin{center}
名詞(Ａ) + 格助詞(Ｂ) +  名詞(Ｃ) + 格助詞(Ｄ) + 動詞(Ｅ) + 句読点  
\end{center}
具体的にこのマイナスポイントをどのように利用したらよいかは
未解決だが，この点から今後の改良を行ないたい．


おわりに

本論文では述語型定型表現をコーパスから自動抽出することを目的に，
従来の相互情報量の条件を緩める方向で，
新たな名詞動詞間の共起性を測る基準を提案した．
概略，名詞，動詞のどちらかを固定して，
その単語と共起する集合内の単語にどの程度，特異な頻度になっているかの
数値を与える．この数値の上位のものを取り出すことで抽出を行う．

本手法の特徴は，名詞を固定した場合に抽出できる表現と動詞を固定した場合に
抽出できる表現にはほとんど共通のものがないが，
どちらも相互情報量による抽出程度の正解率はあるという点である．
このため本手法では，目的の抽出数の半数づつを各々の場合から
取り出せば良いために，同じ数を相互情報量を用いて
抽出する場合よりも高い正解率が得られる．

今後は動詞あるいは名詞が引っ張るタイプの定型表現の他に
両者が適度に引っ張り合うようなタイプの定型表現も抽出する
方法を考察したい．
また頻度，接続割合以外の特徴を考慮した抽出法も試みたい．


\acknowledgment

本実験の形態素解析の多くの部分で，
京都大学長尾研究室から配布された
日本語形態素解析システム JUMAN を利用させて頂きました．
JUMAN を作成された関係諸氏に感謝いたします．




\bibliographystyle{jnlpbbl}
\bibliography{jpaper}


\begin{biography}
\biotitle{略歴}
\bioauthor{新納 浩幸}{
1961年生.1985年東京工業大学理学部情報科
学科卒業.1987年同大学大学院理工学研究科情報
科学専攻修士課程終了.同年富士ゼロックス,翌年松
下電器を経て,1993年4月より茨城大学工学部シ
ステム工学科助手,現在に至る.自然言語処理の研究
に従事.情報処理学会,人工知能学会,ACL各会員.
}
\bioauthor{井佐原 均}{
1954年生.1978年京都大学工学部電気工学第
2学科卒業.1980年同大学大学院工学研究科電気
工学専攻修士課程終了.同年通商産業省電子技術総合
研究所入所.1995年より郵政省通信総合研究所関
西先端研究センター知的機能研究室長．京都大学博士（工学）．
主たる研究テーマは，自然言語処理，知識
表現，機械翻訳など．情報処理学会，日本認知科学会，人工知能学会，
ACLなど会員．
}


\bioreceived{受付}
\biorevised{再受付}
\bioaccepted{採録}

\end{biography}

