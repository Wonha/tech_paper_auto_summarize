フレーム辞書と意味役割付与コーパス

本節では，我々の実験で利用する意味タグ付き言語資源について，その特徴を
簡単に説明する．我々はFrameNet，PropBankの二つの意味役割付与コーパス
の枠組みの基で，それぞれ自動意味役割付与の実験を行う．これら
のコーパスは，図\ref{fig:semantic-corpus}のように，
フレームとその意味役割を定義したフレーム辞書と，これらが付与された実テキ
ストからなる．

\begin{figure}[b]
\begin{center}
\includegraphics{17-4ia5f3.eps}
\end{center}
\caption{意味役割付与コーパスの概要図}
\label{fig:semantic-corpus}
\end{figure}

また，役割汎化のためのコーパス外の知識としてVerbNet
を用いる．FrameNet，PropBankの意味役割とVerbNetの主題役割の対応付けに
は，SemLinkを利用する．


\subsection{FrameNet}
\label{sec:framenet}

FrameNetは，フレーム意味論\cite{fillmore1976}を基に作られた意味役割付きコー
パスである．FrameNetにおけるフレームは{\bf 意味フレーム}と呼ばれ，特定の
イベントや概念を表す．各フレームには，それを想起させる単語が複数割り当て
られている．意味役割は{\bf フレーム要素}と呼ばれ，各フレームに固有の役割
として定義されている．また，それに加えて，各役割がそのフレームの中でどの
程度重要な位置を占めるかを表す指標として，それぞれの役割に{\bf 中心性}と
呼ばれる型を割り振っている．これらは，{\bf core}，{\bf core-unexpressed}，{\bf peripheral}，
{\bf extra-thematic}の四つからなり，coreとcore-unexpressedはそのフレームの中心
的な役割を，
peripheralは周辺的な役割を，extra-thematicはフレーム外の概念から拡張され
た役割をそれぞれ表す．
FrameNetの特筆すべき特徴として，フレーム間の階層関係がある
（図~\ref{fig:frame-hierarchy}）．これは，継承，使用，起動，原因，観点，部分，先
行の七種類の有向関係によって定義されており，また，関係が定義されたフレームの意味
役割間にもそれぞれ親子関係が定義される．
一つのアノテーションは，文中の一つの想起単語とそれが想起するフレーム，及
び適切な句への意味役割タグの割り当てで構成される．
実テキストに対するアノテーションは，British National Corpusより抜き出さ
れた約$140,000$文にそれぞれ一アノテーションずつが付けられたものと，追加コー
パスに対する全文アノテーションからなり，全体で約$150,000$のアノテーショ
ンが含まれる．
我々の実験では，現時点の最新版である第$1.3$版を用いた．


\subsection{PropBank}
\label{sec:propbank}

PropBankは，Penn Treebank IIのWall Street Journal部分の全てのテキストに対
して，動詞の述語—意味役割構造を与えるコーパスである．
フレームは，図\ref{framenet-propbank}のsell.01, buy.01などのように動詞ご
とに個別に用意され，その動詞の項構造の数に応じて一動詞あたり平均$1.4$個
のフレームが作られている．
テキスト部には$112,917$アノテーションを含む．
PropBankでは，FrameNetにあるようなフレーム間の関係は定義されておらず，
各フレームは定義上独立な関係である．一方，意味役割の定義は二種類に分かれる．
一つは$0$から$5$の数字がふられた
役割({\it ARG0-5})で，
もう一つはAMタグという，全フレームに共通な付加詞的意味役割である．
{\it ARG0-5}については，図\ref{framenet-propbank}の{\it sell.01::0} (Seller)と
{\it buy.01::0} (Buyer)のように，同じ数字を持つものでも各フレームで役割
の意味が大きく異なる．
しかし，{\it ARG0}と{\it ARG1}については，{\it ARG0}が{\it Proto-Agent}，{\it ARG1}が
{\it Proto-Patient}に大まかに対応するように付けられており，それ以外の数字は動
詞に応じて多様な意味を取ることが知られてい
る~\shortcite{Palmer:05,yi-loper-palmer:2007:main}．AMタグに
は，所格を表す{\it AM-LOC}，時格を表す{\it AM-TMP}など$14$種類がある．


\subsection{VerbNet, SemLink}
\label{sec:verbnet}

VerbNet~\shortcite{kipper2000cbc}は，動詞間の統語的，意味的特徴の一
般化を目的として作られた，動詞の階層的なグループ及びそれらのグループに関
する特徴の体系的記述である．
このグループは\shortciteA{levin1993evc}の提案に拡張を加えた$470$のクラス
からなり， 各動詞がどの動詞クラスに分類されるかは，
そのクラスの動詞が持つべきいくつかの特徴を所有するか否かで決定される．
同じ動詞クラスの動詞は，その所有する項が共通であり，これらは明確に定
義された$30$種類の主題役割から選ばれる．
我々はVerbNet第$2.3$版の情報を利用して，意味役割の汎化を試み
る．

VerbNet
を利用する利点は大きく二つある．一つは，全
動詞に対して共通に定められた$30$種類の主題役割が，PropBankやFrameNetの意
味役割を適切に汎化する指標となりうることである．もう一つは，動詞グ
ループが捉える細かなレベルの統語的／意味的共通性を利用出来る点である．
我々はこれらの情報を用いた汎化手法を\ref{sec:frameNet-verbnet}節，
\ref{sec:generalization-criteria-propbank}節で提案する．


FrameNet，PropBank，VerbNetの三つはそれぞれ異なるアプローチで開発されて
いるため，VerbNetを役割汎化の指標として利用するためには，これらの意味役
割を相互に変換する必要がある．我々はこの目的のために，
\shortciteA{loper2007clr}などによって作られたSemLink\footnote{http://verbs.colorado.edu/semlink/}を利用する．
SemLinkは異なる方法論で作られた意味タグ同士を対応付ける目的で作られてお
り，その内容は図~\ref{fig:semlink}のように(A)フレーム辞書の対応と(B)事例
レベルの対応の二つの資源からなる．(A)では，FrameNet，PropBankのフレーム
が適切なVerbNetの動詞クラスと対応付けられ，また，それぞれの意味役割はそ
の動詞クラス内の主題役割と結び付けられる．
しかし，FrameNet，PropBank，VerbNetの間では，フレーム
の切り分け方が異なるため，いくつかのフレームでは，動詞クラスと
の対応が多対多となる．
そこでSemLinkでは，(B)のような事例レベルでの項構造のマッピングも同時に与
えている．
これによって資源間の方法論の差による曖昧性を解消し，各事例
のフレームと意味役割を正確な動詞クラスと主題役割に写像することを可能にしている．

\begin{figure}[b]
\begin{center}
\includegraphics{17-4ia5f4.eps}
\end{center}
\caption{SemLinkの概要図}
\label{fig:semlink}
\end{figure}

現段階（第1.1版）のSemLinkでは，この事例レベルの写像はPropBankにのみ与え
られ，FrameNetの方は，辞書レベルのマッピングのみである．FrameNetでは，こ
の辞書マップを通じて$1,726$の意味役割がVerbNetの主題役割に写像される．こ
れは，コーパス中に事例として一回以上出現する役割の$37.61\%$にあたる．
また，PropBankでは，実テキスト中の62.34\%の項構造がVerbNetの動詞クラスと
主題役割を用いたアノテーションに写像される．



意味役割分類問題
\label{sec:role-classification}

意味役割付与は複数の問題が絡み合った複雑なタスクであるため，これを
{\bf フレーム想起単語特定}（フレームを想起する単語の特定），
{\bf フレーム曖昧性解消}（想起単語が取り得るフレームのうち正しい
ものの選択），{\bf 役割句特定}（意味役割を持つ句の特定），
{\bf 役割分類}（役割句に正しい役割を割り当てる），と
いった四つの部分問題に分けて解かれることが多い．
今回我々は，これらの部分問題のうち，役割の疎データ問題が直接関係する役割分類のみを取り扱う．
これには，この部分問題における入力を正確に与え，他の処理によるエラーを極力排
除することにより，意味役割の汎化による効果を厳密かつ詳細に分析する狙いが
ある．

\begin{figure}[t]
\begin{center}
\includegraphics{17-4ia5f5.eps}
\end{center}
\caption{役割分類における入出力の例}
\label{input}
\end{figure}

本研究では，既存研究の枠組みに従い，役割分類を以下のように定義する．入
力としては，文，フレーム想起単語，フレーム，役割の候補，役割句を与え
る．出力は，それぞれの役割句に対する正しい役割の割り当てである．
図\ref{input}にFrameNet上の役割分類における具体的な入出力の例を示す．ここ
では，動詞{\it sell}から{\it Commerce\_sell}フレームが想起され，文中に三か所の
役割句が特定されている．役割の候補はフレームによって与えられる\{{\sf
Seller}, {\sf Buyer}, {\sf Goods}, {\sf Reason}, ... , {\sf Place}\}であ
り，各役割句の意味役割は，これらの役割候補の中から一つずつ選ばれる．



意味役割の汎化と役割分類モデル

\subsection{意味役割汎化の定式化}
\label{sec:define-generalization}

意味役割の汎化は，ある（言語学的）観点に基づいて，複数の意味役割の間に共通す
る性質を捉え，同じ性質を持つ役割を
同一視
する行為と言うことが出来る．
従来の意味役割の汎化は，コーパス中の意味役割ラベル
を一対一対応のとれる汎化ラベルに置き換えることで実現されてきた．
しかし，この方法では，一つの意味役割に対して一つの汎化ラベルしか与える
ことが出来ない．
一方で我々の立場は，意味役割の汎化は複数の観点から多面的に行われるべきと
いうものである．
したがって，我々は，意味役割の汎化を複数の汎化ラベルの集合で表現し，元の
意味役割はこの汎化ラベルの集合を持つという形にする．

具体的な例として，PropBankの意味役割が，{\it ARG0-5}ラベルと主題役割の二つ
の汎化ラベルで同時に汎化されることを考えてみよう．今，フレーム固有の意味
役割としてsell.01フレームの役割{\it sell.01::0} (seller)を考えると，これは，
ARGタグと主題役割を用いてそれぞれ{\it ARG0}，{\it Agent}に汎化される．
以降，異なる指標で作られたラベル同士を区別するため，各汎化ラベルを
「{\it ラベル名@指標名}」で表すことにする．
{\it sell.01::0}はこれら二つのラベルを集合として持つと考え，これを関
数$gen$を用いて，
\begin{equation}
gen(\mbox{\it sell.01::0})= \{\mbox{\it ARG0@ARG}, \mbox{{\it Agent@TR}}\}
\end{equation}
と表すことにする．実際には，これら二つの汎化ラベルは異なる汎化指標から導き
出されているものであるので，説明の簡単のため，汎化指標ごとに関数を分解し
て表す．
\begin{align}
gen_{arg}(\mbox{\it sell.01::0}) & = \{\mbox{\it ARG0@ARG}\} \label{eqn:arg}\\
gen_{tr}(\mbox{\it sell.01::0}) & = \{\mbox{{\it Agent@TR}}\} \label{eqn:thematic}\\
gen(y) & =  gen_{arg}(y) \cup gen_{tr}(y)
\end{align}


これを一般化すれば，意味役割が$n$種の汎化指標によるラベルを同時に
持つことを表現出来る．
ここで，元の意味役割全体を$R$とし，
異なる種類の汎化ラベルの集合をそれぞれ$C_1, \ldots , C_n$，これら全ての汎化ラ
ベルの集合を$C= \bigcup_{i=1}^{n}C_i$とするとき，意味役割の汎化とは，関数
\begin{align}
gen_i&: R \rightarrow\{C_i'|C_i'\subset C_i\}\\
gen&: R \rightarrow\{C'|C'\subset C\}\text{ （ただし，}gen(y) =
 \bigcup_{i}gen_i(y)\text{）}
\end{align}
を定義することである．
これら意味役割汎化のための関数をFrameNet，PropBank
の各々の分類モデルで具体的にどのように定義するかについては，
\ref{sec:generalization-criteria-framenet}節と
\ref{sec:generalization-criteria-propbank}節で述べることにする．



\subsection{役割分類モデル}

前節で述べたように，多くの既存研究が意味役割の汎化の際に取ったアプローチ
は，それぞれの意味役割をフレームから独立な少数の汎化ラベルに置き換える方
法であった．これにより，役割分類の過程は，フレーム固有の役割を推定する問
題から，これらの汎化ラベルを推定する問題へと変化した．
ここで，文$s$，フレーム想起単語$p$，フレーム$f$，役割句$x$が与えられると
き，与えられたフレームにより選択可能な意味役割の集合を$Y_f$とし，$s$，$p$，$f$，
から観測される対象役割句$x$の特徴ベクトルを${\bf x}$とする．一般的に，意味役
割分類は役割の候補$Y_f$の中から，最も適切な役割$\tilde{y}$を一つ選ぶ問題として定式化
される．
ここで，三つ組$(f,{\bf x},y)$に対して$y$のスコアを生成するモデルが
あると仮定すると，$\tilde{y}$は以下のようにして選択できる．
\begin{equation}
 \tilde{y} = \argmax_{y \in Y_f} {\rm Score}(f,\mathbf{x},y)
\label{equ:frame-specific-class}
\end{equation}
汎化ラベルを直接分類する従来の手法では，訓練データとテストデータ中の意味役割
を汎化ラベルで上書きしてきた．例えば，PropBankのある役割$y$はそのARGタグ
$arg(y)$によって汎化出来る．分類モデルは最適なARGタグ$\tilde{c}$を以
下のようにして選択する．
\begin{equation}
\tilde{c} = \argmax_{c \in \{arg(y)|y \in Y_f\}} {\rm Score}_{arg}(f,\mathbf{x},c)
\end{equation}
ここで，${\rm Score}_{arg}(f,\mathbf{x},c)$は$f$と$\mathbf{x}$に関する汎化ラベル$c$の
スコアを与える．既存の多くのシステムは，このモデルを達成するために線形或
いは対数線形のスコアモデルを採用し，特徴関数は${\bf x}$の要素と$c$の可能なペアに
対する指示関数として設計された．
\begin{align}
& {\rm Score}_{arg}(f,\mathbf{x},c) =
	\sum_{i}\lambda_{i}g_i(\mathbf{x},c)\\
& g_1(\mathbf{x},c) = 
  \begin{cases}
   1 & (\mbox{head of }x\mbox{ is ``he''}~\wedge
   c = \mbox{{\it ARG0@ARG}})\\
   0 & (\mbox{otherwise})
  \end{cases}
\end{align} 
ここで，$G=\{g_1,\ldots,g_m\}$は$m$個の特徴関数，
$\Lambda=\{\lambda_1,\ldots,\lambda_m\}$は$G$に関する重みベクトルを表す．
$\tilde{y}$は少なくとも一つ，かつ唯一の役割$y\in Y_f$が$\tilde{c}$に対
応付けられているときに一意に決定される．従来の汎化指標の比較研究に
も，このラベルの置き換えによる手法が用いられてきた
\shortcite{loper2007clr,yi-loper-palmer:2007:main,zapirain-agirre-marquez:2008:ACLMain}．

我々は，この手法とは対照に，フレーム固有の役割を直接推定するモデル（式
\ref{equ:frame-specific-class}）を採用する．その上で，$y$に関する汎化ラ
ベル集合$gen(y)$を意味役割$y$の特徴として利用する．
\begin{equation}
 g_1(\mathbf{x},y) = 
  \begin{cases}
   1 & (\mbox{head of }x\mbox{ is ``he''}~\wedge 
      \mbox{{\it ARG0@ARG}} \in gen(y))\\
   0 & (\mbox{otherwise})
  \end{cases}
\label{equ:generalized-label-feature-arg0}
\end{equation} 
式\ref{equ:generalized-label-feature-arg0}では，特徴関数が
$gen$の値に{\it ARG0}が含まれるかを調べることにより，役割$y$が
{\it ARG0}ラベルによって汎化されるかどうかをテストしている．
このように関数$gen$を特徴関数の条件部に用いることによって，
複数の汎化ラベルを同時に扱うモデルの設計が可能になる．例えば，式
\ref{equ:generalized-label-feature-arg0}と同様にして，同じモデルに主題役
割をチェックする特徴関数を導入することも出来る．
\begin{equation}
 g_2(\mathbf{x},y) = 
  \begin{cases}
   1 & (\mbox{head of }x\mbox{ is ``he''}~\wedge 
      \mbox{{\it Agent@TR}} \in gen(y))\\
   0 & (\mbox{otherwise})
  \end{cases}
\label{equ:generalized-label-feature-agent}
\end{equation}

このアプローチの利点は，一つの役割が複数の汎化ラベルを持つことを考える場
合はもちろんの
こと，同一フレーム中の複数の意味役割が一つの汎化ラベルに写像される場合にも，
より自然な汎化の方法となっていることである．例え
ば，\ref{sec:selectional-restriction}節で説明する選択制限を用いた汎
化では，同一フレーム内の複数の役割が同じ選択制限のラベルを持つことが
ありうるが，従来の置き換え法を用いて
このラベルが推定されると，汎化ラベルを元の意味役割に復元でき
ない．一方で，我々の方法は，複数の汎化指標を用いて元の意味役割を直接推
定する方式のため，このような問題が起こらない．
また，もう一つの利点は，異なる種類の汎化ラベルを混合する際に，それぞ
れのラベルに対する重みが，$\Lambda$の値を通じて学習により自動的に決定
されるという点にある．したがって，このモデルでは，我々が事前にどの汎化指標
が効果的かどう
かを検討する必要がなく，学習プロセスに適切な重みを選ばせればよい．

我々はスコアとして，最大エントロピー法を用いて求める条件付き確率
$P(y|f,\mathbf{x})$を利用する．
\begin{equation}
{\rm Score}(f,\mathbf{x},y) = P(y|f,\mathbf{x}) =
  \frac{\exp(\sum_{i}\lambda_{i}g_i(\mathbf{x},y))}{\sum_{y\in
  Y_f}\exp(\sum_{i}\lambda_{i}g_i(\mathbf{x},y))}
\label{eqn:probability}
\end{equation}
特徴関数の集合$G$には，利用する汎化ラベルの集合$C$に含まれる全てのラベル
と${\bf x}$の要素の可能な組に対応する関数を全て含める．
特徴関数の最適な重み$\Lambda$は最大事後確率(MAP)推定によって
求める．我々はLimited-memory BFGS (L-BFGS)法\cite{nocedal1980}を用い
て学習データの対数尤度を$L_2$正則化のもとで最大化する．
パラメータ推定には，
classias\footnote{http://www.chokkan.org/software/classias/}を用いた．



FrameNetにおける複数の汎化手法
\label{sec:generalization-criteria-framenet}

本節では，FrameNet
における
役割の汎化指標について説明する．
FrameNetでは，フレーム間の階層関係が定義されているため，この構造をう
まく利用した汎化ラベルの設計を目指す．また，役割の名前（記
述子），項の意味型，VerbNetの主題役割を指標とした，異なる性質の汎化ラベル
も設計する．以下では，我々の提案する汎化指標について，それぞれのどのように関数
$gen$を定義するかを説明する．\ref{sec:experiment-in-framenet}節では，こ
れらについての比較実験を行い，効果の詳細な分析を行う．
なお，階層関係と記述子を利用した汎化では，FrameNetの意味役割
ラベルを利用して粒度の細かいラベルを作成するため，その全体
像が掴みにづらいかもしれない．その際は，実際の意味役割ラ
ベルと階層関係のデータ\footnote{http://framenet.icsi.berkeley.edu/FrameGrapher/  ただ
し，データはFrameNetの最新版によるものであるため，我々の利用する正確な
データはFrameNet第$1.3$版を参照のこと．}
を適時参照して頂きたい．


\subsection{役割間の階層関係}

この指標は，\ref{sec:framenet}で説明したフレーム階層上の七種類の有向関係を利用して，
役割間に共通する性質を取り出す指標である．各フレームの意味役割のうちの幾つかは，
フレーム間の親子関係を通して，他フレームの役割と有向関係で結ばれて
いる．役割間の関係を用いた汎化指標の基本的なアイデアは，下位概念にあたる
役割が，その上位概念にあたる役割の性質を引き継いでいる，という仮定である．
例えば，{\it Commerce\_buy}フレームの役割{\it Buyer}は{\it Getting}フレー
ムの役割{\it Recipient}の性質を継承しており，また，{\it Killing}フレーム
の{\it Victim}と{\it Death}フレームの{\it Protagonist}は「死ぬもの」という個
体の性質を持っている．

\begin{figure}[t]
\begin{minipage}{242pt}
\begin{center}
\includegraphics{17-4ia5f6.eps}
\end{center}
\caption{$gen_{hier}$を定義するアルゴリズム}
\label{fig:hier-algorithm}
\end{minipage}
\hfill
\begin{minipage}{170pt}
\begin{center}
\includegraphics{17-4ia5f7.eps}
\end{center}
\caption{階層関係を辿る方向}
\label{fig:hier-figure}
\end{minipage}
\end{figure}

役割間の関係を用いた汎化関数$gen_{hr}$は図\ref{fig:hier-algorithm}のアル
ゴリズムで定義する．
$gen_{hr}(y)$は役割$y$から階層関係を辿りながら，各ノード$z$に対応する汎
化ラベル{\it z@HR}を収集する．
この際，
(A)継承，利用，観点，部分の四つの関係に関しては，親方向に階層を辿り，
(B)起動，原因の関係については子方向に辿る．
これは，(A)のグループでは，子孫の意味役割が祖先の性質と同じかこれを詳細化し
た性質を持っており，
(B)のグループでは，子孫の役割がより中立的な立場や，結果の状態を表すからである．
先行関係は，状態とイベントの遷移系列を表す関係であり，役割の性質の包含関係を単
純には特定できなかったため，親と子のどちらの方向に辿るかは実験結果を踏まえ
て決定することにする（実験は\ref{sec:compare-hierarchical-relation}節を参照のこと）．
アルゴリズムは，図\ref{fig:hier-figure}のように，一度進んだ方向から逆戻
りする方向のラベルは出力しない．また，階層を辿る深さの影響を観察するため，深さ1の親子関係でた
どれるラベルしか含めない$gen_{hr\_depth1}$と，子孫，先祖を全て辿る
$gen_{hr\_all}$の二つの関数を作成した．実験ではこれらの性能差も比較する．


\subsection{役割の記述子}
\label{role-label}

FrameNetの意味役割は各フレーム固有の役割であり，異なるフレーム間に同じ識
別IDの役割は存在しない．しかし，それらには専門家によって付けられた
{\it Buyer}，{\it Seller}などの人間に意味解釈可能な簡潔な名前がついている．
我々はこの簡潔な名前を役割の{\bf 記述子}と呼ぶことにする．
これらの記述子は，ある程度体系立てて付けられており，異なるフレームの異な
る意味役割が共通の記述子を持つ場合も多くある．例えば，記述子{\it
Seller}は{\it Commerce\_sell::Seller}，{\it Commerce\_buy::Seller}，{\it
Commerce\_pay::Seller}などで共有されている．
この記述子の汎化指標としての有効性を評価するために，これを汎
化ラベルとして利用する．

この指標による汎化関数$gen_{desc}$は，役割$y$の記述子をメンバとして
返す関数として定義する．例えば，役割{\it Commerce\_buy::Buyer}の記述
子ラベルを$Buyer@Desc$とすれば，その値は
$gen_{desc}(\mbox{\it Commerce\_buy::Buyer}) = \{\mbox{\it Buyer@Desc}\}$となる．
記述子は各役割を一つの語彙で説明しているため，この汎化指標は語彙的特
徴が類似する役割を効果的に集めるかもしれない．また，この方法で得られた汎化ラベ
ルは
役割の同値類関係を表現しており，階層関係によるラベルとは異なる構造を持っている．
例えば，図~\ref{fig:descriptor-example}の(a)，(b)
のような階層関係がある場合，(a)の{\it Commerce\_goods-transfer::Seller}，
{\it Commerce\_sell::Seller}，
{\it Commerce\_buy::Seller}は階層関係，記述子どちらによっても一つのラベ
ルに纏め上げられるが，一方，(b)の{\it
Giving::Donor} （物の提供者），{\it Commerce\_sell::Seller} （販売物の提供者），{\it
Commerce\_pay::Buyer} （対価の提供者）では，各役割の間に
「提供者」という意味の類似があるが，記述子を用いた汎化の場合には，それぞ
れの役割が異なる汎化ラベルを持つことになる．


\subsection{意味型}
\label{semanticType}

\begin{figure}[b]
\begin{center}
\includegraphics{17-4ia5f8.eps}
\end{center}
\caption{役割の階層関係と記述子による汎化の相違点}
\label{fig:descriptor-example}
\end{figure}
\begin{figure}[b]
\begin{center}
\includegraphics{17-4ia5f9.eps}
\end{center}
\caption{FrameNetで役割に対して利用される意味型のリスト}
\label{fig:semantictype-list}
\end{figure}


FrameNetでは，多くの役割に{\bf 意味型}と呼ばれる型を割り当て，選択制限
に類似した情報を提供している．これは，図~\ref{fig:semantictype-list}に列挙
したようなカテゴリから成り，意味役割を埋める句の意味的な傾向を表す．
例えば，役割{\it Self\_motion::Area}は意味型が{\it
Location}であり，これは，この役割が場所を意味する句で埋められる傾向にあ
ることを表す．この情報は意味役割を句の特性の観点から粗くカテゴリ化し
ており，特に役割候補句の語彙の特徴と結びついて役割分類に強く貢献する
と期待できる事から，我々は意味型を汎化ラベルとして用い，その有用性を検
証する．

汎化関数$gen_{st}$は役割$y$の意味型を要素に持
つ集合を返すように定義する．例えば，役割{\it Self\_motion::Area}の場合，
$gen_{st}(\mbox{\it Self\_motion::Area})=\{\mbox{\it Location@ST}\}$となる．


\subsection{VerbNetの主題役割}
\label{sec:frameNet-verbnet}

\begin{figure}[t]
\begin{center}
\includegraphics{17-4ia5f10.eps}
\end{center}
\caption{VerbNetの主題役割}
\label{fig:thematic-role-list}
\end{figure}

VerbNetの主題役割は，図~\ref{fig:thematic-role-list}に挙げる
ような，動詞の項に付けられた$30$種類の粗い意味分類である．
この$30$種のラベルは，全ての動詞に対して一貫性のある，フレーム
横断的なラベルである．我々はSemLinkを用いて
FrameNetの意味役割をVerbNetの主題役割にマッピングし，これを
汎化ラベルとして導入する．
\ref{sec:verbnet}節で説明したとおり，FrameNetの意味役割とVerbNetの主題役
割は一般に多対多の対応であるが，
現時点のSemLinkではFrameNetの各事例に主題役割が個別に付与されて
おらず，単純な方法で意味役割と主題役割の一対一対応を取ることが出来ない．し
たがって，ある意味役割から主題役割への写像が複数考えられるときには，
汎化関数$gen_{tr}$はこれらの主題役割を全て含む集合を返すことにする．
例えば，役割{\it Getting::Theme}の場合，各事例が対応付けられる動詞クラスに応
じて，{\it Theme@TR}，{\it Topic@TR}の二つの主題役割ラベルが考えられるため，
$gen_{tr}(\mbox{\it Getting::Theme})=\{\mbox{\it Theme@TR}, \mbox{\it Topic@TR}\}$となる．


PropBankにおける汎化手法
\label{sec:generalization-criteria-propbank}

本節では，PropBankにおける汎化手法について述べる．
我々は，従来用いられてきた指標であるARGタグ，主題役割に加えて，
新たに三つの汎化指標を提案する．これらは，VerbNetの動詞クラス，選択
制限，意味述語にそれぞれ基づく．

ARGタグ，主題役割は，どちらも$6$種類，$30$種類の少数のラベルセット
であり，これらを用いた意味役割の分類は，非常に粗いものだと言える．しか
し実際には，意味役割は各動詞に応じて多様な振る舞いを見
せるため，より細かな粒度での汎化が必要と考えられる．
そこで我々は，より頑健な役割分類を目的として，$30$種類の主題役割をより統
語的，意味的に詳細化された汎化ラベルへ分割し，これらの細かい粒度の汎化
ラベルによる効果を検証することにする．

なお，新たに提案する細粒度の汎化ラベルの全貌については，
VerbNet第$2.3$版の実際のデータ\footnote{簡単にデータを閲覧可能な場所とし
て，VerbNetプロジェクトのWebサイトがある．動詞クラスの一覧については
http://verbs.colorado.edu/verb-index/vn/class-h.php，
その他の情報のリストについては
http://verbs.colorado.edu/verb-index/vn/reference.phpを参照のこと． ただ
し，データはVerbNetの最新版に対するものであるため，我々の利用する正確な
データはVerbNet第$2.3$版を参照頂きたい．}を，適時参照を願いたい．


\subsection{タスク設定とモデルの拡張}

以下で説明する汎化手法では，SemLinkによって得られる各アノテーションの動
詞クラスと主題役割を利用しているため，これらについて詳しく説
明をしておく．

\ref{sec:verbnet}節で述べた通り，
PropBankでは，SemLinkに基づくVerbNetとの事例レベルの正確なマッピングに
より，各アノテーションの適切な主題役割と対象動詞の動詞クラスを得ることが
出来る．そこで，本研究では，
訓練時，評価時に，各アノテーションの意味役割と主題役割のどちらの情報も用いるこ
とができるものとする．
また，役割分類の入力には，対象動詞に対する正しい動詞クラスも与えるもの
とする．


VerbNetにおける動詞クラスは，PropBankで言うところのフレームに相当するもの
であり，意味役割付与システムの実際の運用時には，これらのフレームや動詞ク
ラスを自動的に判定する必要がある．
しかし，\ref{sec:role-classification}節でも述べた通り，我々の実験において
は，意味役割の汎化が分類精度にもたらす効果を正確に検証することを目的とし
ているため，フレームと動詞クラスの両方を入力として正しく与える
ことにする．
また，このような設定にすることによって，式\ref{eqn:probability}の中の全
役割候補$Y_f$に対して，ARGタグと主題役割の両方を一意に与えることができる
ため，ARGタグを用いた役割分類と，主題役割を用いた分類を，同じ候補の中か
ら最適な一つを選ぶ，という等価な問題として比較することが出来る
（図\ref{fig:arg-thematic-mapping}）．

\begin{figure}[t]
\begin{center}
\includegraphics{17-4ia5f11.eps}
\end{center}
\hangcaption{フレームと動詞クラスが与えられた場合の分類問題．この設定に
 おいては，意味役割，ARGタグ，主題役割の三つのラベル間で全て一対一対応を取
 る事が出来るため，これらをそれぞれ独立に用いた分類モデルを考えた場合，各
 モデルは同じ候補の中から最適な一つを選ぶ，という等価な問題に帰着される．}
\label{fig:arg-thematic-mapping}
\end{figure}


以降で提案する汎化指標は，そのどれもが動詞クラスの情報を利用してラベルを
生成するものである．したがって，汎化のための関数$gen$，$gen_{i}$についても，
意味役割$y$と動詞クラス$v$の二つを引数に取るように拡張する．
これに伴い，式\ref{eqn:probability}は$v$の入る形で拡張され，
\begin{equation}
P(y|f,v,\mathbf{x}) =
  \frac{\exp(\sum_{i}\lambda_{i}g_i(\mathbf{x},y,v))}{\sum_{y\in
  Y_f}\exp(\sum_{i}\lambda_{i}g_i(\mathbf{x},y,v))}
\label{eqn:probability2}
\end{equation}
となり，式\ref{equ:generalized-label-feature-agent}も次のようになる．
\begin{equation}
 g_2(\mathbf{x},y,v) = 
  \begin{cases}
   1 & (\mbox{head of }x\mbox{ is ``he''}~\wedge 
      \mbox{\it Agent@TR} \in gen(y,v))\\
   0 & (\mbox{otherwise})
  \end{cases}
\end{equation} 


\subsection{ARGタグ，主題役割}

ARGタグと主題役割については，\ref{sec:define-generalization}節の式
\ref{eqn:arg}，式\ref{eqn:thematic}で示したように，各意味役割のARGタグや主
題役割を返すように$gen_{arg}$，$gen_{tr}$を設計する．ただし，ここでの主
題役割は，SemLinkによって一意に与えられた正しいラベルである．
例えば，図\ref{fig:arg-thematic-mapping}のような対応が与えられているならば，
この事例において，各関数は以下の値を返す．
\begin{align}
gen_{arg}(\mbox{\it buy.01::0}, \mbox{ {\it get-13.5.1}}) & = \{\mbox{\it ARG0@ARG}\}\\
gen_{tr}(\mbox{\it buy.01::0}, \mbox{ {\it get-13.5.1}}) & = \{\mbox{\it Agent@TR}\}
\end{align}


\subsection{主題役割＋動詞クラス}

VerbNetは，英語の動詞を統語的，意味的に一貫性を持った$470$の階層的なク
ラスに分類した言語資源である．
動詞クラスには，所属する動詞の統語的振る舞いの一貫性を保証するなど
の特徴があるため，このクラスの分類は，主題役割を適切に詳細化するための情報
となりうる．
例えば，主題役割{\it Patient}は，一般的に目的語や前置詞句としてしか現れな
いが，クラスcooking-45.3の動詞では主語として現れることがある，という細か
な情報を，動詞クラスを用いることで各主題役割に付加することが出来る．
したがって，我々は新しい汎化関数として，対象事例における動詞クラス$v$
と主題役割$t$の組を返すような$gen_{vc}$を定義する．
\begin{equation}
gen_{vc}(y,v) = \{\langle t, v\rangle@VC\}.
\end{equation}
特徴関数はこの二つ組によるラベルをチェックする形で定義する．
\begin{equation}
 g_3(\mathbf{x},y,v) = 
  \begin{cases}
   1 & (\mbox{head of }x\mbox{ is ``he''}~\wedge 
   \langle\mbox{{\it Patient}},\mbox{ {\it cooking-45.3}}\rangle@VC \in gen(y,v) )\\
   0 & (\mbox{otherwise})
  \end{cases}
\end{equation}


\subsection{選択制限}
\label{sec:selectional-restriction}

\begin{figure}[b]
\begin{center}
\includegraphics{17-4ia5f12.eps}
\end{center}
\caption{VerbNetにおける選択制限のカテゴリ}
\label{fig:selectional-restriction-list}
\end{figure}

VerbNetは各動詞クラスの主題役割にそれぞれ選択制限の情報を付与している．
FrameNetの意味型の場合と同様に，この情報は意味的な類似性のある役割をグルー
プ化するのに役立つと期待される．
VerbNetでは，選択制限は正負を持った$36$種類の意味カテゴリ（図~\ref{fig:selectional-restriction-list}）を用いた
命題論理で表現される．例えば，クラス{\it give-13.1}の主題役割{\it Agent}
の選択制限は{\it +animate} $\vee$ {\it +organization}のように与えられる．
我々はこれらの命題を役割の汎化ラベルとして利用する．
$gen_{sr}$は動詞クラス$v$における主題役割$t$の選択制限を返す関数として定
義する．
\begin{equation}
gen_{sr}(\mbox{give.01::0},\mbox{ {\it give-13.1}}) = \{ \mbox{({\it +animate}}\vee\mbox{{\it
 +organization})}@SR \}.
\end{equation}


\subsection{主題役割＋意味述語}

VerbNetでは，各動詞クラスにいくつかの例文が記述されているが，これら
の例文には，意味述語と呼ばれる述語表現の組み合わせを用いて，文の意味が表
現されている．
例えば，クラス{\it give-13.1-1}の例文
``I leased the car to my friend for \$5 a month.''
には，\\
$has\_possession(start(E), Agent, Theme)$，$has\_possession(end(E),
Recipient, Theme)$，\\
$has\_possession(start(E), Recipient, Asset)$，
$has\_possession(end(E), Agent, Asset)$，\\
$transfer(during(E), Theme)$
の五つの意味述語が含まれる．この種の分解された意味表現は，各フレームが持
つ役割の意味的性質を細かい粒度で共有することを可能にする．例えば，イベン
ト終了時に対価を持つ{\it Agent}にあたる意味役割は，
図\ref{fig:agent-of-possessing-asset}のように，各動詞クラスの例文中から述語表現
$s_1 = has\_possession(end(E), Agent, Asset)$を探すことでグループ化出来る
\footnote{図\ref{fig:agent-of-possessing-asset}では分かりやすさのために
フレーム固有の役割名で表記したが，実際には，PropBankの意味役割は動詞クラ
スの特定によって主題役割へ写像されるため，意味述語で集められるものは意味
役割と動詞クラスの組である．}．


そこで我々はこの意味役割のグループをタプル$\langle {\it
Agent},s_1\rangle$で表し，汎化ラベルとして利用する．
ここで，ある事例における役割$y$の主題役割を$t$とすれば，
関数$gen_{sp}$は動詞クラス$v$の例文から得られる意味述語のうち，引数に
$t$を
含むものを全て返す関数として定義する．例えば，{\it lease01::0}の主題役割
が$Agent$，動詞クラスが{\it give-13.1-1}だった場合は，以下のようになる．
\begin{align}
gen_{\mbox{sp}}(\mbox{lease.01::0},\mbox{ {\it give-13.1-1}}) &= \{
 \langle\mbox{{\it Agent}}, has\_possession(start(E), Agent,
 Theme)\rangle@SP,\nonumber \\
&\langle\mbox{{\it Agent}}, has\_possession(end(E), Agent, Asset)\rangle@SP \} 
\end{align}


\begin{figure}[t]
\begin{center}
\includegraphics{17-4ia5f13.eps}
\end{center}
\caption{意味述語\textit{has\_possession}(\textit{end}(\textit{E}),\textit{Agent,Asset})を持つAgentにあたる役割}
\label{fig:agent-of-possessing-asset}
\end{figure}


