\section{評価実験}
\label{sec:Evaluation}

前節で述べた方針によるコーパスへの構文構造の付与の
有用性を確認するため，コーパスから抽出した文法を用いて，
以下の2点について評価実験を行った．
\begin{enumerate}
\item 構文解析結果の曖昧性がどの程度抑えられているか
\item どの程度の構文解析精度が得られるか
\end{enumerate}
(1)の評価実験は本研究の目的そのものであるが，
曖昧性が抑えられていても，解析精度が低ければ問題であるので，
(2)の評価実験も必要である．

\subsection{文法，コーパスの構文構造の変更}

まず，付録\ref{sec:Corpus}節で述べたコーパス8911文(平均20形態素)に対し，
我々の方針に従って
構文構造付きコーパス作成支援ツール\cite{okazaki:2001}で
構文構造を変更した
\footnote{変更前のコーパスは約2万文あるが，
8911文しか変更していないので，それに対応する文だけを
変更前のコーパスから抜き出し，実験に使用する．}．
具体的には，以下の手順で変更を行っている．
\begin{enumerate}
\item 我々の変更方針に従って文法を人手で変更．
\item MSLRパーザ\cite{shirai:00}でコーパス中の文を構文解析し，
  構文解析結果の集合(統語圧縮共有森，
  packed-shared forest\cite{tomita:86})を獲得．
\item コーパス作成支援ツールで，構文解析結果の集合を絞り込み，
  最終的に1つの正しい構文構造を選択．
\end{enumerate}
手順(3)で使用するコーパス支援ツールは，
解析結果を1つずつ表示させながら正しい構文構造を選択するためのものではなく，
非終端記号名や特定の句の係り先を，
正しい構文構造が満たすべき制約として，作業者が順々に与え，
それを満たさない候補を排除しながら正しい構文構造を残すためのものである．
制約は，構文構造が曖昧な箇所(制約の教示を必要とする非終端記号や
係り受け)をマウスで選択し，表示される選択肢から正しい候補を
選択することで与える．
作業は，100文をラベル付けするのに約3時間かかり，
4人でこの約9000文をラベル付けするのに約1ヶ月かかった
\footnote{4人のうち3人は変更方針の検討に直接は関わっておらず，
ラベル付け前に我々(方針作成者)がその説明を行ったが，
作業者が方針を理解し，本格的にラベル付けを開始できるまでに
(作業期間の1ヶ月の他に)1，2週間かかった．}．

\subsection{構文解析結果の曖昧性の変化}

変更前，変更後のコーパス全8911文からそれぞれ文法を抽出し
\footnote{\cite{charniak:96}のようにコーパス出現頻度の
低い文法規則を削除することはせず，全文法規則を利用する．}
(以降，変更前，変更後のコーパスから抽出した文法を，
それぞれ「変更前の文法」，「変更後の文法」と呼ぶ)，
MSLRパーザで構文解析を行った
\footnote{MSLRパーザは形態素解析と構文解析を同時に行うものであるが，
品詞列を入力とすることで構文解析のみを行うことができる．
今回は，品詞列を入力とし，形態素解析は終了しているものとしている．}．
変更前，変更後の文法による構文解析結果の数を
表\ref{tab:result_ambiguity}に示す．
我々のコーパスの変更方針により，文法規則数は約250個増加しているが，
構文解析結果の数は$10^{12}$オーダから$10^5$オーダに減少した
\footnote{今回の我々の方針では品詞レベルの変更は考慮しておらず，
非終端記号の数の変化はない．}．

\begin{table}[tp]
  \centering
  \caption{変更前，変更後の文法による構文解析結果の数}
  \label{tab:result_ambiguity}
  \begin{tabular}{|c|r|r|r|r|}\hline
    & \multicolumn{1}{|c|}{文法規則数}
    & \multicolumn{1}{|c|}{非終端記号数}
    & \multicolumn{1}{|c|}{終端記号数}
    & \multicolumn{1}{|c|}{構文解析結果数} \\\hline
    変更前 & 1,694 & 249 & 600 & $1.868 \times 10^{12}$ \\\hline
    変更後 & 1,949 & 279 & 600 & $9.355 \times 10^5$ \\\hline
  \end{tabular}
\end{table}

白井らの手法では，EDRコーパス約188,000文から抽出した文法で
1文あたり$10^9$オーダの解析木が出力される\cite{shirai:97}．
文法抽出に使用した文の数に大きな差があるため公平な比較にはならないが，
白井らの文法に比べて曖昧性が減少している主な要因として，
以下の3つが考えられる．
\begin{description}
\item[連体修飾句と連用修飾句の区別: ]
  白井らの文法では，連体修飾句か連用修飾句かを区別するための
  ラベルが付与されていない．これは，第\ref{sec:Problem}節で
  挙げた曖昧性を増大させる要因の3番目にあたる．
  この問題は第\ref{sec:Problem}節で挙げた用言の活用形の問題だけでなく，
  後置詞句でも同様に起こり得る．
  EDRコーパスでは，「が」，「を」等と「の」を区別せず，
  すべて「助詞」としているので，白井らの文法では
  これらの助詞が末尾に現れる句はすべて「後置詞句」となり，
  連体修飾句か連用修飾句かの区別が付かなくなる．
  我々の文法では，「\underline{東京へ}行く」のように
  連用修飾句になる場合は「助詞句」，
  「\underline{東京の}人口」のように連体修飾句になる場合は
  「連体句」となるので，このような曖昧性は出ない
  \footnote{「\underline{鼻の}長い象」のように，
    「の」が末尾に出現する句が
    連用修飾句になる場合もあるので，曖昧性は残る．
    しかし，逆に，現代語において，
    他の助詞が末尾に出現する句が連体修飾句になることはほとんどない．
    「\underline{駅を}中心に発展する」のような例外もあるが，
    これは「中心に」の後に動詞「して」が省略されていると
    考えることができる．現段階では省略をCFGで扱うことを考えていないので，
    このような文は対象外とし，曖昧性を除外している．}．
\item[品詞の細分化: ]
  我々が使っているコーパスの品詞体系はEDR日本語単語辞書に基づいて
  細分化されている．例えば，白井らは名詞を細分化していないが，
  「今日，東京へ行く」の「今日」のように助詞を伴わずに
  連用修飾可能な名詞を他の名詞と区別しておかなければ，
  すべての名詞が助詞を伴わずに連用修飾することを認める
  文法規則となり，曖昧性を増大させる要因となる
  \footnote{日本語では助詞が頻繁に省略され，
    一般的な名詞であっても助詞を伴わずに連用修飾する例もあるが，
    助詞が省略されていると判断できるものは対象外としている．}．
\item[連体修飾関係と並列関係: ] 
  我々の文法では，連体修飾句の係り先の曖昧性と
  2つの句が並列関係にあるか否かの曖昧性を出さないようにしている．
  1文に含まれる連体修飾句や並列句の数はそれほど多くなく，
  先に挙げた2つの要因ほど，大きく曖昧性の削減に貢献していないが，
  構文解析での解決が困難な曖昧性を抑えることは，
  その後の意味解析においても重要なことである．
\end{description}

\subsection{構文解析精度の変化}

\begin{figure}[p]
  \centering
  \epsfxsize=.9\textwidth
  \epsfbox{Evaluation/figure/resultPGLR-close.eps}
  \caption{変更前と変更後の文法$G_{\mbox{all}}$による構文解析結果の文の正解率}
  \label{fig:result_accuracy_close}
\end{figure}

\begin{figure}[p]
  \centering
  \epsfxsize=.9\textwidth
  \epsfbox{Evaluation/figure/resultPGLR-open.eps}
  \caption{変更前と変更後の文法$G_{\mbox{train}}$による構文解析結果の文の正解率}
  \label{fig:result_accuracy_open}
\end{figure}




構文解析結果を確率一般化LR(PGLR)モデル\cite{inui:98}で
ランク付けし，解析精度を調べた
\footnote{\cite{charniak:96,shirai:97}はPCFGを用いているが，
我々はPGLRモデルを使用する．我々が行った予備実験によると，
PGLRモデルの方がPCFGよりも解析精度が高くなる．}．
ただし，8911文を10分割し，一つを評価用，残りをPGLRモデルの学習用とし，
10分割交差検定で評価を行った．
文法は全8911文から抽出したもの($G_{\mbox{all}}$)と，
学習用データのみから抽出したもの($G_{\mbox{train}}$)の
2通りを用意した．
図\ref{fig:result_accuracy_close}，図\ref{fig:result_accuracy_open}に，
上位1位から100位以内の解析結果に
ついての文の正解率を示す．ただし，文の正解率は以下のように定義される．
\[\mbox{文の正解率} = \frac{\mbox{出力した解析木の集合の中に
    正しい木が含まれる文の数}}{\mbox{解析した文の総数}} \]
ここで，「正しい木」とは，コーパスの構文構造と
完全に一致する解析木を指す．
また，文法$G_{\mbox{train}}$の被覆率，再現率を
表\ref{tab:coverage_recall}に示す．
ただし，被覆率，再現率は以下のように定義する．
\[\mbox{被覆率} = \frac{\mbox{解析した文の総数}-\mbox{解析に失敗した文
    の総数}}{\mbox{解析した文の総数}}\]
\[\mbox{再現率} = \frac{\mbox{出力されたすべての解析木の中に正しい木が存在する文数}}
{\mbox{解析した文の総数}}\]

\begin{table}[tp]
  \centering
  \caption{文法$G_{\mbox{train}}$の被覆率と再現率}
  \label{tab:coverage_recall}
  \begin{tabular}{|c|r|r|}\hline
    & \multicolumn{1}{|c|}{変更前} & \multicolumn{1}{|c|}{変更後} \\\hline
    被覆率 & 98.51\% & 97.32\% \\\hline
    再現率 & 96.63\% & 95.88\% \\\hline
  \end{tabular}
\end{table}


従来の研究では，評価尺度として括弧付けの再現率や適合率など
部分的な構造の正しさを示すものを使用することが多い．
しかし，我々は，構文解析結果の集合から
尤もらしい解析結果をいくつか選択し，
それらに対して意味解析を行うことを前提としているので，
構文解析の段階では，意図した構文構造と完全に一致している
ことが望ましい．
構文構造の部分的な正しさを示す括弧付けの再現率や適合率よりも，
上述の文の正解率の方が条件が厳しいが，
重要な尺度であると考えている．

PGLRモデルによる生成確率の上位100位以内の解析結果について見てみると，
変更前，変更後の文法による文の正解率は，
文法$G_{\mbox{all}}$ではそれぞれ88.45\%，98.62\%となり，
文法$G_{\mbox{train}}$ではそれぞれ86.23\%，94.66\%となり，
変更後の文法の方が8〜10\%高くなっている．
また$G_{\mbox{all}}$，$G_{\mbox{train}}$どちらの場合でも，
変更後の文法で，
変更前の文法による上位100位以内の文の正解率に達するには，
上位10位以内の解析結果を考慮するだけで十分であり，
我々のコーパスの変更方針が有効であることが分かる．

表\ref{tab:coverage_recall}より，
我々の文法$G_{\mbox{train}}$の被覆率は97\%以上であり，
広範囲の文の解析が可能であることが分かる．
一方，被覆率，再現率ともに，我々の方針による変更によって
1\%程度低くなり，解析不能なものが
変更前に比べて1\%程度多く生じる．
これは，構文解析結果の曖昧性を抑えるために
非終端記号を細分化したことによるものである．
文法$G_{\mbox{train}}$による上位100位の文の正解率の差が
文法$G_{\mbox{all}}$によるものの差より小さくなる要因は，
この再現率の差にある．
しかし，
文の正解率が我々の変更によって10\%近く上がることから，
被覆率や再現率がこの程度低下することは許容できると考えている
\footnote{コーパスをさらに増やせば，被覆率，再現率の差は小さくなる．}．

\if0
さらに，予備実験として，無作為に選んだ100文について，
変更後の文法による1位の解析結果を調査したところ
\footnote{100文を評価用データとし，残りを学習用データとしている．}，
文節区切りが完全に一致するものは96文あり，
それらの文節の係り受け正解率は89.23\%であった
\footnote{連体修飾句の係り先は，係り先となり得る名詞のうち
最も近くにあるものであると仮定している}．
これは，Support Vector Machineや最大エントロピー法を用いた
文節係り受け解析の手法の正解率と同程度であり
\cite{uchimoto:99,kudo:2002}
\footnote{使用しているコーパスや実験の条件が異なるため，
公平な比較ではない．}，
意味情報を用いることでさらに正解率が向上すると考えている
\footnote{変更前の文法でも，文節の係り受け正解率は，
変更後の文法の場合とほぼ同じである．
しかし，係り受け構造は完全に同じであっても
非終端記号が異なるものが多く，
それらは意味解析の段階で誤った解釈をすることになる可能性が高い．}．
\fi


