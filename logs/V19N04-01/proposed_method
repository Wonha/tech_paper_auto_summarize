オントロジーとWikipedia
\label{sec:onto_wiki}

\begin{figure}[b]
\begin{center}
\includegraphics{19-4ia1f2.eps}
\end{center}
\caption{オントロジーの例}
\label{fig:onto_toha}
\end{figure}

本研究で扱うオントロジーは，対象とする世界に存在する概念とそれらの間に成立する関係を記述したものを指す．
概念間の関係は様々なものがあるが，代表的なものはis-a関係（上\linebreak
位‐下位概念）とpart-of関係（全体‐部分関係）である．
is-a関係とは，B is a A，（BはAの一つ，BはAの一種）が成り立つときのAとB の関係をいう．
例えば図\ref{fig:onto_toha}では「自動車は乗り物の一種」が成り立つので，乗り物と自動車はis-a関係である．
このときAを上位語，Bを下位語という．
part-of関係とは，B is a part of A（BはAの一部）が成り立つときのAとB の関係をいう．図\ref{fig:onto_toha}では「タイヤは自動車の一部」が成り立つので，自動車とタイヤはpart-of関係である．このときAを部分語，Bを全体語という．

概念を単語の集合（カテゴリ）と考えると，カテゴリには具体物（インスタンス）が分類される．本研究では，カテゴリ間とカテゴリ‐インスタンス間を
is-a関係で表したオントロジーを扱う．

is-a関係で表したオントロジーを用いれば，階層を用いて語彙を抽象化したり，リンクの距離から類似度を計算したりできる．これらは，検索，意味処理，情報抽出，機械学習や統計処理など様々な用途に適用可能である．

\begin{figure}[b]
\begin{center}
\includegraphics{19-4ia1f3.eps}
\end{center}
\caption{日本語語彙大系}
\label{fig:goitaikei}
\end{figure}

幅広い分野の一般的知識を記述した汎用オントロジーの一つに日本語語彙大系\cite{goitaikei}がある．日本語語彙大系は，日本語約30万語を約3,000種類の意味属性で分類した
オントロジーである．
日本語語彙大系には，約2,700のカテゴリと約10万のインスタンス（普通名詞）からなる一般名詞の意味体系（図\ref{fig:goitaikei}）が収録されている\footnote{以降，日本語語彙大系の一般名詞意味体系を``語彙大系''と表記する．}．
語彙大系のカテゴリ階層は木構造になっていて，カテゴリ間，カテゴリ‐インスタンス間の関係はis-a関係で表される\footnote{一部part-of関係も存在する．}．
また多義性があるインスタンスはいくつかのカテゴリが付与される．例えば，「モデル」は``人''と``玩具''の2つの意味があるので，2つのカテゴリ``芸人''と``遊び道具・文房具''が付与される．

現状では，既存のオントロジーの大部分は，多大なコストをかけて手動で構築されている\cite{Morita}．
そこで近年，半構造化されたWikipediaから（半）自動でオントロジーを構築する研究が盛んに行われている．

\begin{figure}[b]
\begin{center}
\includegraphics{19-4ia1f4.eps}
\end{center}
\caption{Wikipedia}
\label{fig:wiki_kaisou}
\end{figure}

Wikipedia は即時更新性に優れた自由に利用できるオンライン百科事典であり，
Web上でXML形式のダンプデータが公開されている\footnote{http://download.wikimedia.org/jawiki}．記事の本文には，見出し語と説明文
（本文の第一文は見出し語の定義文であることが多い），記事を分類するカテゴリが書かれている．
そしてこのカテゴリは他のカテゴリとリンクして階層構造を作っている（図\ref{fig:wiki_kaisou}）．しかしオントロジーと違い，カテゴリ間の関係やカテゴリ‐記事間の関係は定義されておらず，is-a関係が最も多いがis-a関係でないものもある．例えば，カテゴリ「変光星」と，このカテゴリが付与されている記事「爆発変光星」はis-a関係にあるが，同じく「
変光星」が付与されている記事「アメリカ変光星観測者協会」とはis-a関係にない．2,500件のサンプル調査の結果，is-a関係のリンクの割合はカテゴリ間で72.1\%，カテゴリ‐記事間で74.7\%であった\footnote{本論文でのサンプル調査は全て2008年7月24日の日本語Wikipediaを用いた．}．
またオントロジーの最上位カテゴリと違い，Wikipediaのカテゴリ階層はis-a関係による分類を目的としておらず，ジャンルを分類するための9カテゴリ（主要カテゴリ）を最上位としている．


汎用オントロジー構築手法\label{sec:syuhou}

Wikipediaのカテゴリと記事の階層は日本語語彙大系のような1つに統一されたオントロジーのように見えるが，前節で述べたように，上位のカテゴリ階層や，カテゴリ間，カテゴリ‐記事間のリンク関係が定義されていないため，オントロジーとは言えない．
そこで本手法ではWikipediaの上位のカテゴリ階層を削除して新たに定義した上位カテゴリ階層と置き換える．さらに，カテゴリ間，カテゴリ‐記事間のis-a関係でないリンク（not-is-a関係）を自動で切り離し，is-a関係でつながる階層へと整形する．
削除した上位カテゴリ階層と置き換える上位階層として，図 1 のように``人''，``組織''，``施設''，``地名''，``地形''，``具体物''，``創作物''，``動植物''，``イベント''の9種類の意味属性をカテゴリとする深さ1の階層を定義した．
この上位カテゴリ階層の下位層として，Wikipediaを整形した階層を接続する．

\ref{sec:kanren_kenkyu}節で述べるように，従来の研究はis-a関係となってい
る 2 語の特徴を如何にして捉えるかに注力されてきた．これに対して我々は，
is-a関係の特徴を捉えることよりも，補集合であるnot-is-a関係の特徴を捉える
ほうがタスクとして容易であると考え，not-is-a関係の判別問題としてタスク設
定することを提案する．両者は得られた集合の補集合を取ることで結果として同
じタスクとなるが，これは両タスクの問題の困難性が同じであることを意味しな
い．

本章では初めに，\ref{sec:link_survey}節でWikipediaのカテゴリ間，カテゴリ‐記事間のリンクがnot-is-a関係になる場合についての調査結果を述べる．次に\ref{sec:imizokusei_settei}節で，本手法で使用する上位カテゴリ階層を定義する．\ref{sec:isa_hantei_zokusei}節〜\ref{sec:pattern}節では，not-is-a関係であるリンクを網羅的に判定することで，is-a関係のリンクのみを残す手法を提案する．最後に\ref{sec:touitsu_onto}節で，新たに設定した上位カテゴリ階層と，整形したWikipediaのカテゴリ階層を接続して 1 つの階層に再構成する手法について述べる．


\subsection{Wikipediaのリンクとis-a関係}
\label{sec:link_survey}

図\ref{fig:wiki_kaisou}のように，Wikipediaのカテゴリは主要カテゴリと呼ばれる9カテゴリを最上位としている．主要カテゴリは語彙大系の最上位カテゴリと異なり，is-a関係による分類を目的としたものではない．
本手法では，Wikipediaの上位のカテゴリ階層を削除して，新たに定義する上位階層へ置き換える．上位のカテゴリは意味が抽象的な単語（例：社会，技術）となる傾向があるため，本手法では意味が抽象的な単語を削除することで上位階層の削除を行う．

一方，下位の階層になるほど分類はより具体的になりis-a関係になりやすい傾向にある．
しかし最下位階層でも，地名や人名，組織などの固有名詞がカテゴリ名になっている場合，
「長岡市$\gets$長岡まつり」，「長岡市$\gets$北越銀行」のようにカテゴリと記事はis-a関係になりにくい傾向にある．以上を踏まえ，我々はWikipediaのカテゴリ間，カテゴリ‐記事間のリンクがis-a関係になりにくい場合を以下の3種類の規則にまとめた．
\pagebreak

\begin{itemize}
\item[1.]
親子が意味的に類似していない場合はnot-is-a関係とする\\
（例）筆記用具$\gets$万年筆メーカー，植物$\gets$草木の神\\
単語同士が深く関連していても，意味的に類似していない場合はis-a関係にならない．
\item[2.]
親が固有名詞の場合はnot-is-a関係とする\\
（例）少年ジャンプ$\gets$ONE PIECE，新潟県$\gets$長岡市\\
オントロジーは上位になるほど概念が抽象的になり共通概念が増えるが，反対に下位となるほど概念が個別化，具体化する．最も個別化した固有名詞はすべて最下位の概念に属し，基本的に下位に単語を持たない．
\item[3.]
子名の前方が親名と一致する場合はnot-is-a関係とする\\
（例）火星$\gets$火星の衛星，缶$\gets$缶コーヒー\\
日本語は修飾語が先行して被修飾語が後続する構造のみが許される言語であることから，ある二つの単語が前方一致する（かつ完全一致しない）場合，概ね一方は修飾語，他方は被修飾語として使用される．「火星」と「火星の衛星」の場合は，一方の概念は「火星」だが，他方は「火星」を修飾語として立てる被修飾語，すなわち「火星に何らかの意味関係がある別の概念」（この例の場合は「衛星」）である可能性が高くなる．このように親名の主辞が子名の主辞以外に存在するとき，子と親はis-a関係ではなくpart-of関係や話題が類似した関係にあることが多い．
\end{itemize}

\noindent
Wikipediaの上位階層の削除と，規則1の判定を行うために，幅
広い分野に適用可能な9種類の意味属性（表\ref{tab:domain}）にカテゴリ名または記事名を分類する．
どの意味属性にも分類されない単語は抽象的な単語と判定し，削除する．また規
則1は親子が同じ意味属性に分類されなければ意味的に類似していないと判定す
る．規則2は親名が固有名詞かどうかを判定すればよい．規則3は単純な文字列
照合で判定可能である．

\begin{table}[t]
\caption{意味属性に対応する主な語彙大系のカテゴリと，分類される単語例}
\label{tab:domain}
\input{01table01.txt}
\end{table}

これらの方法で抽象的すぎる単語を削除，及びis-a関係でないリンクを判定したとき，どの程度is-a関係を判定できるのか人手で調査した．
全カテゴリ間，全カテゴリ‐記事間のリンクから無作為抽出した各2,500件のサンプル調査の結果，9種類の意味属性でのis-a関係の精度は，カテゴリ間で適合率98.9\%，再現率99.3\%，カテゴリ‐記事間で適合率99.3\%，再現率98.9\%であった．適合率を下げる誤りは，親子が同じ意味属性かつ親名が普通名詞でもnot-is-a関係となる場合に発生する（例：血液←血球，千葉県の道路←千葉県の道の駅，日本の内閣総理大臣←内閣総理大臣夫人）．再現率を下げる誤りは，親名が固有名詞でもis-a関係が成り立つ場合（例：中東欧←東欧，沖縄県営鉄道←沖縄県営鉄道糸満線）や，子名の前方が親名と一致してもis-a関係が成り立つ場合（例：日本人←日本人の学者，映画←映画作品）に発生する．しかし，全体から見ればこれらは少数の例外とみなせるため，結果として
提案した方法でnot-is-a関係のリンクを切り離せば，is-a関係を高精度で判定できることを確認した．


\subsection{上位カテゴリ階層の設定}
\label{sec:imizokusei_settei}

我々はWikipediaのカテゴリを調査し，独自にWikipediaの階層を下位層として網羅できるような，深さが 1 の上位カテゴリ階層を定義した．本手法では図1のように``人''，``組織''，\mbox{``施}設''，``地名''，``地形''，``具体物''，``創作物''，``動植物''，``イベント''の計9種類の意味属性を最上位カテゴリとして定義する．
定義の際，以下の 3 点を考慮した．

\begin{itemize}
\item[1.]
Wikipediaの記事名の集合を網羅するような上位語の集合であり，かつ，抽象的過ぎないこと．
\item[2.]
not-is-a関係の判定手法の 1 つ「1. 親子が意味的に類似していない場合はnot-is-a 関係とする」の「意味的に類似していない」を判定できる粒度であること．
\item[3.]
一般的な上位下位概念の粒度10 前後の分類とほぼ対応がとれること．
\end{itemize}

\begin{table}[b]
\caption{提案手法の意味属性と関根の拡張固有表現階層のカテゴリの対応表}
\label{tab:teian_sekine}
\input{01table02.txt}
\end{table}
\begin{figure}[b]
\begin{center}
\includegraphics{19-4ia1f5.eps}
\end{center}
\hfil\small\hbox to174pt{\hfil(a)カテゴリ\hfil}\hspace{56pt}\hbox to140pt{\hfil(b)記事\hfil}\hfil
\caption{意味属性に分類されるWikipediaのカテゴリと記事の割合（各2,500件調査）}
\label{fig:rate}
\end{figure}

\noindent
基本的には関根の拡張固有表現階層\footnote{http://sites.google.com/site/extendednamedentityhierarchy/}の第一階層である10カテゴリを参考にしている．これらのカテゴリは語彙大系のカテゴリの第四階層とほぼ対応がとれる．
ただし，機械学習による分類器が作れるほどのカテゴリと記事数がないもの（例：規則，スポーツ，賞）や，語彙大系に対応付けが難しいもの（例：行為，サービス）に関しては意味属性を設定しても分類精度が落ちるため，今回は対象外とした．
表\ref{tab:domain}に意味属性に対応する語彙大系のカテゴリと，分類される単語の例を示す．
また表\ref{tab:teian_sekine}に提案手法で設定した意味属性と関根の拡張固有表現階層のカテゴリとの対応表を示す．
2,500件のサンプル調査の結果，Wikipediaのカテゴリでは全体の86.3\%，記事では90.4\%がいずれかの意味属性に分類された．各意味属性別の割合を図\ref{fig:rate}に示す．



\subsection{意味属性分類による上位カテゴリ階層の削除とnot-is-a関係の判定}
\label{sec:isa_hantei_zokusei}

本節では，上位カテゴリ階層の削除，及び\ref{sec:link_survey}節の規則1「親
子が意味的に類似していない場合はnot-is-a関係になる」を判定するために，カ
テゴリと記事を9種類の意味属性に分類する．どの意味属性にも分類されない単
語は抽象的な単語と判定し，削除する．また親子が同じ意味属性に分類されなけ
れば意味的に類似していないと判定する．

本手法では，9種類の意味属性をまたがる複数ノードへの所属は許可していない．
例えば「シンデレラ」はカテゴリ「グリム童話」であるが他方でカテゴリ「文学
の登場人物」でもある．よって本来は意味属性「創作物」と「人」のどちらにも
分類すべき単語である．しかし本提案手法においては（SVMの出力値より）「創
作物」と判定され，作成されたオントロジー上では文学の登場人物の意味は失わ
れる．ただ，我々の観察ではこのように複数ノードに所属されるべき事例は実際
にはほとんどないことから，2 単語が所属する意味属性が異なる場合はほとんど
not-is-a関係ということになり，この性質を利用して高精度に判別している．よ
って「シンデレラ」のような事例に対しては現状で対処できず，今後の検討課題
としている．

一方，同じ意味属性内においては複数ノードへの所属を許している．例えば，
「イチロー」は「アメリカンリーグ首位打者」であり「シアトル・マリナーズの
選手」でもあるため，意味属性はどちらも「人」となる．このような状況では
「アメリカンリーグ首位打者」と「シアトル・マリナーズの選手」の両カテゴリ
の下位単語であることを許している．この結果，作成したオントロジーは木構造
とはなっていない．


\subsubsection{カテゴリ分類}
\label{sec:category_bunrui_mondai}

WikipediaのカテゴリをSVMによる分類器を用いて9種類の意味属性に分類する．本手法では，多値分類を行うためにone-vs-rest 法を用いる．SVMの出力値が0以上かつ最も出力値の高い分類器にWikipediaのカテゴリを分類する．今回は，カテゴリを9種類の意味属性に分類するための9個の分類器に，「その他のカテゴリ名」を分類するための分類器を加えた計10個の分類器を作成した．

提案手法では，機械学習による分類器の作成に「再分類法」を用いる．
提案手法における再分類法とは，初めにあらかじめ用意した少数の学習データを用いて分類器を作成してカテゴリを分類した後，分類器の出力を学習データに加えて再び分類器を作成し，前ステップで未分類だったカテゴリを分類する手法である．
本手法では，カテゴリを1件も分類できなくなるまで再分類を繰り返す．
素性作成にはカテゴリ名や以下に定義する周辺の単語などを用いた．以下に使用した単語を示す\footnote{今後，カテゴリ名を取り扱う際には，末尾の特定の文字列を削除することで単語を整形する．特定の文字列とは，括弧書きや，``の一覧''， ``のジャンル''などを指す．}．

\begin{itemize}
\item[a.]
対象カテゴリ名
\item[b.]
親カテゴリ名
\item[c.]
子カテゴリ名
\item[d.]
カテゴリ中の記事の定義文からとれる上位語
\item[e.]
カテゴリと末尾の形態素が一致する記事の定義文からとれる上位語
\end{itemize}

\noindent
「定義文からとれる上位語」とは，記事の定義文（第一文）からパターンマッチで抽出する
見出し語の上位語となる単語である．
パターンマッチの例を以下に示す\footnote{定義文からの上位語抽出パターンは，小林ら\citeyear{Kobayashi}と隅田ら\citeyear{Sumida}の手法をもとに作成したものを使用した．}．

...は，[上位語]の一種である．\par
...は，[上位語]である．\par
... [上位語]．

\noindent 例えば，図\ref{fig:wiki_kaisou}の記事の定義文「爆発変光星（ばくはつへんこうせい）とは，変光星の一種．」からは，見出し語「爆発変光星」の上位語として「変光星」が抽出される．項目eは，例えばカテゴリ名が「イタリアの諸島」で，その下位に末尾の形態素が一致する記事「エオリア諸島」が存在した場合，この記事の定義文からとれる上位語「島々」を素性に使用する．記事名がカテゴリ名の末尾の形態素と一致する場合，カテゴリと記事は同じ意味属性である可能性が高い．
よって，その記事の定義文からとれる上位語はカテゴリそのものの上位語を指すことが多く，カテゴリ名を抽象化できる．
素性作成の際にはこれらの単語の形態素や品詞，JUMANにおけるカテゴリ名\footnote{JUMANの辞書は特定の普通名詞に``人''，``動物''，``植物''，``人工物''，``抽象物''などの意味カテゴリ22種を名詞の意味情報として付与してある．}を利用した．また，カテゴリ名の末尾の文字列と最長一致する語彙大系のインスタンスに付与された，語彙大系のカテゴリ名及び表\ref{tab:domain}で対応づけた意味属性名を素性にした．例えばWikipediaのカテゴリ名が「若手小説家」だった場合，末尾の文字列と最長一致する語彙大系のインスタンスは「小説家」である．よって，「小説家」に付与されている語彙大系のカテゴリ``作家・詩人''を素性にする．また，``作家・詩人''に付与されている意味属性``人''も素性にする\footnote{本論文では，ある単語の末尾の文字列と最長一致する語彙大系のインスタンスに付与された語彙大系のカテゴリ名及び意味属性名のことをそれぞれ「単語に文字列照合する語彙大系のカテゴリ」，「単語に文字列照合する意味属性名」と呼ぶ．}．このように「若手小説家」を，語彙大系カテゴリ``作家・詩人''や意味属性``人''に抽象化することで，高精度な分類が期待できる．a〜eの単語は普通名詞であることが多く，JUMANのカテゴリや語彙大系を利用しやすい．
表\ref{tab:seiteki}に，学習に用いた素性と，図\ref{fig:kizi_seiteki_sosei_rei}において生成される素性を示す．
各素性に対し頻度を求めた後，各素性ごとに最大値が1になるように正規化した値を素性ベクトルの値とする．
例えば，表\ref{tab:seiteki}の6-dの素性例は，``人''が2件，``具体物''が1件なので，素性ベクトルは人：1，具体物：0.5となる．

\begin{table}[p]
\caption{カテゴリ分類のための基本素性}
\label{tab:seiteki}
\input{01table03.txt}
\end{table}
\begin{figure}[p]
\begin{center}
\includegraphics{19-4ia1f6.eps}
\end{center}
\caption{カテゴリ分類のための基本素性の例}
\label{fig:kizi_seiteki_sosei_rei}
\end{figure}

\begin{figure}[t]
\begin{center}
\includegraphics{19-4ia1f7.eps}
\end{center}
\caption{カテゴリ分類のための，既に意味属性が確定している周辺カテゴリを利用した素性}
\label{fig:kizi_douteki_sosei_rei}
\vspace{-0.5\baselineskip}
\end{figure}

本手法のカテゴリ分類では再現率の向上のため，
直前のステップで得られた出力を学習データに加える再分類法を用いる．直前のステップまでに決定したカテゴリの意味属性をもとにした素性を設定することで，既に意味属性が決定したカテゴリの周辺カテゴリの意味属性を決定しやすくする．
図\ref{fig:kizi_douteki_sosei_rei}の例は，対象カテゴリ「子供」の意味属性が未決で，その周辺の3つのカテゴリの意味属性は直前のステップまでに確定した状態である．対象カテゴリ「子供」と子カテゴリ「子役」は語彙大系のカテゴリ``少年・少女''に属するため，意味的に類似しているといえる．
意味的に類似した「子役」の意味属性は``人''なので，「子供」の意味属性も``人''である可能性が高くなるように素性を設定する．表\ref{tab:douteki}に，既に意味属性が決定したカテゴリをもとに設計した素性と，図\ref{fig:kizi_douteki_sosei_rei}において生成される素性を示す．

\begin{table}[t]
\caption{カテゴリ分類のための，既に意味属性が確定している周辺カテゴリを利用した素性}
\label{tab:douteki}
\input{01table04.txt}
\end{table}



\subsubsection{記事分類}
\label{sec:kizi_bunrui_mondai}

カテゴリ分類の後，記事を9種類の意味属性に分類する．
本手法では，SVMによる分類器を用いて記事分類をした後，どの分類器にも分類されなかった記事を，既に分類された記事情報をもとに分類する．
記事のSVMによる分類器はカテゴリ分類器と同様，素性作成には記事名や以下に定義する周辺の単語，語彙大系を使用した\footnote{再分類法を用いたところ精度が低下したため，記事分類では用いていない．}．以下に記事分類のために使用する単語を示す．
\begin{itemize}
\item[a.]
対象記事名
\item[b.]
記事の定義文からとれる上位語
\item[c.]
対象記事に付与されているカテゴリ名
\item[d.]
記事の定義文
\end{itemize}

\noindent
本手法のSVMによる分類器での記事分類では，精度を向上させるためにカテゴリ名と記事名の類似性を判定し，記事名とカテゴリ名が似ていれば，そのカテゴリの意味属性が優位になるように素性を設計した．
例えば，図\ref{fig:kizi_sosei2}では記事「ロータリー車」とカテゴリ「鉄道車両（具体物）」は後方の文字列が両者とも語彙大系のカテゴリ``乗り物（本体（移動（陸圏）））\inhibitglue''に文字列照合（両者は意味的に類似）するので，「ロータリー車」が「鉄道車両」と同じ具体物である可能性が高くなるように素性を設計した．記事分類のための素性を表\ref{tab:kizi_sosei1}と表\ref{tab:kizi_sosei2}に示す．表\ref{tab:kizi_sosei2}は，既に意味属性が確定しているカテゴリに着目して設定した素性である．表\ref{tab:kizi_sosei1}，表\ref{tab:kizi_sosei2}にそれぞれに，図\ref{fig:kizi_sosei1}，図\ref{fig:kizi_sosei2}を例にしたときの素性も合わせて示す．

次に，SVMによる分類器で分類できなかった残りの記事を分類する．
ここでは，is-a関係の記事を下位に持つことが多いカテゴリを判定し，そのカテゴリより下位にある意味属性が未確定な記事を，そのカテゴリと同じ意味属性に分類する．

\begin{table}[t]
\caption{記事分類のための素性1（カテゴリの分類結果に依存しない）}
\label{tab:kizi_sosei1}
\input{01table05.txt}
\end{table}
\begin{table}[t]
\caption{記事分類のための素性2（カテゴリの分類結果に依存する）}
\label{tab:kizi_sosei2}
\input{01table06.txt}
\end{table}

\begin{figure}[t]
\begin{center}
\includegraphics{19-4ia1f8.eps}
\end{center}
\caption{記事分類の素性作成のための例1（カテゴリの分類結果に依存しない）}
\label{fig:kizi_sosei1}
\end{figure}
\begin{figure}[t]
\begin{center}
\includegraphics{19-4ia1f9.eps}
\end{center}
\caption{記事分類の素性作成のための例2（カテゴリの分類結果に依存する）}
\label{fig:kizi_sosei2}
\end{figure}

Wikipediaには，is-a関係の記事を下位に持つことが多いカテゴリと，
カテゴリと記事がis-a関係ではない何らかの関係になっていることが多いカテゴリ
がある．例えば，カテゴリ「日本の俳優」は「蒼井優」や「反町隆史」などカテゴリとis-a関係になる記事のみを持つが，カテゴリ「長岡市」は「蒼柴神社」や「長岡まつり」などis-a関係でない記事を多く持つ．
このようなis-a関係の記事を下位に持つことが多いカテゴリを，以降「上位概念カテゴリ」と呼ぶ．
小林ら\citeyear{Kobayashi2}は，is-a関係の記事\footnote{カテゴリとis-a関係にある記事を抽出するのに，小林ら\citeyear{Kobayashi}の手法を用いている．}の割合が閾値以上のカテゴリを上位概念カテゴリとみなし，上位概念カテゴリとその全ての下位記事をis-a関係として抽出している．
本手法ではこの手法を参考にし，既に決定したカテゴリの意味属性と記事の意味属性が一致する割合を求め，この割合があらかじめ決めた閾値以上であれば，そのカテゴリを上位概念カテゴリとする．そして上位概念カテゴリとされたカテゴリに分類されている，意味属性が未確定の記事を，カテゴリと同じ意味属性に分類する．
例えば図\ref{fig:mibunrui_kizi}のように，カテゴリ「カクテル（具体物）」に分類されている，意味属性が決定した記事のうち，4件が``具体物''で，1件が``人''だったとする．このとき，カテゴリと同じ意味属性である``具体物''の割合は80\%である．この割合が高いほど，カテゴリ「カクテル（具体物）」には具体物が分類されやすいといえる．よって，あらかじめ設定した閾値が80\%以下であれば意味属性が未確定の記事を``具体物''に分類する．

\begin{figure}[t]
\begin{center}
\includegraphics{19-4ia1f10.eps}
\end{center}
\caption{上位概念カテゴリ判定による未確定記事の意味属性分類例}
\label{fig:mibunrui_kizi}
\end{figure}

1つの記事に対して付与する意味属性は1つなので，記事に意味属性の異なる上位概念カテゴリが複数付与された場合は，意味属性を選択しなければならない．本手法ではまず，上記の割合が高いほうの上位概念カテゴリと同じ意味属性を記事に付与する．もし割合が同じだった場合は，カテゴリを分類したときのSVMの出力値が最も高かった上位概念カテゴリの意味属性を付与する．


\subsection{固有名詞抽出によるnot-is-a関係の判定}
\label{sec:koyu_hantei}

本節では，\ref{sec:imizokusei_settei}節の規則2「親が固有名詞の場合はnot-is-a関係になる」を解決するために，
カテゴリ名（記事が親となることはない）から固有名詞を抽出する．固有名詞を抽出するために，MeCabと英語Wikipediaのカテゴリ名・記事名を用いた2種類の手法を提案する．


\subsubsection{MeCabを用いた固有名詞抽出}

親名がMeCabの辞書に固有名詞として辞書登録されていれば固有名詞と判定する．


\subsubsection{英語Wikipediaのカテゴリ名・記事名を用いた固有名詞抽出}

日本語Wikipediaのカテゴリは，英語Wikipediaの同じカテゴリにリンクしていることがある．
例えば，日本語カテゴリ「音楽家」は英語カテゴリ「Musicians」にリンクしている．
英語表記の固有名詞の頭文字のアルファベットは大文字表記であると述べたが，カテゴリ名の頭文字は原則すべて大文字で表されるため，この基準では判定できない．ここ
では，各形態素の頭文字が全て大文字であれば固有名詞である，という基準を用いる（前置詞``at, of, the, on, and, in, to''，冒頭以外に冠詞``the''を含む単語を除いて，2形態素以上ある単語に限る）．
ただし，例外として意味属性が``動植物''と判定されたカテゴリは全て普通名詞とみなすことにした．なぜなら，``動植物''のカテゴリ名のほとんどがスミレ科(Violaceae)，バラ亜綱(Rosidae)など普通名詞であるが，これらの英語表記は，初めの頭文字を大文字のアルファベットとするためである．
また，意味属性が``人''と判定されたカテゴリにおいて，主辞\footnote{本手法では，基本的には連続する名詞の最後の形態素を主辞とし，``of, in, to, on, at''が含まれている場合はその直前を主辞とする．}が複数形だった場合も普通名詞として扱う．
ヨーロッパ系アメリカ人(European American\underline{s})やアメリカ合衆国上院議員(United States Senator\underline{s})のように主辞が複数形であれば，それより下位にis-a関係の単語を持つからである．
このような現象は特に``人''に多いので，``人''のみにこの規則を適用する．
図~\ref{fig:koyu_enwiki_cate}に，英語Wikipediaのカテゴリ名を用いた固有名詞抽出のための決定木を示す．


\begin{figure}[b]
\begin{center}
\includegraphics{19-4ia1f11.eps}
\end{center}
\caption{英語Wikipediaのカテゴリ名を用いた固有名詞抽出のための決定木}
\label{fig:koyu_enwiki_cate}
\end{figure}

さらに多くのカテゴリ名を固有名詞として抽出するため，Wikipediaの記事も用いる．Wikipediaのカテゴリは通常本文を持たないが，カテゴリ名と同名の記事が分類されていることがある．
その場合，カテゴリ名と記事名は同一のものを指すので，記事を解析することでカテゴリ名から固有名詞
を抽出する．英語カテゴリ名と同様に，各形態素の頭文字が全て大文字であれば固有名詞である，という基準を用いる．さらに記事の本文に注目し，記事の本文中の文頭以外で記事名が使われているとき，その頭文字のアルファベットが大文字であれば固有名詞とする．
図~\ref{fig:koyu_enwiki_kizi}に，英語Wikipediaの記事名を用いた固有名詞抽出のための決定木を示す．

\begin{figure}[t]
\begin{center}
\includegraphics{19-4ia1f12.eps}
\end{center}
\caption{英語Wikipediaの記事を用いた固有名詞抽出のための決定木}
\label{fig:koyu_enwiki_kizi}
\end{figure}

以上の2種類の手法において，いずれの出力も普通名詞でなく，いずれかの出力で固有名詞だったカテゴリ名を，固有名詞と判定する．
そして，カテゴリ間，カテゴリ‐記事間において，親名が固有名詞の場合はnot-is-a関係と判定する．
しかし「パリメトロ←パリメトロ2号線」や「どうぶつの森←おいでよ どうぶつの森」のように，親名が固有名詞でもis-a関係が成り立つ場合がある．この場合，子カテゴリが親カテゴリの固有名詞をさらに細分化したis-a関係が成り立つ．
そこで本手法では例外処理として，以下の2つの条件の場合，リンクをnot-is-a関係としないことにした．

\begin{enumerate}
\item
「パリメトロ←パリメトロ2号線」，「ロックマン←ロックマンX」のように，子名の前方が親名と一致した時（パリメトロ，ロックマン），一致部分を削除した部分（2号線，X）が数字または記号を含む場合はnot-is-a関係としない．
\item
「どうぶつの森←おいでよ どうぶつの森」，「オールナイトニッポン←ゆずのオールナイトニッポン」のように子名の後方が親名と一致した場合はnot-is-a関係としない．
\end{enumerate}


\subsection{文字列照合によるnot-is-a関係の判定}
\label{sec:pattern}

\ref{sec:link_survey}節の規則4で，「子名の前方が親名と一致する場合はnot-is-a関係とする」とした．「火星←火星の衛星」，「缶←缶コーヒー」のように子名の前方が親名と一致するかどうかは文字列照合で判定する．ただし，前節で述べたように，「パリメトロ←パリメトロ2号線」のように，子名の前方が親名と一致した時，一致部分を削除した部分（2号線）が数字または記号を含む場合は，子名の前方が親名と一致してもnot-is-a関係としないことにする．


\begin{figure}[p]
\begin{center}
\includegraphics{19-4ia1f13.eps}
\end{center}
\caption{Wikipediaの階層からis-a関係のオントロジー階層を再構成する例}
\label{fig:onto_saikousei}
\end{figure}

\subsection{オントロジー階層の再構成}
\label{sec:touitsu_onto}

\ref{sec:isa_hantei_zokusei}節〜\ref{sec:pattern}節の手法を用いて抽象的すぎるカテゴリを削除することでWikipediaの上位階層を削除する．
また\ref{sec:isa_hantei_zokusei}節〜\ref{sec:pattern}節の手法のいずれかでnot-is-a 関係と判定さたカテゴリ
間，カテゴリ‐記事間のリンクを切り離す．
この状態のWikipediaは1つの階層構造ではなく，複数の階層に分離している．これら複数の階層を
\ref{sec:imizokusei_settei}節で定義した上位カテゴリ階層である9種類の意味属性の下位に接続する．
その際，階層の中で親を持たないカテゴリ及び記事（以下，ルート
カテゴリ，ルート記事）を，同じ意味属性の最上位カテゴリの下位に接続する．
図\ref{fig:onto_saikousei}にWikipediaの階層から，is-a 関係のオントロジー階層を再構成するまでの例を示す．

Wikipediaのカテゴリ階層には循環がある．提案手法で抽出した部分的
な階層が循環していた場合にどこでその循環を切るかという問題は容易には解決
できないと考え，本研究では便宜的に下記処理を行った．すなわち，循環してい
る階層を構成するカテゴリの内，最もID番号\footnote{Wikipediaの各カテゴリ
にはID番号が振られている．}の小さいカテゴリを指すis-a関係のリンクを
not-is-a関係とすることで，循環のないカテゴリ階層を構築した．



