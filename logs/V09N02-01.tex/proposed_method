意味グラフ
\subsection{検索対象 -- 「判例」}
「最高裁判所判例集」は最高裁判所判例委員会により選択されまとめられたもので，事件の判決を集めた「事例集」の中から特殊な事件，特殊な判決（裁判上の先例となる判決）とされるものを集めたものである．現在約50万件に達する「事例集」に対して「判例集」には約3000〜4000件が含まれている．この「判例集」に含まれるひとつひとつが「判例」である．

「判例」は大きく分けて，判例ID，事件の種類，判決日，当事者の氏名などといった（論文で言えば「書誌情報」に相当するような）付帯情報と，その判例の内容自体を記述した内容情報から構成されている．内容情報は平均約8000字で記述されている．この内容情報はさらに，事件の事実を表すもの，その事実から裁判官が下した判決とその理由に分けることができる．

判例の中に記述された事実文は大きく2つに分けることができる．ひとつは「当事者間に争いのない事実」を記述したもの，もうひとつは「当事者それぞれが主張する事実」を記述したものである．前者は当事者のもつ属性や事故のおきた場所など，確実に事実として認められるものを示す．これに対して後者は，確実に事実といえないものである．最終的に裁判官が，後者のものに対して確かな「事実」として認めるか否かの判断を下すのである．この時，裁判官は前者の「争いのない事実文」を事故当時の状況を判断するための要素として利用する．従って，判決を下す上で事故の状況を示す「争いのない事実文」が大きな役割を担っていると考えられる．そこで本研究では，検索対象を「当事者間に争いのない事実」文とする．図~\ref{fig:judicialcase}に，ある交通事故裁判の判例から取り出した事実文を示す．

\begin{figure}
\begin{center}
 \atari(130,21)
 \caption{交通事故裁判の判例から取り出した事実文の例}
 \label{fig:judicialcase}
\end{center}
\end{figure}

実際の判例検索システムでは，「判例」の中からこの「争いのない事実文」を検索対象として取り出す必要がある．この抽出プロセスは，本研究では手作業による前処理として実現する．その自動化は今後の課題とする．

\subsection{検索質問 -- 「問い合わせ文」}
本システムを利用するにあたって利用者は，図~\ref{fig:query}に示すような，``事件の状況を示す事実を記述した文章''を「問い合わせ文」として与えるものとする．ここでは，事故当時の現場の状況，当事者の行動，当事者の属性などの，事故の発生に関する事実関係を明確に記述する．JCareはこの問い合わせ文に記述されている事故に意味的に類似した事故に関する判例を検索する．

\begin{figure}
\begin{center}
 \atari(130,21)
 \caption{問い合わせ文の例}
 \label{fig:query}
\end{center}
\end{figure}

\subsection{意味解析(自然言語処理)}
実際に検索を行うには，問い合わせ文と判例をその意味的な内容を表す内部表現に変換する必要がある．このためには言語表現からその意味を抽出するための一連の自然言語処理を行う必要がある．本研究ではこのために，形態素解析に奈良先端科学技術大学院大学の松本研究室が開発した茶筌\cite{chasen}を，係り受け解析に同研究室が開発した茶掛を，意味解析に青山学院大学の原田研究室が開発したSAGE\cite{sage99,harada,sage2000}を，さらに文脈解析に同研究室が開発したInSeRA\cite{insera}を用いることとする．

\begin{figure}
\begin{center}
 \atari(120,113)
 \caption{図~\ref{fig:query}の問い合わせ文から抽出されたframe述語とinterRel述語}
 \label{fig:frame}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
 \atari(120,76)
 \caption{図~\ref{fig:query}の問い合わせ文を表わす意味グラフ（見やすくするため一部のフレームを併合してある）}
 \label{fig:graph}
\end{center}
\end{figure}

\subsection{意味グラフ}
先に述べた4つの自然言語処理を経て判例や問い合わせ文の文章は，図~\ref{fig:frame}に示すように，文内の語の語意と係り受け関係にある他の語との間の文内深層格を表すframe述語リストと，文間の文間深層格を表すinterRel述語リストに変換される．さらに，手作業で用意した照応解析データやラベル解析データ（詳細は3章で述べる）をこれらと併合して，問い合わせ文は最終的に図~\ref{fig:graph}に示すような意味グラフという形に変換される．ここでは，frame述語が表すひとつひとつの語が頂点(ノード)で表現され，また，frame述語間の文内深層格および文間深層格，照応解析・ラベル解析による深層格が弧(アーク)で表わされている．

意味グラフ中の各弧が表す深層格には，EDR電子化辞書\cite{edr}にて定義された全部で28個の文内深層格に加え，「日本語文書の意味解析システムSAGEの高速化と精度評価」\cite{sage2000}にて追加定義された7個の文内深層格及び「日本語文間の意味的関係解析システムInSeRAの開発研究」\cite{insera}における21個の文間深層格が含まれる．

\begin{figure}
\begin{center}
 \atari(110,108)
 \caption{JCareの処理概要}
 \label{fig:jcare}
\end{center}
\end{figure}

JCareの概要
JCareシステムの処理の概要を図~\ref{fig:jcare}に示す．まず前処理として「判例」から検索対象となる「争いのない事実文」を手作業で抽出し，自然言語処理による構造解析，意味解析，照応解析などを行う．「問い合わせ文」はそのまま同様な自然言語処理を行う．この結果得られた意味グラフをViewグラフに分割し，問い合わせ文と判例をViewグラフレベルで照合し，類似度の高い順に判例を提示する．

\subsection{前処理}
先に述べたように，照応解析とラベル解析は現状では手作業で行う．たとえば照応解析では，指示詞が文脈中に登場した人物を指す場合，図~\ref{fig:equalto}のようなequalTo述語を出力する．equalTo述語は第1引数に照応元のフレームIDを持ち，第2引数に照応先のフレームID群のリストを持つ．例えば，図中の最初の事例は，図~\ref{fig:frame}の34番のフレームで表される指示詞『この』が，23番のフレームで表される『交差点』に照応していることを表している．

\begin{figure}
\begin{center}
 \atari(100,30)
 \caption{照応解析結果を表わすequalTo述語}
 \label{fig:equalto}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
 \atari(120,85)
 \caption{ラベル解析結果を表わすlabel述語}
 \label{fig:label}
\end{center}
\end{figure}

ラベル解析では，図~\ref{fig:label}に示すような判例文における箇条書きの記述パターンを解析し，label述語を出力する．label述語は第1引数に文番号，第2引数に接頭語，第3引数に箇条書き番号，第4引数に接尾語，第5引数に箇条書き項目名をもつ．この第2から第5引数の記述パターンの解析から得た箇条書き構造により，どの内容文がどの箇条書き項目を説明したものなのかという情報を抽出する．これは深層格という形で意味グラフに取り込まれ，意味グラフを部分グラフへ分割するために有用な情報となる．

\subsection{当事者の同定}
言語処理の出力データ群から意味グラフを作成する前に，当事者の同定を行う．当事者とは事故に関係した人物であり，本研究では被告(defendant)，原告(plaintiff)，被害者(victim)，遺族(bereaved)，その他の当事者(others)の5つのクラスを用意する．当事者の記述表現が固有名詞であったり，被害者と原告が同一人物であるときに生じうる照合時の当事者不整合を排除するために当事者の同定を行う．具体的には，「被害者」，「被害者太郎」など，同一人物について多様な表現を含む文章があったとき，これらを同一視するために図~\ref{fig:instanceof}に示すinstanceOf述語を出力する．これは第2引数のリスト中の各フレームが第1引数の当事者クラス（図中で＜の後にクラス名を示した）に属すことを表す．例えば，図中の２番目の事例は，図~\ref{fig:frame}のフレーム29の『被害者』とフレーム33の『被害者太郎』が共に原告クラスに属していることを表している．

\begin{figure}
\begin{center}
 \atari(90,34)
 \caption{当事者同定結果を表わすinstanceOf述語}
 \label{fig:instanceof}
\end{center}
\end{figure}

\subsection{意味グラフ生成部}

言語処理で出力する意味解析データ，文脈解析データに加え，前処理で用意する照応解析データ，ラベル解析データ，以上4つの解析データをまとめて，図~\ref{fig:graph}に示した意味グラフを生成する．具体的には図~\ref{fig:graphdata}に示すgraph述語で表す．graph述語には頂点の情報を保持するgraphNode述語と，弧の情報を保持するgraphArc述語がある．それぞれの述語句名のあとには，検索質問(Query)か検索対象(Object)かを判別する接尾語が続く．graphNode述語では第1引数にフレームID，第2引数に概念IDを保持する．また，graphArc述語では引数を，係り元フレームID，深層格，係り先フレームIDの順で保持する．例えば，図~\ref{fig:graphdata}に示すgraph述語では，頂点1が図~\ref{fig:frame}内の『南北』を，頂点2が『走る』を表しており，その間に『goal』格の弧が存在していることが宣言されており，これらは図~\ref{fig:graph}に示した意味グラフに視覚的に表現されている．

\begin{figure}
\begin{center}
 \atari(120,49)
 \caption{意味グラフの述語表現}
 \label{fig:graphdata}
\end{center}
\end{figure}

Viewへの分割
本研究では，意味グラフ間の類似度算出のために個々の語意だけでなく，語と語を結ぶ深層格も考慮する．一般に判例の事実文の意味グラフのサイズは頂点数が平均約1000個，弧数は平均約1200個であり，頂点と弧の両者を考慮して意味グラフ間の同型部分グラフ探索を行うと，計算量が膨大になる．そのため探索空間を狭める方法として，意味グラフを視点（View）により部分グラフ（Viewグラフと呼ぶ）群に分割することにした．

\begin{table}
\begin{center}
 \caption{Primary View と Secondary View}
 \atari(70,62)
 \label{fig:view}
\end{center}
\end{table}

\subsection{Viewとは}
Viewは，事実文中に記述されている語をそれらが表す意味（EDRでは概念idと読んでいる）を考慮して，「事故現場の状況」，「当事者の行動」，「当事者の静的特徴」などの特定の``視点''でグループ分けする単位である．
本研究では，このViewとして，``誰(who)''，``いつ(when)''，``どこ(where)''，``なに(what)''，``どのように(how)''という事件の基本構造を表すPrimary Viewと，「述語句」の意味により静的なものと動的なものへさらに細分割するSecondary Viewの２種類を用意した．これらを判例用語で表わすと，表\ref{fig:view}に示す計11種のViewとなる．

\begin{description}
\item[１）Primary View:]検索対象は，判例に含まれる「事件の状況を記述した事実文」であり，基本構造上の``when''，``where''，``what''では，これらの視点から選ばれたこの「事件」に直接に関連するものを対象とする．本研究では，対象が交通事故であることから，``when''は『発生日時』View，``where''は『発生場所』View，``what''は『関係車両』Viewを表現する．また``how''にあたる『事故態様』Viewは，事件の状況をまとめて記述した（要約した）部分グラフに当たり，たとえば「事故は被害者と被告が車を競わせたことでおきた．」などがこれにあたる．
``who''では，『被告』View，『被害者』View，『原告』Viewの3つを用意する．先に述べた当事者の1つである「遺族」は，判例において存在しないことが多いと判断し，Viewからは外すことにした．また，事実文中に``被告''が複数人存在したとしても，被告らが関係する事実文は，同じ『被告』Viewへ割り振り，被告同士の区別は，意味グラフのレベルで行うこととした．以上で述べた6つのViewどれにも当てはまらないものは，『その他』Viewへ割り振る．
\end{description}

\begin{description}
\item[２）Secondary View:]当事者に関する3つのPrimary View(「被告」,「被害者」,「原告」)グラフを，それぞれそこに含まれる「述語句」の意味によって，さらに2つのSecondary Viewグラフへ分割する．一般的に「述語句」は，当事者の属性を示すものと，当事者の行動を示すものに大きく2種類に分けることが出来る．Secondary Viewは，この2種類の視点に異なった類似度算出方法を選択することで，視点の性格に応じた比較を行うために用意した．具体的には当事者に関する3つのViewを，当事者の静的特徴についての記述を格納する『静的特徴』Viewと，当事者の行動についての記述を格納する『単独行動』Viewに分割する．たとえば，「被告は20歳の男性である」は前者に割り振られ，「被告は自動車を運転していた」は後者に割り振られる．また，行動に関する部分グラフの中に当事者が2人以上含まれていた場合は，『単独行動』Viewへ割り振らず，Primary Viewの『事故態様』Viewへ割り振る．これは，当事者別にViewを分けたことで生じうる比較精度の低下を防ぐためである．たとえば，「問い合わせ文」での事故の状況を示す記述が，被告中心の表現となっており，反対に「判例」の「争いのない事実文」での記述が原告中心の表現である場合，それぞれが異なるSecondary Viewへと割り振られてしまう．そのため，この事故の記述が似ているものであろうとなかろうと類似度はゼロとなる．このような照合の漏れを防ぐために，当事者が相互に関連しあいながら生じた行動を記述した部分グラフは，『事故態様』Viewへ割り振ることとする．
\end{description}

\subsection{主体}
意味グラフ中の用言を表す頂点に接続している頂点群には，この用言が表す述語の動作主体や動作対象などを表す語を含む頂点が存在し，これを主体と呼ぶ．具体的には，EDR電子化辞書の深層格で表される主体には，「有意志動作を引き起こす主体」，「属性をもつ対象」および「動作・変化の影響を受ける対象」の３つがある．1つ目は思考的・知的動作を含む意志を持って行われる動作の主体を表し，agent格にあたるものである．2つ目は，感情を表す動作の主体を表し，a-object格にあたるものである．3つ目は，自然現象・生理現象・物理現象の主体を表し，object格にあたるものである．

\subsection{代表語}
実際に意味グラフの各頂点をViewグラフに分配するには各頂点がどのViewに属するかを判定する必要がある．この判定は，各々のViewを代表する語(代表語)を用意し，意味グラフの割り振り判定対象となる頂点が表す語がどのViewの代表語のEDR概念体系辞書中の下位概念であるかに基づいて行う．
意味グラフ中の主体を表す各頂点を，Primary Viewに分類するための代表語を表にしたのが，表\ref{fig:primaryview}である．これに対し述語句を表す各頂点をSecondary Viewに分類するための代表語は，図~\ref{fig:secondaryview}に示すようにEDR概念体系辞書の最上位概念群を利用し，『静的特徴』Viewでは図中Aで表した計5つの概念を代表語とし，『単独行動』Viewでは図中Bで表した計4つの概念を代表語として用意する．

\begin{table}
\begin{center}
 \leavevmode
 \caption{Primary View の代表語}
 \atari(120,24)
 \label{fig:primaryview}
\end{center}
\end{table}

\begin{figure}
\begin{center}
 \leavevmode
 \atari(120,52)
 \caption{Secondary View の代表語}
 \label{fig:secondaryview}
\end{center}
\end{figure}

\subsection{Viewへの分割手法}
意味グラフ生成部で生成した意味グラフをViewに分配する際の単位は，「述語句」を1つ，「主体」を少なくとも１つ含む部分グラフとする．この単位で，意味グラフから述語句頂点に連結する頂点群を取り出し，Primary Viewでは主体となる頂点，Secondary Viewでは述語句となる頂点のもつ語が先に述べたどの代表語の下位概念になっているかを判定し，この部分グラフ全体を適切なViewへ分配する．この際Primary Viewでは，当事者View(「被告」, 「被害者」, 「原告」)の代表語の下位概念にあたる主体が2種類以上存在する場合は，事故態様Viewへ割り振る．それ以外は割り振り先Primary Viewの優先順位を，当事者View，発生場所View，発生日時View，関係車両View，その他Viewの順番として割り振る．またSecondary Viewでは，Primary Viewにて当事者Viewに割り振られた部分グラフの述語句の概念が，『静的特徴』Viewと『動的特徴』Viewのどちらの代表語の下位概念であるかを判定し，割り振りを実現する．意味グラフの切断箇所は「述語句」頂点間の弧とする．この際複数のグラフに共有されている頂点は，個々のViewグラフにおいて重複して存在させることとする．たとえば「原告は信号を確認せずに，横断歩道を直進した．」という文章は図~\ref{fig:graphrule}のように，2つのViewグラフとして扱われる．

\begin{figure}
\begin{center}
 \atari(100,50)
 \caption{意味グラフのViewへの割振り単位}
 \label{fig:graphrule}
\end{center}
\end{figure}

Viewごとのマッチング手法
問い合わせ文章と判例文章の各々11個のViewグラフ同士をViewごとに両者間の位相同型部分の大きさをもとに，内容類似度を算出する．この手順について以下に説明する．

\subsection{語意類似度算出部}
まず2つのViewグラフから任意の頂点を1つずつ取り出し，それらの語意類似度を算出する．2ノード間の語意類似度の算出は，EDR概念体系辞書を用いて２つの語が表す概念の概念体系木における深さと，2つの共通上位語の深さを求め，図~\ref{fig:wordsimilarity}左に示す式で算出する．たとえば``交差点''と``現場''というノード間の語意類似度は，図左下に示すように算出される．
次に，語意類似度の値が一定値(現在は経験的に40としている)以上ならば仮のペアを1つづつ作る．すべてのノード同士の判定終了後，ノードが重複した仮ペア群の中で類似度の最も高いものを正式ペアとする．


\begin{figure}
\begin{center}
 \atari(130,86)
 \caption{EDR概念体系辞書を用いた語意類似度算出}
 \label{fig:wordsimilarity}
\end{center}
\end{figure}

正式ペアの語意類似度の合計を問い合わせ文のViewグラフノード数で除算し，11個のView各々における総語意類似度を求める．

\subsection{格類似度算出部}
語意類似度算出において，類似しているとした正式ペアの頂点対から，任意の2つの頂点対を取り出し，その間にある最短路（関係パスと呼ぶ）上の深層格リストの類似性を評価する．この評価値を格類似度と呼ぶ．

\begin{figure}
\begin{center}
 \atari(70,91)
 \caption{格類似度算出}
 \label{fig:casesimilarity}
\end{center}
\end{figure}

\begin{table}
\begin{center}
 \caption{深層格類似度の割り当てパターン(一部)}
 \atari(100,50)
 \label{fig:deepcasesimilarity}
\end{center}
\end{table}


具体的には，関係パス上の深層格群の類似性評価は，図~\ref{fig:casesimilarity}に示すようにグラフ1とグラフ2の頂点対A,B間及びA',B'間に有向路があれば，その最短路（関係パス）を求めそれらが類似する深層格を共有するごとに得点を加算することで実現する．加える得点は深層格ごとに表\ref{fig:deepcasesimilarity}の類似度割り当てパターンAに示すように定めた．この表で例えば，第１行目は，「グラフ1とグラフ2の両方の関係パス上に深層格agentが存在した時に，得点10を加える」ということである．この深層格類似度値は，深層格同士の類似性，事実文中における深層格の重要性から，同じ深層格であり重要度の高いものを10，同じ深層格であるが多少重要なものを9，同じ深層格であるが重要度の低いもの及び，重要度の高いもので互いに似ている深層格を8，多少重要なもので互いに似ている深層格を7としている．
頂点対ごとの関係パスに対するこの類似度得点値の合計値を頂点対の数だけ合計し，その結果を問い合わせ文のViewグラフにおける格の数で除算する．この値を各々のViewにおける総格類似度とする．

ここで，関係パスにおける格類似度得点値をViewごとに設定することで，全体の類似度を算出する上でのViewの独自性を表現する．具体的には表\ref{fig:deepcasesimilarity}の最右列に示すように，もう1つの類似度割り当てパターンBを用意した．これは主として時間軸における前後関係に関する格の類似性により多くの重みを与えたものである．パターンBは当事者の行動を記述した『単独行動』Viewグラフおよび『事故態様』Viewグラフ用に，パターンAはそれ以外のViewグラフ用として利用している．

\subsection{意味グラフ類似度算出部}
先で求めたViewグラフごとの総語意類似度と総格類似度の和をsigmoid関数を用いて算出された値が0〜100の範囲になるよう正規化する．この値をViewごとのViewグラフ類似度とする．そして11種類のViewごとのこの値の合計値を，判例各々の問い合わせ文に対する意味グラフ類似度とする．
蓄積されている全ての判例の問い合わせ文に対する意味グラフ類似度を算出する．この類似度で判例をソートして，高いものからユーザへ提示することで，判例検索システムを実現する．


\begin{figure}
\begin{center}
 \atari(100,89)
 \caption{発生場所Viewに関する類似度比較の例}
 \label{fig:viewResult}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
 \atari(110,29)
 \caption{すべてのViewに関する類似度比較結果と意味グラフ類似度}
 \label{fig:result}
\end{center}
\end{figure}

\subsection{事例}
本研究では実際に，事故の状況を文章で記述した図~\ref{fig:query}の問い合わせ文により図~\ref{fig:judicialcase}に示した判例を含む計3つの判例を対象として類似度評価を行った．
問い合わせ文と3つの判例から，本システムでの解析における途中結果を分析して，発生場所Viewに関する類似度を計算する上で抽出された語と語間の関係を取り出し，人が分かりやすいように，これらを含む原文を取り出して示したのが，図~\ref{fig:viewResult}である．さらに，この図において発生場所Viewについての総語意類似度，総格類似度，Viewグラフ類似度の計算結果を列挙した．
問い合わせ文の事故現場は信号機の設置された丁字路交差点であり，判例2および判例3も同様である．これに対し，判例1の事故現場は高速道路上り線上であり，問い合わせ文と異なる．この結果，まず判例1との比較では語意が近い語があることにより総語意類似度はある程度の値となったが，語間の関連性の類似性がなく総格類似度は0であった．一方判例2では，事故現場の交差点が共に2つの道路が『交差している』ということ，さらにその『交差する』で連体修飾されている『交差点』であること，『信号機が設置されている』ことなどの記述があることで，総語意類似度と総格類似度共に高い点になっている．一方判例3は，語の関連の仕方は判例2ほど似ていないので総格類似度は判例2ほど高くないが，『環八通り』という語が共に含まれているので総語意類似度は非常に高くなっている．これらと同様に他のViewについての比較計算が行われた結果，それぞれのViewごとの類似度は図~\ref{fig:result}に示すようになり，これらの和である意味グラフ類似度はそれぞれ138, 202, 264と算出された．

