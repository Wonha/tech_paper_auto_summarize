本システムは一般のボランティアが使用することを考慮してVisual C++を用いて開発を行い, Windows 95上で動作する対話型システムとした.
コンピュータソフトの入門的なテキスト(全4章)を用いて本システムの性能評価実験を行った.
このテキストは文章数3463文,文字数にして113884文字であった.
このテキスト全4章のうち,前半2章(文章数1226文, 66678文字)を用いてそこに出現する語をすべてテーブルに登録し,残りの後半2章については特にテーブルをチューニングせずに,前半・後半それぞれについて正解率を求めた.
分かち書きの正解率は次式によって計算した.
なお, '空振り'とは必要のない箇所を区切ってしまった間違い, '見逃し'は区切り忘れの間違いとする.
本システムで分かち書きが正しく行なわれなかった箇所については, 3つのケースに大別される.
各ケースの占める割合はほぼ3:1:1である.
語がテーブルに登録されていないことによる誤り
偉大と／いえる.
偉／大と／いえる.
「偉大」が漢字2字熟語に未登録でかつ「大」が接頭語テーブルに登録されているため
分かち書き手法の不備による誤り
…しか／しない.
…しかし／ない.
前方最長一致法を用いているため
複合情報の不足による誤り
コンピュータ会社
コンピュータ／会社
「コンピュータ会社」という熟語は連濁を生じてしまい,「コンピュータガイシャ」と読まれるため
市販の点訳プログラム（EXTRA Ver.3.0)と本システムの分かち書きの精度の比較を示す.
EXTRAが用いている分かち書き方式は公表されていないが,形態素解析を行っているものと思われる.
表[REF_table:d]より,空振りなし正解率,見逃しなし正解率ともにテーブルにすべて語が登録されている第1・2章においてもテーブルについて特にチューニングを行っていない第3・4章においても,本システムはEXTRAと同等程度の精度を得,本システムの有効性を確認できた.
テーブルのチューニングでは,ひらがな書き自立語テーブルと接頭語・接尾語テーブルは前半2章に出現する語がすべて含まれるように構築したが,これらのテーブルは語数も少なく,書式も単純なので簡単に更新できる.
従って,他の分野のテキストに対しても容易に適用できると考える.
処理時間についてはEXTRAは点字表記(あるいはかな表記)までを一括して処理している.
一方,本システムでは分かち書きまでしか行っていないため,単純には比較できない.
しかし, EXTRAで翻訳した結果を点訳ボランティアが見直すためには膨大な時間が必要になるのに対し,本システムでは誤り箇所を選択的にユーザに指摘することができる.
ユーザは指摘された箇所を選択的にチェックすればよいので,全テキストの分かち書き箇所のうち, T%が指摘できると仮定し,さらにCPU時間は無視できる程度に短いとすると,全体のスループットは[MATH]となる.
本システムの分かち書き処理における実験では約T=0.1であった.
本システムの漢字かな変換処理部,かな点字変換処理部が,現在の分かち書き処理部と同程度の処理能力をもつと仮定すると,点字を出力するまでの全体のスループットは従来の点訳プログラムを利用した場合に比べて約数分の一から十数分の一程度に短縮されることがみこまれる.
これはEXTRAの一括処理はユーザの介入も必要がなく,コンピュータ処理に要する時間は短いが,その後の見直しに非常に時間がかかり,複数のボランティアが何時間もかけて全文を複数回見直さなければならないのに対し,本システムでは対話処理的に作業が行えるために,見直しの作業に時間がかからないためである.
また,実際の点訳ボランティアからは,「漢字かな混じり文のままのほうが分かち書きのチェックがしやすい」との意見もあり,本システムを試用した複数の点訳ボランティアから「誤りの箇所が色別に指摘されるので見やすく,作業がはかどりそう」との感想を得ている.
{
}
畑田らの開発したOCR文書の認識誤りを一つずつダイアログボックスで確認して訂正する対話システムとの比較・検討を行う.
このシステムでは誤りを含む単語を一斉に表示して正しい単語が第1候補にある場合,ワンタッチで修正を行うもので,第1候補はそれぞれの単語の行の上に表示されている.
第1候補にない場合は,マウスカーソルを誤りを含む単語の所へ移動することにより単語の下にプルダウン式に第1候補から第5候補までが表示され,マウスポインタを移動してダブルクリックすることにより選んだ単語を誤った単語と置き換える.
これに対し,本システムでは現在のところ,曖昧な分かち書き結果をユーザに提示するにとどまり,より正しい分かち書き箇所を提示するには至っていない.
これは,スペルチェックのように正しい単語が明らかな場合と異なり,分かち書きの場合,前後にくる単語によって区切り方が異なるためである.
一方,スペルチェックでは同じ単語に対して毎回同じようにスペルミスをするとは限らないが,分かち書きの場合,ある単語の組合せで一度修正が行われると次回も同じように修正される可能性が高いことから,ユーザの修正を事例として記録しておいて同じ単語の組合せについては一括,あるいは順次訂正のメッセージを表示し,それ以降の曖昧箇所の指摘から除外する,といった機能を追加することが考えられる.
さらに,畑田らも用いている2文字, 3文字が隣接して生じる文字の共起関係を利用することは分かち書きにおいても有効である.
また,市販の点訳システムでも問題となる専門書に出現する数式やプログラム等,通常の文とは分けて特別扱いしなければならない部分についても本来対話的に処理できることが望ましい.
本システムにおける分かち書きは段落単位で,あるいは全文書を一括に処理することができ,対話の応答時間はユーザの思考を妨げない程度のものである.
現在のところ,知識ベースBによってみつけることのできる誤りは誤り全体の約4分の1程度であり,約5%については正確に誤り箇所を指摘することができた.
今後,この知識ベースBを充実させることにより,さらにボランティアの見直しの手間を軽減することができると考えられる.
