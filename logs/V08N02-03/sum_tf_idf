================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:193] コンピュータに人間のような常識的判断を行わせるための主要素は，概念ベースおよび概念間の関連性に基づく概念連鎖機能であると考えられる．
[i:3, score:248] 従来の手法では，概念はその１次属性のベクトルモデルとして表現され，関連度はベクトル間の内積により求められている．
[i:6, score:204] 約４万の概念よりなる概念ベースを用いた実験により，提案手法はベクトル内積を用いる方法に比べ正解率の面でやや優れる上に，概念知識の追加/変更が容易で利用を通じての質の向上が図れることを示した．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:15, score:301] 本稿では，この概念連鎖メカニズムの基盤となる概念ベースの構造，すなわち，語とその意味を表す属性（関連の強い語）の集合の構成とそれを用いた概念間の関連度の定量化方式について提案している．
[i:25, score:287] そこでは，一つの概念を，「意味特徴を表す属性」と「概念と属性の関連の深さを表す重み」で表現された[MATH]次元ベクトルとして取り扱い，２つの概念間の類似度は正規化された２ベクトルの内積として計算している．
[i:27, score:265] また，属性の重みの問題として，出現頻度に基づき重みが付与されているが，属性の追加／修正が発生した時，新しい属性の重みをどのように決定するのか，既に存在する属性の重みはどのように変更するのか，という問題が生じ，概念ベースの継続的な成長を前提とすることは難しい．

================================================================
[section type  : proposed_method]
[section title : 概念ベースの構造]
================================================================
[i:32, score:0] 
-----------------------------------------------------
  [subsection title : 概念ベース]
-----------------------------------------------------
  [i:lead, 127] 本研究では[CITE]で抽出された約４万の概念の利用を前提としており概念の定義は以下とする．
.....
  [i:39, score:232] 約４万の概念Aとその属性[MATH]および重み[MATH]を複数の国語辞書などの語義文から自動的に獲得している．
  [i:44, score:284] 基本概念ベースの各基本属性をALT-J/Eシソーラス[CITE]の約3千種の概念カテゴリーに分類圧縮し，これらを新属性として各属性の重みを正規化し直す．
  [i:47, score:277] 基本概念ベースの各概念がもつ属性の中から重み順に30個を抽出することにより属性数を縮小し，属性の重みも正規化し直す．
-----------------------------------------------------
  [subsection title : 概念ベースの利用形態]
-----------------------------------------------------
  [i:lead, 145] ３種の概念ベースのもつこれらの特性を考慮して，本研究では以下のような利用形態を評価する．
.....
  [i:58, score:330] 約3千種の属性と重みで表現された圧縮概念ベースの場合には，カテゴリー圧縮により属性間の独立性がある程度高められていることから，各概念を約3千次元のベクトルとして扱うことができ，関連度は２つの概念ベクトルの内積として定義する．
  [i:59, score:291] 概念の属性数を30個以下に縮小した縮小概念ベースにおいても属性の直交性を仮定できないので，２つの概念の関連の強さを集合としての近さで評価する．
  [i:62, score:282] 概念間の関連の度合いを属性集合の近さで評価する方式では，本稿で提案するような重みを使用しない評価方式や属性も概念としてとらえ，概念を属性の連鎖的関係で定義する方式も可能となる．
-----------------------------------------------------
  [subsection title : 概念の連鎖的定義]
-----------------------------------------------------
  [i:lead, 134] 概念ベースにおける各概念は，ある単語の表記によってラベル付けできる．
.....
  [i:65, score:245] また，基本概念ベースおよび縮小概念ベースでは，属性[MATH]もある単語表記である．
  [i:73, score:226] 概念[MATH]を２次属性までの概念連鎖で定義すると以下のようにマトリックス状になる．
  [i:76, score:271] したがって，基本概念ベースおよび縮小概念ベースでは，概念[MATH]は[MATH]次までの属性の連鎖で定義されていることになる．

================================================================
[section type  : experiment_result]
[section title : 概念関連度の評価モデル]
================================================================
[i:77, score:0] 
-----------------------------------------------------
  [subsection title : 概念の属性ベクトル空間モデル]
-----------------------------------------------------
  [i:lead, 166] 従来，概念関連度の評価は，２つの正規化された概念ベクトルの内積により行われている[CITE].
.....
  [i:78, score:166] 従来，概念関連度の評価は，２つの正規化された概念ベクトルの内積により行われている[CITE].
  [i:80, score:150] しかし，この方式では各属性間の直交性を仮定しており，直交属性を選ぶことは容易ではなく[CITE]，また，適切な重みを設定することも非常に困難であると思われる．
  [i:81, score:300] [CITE]ではALT-J/Eシソーラス[CITE]の約3千種の概念カテゴリーを属性として利用し，各属性の重みは，基本的には出現頻度により与えているが，十分な直交性を有しているか，また，適切な重みになっているか，あるいは，そのような適切な性質を持つような概念ベースへと自動的に精錬を行えるかが問題となる．
-----------------------------------------------------
  [subsection title : 概念の属性集合モデル]
-----------------------------------------------------
  [i:lead, 196] [REF_CBchain]で示したように，本稿で提案する概念の定義では，任意の概念[MATH]はその属性の集合として定義されている．
.....
  [i:86, score:234] したがって，2つの概念[MATH]，[MATH]の関連度は，それぞれの1次属性同士の一致単語数を0から1の範囲に正規化したものとする．
  [i:105, score:257] 以上の考察より，概念[MATH]と概念[MATH]との２次属性までの概念連鎖による関連度[MATH]は以下に示すアルゴリズム(CNW)により評価する．
  [i:118, score:239] 概念[MATH]の各1次属性を対応する概念[MATH]の各1次属性との重み付き一致度([MATH])の合計が最大になるように並べ替える．

================================================================
[section type  : experiment_result]
[section title : 評価実験と考察]
================================================================
[i:130, score:240] 関連度の性能は，使用する概念ベースと関連度計算方式の両方に左右されるが，本稿では概念ベース３通り（基本概念ベース，圧縮概念ベース，縮小概念ベース）に対して，以下に示す５通りの関連度計算方式の各組合せについて検討する．
[i:133, score:265] 重み情報を利用しない２次属性までの概念連鎖による関連度（式[REF_Echain]）
[i:134, score:265] 重み情報を利用する２次属性までの概念連鎖による関連度（式[REF_EchainW]）
-----------------------------------------------------
  [subsection title : 評価法]
-----------------------------------------------------
  [i:lead, 128] まず，以下のような４つの概念の組（サンプル概念）を準備する．
.....
  [i:146, score:190] すなわち，被験者約30名に対して，サンプル概念(X, A, B, C)を20組以上作成してもらい，さらに，サンプル概念作成者以外の２人により各サンプル概念が正しいかどうか判断してもらい，１人でも正しいとは言えないと答えたサンプル概念は削除した．
  [i:148, score:159] 以上のような過程を経て，合計559組のサンプル概念(da33-559)を準備した．
  [i:150, score:207] 関連度評価方式の評価点は，全サンプル概念(559組)に対する正解率，すなわち，サンプル概念100組あたりのA,B,Cの順序正解個数とする．
-----------------------------------------------------
  [subsection title : 評価結果と考察]
-----------------------------------------------------
  [i:lead, 212] 以上で準備したサンプル概念を用いて，表[REF_Case]に示した９通りの方式（概念ベースと関連度計算方式）に対して，評価実験を行った．
.....
  [i:157, score:345] MatchW，Match方式は，１次属性のみしか用いないために，属性同士の一致確率が極めて低く，さらに属性数を30個に打ち切ってしまう縮小概念ベースでは，雑音の抑制効果よりも，属性同士の一致確率の減少がまさってしまうため，このような結果となったものと考えられる．
  [i:158, score:311] この点においても，概念を連鎖的に利用することにより，属性同士が完全に一致していなくても概念としての一致度を利用できるChainW，Chain方式が有効であることが確認できる．
  [i:169, score:319] PentiumII 400MHzのパーソナルコンピュータで実行した場合，サンプル概念559組（1677回の関連度計算）に対する計算時間は，圧縮のVector，縮小のMatchおよびMatchWでは約12秒，縮小のChainおよびChainWでは約23秒である．
-----------------------------------------------------
  [subsection title : 概念ベースへの属性追加実験]
-----------------------------------------------------
  [i:lead, 279] 従来の関連度計算方式Vectorでは，概念ベースを構築・拡張・精錬する際には，シソーラスなどの概念カテゴリーデータベースが必要であるのに対し，提案した関連度計算方式ChainW，Chainでは，シソーラスなどは不要である．
.....
  [i:173, score:279] 従来の関連度計算方式Vectorでは，概念ベースを構築・拡張・精錬する際には，シソーラスなどの概念カテゴリーデータベースが必要であるのに対し，提案した関連度計算方式ChainW，Chainでは，シソーラスなどは不要である．
  [i:176, score:316] そこでここでは，縮小概念ベース＋Chainに対して，概念への人手による適切な属性の追加実験を行い，概念ベースの成長の容易性と関連度性能の向上可能性を示す．
  [i:189, score:300] Chain方式は，重みを計算には使用せずに概念の２次属性までを連鎖的に利用する方式である．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:195, score:294] 従来の関連度定量化方式は，概念を属性の重みベクトルで表現し，概念の関連度は２つの重みベクトルの正規化されたベクトル内積により評価している．
[i:198, score:289] 提案方式では，概念をその属性集合の２次元の連鎖的な集合（マトリックスで表現される）とみなし，２つの概念の対応する１次属性間での２次属性の一致度合いで評価している．
[i:202, score:340] また，提案方式で属性の重みを概念ベースの縮小化にだけ使い関連度計算では重みを使わない場合には，属性の追加・削減が容易となり，属性が学習や利用者の教示により継続的に改善され，判断の正確性は一層高いものとなることが期待できる．

