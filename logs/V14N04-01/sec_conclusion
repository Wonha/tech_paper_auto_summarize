評価実験で用いたコーパスは，大きく分けて2つに分類できる．
1つは，分割せずに検索した場合，クエリを構成する節点数が増えると検索時間が非常に遅くなるものである．
このタイプのコーパスは，Penn Treebank Corpus，TIGER Corpus，Penn Korean Treebank Corpus，FLOREST sinta(c)ticaが当てはまる．
もう1つは，クエリの節点数が増えても検索時間に影響を与えないものである．
このタイプのコーパスとして，Penn Chinese Treebank Corpus，東工大コーパス(RWC),東工大コーパス(EDR)が当てはまる．
このような違いが，コーパスのどの特徴と関連しているのか，コーパスの以下の特徴に着目し考察した．
コーパスの文数
ラベルの頻度
節点の平均分岐数
コーパスの文数が検索時間に影響を与えることが考えられる．
つまり，文数が多ければ検索に時間がかかり，少なければ時間がかからないはずである．
しかし，\tablename[REF_tbl:corpora]からわかるようにPenn Korean Treebank Corpus（5,083文），FLOREST sinta(c)tica（8,307文）は，比較的コーパスに含まれる文数が少ないが，クエリの節点数が増加するとともに検索時間が大幅に増加している．
また，Penn Chinese Treebank（15,168文）は文数が多いにも関わらず，節点数が増加しても検索時間は増加していない．
さらにPenn Treebank Corpusの文数を1,000文，5,000文，11,976文，48,884文と変化させ，検索時間の変化を調べた．
クエリなどの実験環境は，評価実験で用いたものと同じである．
その結果を\figurename[REF_fig:size]に示す．
この結果からコーパスに含まれる文数が減少しても，節点数が増加するとともに検索時間が増大していることがわかった．
つまり，コーパスの文数と検索時間増大の間には，関連性は低いものと考えられる．
クエリ内のラベルが検索時間に影響を与えることが考えられる．
例えば，クエリに含まれるラベルが非常に稀にしか出現しないラベルであれば，非常に早く検索することができるはずである．
しかし，\tablename[REF_tbl:corpora]からわかるように，Penn Treebank Corpusはラベル（非終端記号）の異なり数が多いが検索時間が急激に増加している．
一方，東工大コーパス(RWC)はラベルの異なりが少ないが，検索時間が増大していない．
Penn Treebank Corpus，東工大コーパス(RWC)を用いて，ラベルを``[MATH]''で置き換えたクエリを用いて，実験を行った．
クエリは，評価実験を行ったときと同一である．
その結果を\figurename[REF_fig:label]に示す．
ラベルの情報がなくなったため，双方ともに評価実験よりも検索時間を要しているが，節点数と検索時間との関係に変化はなかった．
ラベルの頻度と検索時間の増大は関連性が低いと考えられる．
次に，コーパスの特徴として節点の平均分岐数に注目した．
分岐数が多くなれば，構文木は複雑になり，検索に時間を要することが考えられる．
そこで，全てのコーパスについて，それぞれの節点の平均分岐数を調べた．
その結果を\figurename[REF_fig:branch]に示す．
この結果から確かに検索時間が増大する傾向にあるコーパスは，平均子供数が比較的大きいことがわかる．
しかし，Penn Korean TreebankとPenn Chinese Treebankの差はあまりなく，平均分岐数が決定的な原因であるとは考えがたい．
だが，コーパス内の文の構造の複雑さが一因である可能性は確認できる．
本論文では，構文木付きコーパスを高速に構造検索する手法を提案した．
構文木付きコーパスのデータベース化は，木構造を持つXML文書を格納・検索する手法を用い，部分木で表現されたクエリをSQL文に変換して検索を行う．
節点数の多いクエリに対する検索時間が増大するという問題を解決するために，クエリを分割し，漸進的に検索する手法を提案した．
クエリの分割は，まずコーパスから最大検索単位節点数を計算し，最大検索単位節点数をもとに，効率的に検索できるようクエリを分割し，検索を行う．
評価実験では，7つのコーパス中の4つに対して，クエリを分割せずに検索する手法よりも効率的に検索を行うことができることを示した．
また，評価実験で用いたコーパスには，クエリの節点数が増加すると検索時間が非常に遅くなるものと，そうでないものの2種類が存在した．
その違いの要因が，コーパスに含まれる構文構造の複雑さに起因するものであることについて考察した．
今後の課題として，次のようなものがあげられる．
節点が少ないクエリに対する検索の高速化
検索時間とコーパスに含まれる構文構造の複雑さとの関連性の解明
コーパス作成支援システムへの応用
評価実験で用いたコーパスは，大きく分けて2つに分類できる．
1つは，分割せずに検索した場合，クエリを構成する節点数が増えると検索時間が非常に遅くなるものである．
このタイプのコーパスは，Penn Treebank Corpus，TIGER Corpus，Penn Korean Treebank Corpus，FLOREST sinta(c)ticaが当てはまる．
もう1つは，クエリの節点数が増えても検索時間に影響を与えないものである．
このタイプのコーパスとして，Penn Chinese Treebank Corpus，東工大コーパス(RWC),東工大コーパス(EDR)が当てはまる．
このような違いが，コーパスのどの特徴と関連しているのか，コーパスの以下の特徴に着目し考察した．
コーパスの文数
ラベルの頻度
節点の平均分岐数
コーパスの文数が検索時間に影響を与えることが考えられる．
つまり，文数が多ければ検索に時間がかかり，少なければ時間がかからないはずである．
しかし，\tablename[REF_tbl:corpora]からわかるようにPenn Korean Treebank Corpus（5,083文），FLOREST sinta(c)tica（8,307文）は，比較的コーパスに含まれる文数が少ないが，クエリの節点数が増加するとともに検索時間が大幅に増加している．
また，Penn Chinese Treebank（15,168文）は文数が多いにも関わらず，節点数が増加しても検索時間は増加していない．
さらにPenn Treebank Corpusの文数を1,000文，5,000文，11,976文，48,884文と変化させ，検索時間の変化を調べた．
クエリなどの実験環境は，評価実験で用いたものと同じである．
その結果を\figurename[REF_fig:size]に示す．
この結果からコーパスに含まれる文数が減少しても，節点数が増加するとともに検索時間が増大していることがわかった．
つまり，コーパスの文数と検索時間増大の間には，関連性は低いものと考えられる．
クエリ内のラベルが検索時間に影響を与えることが考えられる．
例えば，クエリに含まれるラベルが非常に稀にしか出現しないラベルであれば，非常に早く検索することができるはずである．
しかし，\tablename[REF_tbl:corpora]からわかるように，Penn Treebank Corpusはラベル（非終端記号）の異なり数が多いが検索時間が急激に増加している．
一方，東工大コーパス(RWC)はラベルの異なりが少ないが，検索時間が増大していない．
Penn Treebank Corpus，東工大コーパス(RWC)を用いて，ラベルを``[MATH]''で置き換えたクエリを用いて，実験を行った．
クエリは，評価実験を行ったときと同一である．
その結果を\figurename[REF_fig:label]に示す．
ラベルの情報がなくなったため，双方ともに評価実験よりも検索時間を要しているが，節点数と検索時間との関係に変化はなかった．
ラベルの頻度と検索時間の増大は関連性が低いと考えられる．
次に，コーパスの特徴として節点の平均分岐数に注目した．
分岐数が多くなれば，構文木は複雑になり，検索に時間を要することが考えられる．
そこで，全てのコーパスについて，それぞれの節点の平均分岐数を調べた．
その結果を\figurename[REF_fig:branch]に示す．
この結果から確かに検索時間が増大する傾向にあるコーパスは，平均子供数が比較的大きいことがわかる．
しかし，Penn Korean TreebankとPenn Chinese Treebankの差はあまりなく，平均分岐数が決定的な原因であるとは考えがたい．
だが，コーパス内の文の構造の複雑さが一因である可能性は確認できる．
本論文では，構文木付きコーパスを高速に構造検索する手法を提案した．
構文木付きコーパスのデータベース化は，木構造を持つXML文書を格納・検索する手法を用い，部分木で表現されたクエリをSQL文に変換して検索を行う．
節点数の多いクエリに対する検索時間が増大するという問題を解決するために，クエリを分割し，漸進的に検索する手法を提案した．
クエリの分割は，まずコーパスから最大検索単位節点数を計算し，最大検索単位節点数をもとに，効率的に検索できるようクエリを分割し，検索を行う．
評価実験では，7つのコーパス中の4つに対して，クエリを分割せずに検索する手法よりも効率的に検索を行うことができることを示した．
また，評価実験で用いたコーパスには，クエリの節点数が増加すると検索時間が非常に遅くなるものと，そうでないものの2種類が存在した．
その違いの要因が，コーパスに含まれる構文構造の複雑さに起因するものであることについて考察した．
今後の課題として，次のようなものがあげられる．
節点が少ないクエリに対する検索の高速化
検索時間とコーパスに含まれる構文構造の複雑さとの関連性の解明
コーパス作成支援システムへの応用
