機能表現とは，「にあたって」や「をめぐって」のように，2つ以上の語から構成され，全体として1つの機能的な意味をもつ表現である．
一方，この機能表現に対して，それと同一表記をとり，内容的な意味をもつ表現が存在することがある．
例えば，\strref{ex:niatatte-F}と\strref{ex:niatatte-C}には，「にあたって」という表記の表現が共通して現れている．
出発する\kern0pt\uline{にあたって}，荷物をチェックした
ボールは，壁\kern0pt\uline{にあたって}跳ね返った
\strref{ex:niatatte-F}では，下線部はひとかたまりとなって，「機会が来たのに当面して」という機能的な意味で用いられている．
それに対して，\strref{ex:niatatte-C}では，下線部に含まれている動詞「あたる」は，動詞「あたる」本来の内容的な意味で用いられている．
このような表現においては，機能的な意味で用いられている場合と，内容的な意味で用いられている場合とを識別する必要がある[CITE]．
以下，文([REF_ex:niatatte-F]), ([REF_ex:niatatte-C])の下線部のように，表記のみに基づいて判断すると，機能的に用いられている可能性がある部分を機能表現候補と呼ぶ．
機能表現の数については，いくつかの先行研究が存在する．
[CITE]は，450種類の表現を，意味的に52種類に分類し，機能的に7種類に分類している．
[CITE]は，森田らが分類した表現の内，格助詞，接続助詞および助動詞に相当する表現について，階層的かつ網羅的な整理を行い，390種類の意味的・機能的に異なる表現が存在し，その異形は13690種類に上ると報告している．
土屋らは，森田らが分類した表現の内，特に一般性が高いと判断される337種類の表現について，新聞記事から機能表現候補を含む用例を無作為に収集し，人手によって用法を判定したデータベースを作成している．
このデータベースによると，機能表現候補が新聞記事（1年間）に50回以上出現し，かつ，機能的な意味で用いられている場合と，それ以外の意味で用いられている場合の両方が適度な割合で出現する表現は，52種類である．
本論文では，この52種類の表現を当面の検討対象として，機能表現の取り扱い状況を検討する．
まず，既存の解析系について，この52種類の表現に対する取り扱い状況を調査したところ，52種類の表現全てに対して十分な取り扱いがされているわけではないことが分かった．
52種類の表現の内，形態素解析器JUMAN [CITE]と構文解析器KNP[CITE]の組合わせによって，機能的な意味で用いられている場合と内容的な意味で用いられている場合とが識別される可能性がある表現は31種類である．
また，形態素解析器ChaSen [CITE]と構文解析器CaboCha [CITE]の組合わせを用いた場合には，識別される可能性がある表現は26種類である．
このような現状を改善するには，機能表現候補の用法を正しく識別する検出器が必要である．
そのような検出器を実現する方法として，検出対象である機能表現を形態素解析用辞書に登録し，形態素解析と同時に機能表現を検出する方法と，形態素解析結果を利用して機能表現を検出する方法が考えられる．
現在，広く用いられている形態素解析器は，機械学習的なアプローチで接続制約や連接コストを推定した辞書に基づいて動作する．
そのため，形態素解析と同時に機能表現を検出するには，既存の形態素に加えて各機能表現の接続制約や連接コストを推定するための，機能表現がラベル付けされた大規模なコーパスが必要になる．
しかし，検出対象の機能表現が多数になる場合は，作成コストの点から見て，そのような条件を満たす大規模コーパスを準備することは非現実的である．
形態素解析と機能表現検出が独立に実行可能であると仮定し，形態素解析結果を利用して機能表現を検出することにすると，前述のような問題を避けられる．
そこで，機能表現の構成要素である可能性がある形態素が，機能表現の一部として現れる場合と，機能表現とは関係なく現れる場合で，接続制約が変化しないという仮定を置いた上で，人手で作成した検出規則を形態素解析結果に対して適用することにより機能表現を検出する手法が提案されてきた[CITE]．
しかし，これらの手法では，検出規則を人手で作成するのに多大なコストが必要となり，検出対象とする機能表現集合の規模の拡大に対して追従が困難である．
そこで，本論文では，機能表現検出と形態素解析は独立に実行可能であると仮定した上で，機能表現検出を形態素を単位とするチャンク同定問題として定式化し，形態素解析結果から機械学習によって機能表現を検出する方法を提案する．
機械学習手法としては，入力次元数に依存しない高い汎化能力を持ち，Kernel関数を導入することによって効率良く素性の組合わせを考慮しながら分類問題を学習することが可能なSupport Vector Machine (SVM)[CITE]を用いる．
具体的には，SVMを用いたチャンカーYamCha [CITE]を利用して，形態素解析器ChaSenによる形態素解析結果を入力とする機能表現検出器を実装した．
ただし，形態素解析用辞書に「助詞・格助詞・連語」や「接続詞」として登録されている複合語が，形態素解析結果中に含まれていた場合は，その複合語を，構成要素である形態素の列に置き換えた形態素列を入力とする．
また，訓練データとしては，先に述べた52表現について人手で用法を判定したデータを用いる．
更に，このようにして実装した機能表現検出器は，既存の解析系および[CITE]が提案した人手で作成した規則に基づく手法と比べて，機能表現を高精度に検出できることを示す．
本論文の構成は以下の通りである．
最初に，本論文の対象とする機能表現と，その機能表現候補の用法を表現するための判定ラベルについて述べた上で，機能表現検出をチャンク同定問題として定式化する（[REF_sec:detection]章）．
次に，SVMを用いて機能表現検出器を実装するための詳細を説明する（[REF_sec:chunking_using_svm]章）．
[REF_sec:human_rule]章では，人手で判定規則を作成して機能表現を検出する手法について説明する．
[REF_sec:実験と考察]章では，作成した機能表現検出器の検出性能を評価し，この検出器は，既存の解析系および人手によって規則を作成した手法と比べ，機能表現を高精度に検出できることを示す．
加えて，機械学習時に必要となる訓練データを削減する方法を検討する．
[REF_sec:関連研究]章では，関連研究について述べ，最後に結論を述べる（[REF_sec:おわりに]章）．
機能表現とは，「にあたって」や「をめぐって」のように，2つ以上の語から構成され，全体として1つの機能的な意味をもつ表現である．
一方，この機能表現に対して，それと同一表記をとり，内容的な意味をもつ表現が存在することがある．
例えば，\strref{ex:niatatte-F}と\strref{ex:niatatte-C}には，「にあたって」という表記の表現が共通して現れている．
出発する\kern0pt\uline{にあたって}，荷物をチェックした
ボールは，壁\kern0pt\uline{にあたって}跳ね返った
\strref{ex:niatatte-F}では，下線部はひとかたまりとなって，「機会が来たのに当面して」という機能的な意味で用いられている．
それに対して，\strref{ex:niatatte-C}では，下線部に含まれている動詞「あたる」は，動詞「あたる」本来の内容的な意味で用いられている．
このような表現においては，機能的な意味で用いられている場合と，内容的な意味で用いられている場合とを識別する必要がある[CITE]．
以下，文([REF_ex:niatatte-F]), ([REF_ex:niatatte-C])の下線部のように，表記のみに基づいて判断すると，機能的に用いられている可能性がある部分を機能表現候補と呼ぶ．
機能表現の数については，いくつかの先行研究が存在する．
[CITE]は，450種類の表現を，意味的に52種類に分類し，機能的に7種類に分類している．
[CITE]は，森田らが分類した表現の内，格助詞，接続助詞および助動詞に相当する表現について，階層的かつ網羅的な整理を行い，390種類の意味的・機能的に異なる表現が存在し，その異形は13690種類に上ると報告している．
土屋らは，森田らが分類した表現の内，特に一般性が高いと判断される337種類の表現について，新聞記事から機能表現候補を含む用例を無作為に収集し，人手によって用法を判定したデータベースを作成している．
このデータベースによると，機能表現候補が新聞記事（1年間）に50回以上出現し，かつ，機能的な意味で用いられている場合と，それ以外の意味で用いられている場合の両方が適度な割合で出現する表現は，52種類である．
本論文では，この52種類の表現を当面の検討対象として，機能表現の取り扱い状況を検討する．
まず，既存の解析系について，この52種類の表現に対する取り扱い状況を調査したところ，52種類の表現全てに対して十分な取り扱いがされているわけではないことが分かった．
52種類の表現の内，形態素解析器JUMAN [CITE]と構文解析器KNP[CITE]の組合わせによって，機能的な意味で用いられている場合と内容的な意味で用いられている場合とが識別される可能性がある表現は31種類である．
また，形態素解析器ChaSen [CITE]と構文解析器CaboCha [CITE]の組合わせを用いた場合には，識別される可能性がある表現は26種類である．
このような現状を改善するには，機能表現候補の用法を正しく識別する検出器が必要である．
そのような検出器を実現する方法として，検出対象である機能表現を形態素解析用辞書に登録し，形態素解析と同時に機能表現を検出する方法と，形態素解析結果を利用して機能表現を検出する方法が考えられる．
現在，広く用いられている形態素解析器は，機械学習的なアプローチで接続制約や連接コストを推定した辞書に基づいて動作する．
そのため，形態素解析と同時に機能表現を検出するには，既存の形態素に加えて各機能表現の接続制約や連接コストを推定するための，機能表現がラベル付けされた大規模なコーパスが必要になる．
しかし，検出対象の機能表現が多数になる場合は，作成コストの点から見て，そのような条件を満たす大規模コーパスを準備することは非現実的である．
形態素解析と機能表現検出が独立に実行可能であると仮定し，形態素解析結果を利用して機能表現を検出することにすると，前述のような問題を避けられる．
そこで，機能表現の構成要素である可能性がある形態素が，機能表現の一部として現れる場合と，機能表現とは関係なく現れる場合で，接続制約が変化しないという仮定を置いた上で，人手で作成した検出規則を形態素解析結果に対して適用することにより機能表現を検出する手法が提案されてきた[CITE]．
しかし，これらの手法では，検出規則を人手で作成するのに多大なコストが必要となり，検出対象とする機能表現集合の規模の拡大に対して追従が困難である．
そこで，本論文では，機能表現検出と形態素解析は独立に実行可能であると仮定した上で，機能表現検出を形態素を単位とするチャンク同定問題として定式化し，形態素解析結果から機械学習によって機能表現を検出する方法を提案する．
機械学習手法としては，入力次元数に依存しない高い汎化能力を持ち，Kernel関数を導入することによって効率良く素性の組合わせを考慮しながら分類問題を学習することが可能なSupport Vector Machine (SVM)[CITE]を用いる．
具体的には，SVMを用いたチャンカーYamCha [CITE]を利用して，形態素解析器ChaSenによる形態素解析結果を入力とする機能表現検出器を実装した．
ただし，形態素解析用辞書に「助詞・格助詞・連語」や「接続詞」として登録されている複合語が，形態素解析結果中に含まれていた場合は，その複合語を，構成要素である形態素の列に置き換えた形態素列を入力とする．
また，訓練データとしては，先に述べた52表現について人手で用法を判定したデータを用いる．
更に，このようにして実装した機能表現検出器は，既存の解析系および[CITE]が提案した人手で作成した規則に基づく手法と比べて，機能表現を高精度に検出できることを示す．
本論文の構成は以下の通りである．
最初に，本論文の対象とする機能表現と，その機能表現候補の用法を表現するための判定ラベルについて述べた上で，機能表現検出をチャンク同定問題として定式化する（[REF_sec:detection]章）．
次に，SVMを用いて機能表現検出器を実装するための詳細を説明する（[REF_sec:chunking_using_svm]章）．
[REF_sec:human_rule]章では，人手で判定規則を作成して機能表現を検出する手法について説明する．
[REF_sec:実験と考察]章では，作成した機能表現検出器の検出性能を評価し，この検出器は，既存の解析系および人手によって規則を作成した手法と比べ，機能表現を高精度に検出できることを示す．
加えて，機械学習時に必要となる訓練データを削減する方法を検討する．
[REF_sec:関連研究]章では，関連研究について述べ，最後に結論を述べる（[REF_sec:おわりに]章）．
