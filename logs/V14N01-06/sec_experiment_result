本論文で提案する2つの検出器，検出器Fと検出器FAMに対して，学習および解析を行い，各ベースラインと性能を比較した．
また，用いる素性の違いによって，性能がどのように変化するかを調査した．
さらに，訓練時のデータサイズの違いと検出性能の関係を明らかにし，最後に，訓練データの作成コストの削減が可能であるかを調査した．
文を単位として学習を行うには，文中に現れる全ての機能表現候補に対して判定ラベルが付与されたデータが必要である．
そのため，本論文の対象とする52表現に対する用例として用例データベースに収録されている2600例文（1つの表現につき50例文）について，これらの例文に含まれている全ての機能表現候補に判定ラベルを付与した．
以下，この2600例文をまとめて，全データセットと呼ぶ．
ただし，用例データベースでは，機能表現候補の先頭と末尾が形態素境界と一致しない候補にも判定ラベルが付与されているが，本論文では，形態素解析結果に基づいて機能表現を検出する立場をとるため，そのような機能表現候補に対する判定ラベルは取り除くことにする．
具体的には，以下のような処理を行った．
最初に，用例データベースに収録されている用例を，IPA品詞体系の形態素解析用辞書に基づいて動作する形態素解析器ChaSenを用いて形態素解析した．
次に，形態素解析結果中に，形態素解析用辞書に「助詞・格助詞・連語」や「接続詞」として登録されている複合語が含まれていた場合は，その複合語を，構成要素である形態素の列に置き換えた．
このようにして得られた形態素解析結果と機能表現候補を照合し，先頭と末尾が形態素境界と一致しなかった176個の候補に対する判定ラベルを取り除いた．
取り除いた判定ラベルの内，175個は，人手によってラベルBと判定されている．
また，取り除いた手順より明らかに，この175個の判定ラベルに対応する機能表現候補は，形態素解析結果のみに基づいてラベルBと判定することができる．
したがって，これらの判定ラベルを取り除いても，機能表現検出の評価としては問題はない．
取り除いた判定ラベルの内，残る1個は，人手によってラベルMと判定されている．
この判定ラベルは，形態素解析誤りによって取り除かれてしまったが，数が僅かであり，無視することができる．
全データセットに含まれる各ラベルの数と，全形態素数を\tabref{tab:dataset}に示す．
1つの例文に，複数の機能表現候補が出現する場合があるため，機能表現候補の総数は，例文の総数よりも多くなっている．
実験を評価する際の尺度には，以下の式で表される精度，再現率，F値，および判別率を用いた．
精度&= \frac{検出に成功したチャンク数}{解析によって検出されたチャンク数}
[0.5zh]再現率&= \frac{検出に成功したチャンク数}{評価データに存在するチャンク数}
[0.5zh]Ｆ値&= \frac{2 \times精度\times再現率}{精度+再現率}
[0.5zh]判別率&= \frac{正解した判定ラベル数}{全判定ラベル数}
また，実験は，10分割交差検定を用いて行った．
既存の解析系(JUMAN/KNPおよびChaSen/CaboCha)は，形態素解析および構文解析段階で処理が必要となる機能表現を，部分的に処理の対象としている．
しかし，明示的に機能表現を取り扱うという立場は取っていないため，機能表現のチャンキングというタスクに対する既存の解析系の性能を評価するには，その出力をどのように解釈するかを定めておく必要がある．
形態素解析器JUMANと構文解析器KNPの組み合わせでは，機能表現は以下のように処理される．
最初に，接続詞として形態素解析用辞書に登録されている機能表現は，形態素解析時に検出される．
次に，構文解析時に，解析規則に記述された特定の形態素列が現れると，直前の文節の一部としてまとめたり，直前の文節からの係り受けのみを受けるように制約を加えて，機能表現である可能性を考慮した解析を行う．
一方，IPA品詞体系(THiMCO97)の形態素解析用辞書[CITE]を用いた形態素解析器ChaSenと，京都テキストコーパス[CITE]から機械学習したモデルを用いた構文解析器CaboChaの組合わせでは，機能表現は以下のように処理される．
最初に，形態素解析用辞書に「助詞・格助詞・連語」や「接続詞」として登録されている機能表現は，形態素解析時に検出される．
また，「ざるを得ない」などの表現は直前の文節の一部としてまとめられ，機能的な表現として解析される．
本論文では，機能表現候補部分が，機能表現である可能性を考慮した解析の対象となっている場合は，判定ラベルF, A, Mのいずれかが付与されているとみなし，それ以外の場合は，判定ラベルC, Y, Bのいずれかが付与されているとみなすことにする．
既存の解析系でも，一部の機能表現については，機能的な働きをしていることを考慮した解析が行われているが，その対応状況は不十分である．
判定ラベルF, A, Mのいずれかが付与されている用例の内，少なくとも1つの用例が，機能的に働いている可能性を考慮して解析され，かつ，判定ラベルC, Y, Bのいずれかが付与された用例の内，少なくとも1つの用例が，機能的に働いている可能性を考慮せずに解析されている場合，その機能表現は，用法が正しく区別される可能性があるとする．
用例データベースに50用例が収録されている表現で，かつ，機能的な意味で用いられている場合と，それ以外の意味で用いられている場合の両方が適度な割合で出現する表現は，52種類ある．
本論文では，この52種類を対象とするが，その内，JUMAN/KNPによって用法が正しく区別される可能性がある表現は，31種類である．
一方，ChaSen/CaboChaによって用法が正しく区別される可能性がある表現は26種類である．
また，用例データベースに収録されている337表現全体では，新聞上の実際の用法の割合に関係なく識別が必要と思われる表現は，111種類である．
その内，JUMAN/KNPによって用法が正しく区別される可能性がある表現は43種類，ChaSen/CaboChaによって用法が正しく区別される可能性がある表現は40種類である．
検出器Fおよび検出器FAMと，各ベースラインの検出性能を\tabref{tab:kekka_gaiyou}に示す．
\tabref{tab:kekka_gaiyou}において，「頻度最大の判定ラベル」とは，全ての候補部分に対して頻度最大の判定ラベル（ラベルF）を付与した場合の検出性能である．
「JUMAN/KNP」および「ChaSen/CaboCha」といった既存の解析系は，機能表現の用法の区別を意識した検出は行わないため，ラベルF，A，Mを正解とする評価のみを行った．
「人手作成の規則による検出器」は，[REF_sec:human_rule]節で記述した手法による検出性能である．
\tabref{tab:kekka_gaiyou}中の「CRFを用いた検出器」は，Conditional Random Fileds (CRF)[CITE]によって学習・解析を行った場合の検出性能である．
CRFとは，系列ラベリング問題のために設計された識別モデルであり，正しい系列ラベリングを他の全ラベリング候補と弁別するような学習を行う．
本論文では，CRFによる学習・解析用ツールとしてCRF++を利用した．
素性としては，前後2形態素の形態素素性，チャンク素性，チャンク文脈素性と，直前2形態素のチャンクタグを用いた．
学習時には，事前分布としてGaussian Priorを用いて事後確率を最大化することにより，パラメータを正則化した[CITE]．
その際のハイパーパラメータとしては，1,2,3,4,5の5通りの値について予備実験を行い，最も良い性能を示した1を採用した．
\tabref{tab:kekka_gaiyou}中の「SVMを用いた検出器」は，本論文の提案するSVMによるチャンキング手法による検出性能である．
表より，提案手法は，学習・解析に用いた素性に関わらず，ベースラインおよび人手作成の規則による検出よりも，高いF値を示した．
また，提案手法は，CRFを用いた検出器よりも，高いF値を示した．
学習・解析に用いた素性の違いによる性能の違いを検討すると，形態素素性のみを用いた場合に比べて，形態素素性とチャンク素性を併用した場合の方が，F値で2ポイント以上上回った．
このことから，チャンク素性は，機能表現を検出するための素性として有効であったと言える．
それに対して，形態素素性とチャンク素性を併用した場合と，形態素素性・チャンク素性・チャンク文脈素性と全ての素性を使った場合に，性能の差は殆んど見られなかった．
全ての素性を用いて学習と解析を行った検出器Fおよび検出器FAMにおいて，他の表現と比較して極端に検出性能が悪く，F値が50に達しなかった表現は，「としては」と「にあたり」の2表現である．
例えば，\strref{ex:niatari-F}に含まれる「にあたり」は，「（新規参入という）時が来たのに当面して」という機能的な意味で用いられているため，判定ラベルFが付与されるべき文である．
それに対して，\strref{ex:niatari-C}および\strref{ex:niatari-C2}に含まれる「にあたり」は，内容的に用いられているため，判定ラベルCが付与されるべき文である．
新規参入\uline{にあたり}，潜在的なニーズを掘り起こそうと，転勤族を主な対象にした．
お神酒の瓶が女性\uline{にあたり}，けがをする事故があった．
米国の最先端の科学者が知恵を結集して原爆の開発\uline{にあたり}，一九四五年八月に広島・長崎に原爆が投下された．
しかし，SVMを用いた検出器Fおよび検出器FAMは，\strref{ex:niatari-F}と\strref{ex:niatari-C}に対しては判定ラベルCを，\strref{ex:niatari-C2}に対しては判定ラベルFを付与してしまい，用法を正しく判定できたのは\strref{ex:niatari-C}のみだった．
仮に，\strref{ex:niatari-F}と\strref{ex:niatari-C}を区別することだけが必要ならば，直前がサ変名詞であることが有効な素性として働く可能性があるが，\strref{ex:niatari-C2}は，そのような素性だけではうまく判定できない．
このように，提案手法によっては適切に検出できない表現もごく少数ながら存在するが，他の表現については，\tabref{tab:kekka_gaiyou}に示したように適切に検出することができた．
前述の通り，形態素素性とチャンク素性を併用した場合と，形態素素性・チャンク素性・チャンク文脈素性と全ての素性を使った場合に，性能の差は殆んど見られなかった．
しかし，表現によっては，チャンク文脈素性が，検出の際に決定的な効果をもつ表現も存在するはずである．
そこで，実際にそのような効果が現れている表現が存在するか，検出器FAMについて，形態素素性とチャンク素性のみ用いた場合の検出性能と，チャンク文脈素性を含む全ての素性を用いた場合の検出性能を，表現毎に比較した．
F値で比較したとき，全ての素性を用いた場合の検出性能が，形態素素性とチャンク素性のみを用いた場合の検出性能を3ポイント以上上回っている表現は，以下の8表現である．
この8表現に対して，チャンク文脈素性を含めて全ての素性を用いた場合には検出に成功した用例と，形態素素性とチャンク素性のみを用いた場合には検出に失敗した用例を，比較・分析した．
例えば，「にあたって」の検出性能は，形態素素性とチャンク素性のみを用いた場合にはF値で0.79だったのに対して，チャンク文脈素性を含めて全ての素性を用いた場合にはF値で1.00となり，大きな改善が見られた．
「にあたって」の用例を分析したところ，機能表現候補の直後に，形態素解析用辞書において「動詞・非自立」と分類されている語が現れていると，内容的に働いていると判定できることが分かった．
チャンク文脈素性を用いると，機能表現候補に後続する2形態素分の情報を検出時に利用することができるので，この手がかりを機械学習することができ，検出性能が大きく向上したものと考えられる．
「にあたって」以外の7表現の用例についても，「にあたって」と同様の特徴的なチャンク文脈素性が確認できた用例がいくつかあった．
しかし，この7表現の用例については，検出性能の改善に寄与したチャンク文脈素性は，それぞれの用例に個別的で，全ての用例に共通するような素性は見い出されなかった．
逆に，F値で比較したとき，全ての素性を用いた場合の検出性能が，形態素素性とチャンク素性のみを用いた場合の検出性能を3ポイント以上下回っている表現は，以下の7表現である．
この7表現についても，検出に成功した用例と失敗した用例とを比較したが，失敗の原因は，それぞれの用例に個別的で，全ての用例に共通する原因は見い出されなかった．
そのため，これらの表現は，チャンク文脈素性がスパースであるために，チャンク文脈素性を参照することによって性能が悪化したと考えられる．
このように，素性によって検出性能が良くなる表現と，検出性能が悪くなる表現があることを考慮すると，素性の異なる複数の検出器を組み合わせて検出するという方法が考えられる．
この方法を採用した場合，[REF_sec:human_rule]章で述べた場合と同様に，複数の機能表現候補に対する判定ラベルが相互に競合し，複数の検出器による検出結果を同時に採用できない可能性がある．
このような場合に対応するには，複数の検出器による検出結果を統合するための枠組みが必要となるため，本論文では，そのような複雑な手法は用いない（[REF_subsec:formalization]節）．
形態素素性とチャンク素性のみを用いた検出器FAMと，人手により作成した検出規則を用いた手法[CITE]による検出器FAMに対して，前節と同様に，表現毎に性能を比較した．
表現毎に見た場合，人手規則を用いた検出器FAMのF値が，SVMを用いた検出器FAMのF値に比べて3ポイント以上高い表現は，52表現中14表現存在した．
14表現の内，「にあたり」などの4表現は，SVMを用いた検出器FAMの精度が，人手規則を用いた検出器FAMの精度を上回っているが，再現率は，人手規則を用いた検出器FAMの方が上回っている．
人手規則を用いた検出器FAMでは，再現率を重視して判定規則が作成されているため，検出が困難な表現に対しても，高い再現率を維持できる．
そのため，このような表現については，SVMを用いた検出器FAMに比べて，F値が高くなると考えられる．
「に従い」などの10表現については，人手規則を用いた検出器FAMが，精度と再現率の両方の尺度で，SVMを用いた検出器FAMを上回っていた．
例えば，\strref{ex:nishitagai-F}と\strref{ex:nishitagai-F2}に含まれる「にしたがい」はいずれも機能的な意味で用いられており，判定ラベルFが付与されるべきである．
それに対して，\strref{ex:nishitagai-C}に含まれる「にしたがい」は内容的に用いられているので，判定ラベルCが付与されるべきである．
年齢を経る\uline{にしたがい}，体内の水分は減る．
晩年に向かう\uline{にしたがい}仕事の質が上がっている．
二十年ごとに古い伝統の型\uline{にしたがい}社を建てかえる．
SVMを用いた検出器FAMは，\strref{ex:nishitagai-F}と\strref{ex:nishitagai-C}は正しく判定できたが，\strref{ex:nishitagai-F2}には判定ラベルCを誤って付与した．
これは直後の文脈を用いて誤った判定を行っているのではないかと考えられる．
それに対して，人手規則を用いた検出器FAMは，機能的に働いている機能表現候補の直前は用言であるという規則に基づいて，3つの文を正しく判定した．
このように，表現毎に個別に見ると，人手によって作成された規則が，SVMよりも良い性能を示す場合はあるが，対象とする表現全体としては，SVMを用いた検出器FAMの性能が，人手規則による検出器FAMの性能を上回っている．
ここまでの実験では，用例データベースに基づいて作成した全データセットを訓練データとして実験を行った．
本節では，このデータサイズが，機能表現検出の学習に十分であるか検討する．
そのため，訓練データとして用いる判定ラベル数を減少させた時，検出性能がどのように変化するかを調査した．
結果を\figref{fig:learning_curve}に示す．
\figref{fig:learning_curve}より，全データセットの約10分の1の判定ラベルのみを訓練データとして用いた時は，検出性能が大きく低下しているが，判定ラベル数の増加にともなって検出性能も向上し，全データセットに相当する判定ラベル数付近では，対象とする表現全体に対する検出性能はほぼ飽和していることがわかる．
したがって，チャンク文脈素性を参照することによって検出性能が悪化する7表現を除いた残る45表現については，全データセットの分量で，機能表現検出の学習に十分であると言える．
また，チャンク文脈素性を参照することによって検出性能が悪化する7表現についても，形態素素性とチャンク素性を用いた検出器を学習するには，全データセットの分量で十分であると言える．
ここまでの実験では，文を単位として機械学習を行うため，文中に現れる全ての機能表現候補に対して判定ラベルを付与した全データセットを，訓練データとして用いた．
しかし，このようにして訓練データを作成する方法には，以下のような問題が考えられる．
「という」などのように出現頻度の高い機能表現と，出現頻度の低い機能表現の収集数に差が生じ，学習に偏りが生じる恐れがある．
検出対象とする機能表現の種類を増やすと，たとえ例文数が一定であっても，機能表現候補の出現数が増加し，訓練データの作成コストが増大する．
これらの問題を解決するため，例文中に含まれる全ての機能表現候補に判定ラベルを付与するのではなく，必要な一部の機能表現候補に限って判定ラベルを付与する方法を検討する．
前者の問題を解決するためには，各機能表現に対する学習事例の数を一定にすることが考えられる．
そのため，1表現に対して50用例が収録されている用例データベースにおいて判定ラベルが付与されている機能表現候補と，その前後2形態素のみを学習データとして用いるという方法を考えた．
しかし，この方法では，前後2形態素の範囲内に，判定ラベルがまだ付与されていない別の機能表現候補が含まれている場合，誤った判定ラベルを用いて学習してしまうことがあり，予備実験でも性能がかなり低下した．
この問題を避けるには，判定ラベルが付与されている機能表現候補の前後2形態素の範囲内に，別の機能表現候補が出現していた場合は，その機能表現候補にも判定ラベルを付与し，その候補の前後2形態素を範囲に加えるという操作を繰り返し，判定ラベルが付与された機能表現候補とその前後2形態素のみを残すという方法が考えられる．
しかし，この方法でも，チャンクタグOに対する学習事例の数が不十分なために，性能が低下した．
そのため，ここまでの操作によって判定ラベルが付与されなかった機能表現候補を取り除き，それらによって分断された部分を，それぞれ1文とみなして学習を行う方法を採用した．
例として，「ばかりだ」という機能表現の例文として，用例データベースに収録されている\strref{ex:bakarida}を考える（``/''は形態素区切りを表す）．
/セミナー/開催/に/あたり/，/最初/は/戸惑う/こと/ばかり/だっ/た/と/いう/．
/
「ばかりだ」の前後2形態素の範囲内には，「という」という機能表現候補が含まれている．
そのため，この機能表現候補にも判定ラベルを付与し，この機能表現候補の前後2形態素の範囲を判定ラベル付与の対象に加える．
/戸惑う/こと/ばかり/だっ/た/と/いう/．
/
「にあたり」という機能表現候補には，この操作によっては，判定ラベルが付与されない．
この機能表現候補を取り除き，それによって分断された部分を，\strref{ex:divided_sentence_1}と\strref{ex:divided_sentence_2}のようにそれぞれ1文とみなして学習を行う．
/セミナー/開催/
/，/最初/は/戸惑う/こと/ばかり/だっ/た/と/いう/．
/
この手続きによって得られたデータセットを，以下では部分データセットと呼ぶ．
部分データセットに含まれる各ラベル数と，全形態素数を\tabref{tab:dataset}に示す．
データセットの作成に必要な人手コストは，機能表現候補の出現数にほぼ比例すると考えられる．
したがって，\tabref{tab:dataset}より，部分データセットの作成に必要な人手コストは，全データセットの作成に必要な人手コストと比較して，かなり小さくなっていることが分かる．
この部分データセットを訓練データとして機能表現検出器を作成した場合の検出性能を\tabref{tab:cost_F}に示す．
学習・解析の素性としては，検出器Fについては，形態素素性とチャンク素性を，検出器FAMについては，形態素素性，チャンク素性およびチャンク文脈素性を用いた．
部分データセットを訓練データとした場合の検出性能は，全データセットを訓練データとした場合の検出性能と比較して，検出器Fについて約1.0ポイント，検出器FAMについて約0.8ポイント低下している．
しかし，この検出性能の低下は，データセットの作成に必要な人手コストの削減に対して，十分に小さい．
したがって，上で述べた方法によって訓練データの作成コストの削減ができているといえる．
