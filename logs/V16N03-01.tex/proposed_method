Wikipediaの記事構造\label{sec:wikipedia}

本節では提案手法について述べる前に本研究で知識源として利用す
るWikipediaの記事構造について述べる．Wikipediaは，様々な事物に関する常
識的知識が密に記述されたフリーの多言語百科事典である．図~\ref{fig:wiki}（b）は
見出し語「紅茶」に対する記事の例である．Wikipediaの記事は，明確な構造を
もつMediaWiki構文により記述されており，多段の箇条書きを含む．この例のよ
うに，Wikipedia の記事には典型的なある概念（または具体物）の辞書的な定
義に加えて，関連する概念（または具体物）の列挙を箇条書きとして含むこと
が多い．

\begin{table}[b]
\vspace{-1\baselineskip}
\caption{記事構造に関する修飾記号}
\label{tab:mediawiki_syntax}
\input{01table01.txt}
\end{table}

本稿ではWikipediaの記事から上位下位関係候補を抽出するための媒体とし
て，MediaWiki構文で記事のレイアウト情報を扱う表~\ref{tab:mediawiki_syntax}の
修飾記号に注目し，記事から見出し（表~\ref{tab:mediawiki_syntax}では$title$と標記）をノードとするグラフ構
造（記事構造）を抽出する．具体的には，$title$に付与されている修飾記号の
優先度が高く修飾記号の{繰り返し数}が{少ない}ほど，グラフ
構造上の高い位置にノードを配置する．このとき，修飾記号の優先度は記号
の{繰り返し数}より優先される．例えば，「\verb!*! リプトン」より
「\verb!==! イギリス \verb!==!」の修飾記号の優先度が高いので，グラフ構
造上で「イギリス」が「リプトン」より高い位置に配置される．また，
「\verb!==! イギリス \verb!==!」は「\verb!=! 主な紅茶ブランド \verb!=!」
と比較し修飾記号{（この場合は ``\verb!=!''）の繰り返し数}が{多い}の
で，「主な紅茶ブランド」よりグラフ構造上で低い位置に配置される．ただし，
ルートノードは記事名とし，その修飾記号は{繰り返し数}0の
「\verb!=!」とする．図~\ref{fig:wiki}（b）の記事に対応する
図~\ref{fig:wiki}（a）のMediaWikiコードをもとに，図~\ref{fig:wiki}（c）
のような記事構造が抽出できる．



提案手法\label{sec:method}

本節では，\ref{sec:wikipedia}節の手続きでWikipediaの各記事から構築した記事
構造を知識源として，上位下位関係を獲得する手法を提案する．
提案手法は以下の2ステップからなる．
\begin{description}
      \item[Step1 Wikipediaの記事構造からの上位下位関係候補の抽出] 
    \ref{sec:wikipedia}節で説明した記事構造に含まれるノード間の先祖—子孫関係に注目して上位下位関係候補を抽出する．
      \item[Step2 機械学習によるフィルタリング] SVM\cite{Vapnik}を用い
    て，Step1で抽出された上位下位関係候補から不適切な関係を取り除く．
\end{description}

以下，提案手法について詳しく述べる．



\subsection{Step1: Wikipediaの記事構造からの上位下位関係候補の抽出}

このステップでは，記事構造の各ノード{を上位語候補，}子孫関係にあるノー
ド{を下位語候補とする}全ての組み合わせを上位下位関係候補として抽出
する．
例えば，図~\ref{fig:wiki}（c）の記事構造からは，「ブレンドティー／チャイ」
や，「紅茶／リプトン」などの上位下位関係候補が抽出できる．

ここで，訓練データの記事構造から得られる上位語候補を調べたところ，階
層構造中で上位語候補に対して箇条書きで下位語候補が列挙されるときには，上位語に
箇条書き特有の修飾語が付くことが分かった．このような修飾語としては，主
観で一部の下位語を選んで列挙していることを示す「主な〜」や「代表的な
〜」などの接頭語，箇条書きが下位語の列挙であることを陽に示す「〜のリス
ト」や「〜の一覧」などの接尾語などがあり，基本的に上位語を箇条書きのタ
イトルとするために付けられたものであるため，適切な上位語を得るためには
取り除く必要がある．

\begin{figure}[b]
\begin{center}
\includegraphics{16-3ia1f2.eps}
\end{center}
\caption{上位語候補の不要な修飾語を取り除くためのパターン}
\label{fig:list_pattern}
\end{figure}

そこで我々は，抽出された上位語候補が図~\ref{fig:list_pattern}のパターン
をもつ場合，パターン中の$X$以外の部分を取り除いた．パターン中の$X$は任
意の文字列を示す．{ただし，複数のパターンに一致した場合には，そ
  の中で，パターンの具体的な文字列部分（ex.「代表的な}$X${」であれば「代
  表的な」）が最長一致するパターンを適用した．}例えば，上位語「主な紅茶
ブランド」はパターン「主な$X$」を適用することで，「紅茶ブランド」と置換
される．




このようにして得られる上位下位関係候補には，明らかに
誤りとみなせる上位下位関係候補や，上位語または下位語に記号などの不要語
を含む上位下位関係候補が含まれていたため，図~\ref{fig:huyou}のルールに
従って上位下位関係候補を削除，あるいは訂正した．

\begin{figure}[t]
\begin{center}
\includegraphics{16-3ia1f3.eps}
\end{center}
        \caption{上位下位関係候補の削除・訂正ルール}
        \label{fig:huyou}
\end{figure}



\subsection{Step2: 機械学習によるフィルタリング}

Step1の手続きで得られた上位下位関係候補は多くの適切な関係を含む一方で，
「生産地／インド」，「紅茶ブランド／イギリス」のような誤りも含む．Step2で
は，Step1で抽出した上位下位関係候補から教師あり機械学習を用い不適切な関
係を取り除く．本稿では上位下位関係候補が適切な上位下位関係か否かを判定
するため，Support Vector Machine (SVM)\cite{Vapnik}で学習された分類器を
用いて上位下位関係候補を選別する．

{SVM で各上位下位関係候補（上位語候補—下位語候補のペア）が適切
  な上位下位関係であるかどうかを判定するには，分類対象の上位下位関係候
  補を，素性ベクトルと呼ばれる分類対象の特徴（素性）を数値で表現したベ
  クトルに変換する必要がある．この素性ベクトル（上位下位関係候補）に正
  解（適切な上位下位関係か否か）をつけたものを学習データとして，Step2で
  用いる分類器 (SVM) を得る．
}

{本研究では素性として，上位下位関係候補がある条件（特徴）を満た
  すかどうかを一つの素性として表現し，素性ごとに設定された条件を入力の
  上位下位関係候補が満たせば，対応する素性ベクトルの次元の値に1をセット
  し，満たさなければ0をセットする．実際に使用した素性をまとめたリストを
  表}\ref{tab:feature}{に示す．表の各列は左から素性の種類，各素
  性に対応する素性ベクトルの次元の値を1にセットする条件，
  図}\ref{fig:wiki}{から抽出した上位下位関係候補「紅茶ブラン
  ド／Lipton」で実際に1にセットされる素性を表している．} ただし，同じ表
現の上位下位関係候補が異なる記事構造から抽出された場合，全ての抽出元の
記事構造について生成した素性ベクトル{の論理和を用いる．}次に生成
した素性ベクトルをSVMに入力し，その結果得られたSVMのスコアが閾値以上の
上位下位関係候補を正しい上位下位関係とみなす．以下で，各素性{の
  設計方針}について説明する．

\begin{table}[t]
\caption{素性リスト}
\label{tab:feature}
\input{01table02.txt}
\end{table}


\begin{description}
      \item[POS] まず上位語候補・下位語候補の品詞は，誤りの判定に有効で
    ある．例えば，「木次線／管轄」のように上位語に固有名詞を含み，下位
    語に固有名詞を含まない場合，誤りの関係と推定できる．ここでは，品詞
    として{IPA辞
      書}\footnote{http://sourceforge.jp/projects/ipadic/}{の}品
    詞細分類レベル（ex. 名詞—固有名詞など）まで考慮する．

    また上位語候補・下位語候補に含まれる品詞のうち，主辞の品詞は語の意味的な特
    徴をよく捉えているため特に重要である．例えば，上位語候補の主
    辞の品詞が動詞であれば多くの場合その上位下位関係候補は誤り
    である．本稿では上位語候補・下位語候補の末尾の形態素を主辞とし，主
    辞の品詞を他の品詞と区別するように素性を設計した．

      \item[MORPH] {品詞と同様に}，上位語候補・下位語候補中の形
    態素の表層文字列は上位下位関係らしさの判定に有効である．例えば，
    「アメリカ映画／ウエスト・サイド物語」のように頻度が少ない，あるいは
    未知の上位語候補・下位語候補であっても，「映画」や「物語」などのよ
    り頻度が高い形態素に注目することで上位語らしさ・下位語らしさを判定
    することが出来る．また品詞と同様に上位語候補・下位語候補の主辞の表
    層文字列は適切な上位下位関係であるかどうかの手がかりとなりやすいの
    で，他の形態素と区別する．

      \item[EXP] 上位語候補，下位語候補にはStep1の不要語処理ではカバー
    しきれない，「背景」や「あ行」などの不要語が多く存在する．これら不
    要語の特徴を捉えるため，上位語候補，下位語候補の表層文字列ごとに次
    元を割り当てるように素性を設計した．

      \item[ATTR] 上位語候補，あるいは下位語候補が属性語である上位下位
    関係候補は誤りの関係となりやすい．ここで属性語とは，その単語につい
    てユーザが知りたい観点を指す単語である\cite{JTokunaga_2006}．例えば，
    「紅茶」の属性語としては「生産量」や「価格」があげられ
    る．{このような属性語を含む関係（例えば，}「紅茶／生産量」や
    「生産量／1位インド」など）{は多くの場合，}属性語と概念（ま
    たは具体物）間の関係となり上位下位関係となることは少ない．そこでこ
    の素性ではあらかじめ抽出しておいた{属性語リストの各語に固
      有の次元を割りあてるように設計した．}

    本研究では，属性語は以下のような手順で抽出した．まず各記事構造から
    根ノード以外のノードを抽出する．つぎに，抽出したノードのう
    ち，Wikipedia中の複数の記事に出現するノードを属性とみなす．例えば
    「紅茶」と「タバコ」という記事の両方に「生産量」が見出しとして出現
    する場合，「生産量」を属性語とみなす．前述の上位語候補・下位語候補
    の表層文字列を素性とする素性EXPもこの素性と同{じく不要語らし
      さ}を扱うことができるがこの素性では教師無しで構築された属性語リス
    トを用いることで，より被覆率高く{不要語}を検出することが可能
    であることに注意されたい．

     \item[LAYER] 記事構造の箇条書き表現から抽出された下位語候補をもつ
   上位下位関係は適切な関係になりやすい．例えば，図~\ref{fig:wiki}（c）の
   記事構造の箇条書き表現には「Lipton」，「Wedgwood」などの固有名詞が列
   挙されており，これらは上位ノード「紅茶ブランド」の下位語として適切で
   ある．このような傾向を捉えるために，この素性では記事構造から抽出され
   た上位語候補あるいは下位語候補のノードに付与されている修飾記号の種
   類（節見出し，定義の箇条書き，番号付き箇条書き，番号なし箇条書き）ごと
   に次元を割りあてた．
     \item[DIST] 記事構造で上位語候補と下位語候補との間の距離が近ければ近いほど，正
   しい上位下位関係であることが多い．そこで，記事構造中における上位語
   候補・下位語候補間の距離を素性とすることで，この傾向を捉える．
   本稿では，上位語候補，下位語候補間の距離を記事構造中で上位語候補と下
   位語候補間に存在する辺の数とする．例えば，図~\ref{fig:wiki}（c）の記事構
   造上で「Wedgwood」と「紅茶ブランド」間の距離は2である．
   
   素性DISTでは，上位語候補と下位語候補間の距離が2以上か否かと
   いう2つの状態にそれぞれ異なる次元を割りあてた．
   
     \item[PAT] 上位語候補がStep1の時点で図~\ref{fig:list_pattern}のパ
   ターンにマッチしていた場合，子孫ノードに適切な下位語が列挙されやすい
   傾向がある．例えば，図~\ref{fig:wiki}（c）中の「主な紅茶ブランド」とい
   うノードは下位階層に「Lipton」，「Wedgwood」などの適切な下位語が列挙
   されており，上位語がStep1のパターンにマッチしていれば，その上位下位
   関係は適切だろうと推定できる．素性PATでは，Step1の時点で上位語候補が
   パターンにマッチしている場合{この素性に対応する素性ベクトルの次元の値を1にセットするように設計した}．

     \item[LCHAR] 素性MORPHでは，形態素間の類似性を判断しているため，「高校」
   や「公立校」のように形態素の一部が一致する語の類似性はないと判断してしまう欠点が存在する．
   
   そこで上記のような事例を扱えるようにするため，素性LCHARでは，上位語
   候補と下位語候補の末尾の1文字が共通する複合語に意味的に似た語が多い
   特徴を利用し，素性MORPHの欠点を補う．具体的には，上位語候補と下位語
   候補の末尾が同じとき，{この素性に対応する素性ベクトルの次元の値を1にセットするように設計した}．

\end{description}


