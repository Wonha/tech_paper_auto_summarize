この章では形態素としての尤もらしさを計算するモデルについて述べる．
我々はこのモデルをMEモデルとして実装した．
テストコーパスが与えられたとき，そのコーパスの各文を形態素解析するという問題は文を構成する各文字列に二つのタグのうち一つ，つまり，形態素であるかないかを示す「1」か「0」を割り当てる問題に置き換えることができる．
さらに，形態素である場合には文法的属性を付与するために「1」を文法的属性の数だけ分割する．
すると，文法的属性の数が[MATH]個のとき，各文字列に「0」から「[MATH]」までのうちいずれかのタグを割り当てる問題に置き換えることになる．
形態素解析の問題において，この[MATH]個のタグはMEモデルを定式化するときに「未来(futures)」空間を形成する．
ここで，未来空間とは学習モデルにおける分類先に対応する．
MEモデルでは他の類似したモデルと同様に，可能性のある未来空間[MATH]における任意の[MATH]と可能性のある履歴空間[MATH]におけるすべての[MATH]に対して確率分布[MATH]を計算することができる．
ここで，MEモデルにおける「履歴(history)」とは未来空間においてどこに分類するかという判断を下す根拠となるデータのことである．
形態素解析の問題における確率分布は次の式で表すことができる．
これは，テストコーパスからある関係[MATH]に関して導出可能な情報が得られたときに[MATH]の確率が求まることを示している．
MEモデルにおける確率分布[MATH]の計算は「素性(features)」の集合，つまり，未来を予測する助けとなる情報に依存する．
この情報は素性関数として定義され，近年の計算言語学の研究で用いられてきた他の多くのMEモデルと同様に我々のモデルでも，履歴と未来を引き数とし0か1を返す2値関数として定義する．
以下にその一例をあげる．
ここで，「has([MATH], [MATH])」は履歴[MATH]に素性[MATH]が観測されるときに真を返す2値関数である．
我々の場合，素性としては辞書の情報とともに，未知語の性質を学習できるように，着目している文字列の長さや文字種，その文字列が辞書にあるかどうか，連接する形態素の文法的属性，文字種の変化などを用いる．
詳しくは[REF_sec:exp_discussion]章で述べる．
素性集合と学習データが与えられたとき，エントロピーを最大にするという操作によりモデルが生成される．
このモデルではすべての素性[MATH]に対しパラメータ[MATH]が関係付けられ，モデルは次のような条件付き確率として表される[CITE]．
パラメータを推定する際には，学習コーパスにおけるすべての素性[MATH]に対し，MEモデルから計算される[MATH]の期待値が[MATH]の経験的期待値と等しくなるようにする．
つまり，以下の式を成り立たせるようなパラメータを推定する．
ここで，[MATH]は経験的確率分布であり，[MATH]はMEモデルとして推定される確率分布である．
形態素に付与するべき文法的属性が[MATH]個あると仮定する．
文法的属性としては品詞と文節区切りを考える．
品詞が[MATH]個の場合，その各々についてその品詞を付与した形態素の左側が文節区切りであるかないかを考慮し，文法的属性の数は[MATH]とする．
文字列が与えられたとき，その文字列が形態素であり，かつ[MATH]番目の文法的属性を持つとしたときの尤もらしさを確率値として求めるモデルを形態素モデルと呼ぶ．
このモデルは式([REF_eq:p])を用いて表される．
ここで，[MATH]は0から[MATH]までの値をとる．
一文が与えられたとき，一文全体で確率の積が最大になるよう形態素に分割し文法的属性を付与する．
最適解の探索にはビタビアルゴリズムを用いる．
N-best解の探索には文献[CITE]の方法を用いる．
