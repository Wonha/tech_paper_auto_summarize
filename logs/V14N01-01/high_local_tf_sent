================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[1547] 本論文では，アルゴリズムの形式的な記述を行ない，その時間計算量を理論的に議論する．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[1691] 本研究の目的は，日本語の係り受け解析(依存構造解析)を行なう効率のよいアルゴリズムを提案し，その効率の良さを理論的，実験的の両面から示すことである．

================================================================
[section type  : proposed_method]
[section title : 日本語文の解析]
================================================================
[1210] 本節では，日本語の構文的特徴と典型的な日本語文の解析の手順について整理する．
-----------------------------------------------------
  [subsection title : 日本語の構文的特徴]
-----------------------------------------------------
  [1932] この2例文で，最も右の文節「あげた」(動詞の語幹と，過去や完了を表すマーカで構成されている)は文の末尾に置かれていることに注意されたい．
-----------------------------------------------------
  [subsection title : 日本語文解析の典型的な手順]
-----------------------------------------------------
  [1364] 日本語には前節のような特徴があるので，日本語文の解析では次のような手順が非常に一般的である:

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[2044] このアルゴリズムは，考慮する係り先の文節数を制限することでしらみつぶしに探索することを避け，[MATH]の時間計算量となっている．

================================================================
[section type  : proposed_method]
[section title : アルゴリズム]
================================================================
[1321] 解析時のアルゴリズム，その時間計算量，学習時のアルゴリズムを順に述べ，最後に提案アルゴリズムの特徴のまとめと関連研究との理論的な比較を述べる．
-----------------------------------------------------
  [subsection title : 文を解析するアルゴリズム]
-----------------------------------------------------
  [2167] ここでは，文中の二つの文節の係り関係を推定できる，つまり係るか否かを決定できる何らかの分類器があり，その分類器の時間計算量は文の長さに影響されないと仮定しておく．
-----------------------------------------------------
  [subsection title : 時間計算量]
-----------------------------------------------------
  [1545] これは時間計算量の上限が[MATH]となることを意味している．
-----------------------------------------------------
  [subsection title : 訓練事例を作り出すアルゴリズム]
-----------------------------------------------------
  [1921] 違いは，indep[ ]を使ってestimate_dependency()が正しい係り関係の判定を返す点と，outdep[ ]に係り先のIDを格納する必要がない点である．
-----------------------------------------------------
  [subsection title : 特徴のまとめと関連研究との理論的な比較]
-----------------------------------------------------
  [2082] ただし，我々のアルゴリズムが日本語を対象とし，係り先が必ず右にあることを前提にしているのに対し，Nivreのアルゴリズムは依存関係の向きはどちらでもよい．

================================================================
[section type  : proposed_method]
[section title : 係り関係を推定するためのモデル]
================================================================
[1695] その一つは，多項式カーネルを用いると，ある事例の持つ素性の組合せが自動的に考慮される点である．
-----------------------------------------------------
  [subsection title : 標準素性]
-----------------------------------------------------
  [1345] ここで主辞とは，概ね文節内の最も右の内容語に相当する．
-----------------------------------------------------
  [subsection title : 注目文節の前後の文節]
-----------------------------------------------------
  [1987] 我々のアルゴリズムでは，[MATH]を満たし[MATH]番目の文節が[MATH]番目の文節に係るかチェックしているとき，[MATH]番目の文節は必ず[MATH]番目の文節に係っていることに注意されたい．
-----------------------------------------------------
  [subsection title : 文節内の追加素性]
-----------------------------------------------------
  [1656] 「標準素性」では，文節内に二つ以上の機能語を含むとき格助詞の情報を見落とすことがある．
-----------------------------------------------------
  [subsection title : 並列句のための素性]
-----------------------------------------------------
  [1773] もう一つの素性は，係り元文節がキー文節で，その係り元文節と係り先候補の文節の主辞表層形が一致していればアクティブになるものである．

================================================================
[section type  : experiment_result]
[section title : 実験と考察]
================================================================
[1481] 提案アルゴリズムを利用したパーザをC++で実装し，その時間計算量の振る舞いや解析精度を実験的に評価した．
-----------------------------------------------------
  [subsection title : コーパス]
-----------------------------------------------------
  [1060] これらの記事の使い方は[CITE]と同じである．
-----------------------------------------------------
  [subsection title : SVM の設定]
-----------------------------------------------------
  [1176] 独自にC++で実装したSVMsのツールを用いた．
-----------------------------------------------------
  [subsection title : 実験結果]
-----------------------------------------------------
  [1986] 彼らは高次の多項式カーネルを線形カーネルに変換する手法を提案し，変換された線形カーネルでは，精度を保ったまま元の多項式カーネルよりもおよそ30から300倍高速だったと報告している．
-----------------------------------------------------
  [subsection title : 関連研究との比較]
-----------------------------------------------------
  [1763] 文献[CITE]では，「相対モデル」のパーザは，京大コーパスVersion 3.0に対して，係り受け正解率91.37%を得，Cascaded Chunking Modelは91.23%を得たと報告されている．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[2469] 精度の差は従来研究で報告されているものと大きくないため，精度面からの優位性は結論できないが，本研究で(1)提案アルゴリズムが理論的にも実験的にも時間計算量の上限が[MATH]で抑えられていることと，(2)時間計算量を抑え，左から右へ一度しかスキャンしないにも関わらずトップレベルの精度が得られることの二つを示せた意義は大きいと考える．

