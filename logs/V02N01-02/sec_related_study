ところで，意味役割や語用論的役割の照応解析の結果は，役割間での照応関係という形で得られるが(例えば，``観察者=動作主''など)，実際にそれらの役割がどのような対象を指示するかは文脈情報を利用しないと決定できない場合が多い．
つまり，各役割を変数とみなした場合，変数の値が決定されているわけではないが，別の変数との関係づけがなされている，という情報を解析の途中および結果として扱う必要がある．
このような場合に用いられる方法論の一つとして，制約論理プログラミング[CITE]が考えられる．
この場合，変数の間の関係(同値関係など)をその変数の持つ制約とみなすことにより，適用が可能である．
そこで，著者らは，まず形態素解析システムJUMAN[CITE]および構文解析システムSAX[CITE]を用い，その結果得られる素性構造に制約論理プログラミングの手法を用いて，ゼロ代名詞照応などを分析する理解システムを構築した．
この理解システムでは，プログラム変換の手法を用いた制約変換システム[CITE]を利用している．
このシステムで扱える文は，例えば「花子が暑がったので窓を開けた．
」など，文献[CITE]で扱った複文の一部であり，日本語文全体からみてもその対象は非常に限定されるが，文献[CITE]で扱われている他の文，例えば「叱られたので，反省文を書かせた．
」，「病気で苦しかったのに，会社を休めなかった．
」などについても，本論文で述べる手法により，処理が可能である．
また，他の種類の複文，例えば「傷が痛いのなら，病院に行く．
」など従属節が条件節になるような複文に関しても，節間の制約を適切に記述できれば，本論文での手法の応用は可能である．
なお，本システムに類する研究であるが，まず，本システムで参考としているような日本語文の構造をもとにし，LFG (語彙機能文法)の枠組を用いて記述したシステムが，文献[CITE]に述べられている．
これは，日本語文の発話構造を叙述部分と陳述部分に分けて階層化し，それをLFGによって記述するものである．
この構造は本論文で参考としている日本語の階層構造(後で述べる)に類似したものであり，さらに，その枠組上で複文の構造的な特徴についても議論がなされている．
しかし，その検討の対象が構文解析のレベルに限定されており，本論文によるシステムで扱っているような，意味役割や語用論的役割の照応解析といったレベルまでは扱っていない点が異なる．
