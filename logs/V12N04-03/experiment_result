本節では，言語資料の構造化形式と利用目的の多様性に対する『ひまわり』の有効性を検証するために，実際の言語資料である『分類語彙表』と『日本語話し言葉コーパス』に『ひまわり』を適用し，定性的に評価する。
さらに，4種類の言語資料に対する検索速度を測定することにより，『ひまわり』を定量的に評価する。
まず，日本語のシソーラスである『分類語彙表(増補改訂版)』[CITE]に本システムを適用する。
図[REF_fig:分類語彙表データ)]の左が『分類語彙表』の元のデータ(分類番号1.5010「体の類/自然/自然/光」の一部とその上位階層の分類項目)で，右がXMLで構造化した結果である。
bunrui_goi_hyo, c, s, l, e要素は，それぞれ『分類語彙表』全体，分類項目，項目内の段落番号，項目内の小段落番号，表記を表す要素である。
e要素には，表記に対する「見出し」属性を，c要素には「分類番号」，「概念パス」属性(当該の分類項目に至るまでの分類項目の並び)を付けている。
[hbt]
{.
45\linewidth} {
1体の類1.5自然1.50自然1.5010光01光(ひかり) -光(こう)光明光輝光彩02微光白光白色光03燐光蛍光蛍火
}
図[REF_fig:分類語彙表データ)]のXML文書を検索対象とするために，『ひまわり』の検索対象文字列，付随情報，および，閲覧形式を次のように設定した。
e要素の要素内容(つまり，表記)，および，「見出し」属性
c, s, l, e要素の属性(個々の要素に対して索引付け)
分類項目に含まれる語を閲覧するために，c要素をHTMLブラウザに出力
図[REF_fig:適用例(分類語彙表)]は，「光」を表記に含む語を検索した結果である。
「表記」欄が，検索結果文字列で，その左右に同一分類項目の語が列挙される。
この三つの欄の他に，検索対象文字列として設定した「見出し」欄，付随情報として設定した「概念パス」や「分類番号」欄などが表示される。
『ひまわり』のウィンドウに重ねて表示されているのは，外部閲覧システムのHTMLブラウザであり，検索結果文字列をダブルクリックすると起動される。
この例では，検索結果文字列「微光」を含む分類項目全体を表示している。
検索結果文字列は，利用者が発見しやすいように，赤色で表示される。
HTMLブラウザには，検索対象文字列を含むc要素が渡され，図[REF_fig:システム構成]に示したようにXSL変換とCSSファイルが適用された後にその結果が表示される。
このように，『ひまわり』は，(1)『分類語彙表』の見出し，および，表記を対象に全文検索できる，(2)書籍版とほぼ同等の形式で閲覧することができることを示した。
これにより，『ひまわり』は『分類語彙表』を検索・閲覧するシステムとして適応していると考えられる。
次に，『日本語話し言葉コーパス』に対して，『ひまわり』を適用する。
『日本語話し言葉コーパス』は，学会講演などの独話を主体としたコーパスである。
音声データの他に，音声データの転記テキストに形態論情報，分節音などの言語情報が付与されたXML形式のデータが提供される。
詳しくは，[CITE]を参照されたい。
ここでは，コーパス全データのうち，人手で形態論情報を付与された転記テキスト(396講演，約102万短単位)を適用対象とする。
図[REF_fig:『日本語話し言葉コーパス』の書き起こしテキスト] (上)が，転記テキストである。
転記テキストは，200 [ms]以上のポーズ位置で「転記基本単位」に分割される。
転記基本単位の始まりは，数字で始まる行で表される。
左から，転記基本単位の通し番号，開始時刻，終了時刻，話者ID (LまたはR)を意味する。
発話の転記には，漢字仮名混じりで表記された基本形と，発音を可能な限り正確にカタカナで表記した発音形がある。
下の転記テキストでは，&の左右がそれぞれ基本形，発音形が併記されている。
また，各転記基本単位内は，文節単位で改行されている。
[hbt]■転記テキスト
{
0001 00000.311-00000.698 L:テーマ&テーマ0002 00001.114-00002.989 L:無人島に&ムジントーニ持っていくもの&モッテイクモノ三つ&ミッツ
}■XML文書への変換結果
{
<kdb講演ID="AC00JUL124"> <su代表形="テーマ"品詞="名詞"発音形="テーマ">テーマ</su> <p p_id="001"/><t転記番号="0001"開始時刻="00000.311"終了時刻="00000.698" /> <su代表形="ムジン"品詞="名詞"発音形="ムジン">無人</su> <su代表形="トウ"品詞="接尾辞"発音形="トー">島</su> <su代表形="ニ"品詞="助詞"その他1="格助詞"発音形="ニ">に</su> <p p_id="002"/> <su代表形="モツ"品詞="動詞"活用型="タ行五段"活用形="連用形"発音形="モッ">持っ</su> <su代表形="テ"品詞="助詞"その他1="接続助詞"発音形="テ">て</su>
}
図[REF_fig:『日本語話し言葉コーパス』の書き起こしテキスト] (上)の転記テキストに形態論情報を付与し，XML形式で表現したのが，図[REF_fig:『日本語話し言葉コーパス』の書き起こしテキスト] (下)の「XML文書への変換結果」である。
今回は，全転記テキストを一つの言語資料ファイルにまとめて検索することとした。
kdb, su, p, t要素は，それぞれ，一つの転記テキスト全体，形態論情報(短単位)，文節の区切り，転記基本単位の区切りを表す。
図[REF_fig:『日本語話し言葉コーパス』の書き起こしテキスト]のXML文書を検索対象とするために，『ひまわり』の検索対象文字列，付随情報，および，閲覧形式を次のように設定した。
su要素の要素内容(要素範囲の限定なし)，su要素の要素内容(要素範囲の限定あり)
su, t要素の各種属性，su要素の前後要素
転記テキスト全体を閲覧するために，kdb要素をHTMLブラウザに出力。
また，検索結果文字列に対応する音声の参照(外部プログラムの音声再生プログラムを起動)
図[REF_fig:適用例(日本語話し言葉コーパス)]は，su要素内容中の文字列「について」を検索した結果である。
検索結果には，検索結果文字列のほか，付随情報として，検索結果文字列の品詞，後続する2短単位(「基本形1，2」欄)とその品詞(「品詞1，2」欄)，講演IDなどが含まれる。
検索結果文字列の「について」は，短単位で「に/つい/て」のように分割されるが，文字列の照合は，「要素範囲の限定なし」で行っているので，「について」全体が検索結果文字列となる。
「品詞」欄には，検索結果文字列の先頭の文字列「に」の品詞である「助詞」が入っている。
短単位での分割位置がわかっている場合は，文字列の照合をsu要素の範囲に限定して行えば，より厳密な検索ができる。
このように，短単位の知識がなくても検索することが可能であると同時に，より詳細な制約を与えて，検索結果を絞り込むこともできる。
図[REF_fig:適用例(日本語話し言葉コーパス)]右下のHTMLブラウザの画面は，講演全体を表示したものである。
短単位の区切りは，`/'で表記している。
また，短単位にカーソルを合わせると，当該短単位の品詞などの情報が図[REF_fig:適用例(日本語話し言葉コーパス)]のように表示されるようになっている。
図[REF_fig:適用例(日本語話し言葉コーパス)]右上のウィンドウは，音声再生用の外部プログラムであり，言語資料外のデータを参照する例として示した。
再生時には，付随情報である講演ID，開始時刻，終了時刻を外部プログラムに渡し，当該の部分の音声を再生できるようにしている。
以上で示したように，『ひまわり』は，『日本語話し言葉コーパス』の言語資料の構造化形式に適応して，形態論情報を検索に有効に利用することが可能である。
さらに，音声データの参照，および，転記テキスト単位での形態素列の閲覧など，言語資料に適した閲覧を実現している。
『ひまわり』の検索時間を測定し，定量的に評価する。
検索の対象は，表[REF_tbl:平均検索時間]に示した，『太陽コーパス』，『毎日新聞テキストデータベース』(2002年，1年分)，『分類語彙表』，CSJ (『日本語話し言葉コーパス』)の四つの言語資料である。
検索対象の文字列は，『分類語彙表』が長さ2文字，それ以外の言語資料は長さ4文字の文字列をそれぞれの資料から100個ランダムに抽出し，表[REF_tbl:平均検索時間]の検索対象要素に対して全文検索を行った。
検索結果に含まれる付随情報は，『分類語彙表』と『日本語話し言葉コーパス』(CSJ)は，前節で示した付随情報を，『太陽コーパス』と毎日新聞に対しては，書誌情報にあたる情報を付随情報として抽出した。
測定に使用した計算機は，CPU Pentium4 2.5GHz,メモリ1GB，OS Linux 2.4.26 (Debian/GNU Linux ver.3.0r2)，JRE (Java Runtime Environment) ver.1.4.2_04である。
測定結果として，表[REF_tbl:平均検索時間]に，平均検索時間，ファイルサイズ，総文字数，平均検索結果数を示す。
ファイルサイズとは，言語資料ファイルのサイズ(タグを含む。
encodingはUTF-16)であり，総文字数とは，検索対象要素中の文字データの総数(索引づけされた文字データ数でもある)である。
この結果を見ればわかるとおり，307.2〜1114 [ms]で検索されており，実用的な速度で検索できることが確認できた。
このうち，最も検索時間がかかったのがCSJである。
CSJの平均検索結果数を見ると，『太陽コーパス』と同程度であり，総文字数は『太陽コーパス』の約1/7であるにもかかわらず，検索時間は約3.6倍である。
この原因は，形態論的情報に関連する付与情報が多く，全文検索時の文字列の照合に時間がかかるためだと考えられる。
CSJの付与情報が『太陽コーパス』と比べて多いことは，CSJのファイルサイズが『太陽コーパス』の約4倍であることを見ればわかる。
