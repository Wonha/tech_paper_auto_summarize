\section{はじめに}
\label{sec:intro}

言い換えとは，
ある言語表現を意味が等価な別の言語表現に変換する処理のことである．
自然言語処理においては，
言い換えはさまざまな応用をもっており，
例えば，情報検索，機械翻訳，文章作成支援，文章読解支援などに
応用されることが期待されている．

\begin{table}[b]
\caption{日本語表現の分類}
\label{tab:classWord}
\input{04table01.txt}
\end{table}
\begin{figure}[b]
\begin{center}
\includegraphics{15-2ia4f1.eps}
\caption{内容表現の言い換えと機能表現の言い換えを組み合わせた
幅広い言い換え}
\label{fig:phrasal}
\end{center}
\end{figure}

日本語表現の言い換えは，これまで
多くの研究者によって研究されてきた\shortcite{Inui2004}．
これらの研究のほとんどは，
内容語や複合語に関するものであり，
例えば，複合名詞の言い換えに関する研究\shortcite{Sato1999,Kimura2002}や
動詞句の言い換えに関する研究\shortcite{Kaji2004,Furihata2004}などが
ある．
日本語の表現は，内容的・機能的という観点から，
おおきく2つに分類できる．
さらに，「表現を構成する語の数」という観点を加えると，
表~\ref{tab:classWord}のように分類できる．
ここで，{\bf 複合辞}とは，
「にたいして」や「なければならない」のように，
複数の語から構成されているが，
全体として1つの機能語のように働く表現のことである．
われわれは，機能的というカテゴリーに属する
機能語と複合辞を合わせて{\bf 機能表現}と呼ぶ．
内容表現の言い換えに関する研究に比べて，
機能表現の言い換えに関する研究は著しく少ない．
ほとんどすべての文および文節には，
1つ以上の機能表現が含まれているのであるから，
日本語表現を幅広く言い換えるためには，
図~\ref{fig:phrasal}に示されるように，
内容表現だけでなく，
機能表現も言い換えることが重要である．
このような理由により，
本論文では，機能表現の言い換えに焦点をあてる．

日本語の機能表現が持つ主な特徴は，
各々の機能表現が多くの形態的異形を持っているということである．
それぞれの異形は，
常体，敬体，口語体，堅い文体という4つの文体のいずれかをとる．
例えば，「なければならない」の異形には，
「なくてはならない」，「なければなりません」，
「なけりゃならない」，「ねばならん」などがあり，
これら4つの表現の文体はすべて異なっている．
これらの表現の文体は，順に，
常体，敬体，口語体，堅い文体である．
機能表現を言い換えるシステムは，
言い換え先の機能表現の文体を制御できることが求められる．
なぜならば，
1つの文章においては，
原則として，一貫して1つの文体を使い続けなければならないからである．
例えば，
文体が常体である文章においては，
「なければなりません」や「にたいしまして」などの敬体の表現や，
「なけりゃならない」や「とは言ったって」などの口語体の表現を
使うことはできない．
しかしながら，
先行研究において提案されている
いずれの機能表現言い換えシステムも，
言い換え先の機能表現の文体を制御できる機構を持っていない．

機能表現言い換えシステムが
機能表現$f$を異なる機能表現$f^\prime$に言い換える場合，
潜在的には$f^\prime$のすべての異形を生成できることが望まれる．
なぜならば，
この要請を満たすシステムは，
文章作成支援などの応用において，
多数のさまざまな言い換え候補を利用者に提示することができるからである．
このようなシステムは，
例えば，
「見てくれるか」という入力に対して，
「てもらえる」を含む言い換え候補として
「見てもらえるか」だけでなく，
「見てもらえないか」，
「見てもらえませんか」，
「見てはもらえないでしょうか」など，
多くの興味深い言い換え候補を出力することができる．
しかしながら，
先行研究における機能表現言い換えシステムは，
体系的に異形を扱っていないため，
上記の要請を満たしていない．

文章読解支援や文章作成支援などの応用においては，
機能表現を言い換えるときに，
言い換え先の機能表現の難易度（理解しやすさ）を制御できることが
求められる．
なぜならば，
機能表現は，文の構造や意味を決定する重要な要素であるからである．
文中に知らない機能表現が用いられていた場合，
おそらく，
読者は，その文の意味を正確に理解することができないだろう．
難しい機能表現をやさしい機能表現へ言い換えることができれば，
読者がその機能表現を知っており，
文の意味を正しく理解することができることが期待される．
先行研究において，
機能表現の難易度を考慮したものは，
土屋らの研究\shortcite{Tsuchiya2004}と
本田らの研究\shortcite{Honda2007}のみである．
土屋らは，
機能表現をやさしく言い換えるための規則を半自動的に生成する手法と，
その規則に基づいて機能表現を言い換えるシステムを提案している．
本田らは，
意味的に等価な機能表現の各々のクラスに対して，
それぞれ1つの代表表現を定義することにより，
機能表現を分かりやすい表現に言い換える手法を提案している．
機能表現をやさしく言い換える場合，
読者にふさわしい難易度の表現に言い換えることが望ましい．
なぜならば，
よりやさしい機能表現（典型的には，助詞）は，
複数の意味を持っている傾向があるからである．
必要以上にやさしく言い換えた場合，
生成されたテキストが意味的に曖昧になってしまうおそれがある．
これらの先行研究において提案されている言い換えシステムは，
例えば，日本語初級者用や日本語中級者用などといった，
難易度指定に応じて言い換えを行なうことはできない．

機能表現を，文体指定や難易度指定を満たす，
意味的に等価な機能表現に言い換える処理は，
次の2つの変換の組み合わせによって実現することができる．
\begin{enumerate}
\item 機能表現を意味的に等価な機能表現に変換する
\item 機能表現をその異形に変換する
\end{enumerate}
前者において，難易度指定を満たす機能表現のみを言い換え候補に採用し，
後者において，文体指定を満たす異形のみを言い換え候補に採用すれば，
目的の言い換えを達成することができる．

本論文では，
形態階層構造と意味階層構造を持つ機能表現辞書を用いることにより，
文体と難易度を制御しつつ，
日本語機能表現を言い換える手法を提案する．
前者の階層構造は，
各々の機能表現に対して，すべての異形のリストを提供する．
それぞれの異形には，文体の情報が記述されている．
このリストは，上記の(2)の変換に必要である．
後者の階層構造は，
機能表現の意味的等価クラスを提供する．
クラス内のそれぞれの機能表現には，難易度が付与されている．
この意味的等価クラスは，上記の(1)の変換に必要である．

本論文は，以下のように構成される．
まず，第2章で，
形態階層構造と意味階層構造を持つ機能表現辞書について説明する．
次に，第3章で，
本論文で提案する機能表現の言い換え手法を述べる．
第4章で，実装した機能表現言い換えシステムについて説明し，
続く第5章において，その評価を行なう．
第6章で，関連研究について述べ，
最後に，第7章でまとめを述べる．



