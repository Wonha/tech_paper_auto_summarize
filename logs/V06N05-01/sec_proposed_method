言い直し（以下では「換言」とも言う）とは，下記の例に示すように，前に言ったことの誤りを訂正してもう一度言ったり，話の途中で言い淀んでしまってもう一度言うといった表現を示す．
\Vspace「はい，（かしこ）[MATH]ました．
」
「（わたし）[MATH]鈴木が承りました．
」
\Vspace以下では，言い直しによって訂正される対象となる部分（括弧で示した部分）を「換言前音節列（又は換言前文節）」と呼び，また言い直しによって訂正された部分（下線で示した部分）を「換言後音節列（換言後文節）」と呼ぶ．
さて，言い直し表現の出現位置と種類について考える．
換言前音節列は，後で換言後音節列によって訂正される部分であるから，一種の誤りと見なすことができ，それを削除すれば発話者の意図した文になると考えられる．
このような観点から，会話テキストデータベース（ＡＴＲ音声翻訳通信研究所）に収録された「旅行に関する対話」の対話例を対象に，言い直し表現が出現した位置を分類すると表１の通りとなる．
この表から，換言前の音節列の約80％が正しい文の文節境界の位置に挿入された形になっていることが分かる．
次に，換言前音節列と換言後音節列が連続する場合について，言い直しのタイプを分類すると表２の結果を得る．
この表から，言い直しの大半（表2の中の切り捨てタイプと置き換えタイプを除く約60％が該当）は，間違った表現をそれと同一内容を表す正しい表現への言い換えとなっており，繰り返しの構造を持っていることが分かる．
前節の考察に従い，本論文では言い直し表現抽出の第１ステップとして，文節境界位置に現れる繰り返しタイプの言い直し表現を対象にその抽出法を考える．
ところで，抽出の対象とする言い直し表現は文節境界に現れることから，言い直し表現自体は文節で，換言前表現の始点，終点は共に文節境界であると考えることができる．
また，繰り返しタイプの言い直しでは，換言前音節列と換言後音節列は連続しており，両者は類似した音節を持つ可能性が高いから，隣接した２つの文節の音節を比較すれば，言い直し表現が抽出できると期待される．
以上から，ここでは，図1に示すように，以下の2つの段階に分けて言い直し表現を抽出する．
第１段階：言い直しを含む音節文の文節境界を推定する．
第２段階：連接する２つの文節間で音節列を比較し，類似性の高い文節の組の前方の文節を「換言前音節列」と判定する．
言い直しを含む音節列の文節境界を推定する方法について考える．
従来，べた書きされた日本語かな文の文節境界を推定する方法として，マルコフ連鎖モデルを用いた方法[CITE]が提案されている．
この方法は，図2-(i)に示すように，文節内では文字間の連鎖強度が高いことに着目して，文字連鎖確率値が落ち込むところを仮文節境界と推定するもので，具体的には，文節境界は以下の２つの手順で決定される．
\Vspace
かな文字列の前方から順にマルコフ連鎖確率を求め，連鎖確率がある閥値以下(落ち込み)となる文字を[MATH]とする．
([MATH]の直前に文節境界がある可能性が高い)
文字[MATH]の直前に文節境界記号bを挿入し，この記号と前方文字との連鎖確率を求める．
確率がある閥値以上(立ち上がり)になったとき，bの位置を文節境界と判定する．
\Vspace
なお，(1)，(2)共に，連鎖確率の評価では，正しく文節境界記号の挿入されたべた書きかな文から得られた連鎖確率を使用する．
ところで，この方法は，文法的にも意味的にも正しい日本文を対象に提案された方法である．
言い直しを含む文では，換言前音節列の部分で発話の中断や言い誤りが起こっているため，仮文節境界の判定に用いた連鎖確率の「落ち込み」や「立ち上がり」が必ずしもシャープには現れない危険性があり，上記の方法を，言い直しを含む文にそのまま適用するのは適切でないと考えられる．
そこで，言い直し音節列の挿入された文節境界の性質について考えると以下のことが分かる[CITE]．
まず，換言前音節列の始点に当たる文節境界では，その境界の直前の文字列は正しい文字列であるので，前方向(順方向)のマルコフ連鎖確率値が落ち込む位置を求めれば，その位置が換言前音節列の始点となっている可能性が高い．
これに対して，換言前音節列の終点に当たる文節境界では，その境界の直前の文字列は言い直し対象の一部(言い誤りなど)であるので，前方向(順方向)のマルコフ連鎖確率値が必ずしも落ち込むとは限らない．
しかし，その境界の後方の音節列は正しく言い直された音節列であるので，後方向(逆方向)のマルコフ連鎖を使用すれば，連鎖確率の落ち込みによってその位置を抽出できる可能性が高い．
以上から，本論文では，図2-(iv)のように前方向(順方向)と後方向(逆方向)のマルコフ連鎖確率値を組み合わせることによって文節境界を判定する．
文節境界の推定では，前方法，後方向のマルコフ連鎖モデルを使用することを述べたが，ここではさらに，文節境界をまたがる文字連鎖の確率をも考慮し，３つの方法を考える．
以下では，[CITE]で用いられた下記の記号を用いて，各方法を定義する．
\Vspace
FBL:文節境界記号bと前方文字との連鎖確率の「立ち上がり」を順方向に評価する方法
BBL:文節境界記号bと後方文字との連鎖確率の「立ち上がり」を逆方向に評価する方法
FL:文節間をまたがる音節間の結合力(「落ち込み」のみ)を順方向に評価する方法
BL:文節間をまたがる音節間の結合力(「落ち込み」のみ)を逆方向に評価する方法
\Vspace
なお，ここでは，マルコフ連鎖確率として３重マルコフモデルを用いる．
また，以下では，複数の方法を組み合わせて使用するときの文節境界の判定条件を記号「・(and)」，「+(or)」で表す．
\Vspace
第一の方法：《単純な双方向型の推定》(FBL+BBL法:図3-(i))
連鎖確率の小さいところを抽出し，その位置に文節境界を表す記号bを挿入したとき，記号bについての双方向のマルコフ連鎖確率値の少なくともどちらか一つが，ある閾値より大きくなるところを文節境界と推定する．
第二の方法：《順方向挟み込み型を併用した双方向型の推定》(FL・(FBL+BBL)法:図3-(ii))
第一の方法に加えて，文節境界をまたがる文字間の連鎖確率を順方向に評価する．
第三の方法：《双方向挟み込みを併用した双方向型の推定》(FL・BL・(FBL+BBL)法:図3-(iii))
第一の方法に加えて，文節境界をまたがる文字間の連鎖確率を順方向と逆方法から評価する．
\Vspace
第１段階の方法で得られた文節境界のうち，任意の境界から始まる３つの連続した文節境界を順に，第１，第２，第３文節境界と呼ぶ．
連続した文節の類似性を判定するには，これらの文節境界に挟まれた文字列を比較すればよいが，これらの文節境界は必ずしも正しいとは保証されない．
特に，３つの文節境界が共にすべて正しい確率は，一つの境界が正しい場合よりも低下するから，なるべく少ない数の境界を使用して言い直し表現を抽出できるのが望ましい．
しかし，逆に，使用できる文節境界が少ない場合は，文節間の類似性判定の精度が低下する恐れがある．
これらの点を考慮して，ここでは，文節間の類似性を判定する方法（マッチング法）として，以下の３つの方法を考える．
方式1：１つの文節境界だけを使用する方法
方式2：連続した2つの文節境界を使用する方法
方式3：連続した3つの文節境界を使用する方法
\Vspace
以下，これらの３つの方法の詳細を述べる．
まず，隣接する任意の2つの文節候補をそれぞれ，[MATH]，および，[MATH]とする．
【方式1のマッチング方法】\Vspace
与えられた文節の先頭を始点として，長さ[MATH]文字（[MATH]は平均文節長の２〜３倍程度）の音節列[MATH]（但し，[MATH]の中に先頭文字[MATH]と等しい文字[MATH]が存在する．
すなわち，[MATH]）を取り出す．
[MATH],[MATH], [MATH],[MATH]を図４のように横と縦にならべたマトリックスを考え，[MATH]となる[MATH] の位置[MATH] (但し，[MATH])を換言後文節の開始点とする．
換言前文節候補の[MATH]個の音節列[MATH]の少なくとも[MATH]個の[MATH]（ここで，[MATH])に対して，式[MATH]が成り立つ時，[MATH]個の音節列[MATH]を換言前音節列として抽出する．
ここで，[MATH]はハミング距離であり，実験的に最適値を定める．
【方式2のマッチング法】\Vspace
２つの文節候補[MATH]と[MATH]において，[MATH]を換言前文節候補とし，[MATH]の文字列の中からその部分列として，[MATH]の文節長[MATH]と同じ長さの音節列[MATH]を取り出す．
[MATH]個以上の[MATH](ここで，[MATH])について[MATH]である場合に，[MATH]を換言前音節列とする．
ただし，[MATH]と[MATH]はそれぞれ文節[MATH]と[MATH]の中の[MATH]番目の音節を表す．
【方式3のマッチング法】\Vspace
第1，第2，および第3の文節境界によって決定される音節列[MATH]および，[MATH]の組に対して，少なくとも[MATH]個の[MATH] (但し，[MATH]は[MATH]と[MATH]の中で小さい方の値に対して，[MATH](または[MATH]))について[MATH]となる場合に，[MATH]を換言前音節列とする．
前章で述べた方法は，文節境界の推定と文節間の類似性判定の２つの手順から構成される．
そこで，本章では，文節境界の推定精度（適合率[MATH]と再現率[MATH]），及び，文節間の類似性の推定精度（適合率[MATH]と再現率[MATH]）が与えられた時，最終的に抽出される言い直し表現の抽出精度（適合率[MATH]と再現率[MATH]）を推定する方法について考える．
文節境界推定の結果から，マッチングの3方式に必要な文節がどれだけ正確に抽出できるか考える．
(１)任意の文節の先頭位置が正しい確率
まず，実験標本に含まれている正しい文節境界の数を[MATH]，文節境界の候補として検出した境界の数を[MATH]，そのうち正しい文節境界の数を[MATH]とすると，推定された文節境界の適合率[MATH]，再現率[MATH]は，それぞれ，
であるから，正しく推定された文節境界の数を[MATH]と置くと，[MATH]は[MATH]に等しく，
(２)正しく取り出される文節の数
推定された文節境界から，どれだけの数の文節が正しく取り出せるかを考える．
正しい文節は，連続する２つの文節境界が正しい時に得られる．
そこでまず，先頭の文節境界を考えると，(1)から，そのような境界は，[MATH]個得られる．
次に，これらの[MATH]個の境界に続く文節境界がどれだけ正しく決定されているかを考える．
但し，ここでは，[MATH], [MATH], [MATH]はいずれも１より十分大きい値とする．
ある正しく決定された文節境界(始点)の後に初めて現れる文節境界としては，\Vspace
正しく文節境界として検出されたもの([MATH])
誤って文節境界と判定されたもの([MATH])
見過ごされてしまったもの([MATH])
\Vspaceの３種が考えられる．
全体では，[MATH]通りの可能性があるが，このうち(1)の場合のみ正しい文節が得られる．
どの可能性も文節開始点と独立に現れると仮定すると，(1)が現れる確率は[MATH]である．
以上から，正しく抽出された文節の数は，[MATH]は，
と推定される．
ここで，(1)および(2)式を用いて書き替えると，
但し[MATH]．
(３)連続して正しく取り出せる文節の組の数
この場合は，連続した3つの文節境界が正解であることが必要である．
連続する2つの文節境界が正しい文節境界の組みの数は(3)式で与えられるから，連続した３つの文節境界が正解となる組の数[MATH]は，(2)と同様の議論によって，[MATH]の[MATH]倍となるから，
(１)言い直し表現の総合的な抽出精度
文節間の音節類似性を判定するマッチング処理で，言い直し表現が正しく言い直しとして抽出できるのは，正しい文節境界を持つ文節候補の中からのみと考えられる．
これに対して，誤った言い直し表現は，文節境界が正しい場合からも，また，文節境界が誤った場合からも抽出される．
そこで，正しい文節境界を持つ文節に含まれる言い直し表現が，正しく言い直しと判定される割合を[MATH]とし，言い直しでない文節を間違って言い直しと判定する割合を[MATH]とする．
また，文節境界推定実験で得られた文節の数を[MATH]，その中の正しい文節境界を持つ文節に含まれる言い直し表現の数を[MATH]とする．
この時，マッチング実験において正しく言い直しと判定されるものは，[MATH]件，誤って言い直しと判定されるものは，[MATH]件であるから，総合的な（第１段階と第２段階を組み合わせたときの）言い直し表現の抽出精度（適合率[MATH]と再現率[MATH]）は，
となる．
但し，[MATH]は標本全体に含まれる言い直し文節の数を示す．
ここで，[MATH]は既知としてよいから，[MATH], [MATH], [MATH], [MATH]の４つのパラメータの値が分かれば，[MATH], [MATH]は計算できる．
そこで，以下では，これらの値を求める．
(２)文節数とその中の換言文節数（NとM）
ここで，第１段階の文節境界の推定で得られる言い直し文節候補の数[MATH]とその中に含まれる言い直し表現の数[MATH]を考える．
[MATH]は，３つのマッチング方式いずれの場合も共通で，
次に，標本内の文節のうち，言い直し表現の含まれる割合を[MATH]とする．
第2段階では，第1段階で正しく抽出された文節([MATH], [MATH], [MATH])の中に含まれた言い直しのみが抽出の可能性を持つ．
そこで，第１段階で抽出された文節も同じ割合で言い直し文節を含むと仮定すれば，その数[MATH]は，
となる．
(３)言い直し判定の確率（[MATH]と[MATH]）
ここで，すべての文節境界[MATH]が正しい場合を考え，正しい文節境界を持つ[MATH]個の文節の中に，[MATH]個の言い直し表現が含まれていたとする．
また，この標本に対して文節のマッチング処理によって，[MATH]個の文節が言い直しと判定され，そのうち正しく判定されたものは[MATH]個だったとすると，マッチングの精度（適合率[MATH]と再現率[MATH]）は，
で与えられる．
この時，[MATH]は，定義により，[MATH]である．
また，[MATH]は，以下のように求められる．
すなわち，言い直しでない文節数は[MATH]件存在するのに対して，このうちの[MATH]件を言い直しと判定したことになるから，[MATH]/[MATH]．
ここで，全文節[MATH]に含まれる言い直し文節[MATH]の割合を[MATH]とおき，(10)式を使用すると，[MATH]は，
以上で，第１段階と第２段階の方法の精度（それぞれ，[MATH]，[MATH]および[MATH]，[MATH]）が分かれば，それを結合した総合的な抽出精度([MATH] , [MATH])が推定できる．
言い直し（以下では「換言」とも言う）とは，下記の例に示すように，前に言ったことの誤りを訂正してもう一度言ったり，話の途中で言い淀んでしまってもう一度言うといった表現を示す．
\Vspace「はい，（かしこ）[MATH]ました．
」
「（わたし）[MATH]鈴木が承りました．
」
\Vspace以下では，言い直しによって訂正される対象となる部分（括弧で示した部分）を「換言前音節列（又は換言前文節）」と呼び，また言い直しによって訂正された部分（下線で示した部分）を「換言後音節列（換言後文節）」と呼ぶ．
さて，言い直し表現の出現位置と種類について考える．
換言前音節列は，後で換言後音節列によって訂正される部分であるから，一種の誤りと見なすことができ，それを削除すれば発話者の意図した文になると考えられる．
このような観点から，会話テキストデータベース（ＡＴＲ音声翻訳通信研究所）に収録された「旅行に関する対話」の対話例を対象に，言い直し表現が出現した位置を分類すると表１の通りとなる．
この表から，換言前の音節列の約80％が正しい文の文節境界の位置に挿入された形になっていることが分かる．
次に，換言前音節列と換言後音節列が連続する場合について，言い直しのタイプを分類すると表２の結果を得る．
この表から，言い直しの大半（表2の中の切り捨てタイプと置き換えタイプを除く約60％が該当）は，間違った表現をそれと同一内容を表す正しい表現への言い換えとなっており，繰り返しの構造を持っていることが分かる．
前節の考察に従い，本論文では言い直し表現抽出の第１ステップとして，文節境界位置に現れる繰り返しタイプの言い直し表現を対象にその抽出法を考える．
ところで，抽出の対象とする言い直し表現は文節境界に現れることから，言い直し表現自体は文節で，換言前表現の始点，終点は共に文節境界であると考えることができる．
また，繰り返しタイプの言い直しでは，換言前音節列と換言後音節列は連続しており，両者は類似した音節を持つ可能性が高いから，隣接した２つの文節の音節を比較すれば，言い直し表現が抽出できると期待される．
以上から，ここでは，図1に示すように，以下の2つの段階に分けて言い直し表現を抽出する．
第１段階：言い直しを含む音節文の文節境界を推定する．
第２段階：連接する２つの文節間で音節列を比較し，類似性の高い文節の組の前方の文節を「換言前音節列」と判定する．
言い直しを含む音節列の文節境界を推定する方法について考える．
従来，べた書きされた日本語かな文の文節境界を推定する方法として，マルコフ連鎖モデルを用いた方法[CITE]が提案されている．
この方法は，図2-(i)に示すように，文節内では文字間の連鎖強度が高いことに着目して，文字連鎖確率値が落ち込むところを仮文節境界と推定するもので，具体的には，文節境界は以下の２つの手順で決定される．
\Vspace
かな文字列の前方から順にマルコフ連鎖確率を求め，連鎖確率がある閥値以下(落ち込み)となる文字を[MATH]とする．
([MATH]の直前に文節境界がある可能性が高い)
文字[MATH]の直前に文節境界記号bを挿入し，この記号と前方文字との連鎖確率を求める．
確率がある閥値以上(立ち上がり)になったとき，bの位置を文節境界と判定する．
\Vspace
なお，(1)，(2)共に，連鎖確率の評価では，正しく文節境界記号の挿入されたべた書きかな文から得られた連鎖確率を使用する．
ところで，この方法は，文法的にも意味的にも正しい日本文を対象に提案された方法である．
言い直しを含む文では，換言前音節列の部分で発話の中断や言い誤りが起こっているため，仮文節境界の判定に用いた連鎖確率の「落ち込み」や「立ち上がり」が必ずしもシャープには現れない危険性があり，上記の方法を，言い直しを含む文にそのまま適用するのは適切でないと考えられる．
そこで，言い直し音節列の挿入された文節境界の性質について考えると以下のことが分かる[CITE]．
まず，換言前音節列の始点に当たる文節境界では，その境界の直前の文字列は正しい文字列であるので，前方向(順方向)のマルコフ連鎖確率値が落ち込む位置を求めれば，その位置が換言前音節列の始点となっている可能性が高い．
これに対して，換言前音節列の終点に当たる文節境界では，その境界の直前の文字列は言い直し対象の一部(言い誤りなど)であるので，前方向(順方向)のマルコフ連鎖確率値が必ずしも落ち込むとは限らない．
しかし，その境界の後方の音節列は正しく言い直された音節列であるので，後方向(逆方向)のマルコフ連鎖を使用すれば，連鎖確率の落ち込みによってその位置を抽出できる可能性が高い．
以上から，本論文では，図2-(iv)のように前方向(順方向)と後方向(逆方向)のマルコフ連鎖確率値を組み合わせることによって文節境界を判定する．
文節境界の推定では，前方法，後方向のマルコフ連鎖モデルを使用することを述べたが，ここではさらに，文節境界をまたがる文字連鎖の確率をも考慮し，３つの方法を考える．
以下では，[CITE]で用いられた下記の記号を用いて，各方法を定義する．
\Vspace
FBL:文節境界記号bと前方文字との連鎖確率の「立ち上がり」を順方向に評価する方法
BBL:文節境界記号bと後方文字との連鎖確率の「立ち上がり」を逆方向に評価する方法
FL:文節間をまたがる音節間の結合力(「落ち込み」のみ)を順方向に評価する方法
BL:文節間をまたがる音節間の結合力(「落ち込み」のみ)を逆方向に評価する方法
\Vspace
なお，ここでは，マルコフ連鎖確率として３重マルコフモデルを用いる．
また，以下では，複数の方法を組み合わせて使用するときの文節境界の判定条件を記号「・(and)」，「+(or)」で表す．
\Vspace
第一の方法：《単純な双方向型の推定》(FBL+BBL法:図3-(i))
連鎖確率の小さいところを抽出し，その位置に文節境界を表す記号bを挿入したとき，記号bについての双方向のマルコフ連鎖確率値の少なくともどちらか一つが，ある閾値より大きくなるところを文節境界と推定する．
第二の方法：《順方向挟み込み型を併用した双方向型の推定》(FL・(FBL+BBL)法:図3-(ii))
第一の方法に加えて，文節境界をまたがる文字間の連鎖確率を順方向に評価する．
第三の方法：《双方向挟み込みを併用した双方向型の推定》(FL・BL・(FBL+BBL)法:図3-(iii))
第一の方法に加えて，文節境界をまたがる文字間の連鎖確率を順方向と逆方法から評価する．
\Vspace
第１段階の方法で得られた文節境界のうち，任意の境界から始まる３つの連続した文節境界を順に，第１，第２，第３文節境界と呼ぶ．
連続した文節の類似性を判定するには，これらの文節境界に挟まれた文字列を比較すればよいが，これらの文節境界は必ずしも正しいとは保証されない．
特に，３つの文節境界が共にすべて正しい確率は，一つの境界が正しい場合よりも低下するから，なるべく少ない数の境界を使用して言い直し表現を抽出できるのが望ましい．
しかし，逆に，使用できる文節境界が少ない場合は，文節間の類似性判定の精度が低下する恐れがある．
これらの点を考慮して，ここでは，文節間の類似性を判定する方法（マッチング法）として，以下の３つの方法を考える．
方式1：１つの文節境界だけを使用する方法
方式2：連続した2つの文節境界を使用する方法
方式3：連続した3つの文節境界を使用する方法
\Vspace
以下，これらの３つの方法の詳細を述べる．
まず，隣接する任意の2つの文節候補をそれぞれ，[MATH]，および，[MATH]とする．
【方式1のマッチング方法】\Vspace
与えられた文節の先頭を始点として，長さ[MATH]文字（[MATH]は平均文節長の２〜３倍程度）の音節列[MATH]（但し，[MATH]の中に先頭文字[MATH]と等しい文字[MATH]が存在する．
すなわち，[MATH]）を取り出す．
[MATH],[MATH], [MATH],[MATH]を図４のように横と縦にならべたマトリックスを考え，[MATH]となる[MATH] の位置[MATH] (但し，[MATH])を換言後文節の開始点とする．
換言前文節候補の[MATH]個の音節列[MATH]の少なくとも[MATH]個の[MATH]（ここで，[MATH])に対して，式[MATH]が成り立つ時，[MATH]個の音節列[MATH]を換言前音節列として抽出する．
ここで，[MATH]はハミング距離であり，実験的に最適値を定める．
【方式2のマッチング法】\Vspace
２つの文節候補[MATH]と[MATH]において，[MATH]を換言前文節候補とし，[MATH]の文字列の中からその部分列として，[MATH]の文節長[MATH]と同じ長さの音節列[MATH]を取り出す．
[MATH]個以上の[MATH](ここで，[MATH])について[MATH]である場合に，[MATH]を換言前音節列とする．
ただし，[MATH]と[MATH]はそれぞれ文節[MATH]と[MATH]の中の[MATH]番目の音節を表す．
【方式3のマッチング法】\Vspace
第1，第2，および第3の文節境界によって決定される音節列[MATH]および，[MATH]の組に対して，少なくとも[MATH]個の[MATH] (但し，[MATH]は[MATH]と[MATH]の中で小さい方の値に対して，[MATH](または[MATH]))について[MATH]となる場合に，[MATH]を換言前音節列とする．
前章で述べた方法は，文節境界の推定と文節間の類似性判定の２つの手順から構成される．
そこで，本章では，文節境界の推定精度（適合率[MATH]と再現率[MATH]），及び，文節間の類似性の推定精度（適合率[MATH]と再現率[MATH]）が与えられた時，最終的に抽出される言い直し表現の抽出精度（適合率[MATH]と再現率[MATH]）を推定する方法について考える．
文節境界推定の結果から，マッチングの3方式に必要な文節がどれだけ正確に抽出できるか考える．
(１)任意の文節の先頭位置が正しい確率
まず，実験標本に含まれている正しい文節境界の数を[MATH]，文節境界の候補として検出した境界の数を[MATH]，そのうち正しい文節境界の数を[MATH]とすると，推定された文節境界の適合率[MATH]，再現率[MATH]は，それぞれ，
であるから，正しく推定された文節境界の数を[MATH]と置くと，[MATH]は[MATH]に等しく，
(２)正しく取り出される文節の数
推定された文節境界から，どれだけの数の文節が正しく取り出せるかを考える．
正しい文節は，連続する２つの文節境界が正しい時に得られる．
そこでまず，先頭の文節境界を考えると，(1)から，そのような境界は，[MATH]個得られる．
次に，これらの[MATH]個の境界に続く文節境界がどれだけ正しく決定されているかを考える．
但し，ここでは，[MATH], [MATH], [MATH]はいずれも１より十分大きい値とする．
ある正しく決定された文節境界(始点)の後に初めて現れる文節境界としては，\Vspace
正しく文節境界として検出されたもの([MATH])
誤って文節境界と判定されたもの([MATH])
見過ごされてしまったもの([MATH])
\Vspaceの３種が考えられる．
全体では，[MATH]通りの可能性があるが，このうち(1)の場合のみ正しい文節が得られる．
どの可能性も文節開始点と独立に現れると仮定すると，(1)が現れる確率は[MATH]である．
以上から，正しく抽出された文節の数は，[MATH]は，
と推定される．
ここで，(1)および(2)式を用いて書き替えると，
但し[MATH]．
(３)連続して正しく取り出せる文節の組の数
この場合は，連続した3つの文節境界が正解であることが必要である．
連続する2つの文節境界が正しい文節境界の組みの数は(3)式で与えられるから，連続した３つの文節境界が正解となる組の数[MATH]は，(2)と同様の議論によって，[MATH]の[MATH]倍となるから，
(１)言い直し表現の総合的な抽出精度
文節間の音節類似性を判定するマッチング処理で，言い直し表現が正しく言い直しとして抽出できるのは，正しい文節境界を持つ文節候補の中からのみと考えられる．
これに対して，誤った言い直し表現は，文節境界が正しい場合からも，また，文節境界が誤った場合からも抽出される．
そこで，正しい文節境界を持つ文節に含まれる言い直し表現が，正しく言い直しと判定される割合を[MATH]とし，言い直しでない文節を間違って言い直しと判定する割合を[MATH]とする．
また，文節境界推定実験で得られた文節の数を[MATH]，その中の正しい文節境界を持つ文節に含まれる言い直し表現の数を[MATH]とする．
この時，マッチング実験において正しく言い直しと判定されるものは，[MATH]件，誤って言い直しと判定されるものは，[MATH]件であるから，総合的な（第１段階と第２段階を組み合わせたときの）言い直し表現の抽出精度（適合率[MATH]と再現率[MATH]）は，
となる．
但し，[MATH]は標本全体に含まれる言い直し文節の数を示す．
ここで，[MATH]は既知としてよいから，[MATH], [MATH], [MATH], [MATH]の４つのパラメータの値が分かれば，[MATH], [MATH]は計算できる．
そこで，以下では，これらの値を求める．
(２)文節数とその中の換言文節数（NとM）
ここで，第１段階の文節境界の推定で得られる言い直し文節候補の数[MATH]とその中に含まれる言い直し表現の数[MATH]を考える．
[MATH]は，３つのマッチング方式いずれの場合も共通で，
次に，標本内の文節のうち，言い直し表現の含まれる割合を[MATH]とする．
第2段階では，第1段階で正しく抽出された文節([MATH], [MATH], [MATH])の中に含まれた言い直しのみが抽出の可能性を持つ．
そこで，第１段階で抽出された文節も同じ割合で言い直し文節を含むと仮定すれば，その数[MATH]は，
となる．
(３)言い直し判定の確率（[MATH]と[MATH]）
ここで，すべての文節境界[MATH]が正しい場合を考え，正しい文節境界を持つ[MATH]個の文節の中に，[MATH]個の言い直し表現が含まれていたとする．
また，この標本に対して文節のマッチング処理によって，[MATH]個の文節が言い直しと判定され，そのうち正しく判定されたものは[MATH]個だったとすると，マッチングの精度（適合率[MATH]と再現率[MATH]）は，
で与えられる．
この時，[MATH]は，定義により，[MATH]である．
また，[MATH]は，以下のように求められる．
すなわち，言い直しでない文節数は[MATH]件存在するのに対して，このうちの[MATH]件を言い直しと判定したことになるから，[MATH]/[MATH]．
ここで，全文節[MATH]に含まれる言い直し文節[MATH]の割合を[MATH]とおき，(10)式を使用すると，[MATH]は，
以上で，第１段階と第２段階の方法の精度（それぞれ，[MATH]，[MATH]および[MATH]，[MATH]）が分かれば，それを結合した総合的な抽出精度([MATH] , [MATH])が推定できる．
