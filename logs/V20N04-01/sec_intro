近年，新聞やWeb上のブログだけではなく，ツイートや音声対話ログなど様々な分野のテキスト情報を利用することが可能である．
これらの多様なテキストから欲しい情報を抽出する検索技術や，有益な情報のみを自動で抽出・分析するテキストマイニング技術では，表現の違いに頑健な意味を軸にした情報抽出が求められている．
たとえば，お客様の声を分析するコールセンタマイニング（e.g.,那須川2001）では，下記のa，bの表現を，「同義である」と正しく認識・集計する必要がある．
\eenumsentence{
メモリを消費している
メモリを食っている} \eenumsentence{
キーボードが壊れた
キーボードが故障した}検索においても，「キーボード壊れた」で検索した際に，「キーボード故障した」が含まれているテキストも表示されれば，よりユーザの意図を理解した検索が行えると考えられる．
テキストマイニングのようなユーザの声の抽出・分析において重要となるのは，「消費している」，「壊れた」などといった述部である．
述部は，文情報の核を表しており，商品の評判（e.g.,満足している）や苦情（e.g.,壊れた，使いにくい），ユーザの経験（e.g.,堪能した）や要望（e.g.,直してほしい）などを表す．
しかし，あらゆる分野，文体のテキストを対象とした場合，述部の多様性が顕著になる．
たとえば，「正常な動作が損なわれる」という出来事を表現する場合，新聞などフォーマルな文書では「故障する」と表現されることが多いが，ブログなどインフォーマルな文書では「壊れる」と表現されることが多い．
テキストの種類により同じ出来事でも異なる文字列で表現されるため，異なる分野のテキストを統合した情報抽出や，テキストマイニングを行う場合は，述部の同義性を計算機で正しく認識して分析しなくてはいけない．
述部の同義性を計算機で識別することができれば，テキストマイニングなどにおいて，同義表現を正しくまとめ上げ，高精度に集計・分析を行うことが可能となる．
また，検索技術においては，表現が異なるが同じことを表しているテキストを拾い上げることができ，再現率の向上が期待できる．
本稿では，日本語の述部に焦点を置き，異なる2つの述部が同義か否かを判別する述部の同義判定手法を提案する．
既存の手法では，単一のリソースにのみ依存しているために，まとめ上げられる述部の数が少ないという再現率の問題や，異なる意味のものまで誤ってまとめ上げてしまうという精度の問題がある．
そこで本稿では，述部の言語的構造を分析し，同義述部の認識という観点で必要な「述部の語義（辞書定義文）」，「抽象的な意味属性（用言属性）」，「文脈（分布類似度）」，「時制・否定・モダリティ（機能表現）」といった言語情報を複数の言語リソースから抽出することで，精度と再現率の双方のバランスをとった述部のまとめ上げを行う．
なお，本稿では「消費／し／て／いる」などの「内容語＋機能表現」を述部と定義し，「メモリを‐消費している」と言った「項‐述部」を単位として述部の同義判定を行う．
本稿の構成は次のとおりである．
2節では，関連研究とその問題点について論じる．
3節では，述部の言語構造について論じる．
4節では，本稿の提案手法である複数の言語的特徴を用いた同義判定について述べる．
5節では，同義述部コーパスについて述べる．
6節，7節では述部の同義判定実験とその考察を行う．
8節は結論である．
近年，新聞やWeb上のブログだけではなく，ツイートや音声対話ログなど様々な分野のテキスト情報を利用することが可能である．
これらの多様なテキストから欲しい情報を抽出する検索技術や，有益な情報のみを自動で抽出・分析するテキストマイニング技術では，表現の違いに頑健な意味を軸にした情報抽出が求められている．
たとえば，お客様の声を分析するコールセンタマイニング（e.g.,那須川2001）では，下記のa，bの表現を，「同義である」と正しく認識・集計する必要がある．
\eenumsentence{
メモリを消費している
メモリを食っている} \eenumsentence{
キーボードが壊れた
キーボードが故障した}検索においても，「キーボード壊れた」で検索した際に，「キーボード故障した」が含まれているテキストも表示されれば，よりユーザの意図を理解した検索が行えると考えられる．
テキストマイニングのようなユーザの声の抽出・分析において重要となるのは，「消費している」，「壊れた」などといった述部である．
述部は，文情報の核を表しており，商品の評判（e.g.,満足している）や苦情（e.g.,壊れた，使いにくい），ユーザの経験（e.g.,堪能した）や要望（e.g.,直してほしい）などを表す．
しかし，あらゆる分野，文体のテキストを対象とした場合，述部の多様性が顕著になる．
たとえば，「正常な動作が損なわれる」という出来事を表現する場合，新聞などフォーマルな文書では「故障する」と表現されることが多いが，ブログなどインフォーマルな文書では「壊れる」と表現されることが多い．
テキストの種類により同じ出来事でも異なる文字列で表現されるため，異なる分野のテキストを統合した情報抽出や，テキストマイニングを行う場合は，述部の同義性を計算機で正しく認識して分析しなくてはいけない．
述部の同義性を計算機で識別することができれば，テキストマイニングなどにおいて，同義表現を正しくまとめ上げ，高精度に集計・分析を行うことが可能となる．
また，検索技術においては，表現が異なるが同じことを表しているテキストを拾い上げることができ，再現率の向上が期待できる．
本稿では，日本語の述部に焦点を置き，異なる2つの述部が同義か否かを判別する述部の同義判定手法を提案する．
既存の手法では，単一のリソースにのみ依存しているために，まとめ上げられる述部の数が少ないという再現率の問題や，異なる意味のものまで誤ってまとめ上げてしまうという精度の問題がある．
そこで本稿では，述部の言語的構造を分析し，同義述部の認識という観点で必要な「述部の語義（辞書定義文）」，「抽象的な意味属性（用言属性）」，「文脈（分布類似度）」，「時制・否定・モダリティ（機能表現）」といった言語情報を複数の言語リソースから抽出することで，精度と再現率の双方のバランスをとった述部のまとめ上げを行う．
なお，本稿では「消費／し／て／いる」などの「内容語＋機能表現」を述部と定義し，「メモリを‐消費している」と言った「項‐述部」を単位として述部の同義判定を行う．
本稿の構成は次のとおりである．
2節では，関連研究とその問題点について論じる．
3節では，述部の言語構造について論じる．
4節では，本稿の提案手法である複数の言語的特徴を用いた同義判定について述べる．
5節では，同義述部コーパスについて述べる．
6節，7節では述部の同義判定実験とその考察を行う．
8節は結論である．
