================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:1, score:0.62426] 本稿では，同じ出来事を表している述部表現をまとめ上げるため，「メモリを消費している」と「メモリを食っている」の「消費している」と「食っている」のような述部表現を対象に，異なる2つの述部が同義か否かを認識する同義判定を行う．
[i:2, score:0.68602] 述部の言語構造分析をもとに，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という複数の言語知識を用い，それらを素性とした識別学習で同義判定を行った．
[i:3, score:0.54350] 実験の結果，既存手法に比べ，高い精度で述部の同義性を判定することが可能になった．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:17, score:0.59045] 述部の同義性を計算機で識別することができれば，テキストマイニングなどにおいて，同義表現を正しくまとめ上げ，高精度に集計・分析を行うことが可能となる．
[i:21, score:0.70067] そこで本稿では，述部の言語的構造を分析し，同義述部の認識という観点で必要な「述部の語義（辞書定義文）」，「抽象的な意味属性（用言属性）」，「文脈（分布類似度）」，「時制・否定・モダリティ（機能表現）」といった言語情報を複数の言語リソースから抽出することで，精度と再現率の双方のバランスをとった述部のまとめ上げを行う．
[i:22, score:0.62138] なお，本稿では「消費／し／て／いる」などの「内容語＋機能表現」を述部と定義し，「メモリを‐消費している」と言った「項‐述部」を単位として述部の同義判定を行う．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[i:30, score:0.00000] 
-----------------------------------------------------
  [subsection title : 辞書を用いた言い換え研究]
-----------------------------------------------------
  [i:lead, score:0.56584] 2つの異なる表現が同義か否かを判別する研究のひとつとして，述部を対象にした言い換え研究がある．
.....
  [i:31, score:0.56584] 2つの異なる表現が同義か否かを判別する研究のひとつとして，述部を対象にした言い換え研究がある．
  [i:33, score:0.52684] 同様に，鍜治・黒橋(2004)は，「名詞＋格助詞＋動詞」の構造をもつ述部を対象に，「非難を浴びる」と言った迂言表現や，「貯金をためる」と言った重複表現の認識と言い換えを，国語辞典からの定義文を手掛かりに行っている．
  [i:35, score:0.56445] 述部を対象とした言い換えの研究を用いて，複数の言い換え表現をあらかじめ生成することで，本稿が目的とする同義述部のまとめ上げが可能である．
-----------------------------------------------------
  [subsection title : コーパスからの分布類似度計算]
-----------------------------------------------------
  [i:lead, score:0.16275] 2つの異なる表現の意味が似ているか否かを判定する研究に，大量のコーパスを用いた分布類似度の研究がある(Curran 2004; Dagan, Lee, and Pereira 1999; Lee 1999; Lin 1998)．
.....
  [i:39, score:0.53490] Szpektor and Dagan (2008)は，``X takes a nap''と``X sleeps''の関係のように，述部と1つの変数を単位として分布類似度計算を行い，述部を対象に含意ルールの獲得を行った．
  [i:40, score:0.68663] 柴田・黒橋(2010)は，「景気が冷え込む」の「冷え込む」と「景気が悪化する」の「悪化する」のように組み合わさる項によって同義になる表現をも考慮し，大規模コーパスから項と述部（e.g.,景気が‐悪化）を単位にした分布類似度ベクトルを用いて同義語獲得を行った．
  [i:70, score:0.54962] } 2つの文があった場合，双方とも「ブラシを使う」や「パフを使う」という「項‐述部」を共有しているため，「粉を取る」と「粉をつける」という時間経過を表す述部同士の類似度が高くなってしまう．
-----------------------------------------------------
  [subsection title : 教師あり学習を用いた同義判定]
-----------------------------------------------------
  [i:lead, score:0.24060] 教師あり学習として同義表現の識別や獲得を行っている研究としてHashimoto, Torisawa, De Saeger, Kazama, and Kurohashi (2011)がある．
.....
  [i:82, score:0.36601] Hagiwara (2008)は，分布類似度の素性と文中の単語ペアの統語構造を組み合わせて，教師あり学習の識別問題として，分布類似度単体よりも高精度に同義識別を行った．
  [i:83, score:0.34474] しかし，Hagiwara (2008)の手法では，コーパスからの言語情報のみしか用いておらず，分布類似度が不得意とする反義単語と同義単語の識別の有効性については述べられていない．
  [i:90, score:0.47421] また，日本語のように動詞以外の単語が述部に現れたり，複数の文末表現と組み合わさって述部を構成する言語を対象にする場合には，それらの意味を表現する素性を工夫する必要がある．

================================================================
[section type  : proposed_method]
[section title : 述部の言語的特徴]
================================================================
[i:91, score:0.55529] 2節で述べたように，既存手法を日本語の述部の同義判定にそのまま適用した場合，再現率もしくは精度に問題が出る．
[i:92, score:0.56030] そこで，本節では述部の同義性を正しく計算機で判別するために必要な情報を考察するため，述部の言語構造を言語学的な視点で分析する．
[i:104, score:0.55404] そこで，本稿では述部の言語情報を複数のレベルに分類し，同義述部の認識という観点で必要な情報を用いて，計算機に同義の述部を認識させる．

================================================================
[section type  : proposed_method]
[section title : 提案手法：複数の言語的特徴を用いた同義判定]
================================================================
[i:105, score:0.60016] 本稿では，述部の同義判定を行うために，4つの言語情報を素性とし，識別学習を用いて同義か否かを判定する．
[i:107, score:0.16343] 4つの言語情報は，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」である．
[i:108, score:0.04979] 以下に素性の具体的な説明を行う．
-----------------------------------------------------
  [subsection title : 辞書定義文を用いた相互補完性・定義文類似性]
-----------------------------------------------------
  [i:lead, score:0.56537] 述部の同義性を判別するためには，まず単語そのものの定義が必要となる(Lexical-Encyclopedic information)．
.....
  [i:112, score:0.63230] （e.g.,土屋・黒橋2000;藤田・乾2001;鍜治，河原，黒橋，佐藤2003）述部の同義性を判別するという目的で，辞書定義文を考察すると，2つの有益な特徴を見出すことができる．
  [i:115, score:0.60148] 下記は，同義述部のペアである「出来上がる」と「完成する」の定義文の一例である．
  [i:125, score:0.61844] また，「プリンターが‐動かない」といった「項‐述部」の単位で同義判定を行うため，項（プリンター）もしくは項と同様の名詞クラスが相手の定義文に現れたか否かも素性として用いる．
-----------------------------------------------------
  [subsection title : 用言属性を用いた述部の抽象的意味属性]
-----------------------------------------------------
  [i:lead, score:0.55240] 同義の述部は，辞書的な意味だけではなく，より抽象的な意味レベル(Semantics)でも共通性があると考えられる．
.....
  [i:140, score:0.55240] 同義の述部は，辞書的な意味だけではなく，より抽象的な意味レベル(Semantics)でも共通性があると考えられる．
  [i:141, score:0.60668] 例えば(9)の同義述部は，日本語語彙大系(池原他1999)において以下のような用言属性を持つ．
  [i:145, score:0.66117] そこで，同義判定に必要なSemanticレベルの素性として，日本語語彙大系(池原他1999)の用言属性を用いて，述部同士の抽象的な意味の重なりを抽出する．
-----------------------------------------------------
  [subsection title : 分布類似度]
-----------------------------------------------------
  [i:lead, score:0.54766] 述部が同義であれば，それら述部が現れる文脈も類似していると考えられる．
.....
  [i:159, score:0.54766] 述部が同義であれば，それら述部が現れる文脈も類似していると考えられる．
  [i:163, score:0.63024] 柴田・黒橋(2010)は，「メモリを‐消費している」のような「項‐述部」，もしくは「消費する」という述部を単位(u)として，係り受け関係にある単語を素性に，分布類似度の計算を行っている．
  [i:176, score:0.55700] JACCARD係数は，分布類似度を計算する対象(u)（項‐述部もしくは述部）が共通して持つ素性(f)を，それぞれがもつ素性の和集合で割った値である．
-----------------------------------------------------
  [subsection title : 述部の機能表現]
-----------------------------------------------------
  [i:lead, score:0.42277] 述部は「内容語」と「機能表現」から構成されている．
.....
  [i:190, score:0.55913] 辞書に‐載る} (11a)と(11b)は，機能表現「て／い／ない」を共有しており，同義述部になるが，機能表現を共有しない(11a)と(11c)は同義ではない．
  [i:191, score:0.55554] このように，述部の機能表現が重なっているか否かにより，同義か否かが変わってくる．
  [i:195, score:0.65010] 以上のように，提案手法では，「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という4つの異なる言語的特徴を用いて，述部の同義判定を行う．

================================================================
[section type  : proposed_method]
[section title : 同義述部コーパスの作成]
================================================================
[i:201, score:0.67038] 抽出した「項‐述部」の集合から，項をキーとして「同義」，「含意」，「推意」，「反義」，「その他」の意味関係に属する述部のペアを抽出した．
[i:205, score:0.63894] ）・同義(Mutual Entailment)定義：表層が異なる2つの述部が同じ出来事(Event)を表している言語テスト1：片方の述部を否定すると，意味が通じない×「述部A，でも，述部Bという訳ではない」×「述部B，でも，述部Aという訳ではない」例：＃「土産を買った．
[i:223, score:0.64496] 最終的には，「同義」，「含意」，「反義」，「その他」の意味関係に対し，4名の合意が取れた述部ペアを使用した．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[i:230, score:0.54013] 5節で作成した同義述部コーパスを用いて提案手法の評価を行った．
[i:231, score:0.23373] 辞書定義文素性の抽出には，金田一・池田(1988)の「学研国語大辞典第二版」を，抽象的な意味属性の抽出には，日本語語彙大系(池原他1999)の「用言属性」を用いる．
[i:232, score:0.53819] 分布類似度計算には，柴田・黒橋(2010)と同様の手法で作成された「項‐述部」の分布類似度モデルと，「述部」のみを単位とした分布類似度モデルを用いる．
-----------------------------------------------------
  [subsection title : 学習データ]
-----------------------------------------------------
  [i:lead, score:0.67823] 5節で作成した同義述部コーパスから，本稿で使用するリソースである学研国語大辞典と語彙大系の用言属性にエントリがあり，かつ分布類似度計算の「項‐述部」の出現頻度10以上のデータのみを選出した．
.....
  [i:236, score:0.67823] 5節で作成した同義述部コーパスから，本稿で使用するリソースである学研国語大辞典と語彙大系の用言属性にエントリがあり，かつ分布類似度計算の「項‐述部」の出現頻度10以上のデータのみを選出した．
  [i:237, score:0.67142] 項が422種類からなる「同義」，「含意」，「反義」，「その他」の述部ペアのうち，91種類の項に対する述部ペアは，本提案手法の言語的特徴を分析するための考察用データ（372ペア，held out data）として用い，実験には使用しなかった．
  [i:238, score:0.65476] 残りを学習データ（3,503ペア）とし，「同義」と「含意」の述部ペアを正例，「反義」と「その他」のペアを負例として同義判定モデルの学習を行った．
-----------------------------------------------------
  [subsection title : 比較手法]
-----------------------------------------------------
  [i:lead, score:0.04167] Baselineとして，次にあげる手法と比較した．
.....
  [i:249, score:0.58140] そこで，本稿では大規模シソーラスであるWordNetを用いて，入力された述部が同じSynsetに属していれば，同義とみなす方法で同義判定を行った．
  [i:251, score:0.56625] Baseline2 (DistPAVerb-[MATH]は，提案手法の素性のひとつである項‐述部と述部単体の分布類似度を用いて，これらが特定の閾値以上の場合は，正例とみなす方法である．
  [i:252, score:0.62414] Baseline3 (DistMultiAve-[MATH])は，Yih and Qazvinian (2012)の方法をもとに，本提案手法で用いた言語資源である大規模コーパスからの分布類似度（項‐述部と述部），辞書定義文を用いた分布類似度，語彙大系の属性から生成した分布類似度をそれぞれ計算し，その平均値を用いて，特定の閾値以上のものを正例とみなした．
-----------------------------------------------------
  [subsection title : 結果]
-----------------------------------------------------
  [i:lead, score:0.01767] 表2が示すように，提案手法が最も高いF値を示した．
.....
  [i:275, score:0.67655] 一方，Yih and Qazvinian (2012)をもとに複数の類似度計算の平均を取るBL3 (DistMultiAve-[MATH]の場合，Recallがすべての手法の中で一番高いものの，Precisionが0.537と最も低い値を出しており，提案手法のように教師あり識別問題として同義述部の判定を行う事の有効性が確認できた．
  [i:276, score:0.26803] また，本提案手法の素性を単体で用いるよりも（BL4〜BL7），すべての素性を用いた方が精度が高いことから，複数の言語的特徴を組み合わせた同義判定の有効性が確認できた．
  [i:280, score:0.33858] 特に，分布類似度の素性を抜いた場合，Precision，Recall，F値すべてが低下したため，大規模コーパスから計算した分布類似度が同義判定の素性として一番効果があった．

================================================================
[section type  : conclusion]
[section title : 考察]
================================================================
[i:290, score:0.65885] 一方，大規模コーパスから構築した分布類似度計算のみを用いた場合(BL2 (DistPAVerb-[MATH], BL3 (DistMultiAve-[MATH])，Recallは最も高い値を出したものの，下記のように，「反義述部ペア」や「時間経過を表す述部ペア」も高い類似度を出してしまい，Precisionが低下してしまった．
[i:319, score:0.62695] マンガに‐はまっている（はまる＋継続）}提案手法では，「否定」や「継続」など機能表現が共有されていると素性として考慮されるが，上記の例のように，片方にのみ特定の機能表現が入ることによって同義になる述部を識別することは不可能である．
[i:320, score:0.61770] 今後は，機能表現の素性の加え方を工夫し，上記のように特定の機能表現をもった述部とのみ同義になるような述部ペアの同義判定も考慮していきたい．

================================================================
[section type  : conclusion]
[section title : 結論]
================================================================
[i:325, score:0.64744] これらの分析をもとに，述部の同義判定に「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という4つの言語知識を用いた．
[i:326, score:0.67797] 実験の結果，既存の分布類似度のみを用いた手法では判別できなかった反義・時間経過関係の述部を正しく識別しつつ，大規模シソーラスではカバーできなかった多様な同義述部の識別が可能となった．
[i:327, score:0.65186] さらに，文情報の核を表す述部単体の同義判定だけではなく，「メモリを消費している」と「メモリを食っている」のように項が加わることで同義となる表現も扱うことが出来るようになり，テキストに記述されている評判や苦情，ユーザの経験など重要な情報を表す表現の抽出やまとめ上げが可能になると考える．

