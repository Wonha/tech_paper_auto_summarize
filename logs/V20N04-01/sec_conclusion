同義・類義表現等を集めた大規模シソーラスである日本語WordNet (Bond et al., 2009)を用いた場合，同義まとめ上げのPrecisionは高いものの(0.873)，Recallが低かった(0.331)．
実験で用いたデータは，提案手法の個々の素性の精度を正確に測るため，学研国語大辞典と日本語語彙大系に存在し，かつ分布類似度計算の「項‐述部」の出現頻度10以上のデータのみ使用するという制約を加えた．
そのため，正確な比較は難しいものの，語彙大系や国語辞書などにエントリがある語彙のみを対象にした場合でも，WordNetのような大規模シソーラスのSynsetsだけでは，カバーできない同義表現があると考えられる．
下記は，BL1 (WordNet)で同義と判定することができなかった同義述部表現の一例である．
\eenumsentence{
メモリを‐食っている
メモリを‐消費している} \eenumsentence{
酒を‐満喫する
酒を‐楽しむ}上記の例は，本提案手法では，正しく「同義である」と判別された述部ペアである．
一方，大規模コーパスから構築した分布類似度計算のみを用いた場合(BL2 (DistPAVerb-[MATH], BL3 (DistMultiAve-[MATH])，Recallは最も高い値を出したものの，下記のように，「反義述部ペア」や「時間経過を表す述部ペア」も高い類似度を出してしまい，Precisionが低下してしまった．
\enumsentence{分布類似度が閾値以上の反義ペア
a.ハンドルを‐握る
b.ハンドルを‐離す}
\enumsentence{分布類似度が閾値以上の時間経過を表す述部ペア
a.カレーを‐食べた
b.カレーが‐美味しかった}これらは，本提案手法では，正しく「同義ではない」と認識された．
このように，提案手法では，従来の大規模シソーラスでは同義と判断できなかった幅広い同義の述部を認識しつつ，同義ではない述部を正しく判別することができた．
分布類似度が高い値を出してしまう反義関係・時間経過を表す述部の識別が，本提案手法で正しく行われたのには次のような理由があると考えられる．
第一に，反義関係の識別に辞書定義文からの素性が効いた点である．
下記の，動詞「握る」の定義文が表すように，辞書定義文には，同義の単語を使ってその語彙の意味を定義する傾向があるが，反義の単語を使って定義することが少ない．
\enumsentence{「握る」の定義文の一例
物をつかんだり持ったりする．
}「握る」という単語を別の同義の単語である「つかむ」や類義表現である「持つ」という単語で表現しており，「離さない事」のように，反対の意味を表す単語にさらに否定表現をつけて定義することが少ない．
相互補完性や語彙の重なりを特徴としたことで，同義述部を認識するだけでなく，同義ではない述部を正しく排除することができたと考えられる．
次に，時間経過を表す述部ペアも，本提案手法では正しく「同義ではない」と識別できた．
これは，抽象的な述部の意味を表す用言属性の重なりを素性として加えたことによるものと考えられる．
\enumsentence{時間経過を表す述部ペアの用言属性
a.食べた【身体動作】，【状態】
b.美味しかった【属性】}
上記のように，「食べた」と「美味しかった」は時間経過の関係を表す述部ではあるが，同義の述部と異なり，必ずしも同じ意味属性を持っているとは限らない．
そのため，用言属性にも重なりがなく，正しく「同義ではない」と判別できたと考えられる．
このように，提案手法では，WordNetのような大規模シソーラスと同等のPrecisionを保ちつつ，Recallをあげることできた．
述部の言語構造に関する分析をもとに，複数の言語情報を素性として組み込むことによって，同義の述部は同義，それ以外の述部は同義ではないと正しく判別できるようになった．
一方，提案手法でうまく同義と識別できなかった述部ペアは，片方の内容語が「入れる」のように多義性の高い述部ペアや，内容語と機能表現の意味の組み合わせを考慮しなくてはいけない同義述部ペアであった．
\eenumsentence{
カラオケに‐入れてほしい（入れる＋願望）
カラオケに‐参加したい（参加する＋願望）} \eenumsentence{
筆が‐重い
筆が‐進まない（進む＋否定）} \eenumsentence{
マンガが‐大好きだ（大好き）
マンガに‐はまっている（はまる＋継続）}提案手法では，「否定」や「継続」など機能表現が共有されていると素性として考慮されるが，上記の例のように，片方にのみ特定の機能表現が入ることによって同義になる述部を識別することは不可能である．
今後は，機能表現の素性の加え方を工夫し，上記のように特定の機能表現をもった述部とのみ同義になるような述部ペアの同義判定も考慮していきたい．
また，本提案手法では項にあたる名詞句は同じ条件での同義判定であるため，「景気が‐冷え込む」と「経済が‐悪化する」のように名詞句が異なる場合の同義判定への適用には，名詞句のまとめ上げも検討する必要がある．
今後は，項が異なる場合の同義判定も考慮し，大規模データからの情報抽出・集計を行うマイニングでの本提案手法の有効性を検討したい．
本稿では，「メモリを消費している」と「メモリを食っている」の「消費している」と「食っている」といった内容語と機能表現からなる述部を対象に，異なる2つの述部が同義か否かを判定する同義判定手法を提案した．
述部の言語構造に着目し，同義述部を認識するという観点で必要な特徴を複数の言語的レベルで分析した．
これらの分析をもとに，述部の同義判定に「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という4つの言語知識を用いた．
実験の結果，既存の分布類似度のみを用いた手法では判別できなかった反義・時間経過関係の述部を正しく識別しつつ，大規模シソーラスではカバーできなかった多様な同義述部の識別が可能となった．
さらに，文情報の核を表す述部単体の同義判定だけではなく，「メモリを消費している」と「メモリを食っている」のように項が加わることで同義となる表現も扱うことが出来るようになり，テキストに記述されている評判や苦情，ユーザの経験など重要な情報を表す表現の抽出やまとめ上げが可能になると考える．
今後は，これらの同義判定を実際のテキストマイニングアプリケーションに用いることで同義述部まとめ上げの効果を明確にするとともに，本提案手法で考察した複数の言語的特徴を用いて，反義関係の識別など他の意味関係抽出への適用性を検討したい．
同義・類義表現等を集めた大規模シソーラスである日本語WordNet (Bond et al., 2009)を用いた場合，同義まとめ上げのPrecisionは高いものの(0.873)，Recallが低かった(0.331)．
実験で用いたデータは，提案手法の個々の素性の精度を正確に測るため，学研国語大辞典と日本語語彙大系に存在し，かつ分布類似度計算の「項‐述部」の出現頻度10以上のデータのみ使用するという制約を加えた．
そのため，正確な比較は難しいものの，語彙大系や国語辞書などにエントリがある語彙のみを対象にした場合でも，WordNetのような大規模シソーラスのSynsetsだけでは，カバーできない同義表現があると考えられる．
下記は，BL1 (WordNet)で同義と判定することができなかった同義述部表現の一例である．
\eenumsentence{
メモリを‐食っている
メモリを‐消費している} \eenumsentence{
酒を‐満喫する
酒を‐楽しむ}上記の例は，本提案手法では，正しく「同義である」と判別された述部ペアである．
一方，大規模コーパスから構築した分布類似度計算のみを用いた場合(BL2 (DistPAVerb-[MATH], BL3 (DistMultiAve-[MATH])，Recallは最も高い値を出したものの，下記のように，「反義述部ペア」や「時間経過を表す述部ペア」も高い類似度を出してしまい，Precisionが低下してしまった．
\enumsentence{分布類似度が閾値以上の反義ペア
a.ハンドルを‐握る
b.ハンドルを‐離す}
\enumsentence{分布類似度が閾値以上の時間経過を表す述部ペア
a.カレーを‐食べた
b.カレーが‐美味しかった}これらは，本提案手法では，正しく「同義ではない」と認識された．
このように，提案手法では，従来の大規模シソーラスでは同義と判断できなかった幅広い同義の述部を認識しつつ，同義ではない述部を正しく判別することができた．
分布類似度が高い値を出してしまう反義関係・時間経過を表す述部の識別が，本提案手法で正しく行われたのには次のような理由があると考えられる．
第一に，反義関係の識別に辞書定義文からの素性が効いた点である．
下記の，動詞「握る」の定義文が表すように，辞書定義文には，同義の単語を使ってその語彙の意味を定義する傾向があるが，反義の単語を使って定義することが少ない．
\enumsentence{「握る」の定義文の一例
物をつかんだり持ったりする．
}「握る」という単語を別の同義の単語である「つかむ」や類義表現である「持つ」という単語で表現しており，「離さない事」のように，反対の意味を表す単語にさらに否定表現をつけて定義することが少ない．
相互補完性や語彙の重なりを特徴としたことで，同義述部を認識するだけでなく，同義ではない述部を正しく排除することができたと考えられる．
次に，時間経過を表す述部ペアも，本提案手法では正しく「同義ではない」と識別できた．
これは，抽象的な述部の意味を表す用言属性の重なりを素性として加えたことによるものと考えられる．
\enumsentence{時間経過を表す述部ペアの用言属性
a.食べた【身体動作】，【状態】
b.美味しかった【属性】}
上記のように，「食べた」と「美味しかった」は時間経過の関係を表す述部ではあるが，同義の述部と異なり，必ずしも同じ意味属性を持っているとは限らない．
そのため，用言属性にも重なりがなく，正しく「同義ではない」と判別できたと考えられる．
このように，提案手法では，WordNetのような大規模シソーラスと同等のPrecisionを保ちつつ，Recallをあげることできた．
述部の言語構造に関する分析をもとに，複数の言語情報を素性として組み込むことによって，同義の述部は同義，それ以外の述部は同義ではないと正しく判別できるようになった．
一方，提案手法でうまく同義と識別できなかった述部ペアは，片方の内容語が「入れる」のように多義性の高い述部ペアや，内容語と機能表現の意味の組み合わせを考慮しなくてはいけない同義述部ペアであった．
\eenumsentence{
カラオケに‐入れてほしい（入れる＋願望）
カラオケに‐参加したい（参加する＋願望）} \eenumsentence{
筆が‐重い
筆が‐進まない（進む＋否定）} \eenumsentence{
マンガが‐大好きだ（大好き）
マンガに‐はまっている（はまる＋継続）}提案手法では，「否定」や「継続」など機能表現が共有されていると素性として考慮されるが，上記の例のように，片方にのみ特定の機能表現が入ることによって同義になる述部を識別することは不可能である．
今後は，機能表現の素性の加え方を工夫し，上記のように特定の機能表現をもった述部とのみ同義になるような述部ペアの同義判定も考慮していきたい．
また，本提案手法では項にあたる名詞句は同じ条件での同義判定であるため，「景気が‐冷え込む」と「経済が‐悪化する」のように名詞句が異なる場合の同義判定への適用には，名詞句のまとめ上げも検討する必要がある．
今後は，項が異なる場合の同義判定も考慮し，大規模データからの情報抽出・集計を行うマイニングでの本提案手法の有効性を検討したい．
本稿では，「メモリを消費している」と「メモリを食っている」の「消費している」と「食っている」といった内容語と機能表現からなる述部を対象に，異なる2つの述部が同義か否かを判定する同義判定手法を提案した．
述部の言語構造に着目し，同義述部を認識するという観点で必要な特徴を複数の言語的レベルで分析した．
これらの分析をもとに，述部の同義判定に「辞書定義文」，「用言属性」，「分布類似度」，「機能表現」という4つの言語知識を用いた．
実験の結果，既存の分布類似度のみを用いた手法では判別できなかった反義・時間経過関係の述部を正しく識別しつつ，大規模シソーラスではカバーできなかった多様な同義述部の識別が可能となった．
さらに，文情報の核を表す述部単体の同義判定だけではなく，「メモリを消費している」と「メモリを食っている」のように項が加わることで同義となる表現も扱うことが出来るようになり，テキストに記述されている評判や苦情，ユーザの経験など重要な情報を表す表現の抽出やまとめ上げが可能になると考える．
今後は，これらの同義判定を実際のテキストマイニングアプリケーションに用いることで同義述部まとめ上げの効果を明確にするとともに，本提案手法で考察した複数の言語的特徴を用いて，反義関係の識別など他の意味関係抽出への適用性を検討したい．
