機械翻訳では，統計ベースの翻訳システムのようにコーパスを直接使用するものを除き，変換規則などの翻訳知識は依然として人手による作成を必要としている．
これを自動化することは，翻訳知識作成コストの削減や，多様な分野への適応時の作業効率化などに有効である．
本稿では，機械翻訳，特に対話翻訳用の知識自動獲得を目的とした，対訳文間の階層的句アライメントを提案する．
ここで言う句アライメントとは，2言語の対訳文が存在するとき，その1言語の連続領域がもう1言語のどの連続領域に対応するか，自動的に求めることである．
連続領域は単語にとどまらず，名詞句，動詞句などの句，関係節などの範囲に及ぶため，まとめて句アライメントと呼んでいる．
ここでは対象言語として，英語と日本語について考える．
たとえば，
\parskip=0mm\itemindent=20pt
I have just arrived in New York.
{ニューヨークに着いたばかりです．
}
という対訳文があった場合，ここから
\itemindent=20pt\parskip=0mm
in New York [MATH] {ニューヨークに}
arrived in New York [MATH] {ニューヨークに着い}
have just arrived in New York [MATH] {ニューヨークに着いたばかりです}
などの対応部分を階層的に抽出することを目的とする．
これを本稿では同等句と呼ぶ．
同等句は2言語間の対応する表現を表しているため，用例ベースの翻訳システムの用例とすることができる．
また，同等句同士は階層的関係を持つため，これをパターン化することにより，文をそのまま保持する場合に比べ，用例を圧縮することもできる．
従来，このような句アライメント方法として，[CITE]などが提案されてきた．
これらに共通することは，
\labelwidth=25pt\itemsep=0mm
構文解析(句構造解析または依存構造解析)と，単語アライメントを使用する
構文解析器が最終的に出力した結果を元に句の対応を取る
単語同士の対応は，内容語を対象とする
点である．
しかし，構文解析器が出力した結果のみを使用すると，句アライメントの結果が構文解析器の精度に直接影響を受ける．
特に，従来提案されてきた方式は，構文解析が失敗するような文に関して，対策が取られていない．
すなわち，本稿で念頭においている話し言葉のような，崩れた文が多く現れるものを対象とするには不適切であると考えられる．
本稿では，構文解析と融合した階層的句アライメント方法を提案する．
具体的には，構文解析失敗時においても部分解析結果を組み合わせることにより，部分的な句の対応を出力するよう，拡張する．
また，内容語のみでなく，機能語の対応を取ることにより，句アライメント精度そのものの向上を目指す．
以下，第[REF_sec-phrase-alignment]章では，句アライメントの基本手法について述べ，第[REF_sec-parsing-for-pa]章では，構文解析との融合を行う．
第[REF_sec-word-alignment-for-pa]章では，本提案方式に適合した単語アライメントの機能について述べ，第[REF_sec-eval-alignment]章で提案方式と他の方式との比較などの評価を行う．
なお，本稿は，[CITE]を基に，加筆修正したものである．
機械翻訳では，統計ベースの翻訳システムのようにコーパスを直接使用するものを除き，変換規則などの翻訳知識は依然として人手による作成を必要としている．
これを自動化することは，翻訳知識作成コストの削減や，多様な分野への適応時の作業効率化などに有効である．
本稿では，機械翻訳，特に対話翻訳用の知識自動獲得を目的とした，対訳文間の階層的句アライメントを提案する．
ここで言う句アライメントとは，2言語の対訳文が存在するとき，その1言語の連続領域がもう1言語のどの連続領域に対応するか，自動的に求めることである．
連続領域は単語にとどまらず，名詞句，動詞句などの句，関係節などの範囲に及ぶため，まとめて句アライメントと呼んでいる．
ここでは対象言語として，英語と日本語について考える．
たとえば，
\parskip=0mm\itemindent=20pt
I have just arrived in New York.
{ニューヨークに着いたばかりです．
}
という対訳文があった場合，ここから
\itemindent=20pt\parskip=0mm
in New York [MATH] {ニューヨークに}
arrived in New York [MATH] {ニューヨークに着い}
have just arrived in New York [MATH] {ニューヨークに着いたばかりです}
などの対応部分を階層的に抽出することを目的とする．
これを本稿では同等句と呼ぶ．
同等句は2言語間の対応する表現を表しているため，用例ベースの翻訳システムの用例とすることができる．
また，同等句同士は階層的関係を持つため，これをパターン化することにより，文をそのまま保持する場合に比べ，用例を圧縮することもできる．
従来，このような句アライメント方法として，[CITE]などが提案されてきた．
これらに共通することは，
\labelwidth=25pt\itemsep=0mm
構文解析(句構造解析または依存構造解析)と，単語アライメントを使用する
構文解析器が最終的に出力した結果を元に句の対応を取る
単語同士の対応は，内容語を対象とする
点である．
しかし，構文解析器が出力した結果のみを使用すると，句アライメントの結果が構文解析器の精度に直接影響を受ける．
特に，従来提案されてきた方式は，構文解析が失敗するような文に関して，対策が取られていない．
すなわち，本稿で念頭においている話し言葉のような，崩れた文が多く現れるものを対象とするには不適切であると考えられる．
本稿では，構文解析と融合した階層的句アライメント方法を提案する．
具体的には，構文解析失敗時においても部分解析結果を組み合わせることにより，部分的な句の対応を出力するよう，拡張する．
また，内容語のみでなく，機能語の対応を取ることにより，句アライメント精度そのものの向上を目指す．
以下，第[REF_sec-phrase-alignment]章では，句アライメントの基本手法について述べ，第[REF_sec-parsing-for-pa]章では，構文解析との融合を行う．
第[REF_sec-word-alignment-for-pa]章では，本提案方式に適合した単語アライメントの機能について述べ，第[REF_sec-eval-alignment]章で提案方式と他の方式との比較などの評価を行う．
なお，本稿は，[CITE]を基に，加筆修正したものである．
