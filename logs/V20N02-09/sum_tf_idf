================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.62819] 集合拡張手法の多くはシードインスタンスだけを手掛かりに新たなインスタンスを取得するものであり，対象が複数のカテゴリであっても，各カテゴリのインスタンスの収集を独立に行う．
[i:1, score:0.62363] しかし，複数カテゴリを対象にした集合拡張ではカテゴリ間の関係など，シードインスタンスとは別の事前知識も利用できる．
[i:3, score:0.63509] さらに，Wikipediaから半自動で抽出したインスタンスと兄弟関係を事前知識として実験を行い，兄弟関係が集合拡張に有用であることを示す．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:13, score:0.70453] 例えば自動車カテゴリについて「プリウス」や「レクサス」のようなシードインスタンスから「トヨタのX」や「ハイブリッド車のX」（Xは名詞句を代入する変数）のようなパターンが得られる．
[i:23, score:0.66379] ブートストラッピング手法は意味カテゴリに関する事前知識をシードインスタンスという形で受け取っている．
[i:25, score:0.75478] 一方，事前知識として，Wikipediaにおける意味カテゴリ間の上位下位・兄弟関係に見られるように，シードインスタンス以外の知識を得られる場合がある．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
-----------------------------------------------------
  [subsection title : Espressoアルゴリズム]
-----------------------------------------------------
  [i:lead, score:0.67161] Espresso [CITE]は，パターンの取得とインスタンスの取得の2つのステップを反復する集合拡張アルゴリズムである．
.....
  [i:38, score:0.67161] Espresso [CITE]は，パターンの取得とインスタンスの取得の2つのステップを反復する集合拡張アルゴリズムである．
  [i:42, score:0.67191] Espressoアルゴリズムでは候補パターン[MATH]のスコア[MATH]と候補インスタンス[MATH]のスコア[MATH]を，それぞれ式([REF_eq:score1])と式([REF_eq:score2])で計算する．
  [i:53, score:0.58129] また，max pmiはカテゴリ内のすべてのインスタンスとパターンのpmiの最大値である．
-----------------------------------------------------
  [subsection title : 意味ドリフト]
-----------------------------------------------------
  [i:lead, score:0.71626] ブートストラッピング手法においてシードとは無関係なインスタンスを獲得してしまい，対象とするカテゴリから逸脱してしまう現象を意味ドリフトと呼ぶ[CITE]．
.....
  [i:60, score:0.71626] ブートストラッピング手法においてシードとは無関係なインスタンスを獲得してしまい，対象とするカテゴリから逸脱してしまう現象を意味ドリフトと呼ぶ[CITE]．
  [i:62, score:0.74940] Espressoアルゴリズムは何回か反復を行うと「Xの性能」や「新型のX」など多くのカテゴリのインスタンスと共起するパターン（ジェネリック・パターン）を得る．
  [i:67, score:0.71825] 例えば自動車メーカーのシードとして「サターン」や「スバル」を与えた場合，ブートストラッピング手法は「木星」や「天王星」のような星カテゴリに属するインスタンスを獲得してしまう．
-----------------------------------------------------
  [subsection title : g-Espressoアルゴリズム]
-----------------------------------------------------
  [i:lead, score:0.36563] 小町ら[CITE]はEspressoアルゴリズムをグラフ解析として定式化し，さらに意味ドリフトへの対処として，グラフカーネルの適用を提案した．
.....
  [i:72, score:0.69907] なお，ここではEspressoアルゴリズムにおける，毎回の反復において上位[MATH]個の候補を獲得する，というステップが省略されており，全パターンと全インスタンスにスコアを付与する形になっている．
  [i:73, score:0.51965] インスタンスとパターンの共起行列を[MATH]とし，その[MATH]要素[MATH]は式([REF_eq:pmi])のpmiを用いて，
  [i:81, score:0.56797] [MATH]をノード集合，[MATH]を隣接行列とした重み付き無向グラフ[MATH]を考えると，反復におけるインスタンスのスコアの更新は，シードインスタンスのスコアがグラフ上を伝播していく過程と見なすことができる．
-----------------------------------------------------
  [subsection title : 意味ドリフトへの対処]
-----------------------------------------------------
  [i:lead, score:0.68718] 意味ドリフトの影響を軽減するために，小町ら[CITE]や萩原ら[CITE]の手法に加え，シードインスタンス集合の洗練[CITE]，分類器の使用[CITE]，人間の判断の導入[CITE]，意味カテゴリ間の関係の活用[CITE]など様々な手法が提案されている．
.....
  [i:91, score:0.68718] 意味ドリフトの影響を軽減するために，小町ら[CITE]や萩原ら[CITE]の手法に加え，シードインスタンス集合の洗練[CITE]，分類器の使用[CITE]，人間の判断の導入[CITE]，意味カテゴリ間の関係の活用[CITE]など様々な手法が提案されている．
  [i:114, score:0.66257] Curranら[CITE]とCarlsonら[CITE]はどちらも事前知識としてシードインスタンスだけではなくカテゴリ間の排他関係も利用している．
  [i:116, score:0.72019] 兄弟関係は共通の特徴を持つべきであるカテゴリについての知識であり，排他関係という，インスタンスが同時に属さないカテゴリに関する知識とは別種のものである．

================================================================
[section type  : proposed_method]
[section title : 提案手法]
================================================================
-----------------------------------------------------
  [subsection title : 兄弟カテゴリのパターンによるフィルタリング]
-----------------------------------------------------
  [i:lead, score:0.43101] 本節では，意味カテゴリ間の兄弟関係を事前知識として活用する手法を提案する．
.....
  [i:126, score:0.78546] 同一の兄弟グループに属する自動車と自動二輪カテゴリについて，提案手法を用いて集合拡張の際の誤りインスタンスを除去する例を図[REF_fig:overview]に示す．
  [i:128, score:0.87250] 既存のブートストラッピング手法では，自動車カテゴリにおいて「新型のX」というパターンを獲得してしまった場合，シードや兄弟グループとは無関係のインスタンスである「iPad」を除去することができない．
  [i:135, score:0.77478] 提案手法では，候補インスタンスがフィルタパターンと共起しているか，すなわち，候補インスタンスがフィルタパターンと係り受け関係にある文節に出現しているかの検証を行うことで，インスタンスが兄弟グループに共通の特徴を保有しているかを確認する．
-----------------------------------------------------
  [subsection title : Espressoアルゴリズムをベースとした手法]
-----------------------------------------------------
  [i:lead, score:0.00086] [t]
.....
  [i:140, score:0.79230] このアルゴリズムは入力として対象とするカテゴリの集合[MATH]，[MATH]から[MATH]までの兄弟グループ，それぞれのカテゴリ[MATH]に対応するシードインスタンス集合[MATH]，反復の回数[MATH]，コーパス[MATH]を受け取る．
  [i:143, score:0.85279] 次に[REF_espresso]行目において兄弟グループ[MATH]内の各カテゴリ[MATH]のインスタンスを関数\Call{Espresso_Exclusion}{}を用いて取得する．
  [i:145, score:0.87547] この関数において，インスタンスの抽出とスコアの計算は，[REF_Espresso]節で説明したEspressoアルゴリズムに，兄弟グループのカテゴリ間でパターンに対する排他制約を導入した手法を用いて行う．
-----------------------------------------------------
  [subsection title : g-Espressoをベースとした手法]
-----------------------------------------------------
  [i:lead, score:0.76480] 正則化ラプラシアンカーネルを利用したg-Espressoによるインスタンスの抽出と，フィルタパターンによる候補インスタンスの特徴の検証を組み合わせた手法を，アルゴリズムとして記述したものがAlgorithm [REF_proposed_g_espresso]である．
.....
  [i:167, score:0.76480] 正則化ラプラシアンカーネルを利用したg-Espressoによるインスタンスの抽出と，フィルタパターンによる候補インスタンスの特徴の検証を組み合わせた手法を，アルゴリズムとして記述したものがAlgorithm [REF_proposed_g_espresso]である．
  [i:172, score:0.88005] 次に兄弟グループ[MATH]内の各カテゴリ[MATH]について，候補インスタンス集合[MATH]とパターンの集合[MATH]を関数\Call{Espresso}{}によって，抽出する（[REF_espresso4g]行目）．
  [i:183, score:0.82619] 最後にAlgorithm [REF_alg1]と同様に，兄弟グループのカテゴリ間での排他制約を考慮しつつ，各カテゴリについて，スコアの上位[MATH]個のインスタンスを獲得し（[REF_exclusive_g]行目から[REF_end_exclusive_g]行目），[MATH]として出力する．
-----------------------------------------------------
  [subsection title : フィルタパターンの獲得]
-----------------------------------------------------
  [i:lead, score:0.73550] 既に説明したように，提案手法はインスタンスが兄弟グループに共通の特徴を持っているか否かをフィルタパターンを用いて判定する．
.....
  [i:188, score:0.83068] 例えば，自動車と自動二輪カテゴリからなる兄弟グループに対し，自動車か自動二輪カテゴリに含まれるシードインスタンスと共起しているパターンを抽出する．
  [i:189, score:0.80863] フィルタパターンは兄弟グループの特定のカテゴリのインスタンスを取得するためのものではなく，兄弟グループに無関係のインスタンスを除去するためのものであるため，兄弟グループに共通の特徴をとらえていることが望ましい．
  [i:194, score:0.80507] 兄弟グループに含まれる意味カテゴリのインスタンスが獲得されるには，フィルタパターンと共起する必要がある．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
-----------------------------------------------------
  [subsection title : 実験設定]
-----------------------------------------------------
  [i:lead, score:0.44693] 本節では集合拡張において，カテゴリ間の兄弟関係を事前知識として使用することの効果を実験的に検証する．
.....
  [i:236, score:0.73528] 実験ではEspressoアルゴリズム[CITE]，Espressoアルゴリズムにカテゴリ間の排他制約を加えたもの（Espresso +排他制約），Espressoアルゴリズムにカテゴリ間の排他制約と兄弟関係を事前知識として加えたもの（提案手法（ベース：Espresso））のブートストラッピング手法と，g-Espressoアルゴリズム[CITE]，g-Espressoアルゴリズムにカテゴリ間の排他制約と兄弟関係を事前知識として加えたもの（提案手法（ベース：g-Espresso））のグラフカーネルを用いた手法について比較を行う．
  [i:238, score:0.67936] ブートストラッピング手法では反復毎に，各カテゴリのインスタンスとパターンの獲得数を15個ずつ増加（すなわち[MATH]）させた．
  [i:250, score:0.60585] シードインスタンスについてはWikipediaから自動でインスタンスを抽出するツール[CITE]を利用し，各カテゴリ毎に15個ずつ用意した．
-----------------------------------------------------
  [subsection title : 結果]
-----------------------------------------------------
  [i:lead, score:0.65011] ブートストラッピングの反復を10回行った際の，各手法における全カテゴリでの獲得インスタンス数とその適合率を図[REF_fig:figure3]に示す．
.....
  [i:278, score:0.77561] 同じ兄弟グループに属する神社と寺カテゴリについて，各手法で反復を5回行った際の，獲得インスタンスのうち上位15個を表[REF_tab:table1]に示す．
  [i:302, score:0.79717] フィルタパターンのスコアとは，兄弟グループの共通性を表したパターンをフィルタパターンとして取得できるよう，兄弟グループのシードインスタンスを用いて計算されたものである．
  [i:309, score:0.82485] この原因としては，フィルタパターンはシードインスタンスによってのみ決定されるため，ブートストラッピングの反復中に新たに抽出したインスタンスによってもたらされる，兄弟グループの共通性を扱えていない可能性がある．

================================================================
[section type  : conclusion]
[section title : まとめ]
================================================================
[i:313, score:0.51831] 本論文では，ブートストラッピングにおいて，カテゴリ間の兄弟関係を事前知識として利用する手法を提案し，兄弟関係が集合拡張に対して有用な知識であることを示した．
[i:316, score:0.48785] この副作用の原因は，共通性の少ない兄弟グループの設計と，フィルタパターンを更新しないためであると考えられる．
[i:318, score:0.69838] また，本研究ではカテゴリ間の兄弟関係がカテゴリのインスタンスを収集する際に有用な情報であることを示したが，今後は，この手法を関係インスタンスの取得に拡張していきたい．

