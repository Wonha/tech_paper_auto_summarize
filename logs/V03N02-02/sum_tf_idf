================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.38826] 本稿では，fj.wantedのダイジェストの自動生成を実現する方法について述べる．
[i:2, score:0.40109] この方法は，言わば「斜め読みを模擬した処理」であり，まず，表層的な表現を手がかりとして，42の特徴を抽出し，それらの特徴を用いて，記事のサマリ（カテゴリとサマリ文）を抽出する．
[i:4, score:0.46554] 抽出されたサマリはカテゴリ毎に整理され，HTML形式のダイジェストとして出力される．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:13, score:0.41135] 我々は，既に，ネットニュースのダイジェスト自動生成の1つのプロトタイプとして，fj.meetingsのダイジェスト自動生成システムを作成し，実際に運用している．
[i:14, score:0.38799] 本研究では，その次のステップとして，fj.wantedのダイジェスト自動生成について検討した．
[i:15, score:0.49051] fj.wantedは，fj.meetingsとは異なり，かなり多様な投稿者が，多様なテキスト品質の記事を投稿しており，fj.meetingsのダイジェスト自動生成で用いた手法とは異なった手法が必要となる．

================================================================
[section type  : proposed_method]
[section title : ニュースグループfj.wanted]
================================================================
[i:16, score:0.46945] ダイジェスト自動生成システムの作成に先立ち，94年9月8日から10月18日の間にfj.wantedに流れた記事231件(フォロー記事は除く)に対する調査を行なった．
[i:17, score:0.02549] 特に，その中の59件については，詳細な調査を行なった．
[i:18, score:0.00442] ここでは，その調査結果を示す．
-----------------------------------------------------
  [subsection title : 主題上の特徴]
-----------------------------------------------------
  [i:lead, score:0.27387] fj.wantedの記事の主題(目的)は，「何かを探している(求めている)ということを伝える」というものである．
.....
  [i:19, score:0.27387] fj.wantedの記事の主題(目的)は，「何かを探している(求めている)ということを伝える」というものである．
  [i:20, score:0.12988] これらの記事の主題は，おおよそ，図[REF_fig:category]に示すような2段の階層的カテゴリに分類することが可能である．
  [i:22, score:0.09617] 以下では，これらのカテゴリを記事のカテゴリと呼ぶ．
-----------------------------------------------------
  [subsection title : 文章上の特徴]
-----------------------------------------------------
  [i:lead, score:0.26325] fj.wantedの記事には，以下のような文章上の特徴が見られた．
.....
  [i:24, score:0.30405] 多くの記事において，その記事の内容を端的に表す1文(以下，サマリ文と呼ぶ)が存在する．
  [i:25, score:0.31824] 調査した記事59件中，54件(91.5%)にサマリ文が存在した．
  [i:26, score:0.28616] fj.wantedの記事で用いられる文章構造のほとんどは，単刀直入型か背景説明型である．
-----------------------------------------------------
  [subsection title : 表現上の特徴]
-----------------------------------------------------
  [i:lead, score:0.25653] fj.wantedの記事には，以下のような表現上の特徴が見られた．
.....
  [i:31, score:0.25653] fj.wantedの記事には，以下のような表現上の特徴が見られた．
  [i:32, score:0.05388] 典型的な「求む」の表現が，多くの記事で用いられる．
  [i:34, score:0.10199] 使われる典型的な動詞は，記事のカテゴリによって異なる．

================================================================
[section type  : proposed_method]
[section title : サマリ抽出]
================================================================
[i:47, score:0.33204] この図に示すように，サマリ抽出は，文分割，特徴抽出，カテゴリ判定，サマリ文抽出の4つのステップによって行なうが，最後の2つのカテゴリ判定とサマリ文抽出はそれぞれ独立に行う．
[i:48, score:0.31909] これは，以下のように，サマリ文として抽出すべき文とカテゴリ判定の根拠となる文が異なる場合があるからである．
[i:51, score:0.34679] この例では，1文目がサマリ文であるのに対し，カテゴリ「譲って下さい」は2文目から求まる．
-----------------------------------------------------
  [subsection title : 文分割]
-----------------------------------------------------
  [i:lead, score:0.09534] ニュース記事の本文を文毎に分割し，先頭の10文を取り出す．
.....
  [i:52, score:0.09534] ニュース記事の本文を文毎に分割し，先頭の10文を取り出す．
  [i:53, score:0.06499] 記事には，色々な表示上の工夫がされていることがあり，文を切り出すことはそれほど単純ではない．
  [i:54, score:0.02182] ここでは，各種のヒューリスティックを組み込んだ専用プログラムによって文を切り出す．
-----------------------------------------------------
  [subsection title : 特徴抽出]
-----------------------------------------------------
  [i:lead, score:0.04312] 各文に対して，42個の特徴が存在するかどうかを調べ，特徴ベクトル(42bitのビット列)を作成する．
.....
  [i:55, score:0.04312] 各文に対して，42個の特徴が存在するかどうかを調べ，特徴ベクトル(42bitのビット列)を作成する．
  [i:57, score:0.04746] 「譲って下さい」に類する表現が存在する
  [i:59, score:0.04246] 42個の特徴の概要を表[REF_table:features]に示す．
-----------------------------------------------------
  [subsection title : カテゴリ判定]
-----------------------------------------------------
  [i:lead, score:0.06759] カテゴリ判定では，35個の規則を用いる．
.....
  [i:61, score:0.10536] このうち，31個の規則は，特徴1--16, 18-32に直接対応する規則で，これらの特徴の存在がそのままカテゴリの候補に対応する(表[REF_table:features]中の，「以降の処理での利用」欄を参照)．
  [i:62, score:0.09650] 残りの4つの規則のうちの3つは，特徴33--35に対応する規則で，他の規則によって「探しています」というカテゴリが候補となっている場合にのみ使用する．
  [i:68, score:0.12651] そのリストの中に，「譲って下さい／譲ります／貸して下さい／募集します」のいずれかが含まれる場合は，それを最終的なカテゴリとし，処理を終了する．
-----------------------------------------------------
  [subsection title : サマリ文抽出]
-----------------------------------------------------
  [i:lead, score:0.26674] サマリ文の抽出では，以下の2つの方法を実装した．
.....
  [i:72, score:0.26674] サマリ文の抽出では，以下の2つの方法を実装した．
  [i:73, score:0.26639] 特徴1--32を持った最初の文をサマリ文とする．
  [i:75, score:0.27794] 特徴37--42を持たない最初の文をサマリ文とする．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[i:77, score:0.00137] ここでは，その実験結果について述べる．
-----------------------------------------------------
  [subsection title : カテゴリ判定]
-----------------------------------------------------
  [i:lead, score:0.09088] カテゴリ判定の実験結果を表[REF_table:cat_result]に示す．
.....
  [i:79, score:0.13874] この表よりわかるように，既知の記事群(KNOWN)に対しては88.3%，未知の記事群(UNKNOWN)に対しては81.3%という高い精度で正しくカテゴリを判定できた．
  [i:80, score:0.11064] カテゴリの判定に失敗した例とカテゴリが抽出できなかった例を，図[REF_fig:cat_error]と図[REF_fig:cat_fail]に示す．
  [i:81, score:0.15320] 図[REF_fig:cat_error]の例では，正しいカテゴリは「譲って下さい」であるのに対し，「探しています」というカテゴリだと判定された．
-----------------------------------------------------
  [subsection title : サマリ文抽出]
-----------------------------------------------------
  [i:lead, score:0.28221] サマリ文抽出の実験結果を表[REF_table:summary_result]に示す．
.....
  [i:82, score:0.28221] サマリ文抽出の実験結果を表[REF_table:summary_result]に示す．
  [i:83, score:0.28401] ここで，組み合わせた方法とは，まず，表現パターンによる方法でサマリ文の抽出を試み，抽出できない場合のみ文章構造による方法を用いる方法である．
  [i:88, score:0.29736] また，文章構造による方法では，最初の文が自己紹介文(特徴39)であり，第2文が「です文」(特徴37)であるため，この2文をスキップし，第3文をサマリ文として抽出してしまう．

================================================================
[section type  : proposed_method]
[section title : ダイジェストシステム]
================================================================
[i:89, score:0.57911] 上記のサマリ抽出モジュールを用いて，fj.wantedのダイジェストシステムを試作した．
[i:91, score:0.27847] サマリ文抽出では，基本的には，表現パタンによる方法を用い，この方法によってサマリ文が抽出できない場合には，文章構造による方法を用いる．
[i:92, score:0.50239] ダイジェスト編集では，得られた記事のサマリをカテゴリ別に整理し，HTML (HyperText Markup Language)形式で出力する．

================================================================
[section type  : proposed_method]
[section title : 議論]
================================================================
[i:97, score:0.38709] 本研究により，fj.wantedに関しても実用的なダイジェストの自動生成が可能であることが明らかになった．
[i:98, score:0.42143] 当初，我々は，テキストと投稿者がかなり多様であるため，fj.wantedのダイジェスト自動生成は，難しいのではないかと考えていた．
[i:100, score:0.45630] fj.wantedのダイジェスト自動生成が可能であった最大の理由は，「fj.wantedの記事が，自分の求めるものが何であるかを読み手に伝えるという明確な目的を持った文章であり，そのような情報を伝達するために使われる文章構造と文章表現はかなり限定される」ということにあるだろう．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[i:116, score:0.43409] ダイジェストの自動生成を実現する中心技術は，サマリ抽出にある．
[i:117, score:0.35202] 本システムでは，記事のサマリとして，記事のカテゴリとサマリ文を抽出した．
[i:118, score:0.03355] これらに関連する研究は，主に，テキスト分類と要約という分野において研究されてきた．
-----------------------------------------------------
  [subsection title : テキスト分類]
-----------------------------------------------------
  [i:lead, score:0.10992] テキスト分類とは，ひとまとまりのテキスト(文献，ニュース記事等)を，その内容に基づいて，分類することである．
.....
  [i:121, score:0.12880] Construe-TIS [CITE]は，英語の新聞記事を対象とする分類システムで，キーワードから概念を認識し，認識した概念を組み合わせて最終的なカテゴリを決定する．
  [i:123, score:0.12479] 一方，Thinking Machine Corporationは，Memory-Based Reasoningを用いて，Dow Jonesのニュース記事を分類するシステムを開発している[CITE]．
  [i:124, score:0.12203] このシステムは，すでに分類済みの5万件のニュース記事を用いて，再現率約80%，正解率約70%で，分類コード割り当てを行なうことができる．
-----------------------------------------------------
  [subsection title : 要約]
-----------------------------------------------------
  [i:lead, score:0.04588] 要約とは，あるひとまとまりのテキスト(例えば，論文)が表している意味内容を，非常に短いテキストで簡潔に表現することを言う．
.....
  [i:133, score:0.48711] 第一に，ネットニュースのダイジェストの生成の際に必要となるサマリは，通常の要約よりも非常に短いという点である．
  [i:134, score:0.46329] 我々がダイジェストに求める機能は，「情報(記事)が必要であるか，不必要であるか判定できること」であり，これを満たすならば，サマリは短ければ短いほど好ましいと考える．
  [i:137, score:0.14207] これらのテキストの品質に対し，ネットニュースの記事のテキスト品質はかなり低い．
-----------------------------------------------------
  [subsection title : fj.meetingsダイジェストとの違い]
-----------------------------------------------------
  [i:lead, score:0.40315] ネットニュースのダイジェスト自動生成システムは，本システム以外に，筆者らが先に実現したfj.meetingsのダイジェスト自動生成システム[CITE]がある．
.....
  [i:140, score:0.59776] fj.meetingsのダイジェスト作成では，会告記事から，その会議の名称(タイトル），開催期日，開催場所，論文締切期日といった情報項目を，その記事のサマリとして抽出する．
  [i:143, score:0.41809] fj.meetingsのサマリ抽出では，センタリング，箇条書といったスタイル情報と抽出する情報項目に特有な言語表現パターンを組み合わせて利用する．
  [i:144, score:0.46422] これに対して本システムのダイジェスト作成では，各記事から，その記事の内容を端的に表す1文(サマリ文)を抽出する．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:148, score:0.38838] 本稿では，fj.wantedのダイジェストの自動生成を実現する方法について述べた．
[i:150, score:0.40109] この方法は，言わば「斜め読みを模擬した処理」であり，まず，表層的な表現を手がかりとして，42の特徴を抽出し，それらの特徴を用いて，記事のサマリ(カテゴリとサマリ文)を抽出する．
[i:152, score:0.43802] 本論文で述べた方法は，fj.wantedを対象としたものであるが，他の掲示情報型ニュースグループや質問応答型のニュースグループのダイジェスト作成にも，同様な手法が適用できると考えられる．

