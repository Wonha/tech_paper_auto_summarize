ウェブを用いた専門用語訳語推定
\label{sec:web_yakugosuitei}

\subsection{概要}


\begin{figure}[b]
 \centering
     \includegraphics[width=300pt]{jnlp-compo-fig-overview1.eps}
 \caption{ウェブを用いた専門用語訳語推定}
 \label{fig:overview1}
\end{figure}

ウェブを用いた専門用語の訳語推定の全体像を図\ref{fig:overview1}に示す．
本論文では，言語$S$の専門用語が複数個が与えられたとき，それらの用語に対
して，言語$T$における訳語を推定するという問題を考える．
このような状況としては，例えば，ある専門分野において，まとまった数の専門
文書が与えられ，それらの文書から用語を抽出し，専門用語の対訳辞書を作成す
る場合が考えられる．
あるいは，ある専門分野の文書と既存の汎用対訳辞書があり，この文書を翻訳家
が翻訳したい場合などが考えられる．
ここで，一般に，与えられた複数の専門用語は，既存の汎用対訳辞書に含まれる訳語の
個数にしたがって，訳語が1個である用語の集合$X_S^U$，訳語が2個以上である
用語の集合$X_S^M$，そして，訳語が得られない用語の集合$Y_S$という3つの部
分集合に分けられる．
本論文では，既存の辞書に訳語が1個だけ含まれる用語の集合$X_S^U$の訳語は
正しいと仮定し，集合$X_S^U$の用語の訳語の集合$X_T^U$を用いてウェブから専
門分野コーパスを収集し，訳語推定に利用するものとする．

本論文では，既存の対訳辞書で訳語が得られない用語の集合$Y_S$を訳語推定の
対象とする．
一方，集合$X_S^M$の用語に対しては，既存の対訳辞書にある訳語の中から最も適切な
ものを選択する必要がある．
例えば，論理回路分野に属する日本語の専門用語「レジスタ」の訳語としては，
サッカー用語の``regista''ではなく，用語``register''が選択されなければな
らない．
この訳語選択の課題については，\cite{Tonoike05cs}において，すでに一定の成
果が得られており，ウェブから収集した専門分野コーパスに生起する頻度の最も
大きい訳語を選択することにより，英日方向で69\%，日英方向で75\%の正解率が
得られたと報告されている．
そこで，本論文では，集合$X_S^M$の用語の訳語選択の課題は取り扱わない．


\subsection{専門分野コーパスの収集}
\label{sec:corpus}

本論文では，言語$T$の専門分野コーパスをウェブから収集して訳語推定に利用
する．
この専門分野コーパスを集める際には，既存対訳辞書に訳語が1つだけ存在する
専門用語の訳語の集合$X_T^U$を利用する．
具体的には，集合$X_T^U$に含まれる用語$x_T^U$を含むサーチエンジンのクエリー
を用いてウェブから上位100ページを収集する
\footnote
{本論文では，サーチエンジンを用いる場合，日本語のクエリーの場合はgoo
(\url{http://www.goo.ne.jp})を用い，英語のクエリーの場合はYahoo!
(\url{http://www.yahoo.com/})を用いる．}．
それらのページに，用語$x_T^U$がアンカーテキストとなっているアンカーが存
在する場合は，そのアンカー先ページも入手する．
これを，集合$X_T^U$に含まれる用語すべてに対して行い，収集されたウェブペー
ジを集めて，専門分野コーパスとする．
日本語のコーパスを収集する際に用いたクエリーは，“$x_T^U$とは”，
“$x_T^U$という”，“$x_T^U$は”，“$x_T^U$の”，及び，``$x_T^U$''である．
一方，英語のコーパスを収集する際に用いたクエリはー，``$x_T^U$ AND
what's''，``$x_T^U$ AND glossary''，及び，``$x_T^U$''である.
ここでは，専門用語$x_T^U$について記述されている文書，
例えば，オンライン用語集などを上位にランクするために，経験的にこれらの
クエリーを用いている．

ここで，計算コストや記憶容量の問題を考慮した上で，できるだけ訳語推定の性
能を向上させるためには，訳語推定対象の分野の用語を十分に含むできるだけ小
さいコーパスを収集することが望ましい．
これを実現する方法として，サーチエンジンのクエリーに複数の用語を含めたり，
取得すべきページ数を変更することなどが考えられる．
しかしながら，本論文では，ウェブから収集した専門分野コーパスを利用す
る方式と，サーチエンジンを通してウェブ全体を利用する方式の比較に焦点を当
てるため，訳語推定対象の分野の用語を十分に含むできるだけ小さいコーパスを収
集する方式を確立することは，論文の対象外とする．
この問題に関連する知見としては，\cite{Takagi05aj}の研究がある．
\cite{Takagi05aj}では，評価用の正解訳語の集合を設定し，上記の方法によっ
てウェブから収集したコーパスに，評価用の正解訳語を含む割合の評価を行った．
その結果，サーチエンジンのヒット数に上限を設けてコーパス収集に使用する用
語の数を絞り込むことにより，コーパス収集に使用する用語の数を少なくしても，
評価用の正解訳語を含む割合が下がらないことが報告されている．
また，\cite{Takagi05aj}では，訳語推定対象の用語（および評価用の正解訳語）
とは異なる分野のコーパスを利用する場合についても評価を行っている．
これによると，評価用の正解訳語を含む割合は，訳語推定対象の用語と近い分野
のコーパスを用いた場合は低下しないが，全く異なった分野のコーパスを用いた
場合は低下することを実験的に確かめている．
このことは，訳語推定対象の用語の分野となるべく近い分野のコーパスを用いて
訳語推定をすべきであることを示している．


要素合成法による専門用語訳語推定の定式化
\label{sec:compo-method}

\subsection{概要}

\begin{figure}[b]
 \centering
     \includegraphics[width=300pt]{jnlp-compo-fig-compositional.eps}
 \caption{日本語の専門用語「応用行動分析」の要素合成法による訳語推定}
 \label{fig:compositional}
\end{figure}

要素合成法による訳語推定の例として，日本語の専門用語「応用行動分析」の訳
語推定の様子を図~\ref{fig:compositional}に示す．
まず，既存の対訳辞書を参照し，日本語の見出しを検索することにより，日本語
の専門用語「応用行動分析」を構成要素に分割する\footnote{ここで，既存の
対訳辞書として，「英辞郎」Ver.79 (\url{http://www.eijiro.jp/})と英辞郎の訳語対から作
成した部分対応対訳辞書（詳細は\ref{sec:bcl}節で述べる）を用いる．}．
この例の場合，構成要素分割の結果は，図~\ref{fig:compositional}に``a''で
示した“応用”，“行動”，“分析”という分割及び，``b''で示した“応用”，
“行動分析”という分割の2種類になる．
次に，それぞれの構成要素を英語に翻訳する．
それぞれの構成要素の訳語には，ある信頼度のスコアが与えられる．
そして，``a''，``b''それぞれの分割に対して，
それらの構成要素の訳語を結合することによって訳語候補を生成する．
この例では，構成要素に与えられているスコアの乗算で訳語候補のスコアを計算
する．
``applied behavior analysis''のように分割``a''，``b''で同じ訳語候補
が生成される場合には，それぞれの分割でスコアを計算し両者のスコアを加算す
るものとした．
分割``a''では，``applied''と``behavior''と``analysis''を結合して
``applied behavior analysis''が生成され，スコアは，$1.6 \times 1 \times
1 = 1.6$となる．
また，分割``b''では，``applied''と``behavior analysis''を結合して
``applied behavior analysis''が生成され，スコアは，$1.6 \times 10=16$となる．
そして，最終的に``applied behavior analysis''のスコアは，$1.6+16=17.6$と
計算される．



\subsection{部分対応対訳辞書の作成}
\label{sec:bcl}

専門用語の訳語推定をするためには，既存の対訳辞書の訳語情報だけでは不十分
である．
複合語中の単語はどのように訳されるのが自然かという情報が重要となる．
そこで，複合語中の単語の訳し方を，既存の対訳辞書の複合語エントリから収集
することを試みる．
一般に対訳辞書のエントリは見出し語と1つ以上の訳語から構成される．
このエントリを展開し，見出し語と訳語を一対一の語の組にしたものを本論文で
は訳語対と呼ぶ．
本節では，\cite{Fujii00}の語基辞書の作成方法を参考にして，既存の対訳
辞書（英辞郎）の複合語の訳語対から，英語及び日本語の用語の構成要素の訳語
対応を推定し，このような訳語対応を集めて新たな対訳辞書を作成する方法につ
いて述べる．
本論文では，この，既存の訳語対の構成要素を利用して作成された対訳辞書を部
分対応対訳辞書と呼ぶ．
既存の対訳辞書を部分対応対訳辞書で補う方法を，
図~\ref{fig:bubunicchi-rei}の例を用いて説明する．
既存の対訳辞書に“applied: 応用”という訳語対自体は含まれないが，1番目
の英単語が``applied''かつ1番目の日本語単語が「応用」であるような複合語
の訳語対が数多く含まれていると仮定する\footnote{日本語のエントリは，形
態素解析器JUMAN (\url{http://nlp.kuee.kyoto-u.ac.jp/nl-resource/juman.html})で
形態素列に分解されているものとする．}．
このようなとき，それらの訳語対を対応付け，構成要素の訳語対応“applied: 応用”を推定する．

\begin{figure}[t]
 \small
 \centering
  \begin{tabular}{ccccc}
   applied & mathematics & : & 応用 & 数学\\
   applied & science & : & 応用 & 科学\\
   applied & robot & : & 応用 & ロボット\\
   & & $\vdots$ & & 　頻度\\
   & & $\Downarrow$ & & 　↓\\
   \hline
   \multicolumn{1}{|c}{applied} & & : & 応用 & \multicolumn{1}{c|}{: 40}\\
   \hline
  \end{tabular}
\vspace{8pt}
 \caption{構成要素の訳語対の推定の例（前方一致）}
 \label{fig:bubunicchi-rei}
\end{figure}

より詳細には，既存の対訳辞書から，まず，日本語及び英語の用語がそれぞれ2
つの構成要素からなる訳語対を抽出し，これを別の対訳辞書$P_2$とする．
次に，$P_2$中の訳語対から英語及び日本語の第一構成要素だけを抜き出して訳
語対とし，これを集めて構成した対訳辞書を前方一致部分対応対訳辞書$B_P$と
呼ぶ．
同様に，$P_2$中の訳語対から英語及び日本語の第二構成要素だけを抜き出して訳
語対とし，これを集めて構成した対訳辞書を後方一致部分対応対訳辞書$B_S$と
呼ぶ．
本論文では，部分対応対訳辞書$B_P$と$B_S$に，以下の2つの制約を課す．
\begin{itemize}
 \item 前方一致部分対応対訳辞書$B_P$は，用語の先頭および中間位置の構成要
       素の訳語を得る場合にのみ参照することとし，用語の最後尾の構成要素
       の訳語を得るために参照することはできない．
 \item 後方一致部分対応対訳辞書$B_S$は，用語の中間位置および最後尾の構成
       要素の訳語を得る場合にのみ参照することとし，用語の先頭の構成要素
       の訳語を得るために参照することはできない．
\end{itemize}
これらの制約は，不適切な訳語候補が生成されるのを防ぐために課した．
なお，\cite{Fujii00}においては，$B_P$と$B_S$を統合した部分対応対訳辞書
（以下，本論文では，この辞書を部分対応対訳辞書$B$と呼ぶ）を
作成しており，上記のような制約を課していない．
$B_P$と$B_S$を統合すると訳語対の数が増える利点はあるが，例えば，“システ
ム応用”という用語の訳語推定を行うときに，第二構成要素である“応用”の訳
語を得るために，$B_P$に含まれる訳語対〈“応用”，``applied''〉が参照されるなど，過剰に参照される恐れがある．

そこで，実際に，部分対応対訳辞書に$B_P$及び$B_S$を利用する場合と，$B$を
利用する場合の比較を行った．
まず，英辞郎と部分対応対訳辞書を用いて，与えられた用語に対して正解訳語が
生成できるかどうかの評価を行った．
詳細は\ref{sec:evaluation_set}節で述べるが，部分対応対訳辞書として$B$を
用いた場合，$B_P$及び$B_S$を用いた場合に比べて，正解訳語が生成できる用語
の割合は2\%程度しか上回らなかった．
また，訳語推定の性能においては
\footnote{
詳細は\ref{sec:evaluation}節で述べるが，訳語候補のスコア付けの方法として
は，ウェブから収集した専門分野コーパスを利用する方法の中では総合的に最も
性能のよかった`DF-CO'というスコア関数を用いた．
}，
英日方向では再現率は$B$を用いる場合の方が1\%程度高く，逆に精度
は$B_P, B_S$を用いる場合の方が1\%弱高かった．
一方，日英方向では，$B_P, B_S$を用いる場合の方が，再現率は1\%弱高く，精
度は数\%高かった．
この結果を総合的に判断して，本論文では，部分対応対訳辞書として$B_P, B_S$
を用いることとした．
表\ref{tab:entry_number}に，英辞郎，対訳辞書$P_2$，および，部分対応対訳
辞書$B_P, B_S, B$における，見出し語の数
\footnote{英辞郎は英日辞書であるので，本来は日本語の見出し語は存在しない．
本論文では英辞郎を編集することによって日英版を作成したので，表
\ref{tab:entry_number}にはその見出し語数を掲載している．}
と訳語対の個数を示す．




\begin{table}[t]
\small
 \centering
 \caption{対訳辞書の見出し語数と訳語対数}
 \label{tab:entry_number}
 \begin{tabular}{|c|r|r|r|}
  \hline
  \multirow{2}{*}{対訳辞書} & \multicolumn{2}{c|}{見出し語数} &
  訳語対の個数\\
  \hhline{|~|--|~|}
  & \multicolumn{1}{c|}{英語} & \multicolumn{1}{c|}{日本語} & \\
  \hline
  英辞郎 & 1,292,117 & 1,228,750 & 1,671,230 \\ 
  $P_2$  &   217,861 &   186,823 &   235,979 \\
  $B_P$  &    37,090 &    34,048 &    95,568 \\
  $B_S$  &    20,315 &    19,345 &    62,419 \\
  $B$    &    48,000 &    42,796 &   147,848 \\
  \hline
 \end{tabular}

\begin{tabular}{ccl}
 英辞郎 & : & 既存の汎用対訳辞書 (Ver.79)\\
 $P_2$  & : & 両言語とも2構成要素からなる英辞郎の訳語対の集合\\
 $B_P$  & : & 前方一致部分対応対訳辞書$B_P$\\
 $B_S$  & : & 後方一致部分対応対訳辞書$B_S$\\
 $B$    & : & 部分対応対訳辞書$B$
\end{tabular}
\end{table}

\subsection{訳語候補の生成}
\label{sec:generation}


本節及び次節において，\ref{sec:bcl}節で準備した対訳辞書及
び，\ref{sec:corpus}節で述べた専門分野コーパスまたはウェブ全体を利用して，
与えられた専門用語の訳語推定を要素合成法によって行う方法の詳細を述べる．
本節では，要素合成法により訳語候補を生成する過程を定式化する．
そして，次節で，本論文で実際に評価した訳語候補のスコア関数の詳細について
述べる．

まず，$y_S$を訳語推定すべき専門用語とする．
ここで，$S$が英語であれば$w_i$を単語，$S$が日本語であれば$w_i$を形態素と
して，$y_S$は以下のように$w_i$の列で表される．
\begin{equation}
 \label{eq:y_S}
 y_S=w_1,w_2,\ldots,w_m
\end{equation}
例えば，$y_S$が“応用行動分析”であれば，$w_1=$“応用”，$w_2=$“行動”，
$w_3=$“分析”となる．
要素合成法では，対訳辞書中の訳語対の見出し語と照合する用語は，一個以上の
単語もしくは形態素から構成されると考える．
そして，$y_S$を一個以上の単語もしくは形態素から構成される単位に分割し，
各単位の訳語を結合することにより訳語候補を生成する．
以下，まず$y_S$を上記の単位$s_j$の列に分割する．
\begin{equation}
 y_S=w_1,w_2,\ldots,w_m \equiv s_1,s_2,\ldots,s_n
\end{equation}
ただし，各$s_j$は一個以上の$w_i$の列を表す．
例えば，$y_S$を“応用　行動　分析”とすると，以下の3通りの分割が考えられる
\footnote{\ref{sec:evaluation_set}節で導入する評価用用語集合では，訳語推定
すべき用語$y_S$全体が英辞郎に含まれる用語は除外している．これを除くと，
この例の場合，3通りの分割が考えられる．}．
\begin{equation}
 \begin{array}{l}
  \label{eq:bunkatsu_ouyou}
  s_1=\mbox{“応用”，}\ s_2=\mbox{“行動 分析”}\\
  s_1=\mbox{“応用”，}\ s_2=\mbox{“行動”，}\ s_3=\mbox{“分析”}\\
  s_1=\mbox{“応用 行動”，}\ s_2=\mbox{“分析”}
 \end{array}
\end{equation}
また，$y_S$を``applied behavior analysis''とすると，以下の3通りの分割が
考えられる
\begin{equation}
 \begin{array}{l}
  \label{eq:bunkatsu_applied}
  s_1=\mbox{``applied'',}\ s_2=\mbox{``behavior analysis''}\\
  s_1=\mbox{``applied'',}\ s_2=\mbox{``behavior''},\ s_3=\mbox{``analysis''}\\
  s_1=\mbox{``applied behavior'',}\ s_2=\mbox{``analysis''}
 \end{array}
\end{equation}
次に，対訳辞書から得られた$s_i$の訳語を$t_i$とすると，$y_S$の訳語候
補$y_T$は，以下のように$y_S$と同じ語順で構成される
\footnote{
\label{fn:of_hyphen}
英語の専門用語の中には``angle of radiation''のように前置詞を含むものがある．
この用語の日本語訳語は「放射 角」であるが，英語用語と日本語用語の間で双
方向に適切な訳語候補として生成でき
るようにするためには，``of''の前後の語順の入れ替えや``of''を挿入または削除
する操作を考慮する必要がある．
本論文では，上記の場合も含めて，以下の様な英語・日本語の用語の組において，
双方向に訳語候補の生成ができるような規則を実装した．
\begin{eqnarray*}
 \mbox{英語の用語\ \ \ \ \ } & & \mbox{日本語の用語}\\
 \left.
  \begin{array}{@{\,}ll}
   \mbox{angle of radiation} \\
   \mbox{radiation angle}
  \end{array}
 \right\} &  \Longleftrightarrow & 
 \left\{
  \begin{array}{@{\,}ll}
   \mbox{放射 角}\\
   \mbox{放射 の 角}
  \end{array}
 \right.
\end{eqnarray*}
なお，本論文では前置詞``of''のみに関してこの規則を実装した．
また，〈光ファイバーケーブル，optical-fiber cable〉のよう
に，英語または日本語の用語どちらかにのみ，ハイフン記号を含む場合がある．
このような場合に双方向に訳語候補生成を行うためには，ハイフンの挿入及び削
除を考慮する必要がある．
前置詞を含む場合と同様に，ハイフンが挿入または削除される可能性を考慮した
訳語候補生成を行う規則を実装した．
}．
\begin{equation}
 y_T=t_1,t_2,\ldots,t_n
\end{equation}
そして，訳語候補$y_T$にスコアを与えることを考える．
先行研究と同様に，本論文においても，対訳辞書を用いて$y_S$と$y_T$の対応の
適切さを推定し，スコアを与える（これを対訳辞書スコアと呼ぶ．）．
ただし，$y_T$全体の対訳辞書スコアは，訳語対$\langle s_i,t_i\rangle$のス
コア$q(\langle s_i,t_i\rangle)$の積で構成される．
また，それとは別に，目的言語コーパス中で訳語候補$y_T$がどの程度出現する
かによって$y_T$の適切さを評価し，スコアを与える（これをコーパススコア
$Q_{corpus}(y_T)$と呼ぶ．）．
訳語候補$y_T$のスコアは，この2つのスコアの積により構成されるとする．
\begin{equation}
 \label{eq:score_one}
 \prod_{i=1}^{n} q(\langle s_i,t_i\rangle) \cdot Q_{corpus}(y_T)
\end{equation}
（ただし，訳語対のスコア$q$とコーパススコア$Q_{corpus}$の詳細は
\ref{sec:score_details}節で述べる．）

実際には，例(\ref{eq:bunkatsu_ouyou}), (\ref{eq:bunkatsu_applied})で示し
たように，$y_S$ には複数の分割の仕方が考えられるので，本論文ではそれぞれの分割
の仕方に対して式(\ref{eq:score_one})によりスコアを計算し，それらの和を訳語候補
$y_T$のスコアとする．
\begin{equation}
 \label{eq:score}
 Q(y_S, y_T)=\sum_{y_S=s_1,s_2,\ldots,s_n}\prod_{i=1}^{n} q(\langle s_i,t_i\rangle) \cdot Q_{corpus}(y_T)
\end{equation}

例えば，$y_S=$“応用　行動　分析”，$y_T$=``applied behavior analysis''の
場合を考える．
訳語対$\langle y_S,y_T\rangle$が既存の対訳辞書に含まれず，かつ，訳語対
〈“応用”，``applied''〉，〈“行動”，``behavior''〉，
〈“分析”，``analysis''〉，〈“行動分析”，``behavior analysis''〉が
既存の対訳辞書に含まれるとき，$y_T$を生成することがで
きる$y_S$の分割を，$y_T$の生成に用いる訳語対と共に以下に示す．
\begin{itemize}
  

 \item $s_1=\mbox{“応用”，}\ s_2=\mbox{“行動”，}\ s_3=\mbox{“分析”}$\\
       〈“応用”，``applied''〉，〈“行動”，``behavior''〉，\\
	〈“分析”，``analysis''〉
 \item $s_1=\mbox{“応用”，}\ s_2=\mbox{“行動　分析”}$\\
       〈“応用”，``applied''〉，〈“行動 分析”，``behavior analysis''〉
\end{itemize}
$\langle y_S,y_T\rangle$のスコアは，上記の2通りの分割に対して，それぞれ
対訳辞書スコアとコーパススコアの積を求めたものの和となる．

次に，訳語候補生成の方法を説明する．
単語または形態素数の多い用語の訳語推定を行う場合，単語または形態素の訳語のすべての組み合
せを生成すると，計算機のメモリ消費量が指数関数的に増えてしまう．
そこで，本論文では，この問題を避けるために，動的計画法のアルゴリズムを採
用し，訳語候補の生成と枝刈りを行う．

式(\ref{eq:y_S})で，訳すべき用語$y_S$を以下のように単語または形態素の列
で定義した．
\[
 y_S=w_1,w_2,\ldots,w_m
\]
ここで，単語または形態素$w_i$の区切りの位置に，位置を表すラベル$0, \ldots,
m$を付与する．
\begin{equation}
 y_S = \ _0 \ w_1 \ _1 \ w_2 \ _2 \ \cdots \ _{m-1} \ w_m \ _{m}
\end{equation}
この位置を表すラベルを利用して，位置$i$と位置$j$の間の単語または形態素の列
を表す記号$w_{j,k}$を導入する．
\begin{equation}
 w_{j,k} \equiv w_{j+1}, w_{j+2}, \ldots, w_{k}
\end{equation}
ただし，$w_{0,0} \equiv \varepsilon$とする．
ここで，$\varepsilon$は空文字を表すものとし，
$y$を1つ以上の単語または形態素の列とすると$\varepsilon y=y$とする．

まず，動的計画法による$y_S$の訳語推定の概略を述べる．
先頭から$k$番目までの単語または形態素の列$w_{0,k}$に対して生成された訳語
候補の集合を$Tran(w_{0,k})$とすると，$y_S=w_{0,m}=w_{1}, \ldots, w_{m}$
の訳語を得るには$Tran(y_S=w_{0,m})$からスコア1位の訳語候補を取り出せば
よい．
ここで，各$Tran(w_{0,k})$ $(k=1,\ldots,m)$は以下の式に従って，再帰的に計
算される．
\begin{equation}
 \label{eq:Tran_calc}
  \begin{array}{ll}
   Tran(w_{0,k}) = top( \hspace{-0.2cm} & merge(\ \bigcup\limits_{i=0}^{k-1}
    concat(Tran(w_{0,i}),\ tran(w_{i,k}))), \\
   & r\ )
  \end{array}
\end{equation}
この式では，$w_{0,k}=w_{1}, \ldots, w_{k}$をある位置$i$で$w_{0,i}=w_{1},
\ldots, w_{i}$と$w_{i,k}=w_{i+1}, \ldots, w_{k}$の2つに分割する．
分割の場所$i$は先頭$i=0$から順に$i=k-1$まで移動させていく．
それぞれの分割の仕方において，$w_{0,i}$に対しては再帰的に訳語候補の集合
$Tran(w_{0,i})$を求め，$w_{i,k}$に対しては$w_{i,k}$を見出し語として対訳
辞書から訳語の集合$tran(w_{i,k})$を得る．
そして，両者を$concat$により結合することにより，新しい訳語候補を生成する．
このとき，同一の訳語候補が複数の異なる分割の仕方から生成される場合がある．
その場合は，$merge$により，それらの訳語候補のスコアがまとめられる．
最後に，$top$によりスコア上位$r$個の訳語候補のみ出力することで，訳語候補の枝
刈りを行い，この出力を$Tran(w_{0,k})$とする．

実際に式(\ref{eq:Tran_calc})を用いて，図\ref{fig:compositional}の例をも
とに$y_S$=“応用”，“行動”，“分析”の訳語候補の集合
$Tran(y_S=w_{0,3})$が生成される様子を説明する．
ただし，ここでは枝刈り後出力される訳語候補数$r$を3とする．
式(\ref{eq:Tran_calc})の$i=0,\ldots,k-1$のループに注目すると，
以下のように訳語候補が生成されていくことがわかる．
\begin{description}
 \item[($i=0$)] $w_{0,3}$は$w_{0,0}=\varepsilon$と$w_{0,3}=$“応用”，
	    “行動”，“分析”に分割される．
	    
	    $w_{0,3}=$“応用”，“行動”，“分析”は対訳辞書に訳語がない
	    ので，$concat$の出力は空集合となる．
 \item[($i=1$)] $w_{0,3}$は$w_{0,1}=$“応用”と$w_{1,3}=$“行動”，“分
	    析”に分割される．
	    
	    $Tran(w_{0,1})$により，$w_{0,1}$の訳語候補の集合を再帰的に求め，
	    $tran(w_{1,3})$
	    により，対訳辞書から得られる$w_{1,3}$の訳語の集合を求める．
	    
	    そして，それらの訳語候補を$concat$により結合し訳語候補を生成
	    する．
	    
	    $Tran(w_{0,1})=\{$``application'', ``practical'',
	    ``applied''$\}$，$tran(w_{1,3})=\{$``behavior analysis''$\}$のとき
	    生成される訳語候補を以下に示す．
       \begin{itemize}
	\item ``application behavior analysis''
	\item ``practical behavior analysis''
	\item ``applied behavior analysis''
       \end{itemize} 
 \item[($i=2$)] $w_{0,3}$は$w_{0,2}=$“応用”，“行動”と$w_{2,3}=$“分
	    析”に分割される．
	    
	    $Tran(w_{0,2})$により，$w_{0,2}$の訳語候補の集合を再帰的に求め，
	    $tran(w_{2,3})$
	    により，対訳辞書から得られる$w_{2,3}$の訳語の集合を求める．
	    
	    そして，それらの訳語候補を$concat$により結合し訳語候補を生成
	    する．
	    
	    $Tran(w_{0,2})=\{$``applied action'', ``applied activity'',
	    ``applied behavior''$\}$，$tran(w_{2,3})=\{$``analysis'',
	    ``diagnosis'', ``assay''$\}$のとき生成される訳語候補を以下に
	    示す．
       \begin{itemize}
	\item ``applied action analysis''
	\item ``applied action diagnosis''
	\item ``applied action assay''
	\item ``applied activity analysis''
	\item ``applied activity diagnosis''
	\item ``applied activity assay''
	\item ``applied behavior anaylysis''
	\item ``applied behavior diagnosis''
	\item ``applied behavior assay''
       \end{itemize} 
\end{description}
以上の操作が終了したら，$y_S$に対して複数個の訳語候補が生成された状態と
なる．
生成された訳語候補に同じものが存在した場合，関数$merge$によりこれらがま
とめられ，最後に関数$top$によりスコア上位$r$個の訳語候補が出力される．


\subsection{訳語候補のスコア付け}
\label{sec:score_details}

\subsubsection{対訳辞書スコア}
\label{sec:lexicon_score}
訳語推定対象の用語$y_S$と訳語候補$y_T$の対応の適切さを対訳辞書を用いて測
定するための「対訳辞書スコア」を\ref{sec:generation}節で導入した．
この対訳辞書スコアは，訳語候補$y_T$を生成するときに使用した訳語対
$\langle s_i,t_i\rangle$のそれぞれの適切さを関数$q$により測定し，それら
の積で計算されるものであった．
本節では，対訳辞書に基づいて訳語対$\langle s_i,t_i\rangle$のスコアを計算
するための関数$q$を2種類定義する．

\subsubsection*{頻度-長さ(DF)}

``natural language processing''という用語
が，既存の対訳辞書に含まれないため，訳語推定の対象となる場合を考え
 る．
〈``natural'', “自然な”〉，〈``language'', “言語”〉，
〈``processing'', “処理”〉の3つの訳語対から生
成される“自然な言語処理”という訳語候補よりも，〈``natural language'', “自然言語”〉のような単語数または形態
素数の多い訳語対と〈``processing'', “処理”〉を利用して得られる訳語候補“自然言語処理”の方が信頼度が
高いと思われる．
また，表~\ref{tab:entry_number}の部分対応対訳辞書に含まれる訳語対は，英
辞郎に含まれる複合語の訳語対から，英語及び日本語の構成要素の訳語対応を推
定することにより作成された訳語対であるため，対訳辞書$P_2$に出現する頻度
の少ない訳語対よりも，出現する頻度の多い訳語対の方が信頼度が高いと思われ
る．
以上のような，訳語対の長さと頻度に基づく経験的な選好に基づいて，訳語対を
順位付けする方法について述べる．

まず，スコア付けの対象となる対訳辞書の訳語対は，以下のように分類できる．
\begin{itemize}
 \item 英辞郎の訳語対（利用できる情報：単語数または形態素数）
       \begin{itemize}
	\item 単語数または形態素数が2以上の訳語対 （(a)とする）
	\item 1単語または1形態素の訳語対 （(b)とする）
       \end{itemize}
 \item 部分対応対訳辞書の訳語対（利用できる情報：対訳辞書$P_2$に出現する
       頻度） （(c)とする）
\end{itemize}
ここではスコア付けの方針を決める問題を，上記の(a)，(b)，(c)で示した3種
類の訳語対の間に優先順位を付けることに帰着させて考える．
(a)，(b)，(c)の優先順位として，本論文では，
まず，(a)の訳語対に与えるスコアを極めて高く設定し，(b)または(c)の訳語対
のスコアを必ず上回るようにする．
次に，(b)と(c)の訳語対の間のスコアの大小関係については，
(c)の訳語対が対訳辞書$P_2$に出現する頻度に閾値を設け，
(c)の訳語対の頻度が頻度閾値と同じであれば，(b)の訳語対のスコアと同じにし，
(c)の訳語対の頻度が頻度閾値より大きければ，(b)の訳語対のスコアより大きく
し，そして，(c)の訳語対の頻度が頻度閾値より小さければ，(b)の訳語対のスコ
アより小さくする．
本論文では，この頻度閾値を10に設定した．
この頻度閾値を変化させることにより，英辞郎に含まれる1単語または1形態素
の訳語対のスコアと，部分対応対訳辞書に含まれる訳語対のスコアの大小関係が変化する
ため，訳語推定の性能にもある程度影響を与える．
しかしながら，本論文の目的は，コーパスとしてウェブ全体を用いる方法と，ウェ
ブから収集した専門分野コーパスを利用する方法の比較にあるので，最適なパラ
メータの値の追求は行わなかった．

この優先順位を実現するため，英辞郎の訳語対のスコアには単語数または形態素
数を指数とする関数を用い，部分対応対訳辞書の訳語対のスコアには頻度の対数
を用いることで，単語数または形態素数が2以上の英辞郎の訳語対のスコアが，
部分対応対訳辞書の訳語対のスコアよりも大きくなるようにした．
訳語対$\langle s,t\rangle$のスコア$q(\langle s,t\rangle)$の定義として，
以下の式を採用する．
\begin{equation}
 \label{eq:DF}
 q(\langle s,t\rangle) =
 \left\{ \begin{array}{ll}
  10^{(compo(s)-1)} & \mbox{($\langle s,t\rangle$ in 英辞郎)}\\
	  \log_{10}f_p(\langle s,t\rangle) & \mbox{($\langle s,t\rangle$
	   in } B_P \mbox{)}\\
	  \log_{10}f_s(\langle s,t\rangle) & \mbox{($\langle s,t\rangle$
	   in } B_S \mbox{)}
	 \end{array} \right.
\end{equation}
ここで，$compo(s)$は$s$の単語または形態素の数を表すものとし，
$f_p(\langle s,t\rangle)$は，$P_2$中に第一要素として$\langle s,t\rangle$
が出現する回数を表すものとし，$f_p(\langle s,t\rangle)$は，$P_2$中に第二
要素として$\langle s,t\rangle$が出現する回数を表すものとする．
式(\ref{eq:DF})では，対数関数の底の値が部分対応対訳辞書の訳語対の頻度閾
値に対応する．
すなわち，部分対応対訳辞書の訳語対で対訳辞書$P_2$に10回出現する訳語対と，
英辞郎に含まれる1単語または1形態素の訳語対のスコアが等しくなる．
なお，このスコアでは，部分対応対訳辞書に一度しか現れない訳語対のスコアは
ゼロとなる．
この場合，訳語として利用しないものとする．


式(\ref{eq:DF})に示した訳語対のスコア関数の積で定義される対訳辞書スコア
を，以下ではDFと呼ぶものとする．

\subsubsection*{確率(DP)}
\cite{Fujii00}は，対訳辞書に基づく$y_S$と$y_T$の対応の適切さを，確率
$P(y_S|y_T)$を計算することにより評価した．
このスコアは，条件付き確率$P(s_i|t_i)$の積で定義される．
\cite{Fujii00}は対訳辞書として部分対応対訳辞書$B$のみを用いているため，
同じ設定とするには，本論文でも部分対応対訳辞書$B$のみを用いなければなら
ない．
しかしながら，部分対応対訳辞書$B$のみを用いた実験を行った結果，英辞郎と
部分対応対訳辞書$B$を併用する場合に比べ，訳語推定の性能（精度・再現率）
が10\%前後も低いことがわかった．
このため，本論文では，部分対応対訳辞書$B$に加え英辞郎も用いて，条件付き
確率$P(s_i|t_i)$に基づく対訳辞書スコアを評価することとした．
本論文では，英辞郎と部分対応対訳辞書$B$を併用できるようにするために，以
下の式に示す拡張を行った．
\begin{eqnarray}
 & q(\langle s,t\rangle) = P(s|t) = \frac{f_{prob}(\langle
  s,t\rangle)}{\sum_{s_j}f_{prob}(\langle s_j,t\rangle)} & \label{eq:DP1}\\
 & f_{prob}(\langle s_j,t\rangle) = 
  \begin{cases}
		   10 & \text{($\langle s,t\rangle$ in 英辞郎)} \\
		   f_B(\langle s_j,t\rangle) & \text{($\langle s,t\rangle$ in B)} 
				     
  \end{cases} & \label{eq:DP2}
\end{eqnarray}
上式では，英辞郎の訳語対の頻度は10とみなすものとした\footnote{辞書スコア
`DF'では，頻度10の部分対応対対訳辞書の訳語対のスコアと，構成要素長が1の
用語の英辞郎の訳語のスコアと同じにしている．これに合わせるため，英辞郎の
訳語対の頻度を10とみなすものとした．}．

式(\ref{eq:DP1}), (\ref{eq:DP2})に示した訳語対のスコア関数から計算される
対訳辞書スコアを以下ではDPと呼ぶものとする．


\subsubsection{コーパスに基づくスコア}
\label{sec:corpus_score}

訳語候補$y_T$の適切さを目的言語コーパスを用いて測定するための「コーパス
スコア」を\ref{sec:generation}節で導入した．
本論文では，コーパススコアとして以下に示す3種類を評価した．
\begin{itemize}
 \item 頻度(CF): 目的言語コーパスにおける訳語候補$y_T$の生起頻度
\begin{equation}
 Q_{corpus}(y_T)= freq(y_T)
\end{equation}
 \item 確率(CP): 以下のバイグラムモデルによって推定される，訳語候補$y_T$
       の生起確率．
       \cite{Fujii00}で用いられたコーパススコアの評価を目的
       とする．
       本来は$t_i$を単語または形態素とすべきであるが，実装の都合上，
       $t_i$を対訳辞書から得られた訳語とする．
       したがって，$t_i$は1つ以上の単語または形態素から
       構成される\footnote{
	前節で述べたように，\cite{Fujii00}のスコア関数の評価に際しては，
       対訳辞書スコアにおいて，部分対応対訳辞書$B$と英辞郎を併用している．
       ここで，英辞郎の訳語には複数の単語または形態素で構成されるものが
       あるが，このような場合，厳密には，訳語を単語また形態素に分割して，
       単語また形態素のバイグラムに基づいて式(\ref{eq:CP})の計算をしなけ
       ればならない．しかしながら，実装上の手間を避けるため，ここでは，
       対訳辞書から得られた訳語をそのまま用い，$t_i$は1つ以上の単語また
       は形態素から構成されるとした．}．
\pagebreak
\begin{equation}
 \label{eq:CP}
 Q_{corpus}(y_T)= P(t_1) \cdot \prod_{i=1}^{n-1} P(t_{i+1}|t_i)
\end{equation}
 \item 生起(CO): 目的言語コーパスに訳語候補$y_T$が生起するかどうか
\begin{equation}
 Q_{corpus}(y_T)= 
  \begin{cases}
	   1 & \text{$y_T$ がコーパス中に生起する} \\
	   0 & \text{$y_T$ がコーパス中に生起しない} 
  \end{cases}
\end{equation}
\end{itemize}


\subsubsection{スコア関数}

\begin{table}[b]
 \small
 \centering
 \caption{訳語候補のスコア関数と構成要素}
 \label{tab:param_method}
\begin{tabular}{|c||c|c||c|c|c||c|c|}
 \hline
 & \multicolumn{2}{|c||}{対訳辞書スコア} &
 \multicolumn{3}{|c||}{コーパススコア} & \multicolumn{2}{|c|}{コーパス}\\
 \cline{2-8}
 スコア関数 & 頻度-長さ & 確率 & 頻度 & 確率 & 生起 & 専門分野 & ウェブ \\
 & (DF) & (DP) & (CF) & (CP) & (CO) & コーパス & 全体 \\
 \hline
 \hline
 DF-CF     &  p/f &  & p/f & & & o &\\  
 \hline
 DF-CF${\rm _f}$    &  p/f &  & f & & & o &\\  
 \hline
 DF-CP     & p/f & & & p/f & & o & \\  
 \hline
 DF-CO     & p/f & & & & p/f & o & \\  
 \hline
 DF-CO${\rm _f}$     & p/f & & & & f & o & \\  
 \hline
 DP-CF     & & p/f & p/f & & & o & \\  
 \hline
 DP-CP     & & p/f & & p/f & & o & \\  
 \hline
 CF        &  &  &  p/f & & & o &\\  
 \hline
 CP        &  &  &  & p/f & & o &\\  
 \hline \hline
 DF-CF${\rm _f}$-w  &  p/f &  & f & & & & o\\  
 \hline
 DF-CO${\rm _f}$-w  &  p/f &  &  & & f & & o\\  
 \hline \hline
 DF        & p/f &  &  & &  & & \\  
 \hline
\end{tabular}
\vspace{4pt}

p(prune):枝刈りに利用，f(final):最終スコアに利用
\end{table}

表\ref{tab:param_method}に示すように，本論文では，辞書に基づくスコアとコー
パスに基づくスコアに対して，12種類の組み合せのスコア関数を作成し評価を行っ
た．
この表において，`p(prune)'は，動的計画法のアルゴリズムを用いた訳語候補生
成の過程において，式(\ref{eq:Tran_calc})の$top$を実行することで，生成された
訳語候補の部分列の順位付けと枝刈りにそのスコアが用いられることを示す．
`f(final)'は，生成された訳語候補の最終結果の順位付けにそのスコアが用いら
れることを示す．
また，列`コーパス'において，`専門分野コーパス'は，あらかじめウェブから専
門分野コーパスを収集し，その後，このコーパスを用いて生成された訳語候補の
検証を行うことを示す．
`ウェブ全体'は，サーチエンジンを通してウェブ全体を利用して訳語候補の検証
を行うことを示す．

スコア関数の命名方法は，`対訳辞書スコア名-コーパススコア名'の原則に基づ
く．
例えば，スコア関数`DF-CO'は，対訳辞書スコアに`DF'を用い，コーパススコア
に`CO'を用いたスコア関数である．
ここで，式(\ref{eq:Tran_calc})の$top$による訳語候補の枝刈りについて考え
ると，不要な候補を早い段階で削減するため，基本的には対訳辞書スコアとコー
パススコアの両方を用いるべきである．
しかしながら，コーパスとしてウェブ全体を用いる場合は，サーチエンジンの検
索に要する時間を考慮すると，訳語候補の生成過程でコーパススコアを利用する
ことは効率的ではない．
そこで，訳語候補の枝刈りにはコーパススコアを用いず，訳語候補の最終的なス
コア計算のみにコーパススコアを用いる．
コーパススコアを枝刈りに用いない場合は，`DF-CO${\rm _f}$'の様に，
コーパススコア名の後ろに`${\rm _f}$'を付加する．
そして，コーパスとしてウェブ全体を用いる場合は，`DF-CO${\rm _f}$-w'の様に，
`-w'を付加する．

本論文で評価したスコア関数は，コーパススコアの計算において用いるコーパスの
違いにより，ウェブから収集した専門分野コーパスを用いるタイプ，サーチエン
ジンを通してウェブ全体を用いるタイプ，コーパスを一切用いないタイプの，3
つのタイプに分けることができる．
対訳辞書スコアには，訳語対が部分対応対訳辞書に出現する頻度と訳語対の構成
要素長に基づく`DF'と，条件付き確率$P(s|t)$に基づく`DP'の2つがある．
コーパススコアには，訳語候補がコーパスに生起する頻度に基づく`CF'，訳語
候補がコーパスに生起する確率に基づく`CP'，訳語候補がコーパスに生起する
か否かに基づく`CO'の3つがある．
ここで，\ref{sec:evaluation}節で示す実験結果においては，対訳辞書`DF'を用
いたスコア関数と`DP'を用いたスコア関数の間で性能に大きな差はないが，`DF'
を用いた方が若干精度が高かった．
そこで本論文では，精度を重視する立場に立ち，
対訳辞書スコアとして主に`DF'を用いて評価を行う
\footnote{
本論文の焦点は，ウェブから収集した専門分野コーパスを用いる方法と，サーチ
エンジンを通してウェブ全体を用いる方法の比較にある．
従って，定義し得るスコア関数を網羅的に評価することは行っていない．
}．

以下，本論文で実際に評価した辞書スコアとコーパススコアの組み合わせに
ついて説明する．

コーパスとしてウェブから収集した専門分野コーパスを用いる場合には，
対訳辞書スコア`DF'を用いたスコア関数とコーパススコアとの組み合わせでは，
`CF'，`CP'，`CO'の3種類を網羅したが，それらの性能に大差はなかった．
そこで，対訳辞書スコア`DP'では，大きく性質の異なるコーパススコアである
`CF'，`CP'との組み合わせを評価した．
ここで，スコア関数`DP-CP'は，\cite{Fujii00}で提案されたモデルに，部分対
応対訳辞書に加え英辞郎自体も用いることができるように拡張を加えたスコア関
数である．

一方，コーパスとしてウェブ全体を用いる場合は，
辞書スコアとしては`DF'を用いた．
また，コーパススコア`CP'は，`CF'や`CO'と比べ，サーチエンジンの検索回数が
多くなるので，評価の対象から除外した．
さらに，上述したように，サーチエンジンの検索時間の都合で，コーパススコア
による枝刈りは行わない．
以上をまとめると，コーパスとしてウェブ全体を用いるスコア関数として
は，`DF-CF${\rm _f}$-w'と`DF-CO${\rm _f}$-w'の2種類を評価する．
そして，この2つのスコア関数との直接的な比較のため，ウェブから収集した専
門分野コーパスを用いるスコア関数として，コーパススコアによる枝刈りを行わ
ないDF-CF${\rm _f}$とDF-CO${\rm _f}$についても評価を行う．

最後に，対訳辞書スコアまたはコーパススコアどちらかのみを用いるスコア関数
の評価のために，次のスコア関数を評価する．
辞書スコアのみで訳語候補のスコア付けをした場合の評価のため，スコア関数
`DF'を評価する
\footnote{
\ref{sec:evaluation}節の評価実験では，スコア関数`DF'は極めて低いF値であっ
た．
本論文ではスコア関数`DP'は評価していないが，同様の傾向であると思われる．
}．
コーパススコアのみで訳語候補のスコア付けをした場合の評価のため，スコア関
数`CF'及び`CP'を評価する
\footnote{
スコア関数`CO'は，辞書スコアは利用せずコーパススコア`CO'のみを用いるスコ
ア関数であるが，訳語候補のスコアが0か1となってしまい，順位付けできないの
で取り扱わない．
}．




