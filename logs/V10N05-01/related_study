関連研究
\label{ss:related}

\subsection{共通記号列のまとめ処理}

生成規則($A \rightarrow \alpha$)に対し右辺記号列($\alpha$)中のある位置
にドット`・'を付けたデータ構造($A \rightarrow \beta \cdot \gamma$,  た
だし$\alpha = \beta \gamma$)は，項(Item)と呼ばれ，構文解析中に規則のど
こまで解析が進んだかを表すために，本稿で述べたLR項の他，Earley法
\cite{earley1970}やチャート法\cite{key1980}など，種々の構文解析アルゴ
リズムで共通に利用されている．本稿で示した手法は，LR法においてItem以降
の解析がドットの左側(右辺記号列のprefix，$\beta$)には依存しないことを
利用し，ドットの右側の記号列(右辺記号列のsuffix，$\gamma$)が共通なもの
をまとめあげることによって，LR表の圧縮を実現したと考えることができる．
同様に，Itemのドット左右の記号列について複数の規則の間で共通する記号列
をまとめて処理することによる，解析の効率化手法が知られている．

本稿の提案法のように，ドットの右側の記号列($\gamma$)が共通なItemをまと
めて扱う手法が提案されている．文献\cite{leermakers1992}では，Earley法
においてItem以降の解析がドットの右側の記号列($\gamma$)のみに依存し，ドッ
トの左側($\beta$)や生成規則左辺の記号($A$)には依存しないことを利用して，
これらを重複処理しないことによる効率化手法が示されている．文献
\cite{moore2000}では，同様の手法をチャート法に適用している．

逆に，ドットの左側の記号列($\beta$)が共通なItemをまとめて処理する手法
としては，LR法が挙げられる．LR法では，共通なprefixを持つ複数のItemをま
とめて解析の一状態とするようにLR表を作成することで，解析の効率化を実現
している．文献\cite{nederhof1994}では，この考え方を進めて，共通の
prefixをもつ規則をすべてまとめて処理する手法が示されている．また，共通
したprefixを持つ2つ以上の規則を持たないように文法を変形することによっ
て効率化を行なう手法も提案されている\cite{moore2000}．

\subsection{可変な規則長の扱い}

本稿の提案法2では，ドット左側の記号数情報を捨象した可変長LR項の導入の
ため，reduce動作時にスタックからポップする記号数を動的に求める必要があっ
た．そのために，GOTO手続きを規則の解析開始か途中かによって別々に計算す
る手法を示した．同様の考え方は，規則の右辺に記号の正規表現を許した拡張
CFG(正規右辺文法)を扱うLR構文解析法として提案されている
\cite{nederhof1994,purdom1981}．正規右辺文法では，規則の右辺に合
致する記号数を予め知ることができないので，解析時に動的に求める必要があ
るためである．


