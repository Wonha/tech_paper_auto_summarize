0  LR 構文 解析 法 は  構文 解析 アルゴリズム として 最も 効率 の 良い 手法 の 一つ で ある  
0  LR 構文 解析 法 の 中 でも  横型 探索 で 非決定 的 解析 を 行う こと により 文脈 自由 言語 の 扱い を 可能 に し た 方法 は 一般 化 LR 法  GLR 法  と 呼ば れ  自然 言語 処理 および  音声 認識 で 利用 さ れ て いる  
0  また  LR 法 の 構文 解析 過程 に 確率 を 割り当てる こと で  確率 言語 モデル を 得る こと が できる  
0  確率 一般 化 LR  PGLR  モデル  CITE  および その 一般 化 で ある APGLR モデル  CITE  は  構文 解析 結果 の 構文 木 の 曖昧 性 解消 や  音声 認識 の 確率 言語 モデル  CITE  として 利用 さ れ て いる  
0  LR 構文 解析 法 で は  文法 が 与え られ た 時点 で あらかじめ 計算 できる 解析 過程 を 先 に 求め  LR 解析 表  以下  LR 表  で 表し て おき  文 解析 時 に 利用 する  
0  LR 法 は  言わば  空間 効率 を 犠牲 に する  LR 表 を 作成 する  こと によって  解析 時間 の 効率 化 を 実現 する 手法 で ある  
0  LR 法 を 実際 の 問題 に 適用 する 場合 の 問題 点 の 一つ は  文法 の 規則 数 増加 に 伴う LR 表 の サイズ の 増大 で ある  
0  計算 機 言語 の 解析  CITE  自然 言語 の 解析  CITE  音声 認識  CITE  それぞれ の 立場 から この 問題 点 が 指摘 さ れ て いる  
0  LR 表 の サイズ を 押える ひとつ の 方法 は  解析 効率 を 犠牲 に し て 空間 効率 を ある程度 に 押える 方法 で ある  
0  本来 LR 法 が 利用 さ れ て い た 計算 機 言語 用 の 構文 解析 において は  LR 法 は 決定的 解析 器 として 利用 さ れ て き た  
0  決定的 解析 として の LR 法 が 扱える 文法 は  文脈 自由 文法 の サブ セット で ある  
0  LR 表 は  その 作り方 から 幾つ か の 種類 に 分類 さ れる が  それら は 決定的 解析 で 扱える 言語 に 違い が ある  
0  単純 LR  Simple LR  SLR  表 は  作り方 が 単純 で 表 サイズ を 小さく 押え られる が 扱える 文法 の 範囲 が 狭い  
0  正 準 LR  Cannonical LR  CLR  表 は  サイズ は 非常 に 大きく なる が 扱える 文法 の 範囲 は 最も 広い  
0  両者 の バランス を 取る LR 表 として  サイズ を 小さく 押え つつ 扱える 文法 の 範囲 を そこそこ 広く とれる  LALR  Look Ahead LR  表 が 提案 さ れ て いる  
0  一方  文脈 自由 文法 を 扱う 自然 言語 処理 で LR 表 を 利用 する 場合 は  非 決定 的 解析 として 利用 する の が 普通 で ある  
0  決定的 解析 で 扱える 言語 の 大き さ は  非 決定 的 解析 で の 解析 効率 に 相当 する  
0  すなわち  SLR  LALR  CLR の 順 に 効率 は 良く なる が  それ に 伴い 表 の サイズ は 増大 する  
0  また  計算 機 言語 に 用いる LR 表 の サイズ 圧縮 手法 に は  2 次元 配列 として の スパース な 表 を いかに 効率 よく 圧縮 する か という 視点 の もの も 多い  
0  これら は  作成 後 の 表 を 表現 する データ 構造 に 工夫 を 行っ た もの で  表 自体 が 運ぶ 情報 に は 違い が ない  
0  自然 言語 処理 の 分野 で も  解析 表 縮小 の 手法 が 提案 さ れ て いる  
0  田中 ら は  文脈 自由 文法 と 単語 連接 の 制約 を 切り放し て 記述 し て おき  LR テーブル 作成 時 に 2 つ の 制約 を 導入 する 手法  MSLR 法  CITE  を 用いる こと で  単独 の 文脈 自由 文法 を 記述 する より 解析 表 の サイズ を 小さく する こと が でき た と 報告 し て いる  CITE  
0  Luk ら は  文法 を 小さな 部分 に 分割 し て  それぞれ を 扱う パーザ を 組み合わせる こと で  解析 表 の サイズ を 押える 方法 を 提案 し て いる  CITE  
0  以上 の 従来 手法 を まとめる と  次 の 3 つ の 手法 に 分類 できる  
0  処理 効率 を 犠牲 に し て 空間 効率 を 稼ぐ 方法  
0  表 の データ 構造 を 工夫 し て 記憶 量 を 引き下げる 方法  
0  文法 の 記述 方法 を 工夫 し て より 小さな 表 を 導出 する 方法  
1  本稿 で は  LR 表 の サイズ を 圧縮 する  上記 の 3 分類 に は 当てはまら ない 新規 の 手法 を 提案 する  
0  提案 法 は 従来 の 手法 と 異なり  LR 表 作成 アルゴリズム の 再 検討 を 行い  解析 に 不要 な 情報 を 捨象 する こと によって  表 の 圧縮 を 実現 する  
0  本 手法 は  次 の よう な 特徴 を 持つ  
0   1  上記 の 従来 の 縮小 手法 と は 手法 の 軸 が 異なる ため  どの 手法 とも 同時に 適用 可能 で ある  
0   2  入力 文 の 構文 木 を 得る という 自然 言語 処理 用途 において  提案 法 は 解析 時 の 効率 に 影響 を あたえる こと は ない  
0   3  従来 の 表 作成 および 解析 アルゴリズム へ の 変更 個所 は 小さく  プログラム の 軽微 な 修正 で 適用 可能 で ある  
1  特に  提案 法 によって 作成 さ れ た 圧縮 LR 表 は  既存 の LR 構文 解析 プログラム で ほぼ そのまま 利用 可能 で ある  
0  本稿 の 構成 は 以下 の 通り で ある  
0  まず  REF _ ss  base  節 で  提案 法 の 基本 原理 を 説明 する  
0  また  提案 法 の 性質 を 考察 する  
0  続く  REF _ ss  experiment  節 で は  提案 法 の 実装 方法 と  実際 の 文法 に 提案 手法 を 適用 し た 実験 結果 を 示す  
0   REF _ ss  extension  節 で は  提案 手法 の 限界 を 克服 する ため の 拡張 方法 について 述べ  実際 の 文法 に 適用 し た 結果 を 報告 する  
