本稿の実験では，([REF_eq:n])式の確率を推定するために，[REF_sec:overview]節に述べたような[MATH]の値と確率推定法を用いたが，確率推定の方法には，最尤推定やバックオフスムージングの他にも様々な方法があり，さらに，バックオフスムージングについても様々なdiscountingの方法があるので，これらを適用した場合の尺度[MATH]の過分割検出精度について網羅的に調べることを今後の課題としたい．
本稿でこのことを網羅的に調べなかった理由は，本稿での主要な目的は，[REF_sec:introduction]章で述べたように，従来の研究で人手で発見されることが前提となっていた過分割を，尺度[MATH]を用いることにより半自動的に抽出できることを示すことにあったので，そのことを示すためには，なんらかの(代表的な)確率推定法を利用した場合について示すだけで十分であったからである．
すなわち，確率推定法の優劣(尺度[MATH]と併用したときの過分割検出精度の良否)を調べることは副次的な事柄であったからである．
なお，予備実験として，京大コーパスを利用し，
n=2，または，n=3
Witten-Bell discountingによるバックオフスムージング，または，最尤推定
から作られる四つの組合せのそれぞれについて([REF_eq:n])式の確率を推定し，尺度[MATH]による分割点調査率を調べた結果は，教師あり学習と教師なし学習の双方について，[MATH]に最尤推定を組み合わせたものと[MATH]にバックオフスムージングを組み合わせたものとがほぼ等しく良く(教師なし学習では前者が若干良く，教師あり学習では後者が若干良い)，その他の組み合わせ([MATH]と最尤推定および[MATH]とバックオフスムージング)は，この二つよりも劣っていた．
このような結果の原因としては，[MATH]や確率推定法の違いの他に，訓練データのサイズが約1万文と比較的少ないことが影響していると考えられる．
確率に基づいた形態素解析システム(あるいは単語分割システム)には，文字の連鎖確率に基づいたシステム[CITE]と単語や品詞の連鎖確率に基づいたシステム[CITE]がある．
[CITE]では，本稿とは実現手法は異なるが，形態素境界の情報を文字に取り込むことにより，文字列により形態素列を表現している．
そして，入力文に対して，(形態素境界情報を含む)文字の連鎖確率が最大になるような解を求めることにより，最適な形態素列を得ている．
一方，[CITE]では，単語や品詞n-gramに基づいて形態素解析をしており，文字情報を直接用いているのは未知語モデルに限定されている．
これらの形態素解析システムの解析結果からも尺度[MATH]が過分割を検出できるかを調べることは今後の課題であるが，[CITE]と[CITE]を比べた場合，前者は，文字の連鎖確率を直接用いて形態素列への分割を行なっている点が，尺度[MATH]と極めて類似しているため，前者に尺度[MATH]を適用した場合の過分割検出精度は，(文字レベルでの分割の最適化を行なっていない)後者に適用した場合と比較して劣ることが予想される．
しかし，[CITE]の品詞や単語のn-gramに基づくシステムに尺度[MATH]を適用した場合についても，規則に基づく形態素解析システムに比較すれば，最適な形態素列を求めるときに，可能な分割を相互に比較し最高確率のものを出すという形で，尺度[MATH]に用いた情報が既に用いられているとも言えるため，尺度[MATH]の有効性は低いと予想される．
筆者は，予備実験として，実験1,2と同様の確率推定法で，JUMANにより解析された京大コーパスB全体を訓練およびテストコーパスとして，教師なし学習での確率推定値を用い，尺度[MATH]により分割不足の検出を試みた．
つまり，尺度[MATH]の値が小さい位置が形態素として結合されている場合について，それが実際に分割不足かを確かめた．
その結果は，分割不足の再現率が10％の時点で，既に適合率が4％であり，実験2における，再現率が10％のときの適合率が47％と比べて非常に劣っていた．
その理由の一つは，形態素解析システム中の形態素に比較的長い単位が多く，かつ，分割不足として抽出されたものの多くが，その長い単位の形態素を短い単位に分割しようとしているためである．
たとえば，分割不足として抽出されたものの上位には，'/'が候補位置とすると，「穴を/あけた」「目を/見張る」「あっという/間」などがある．
このような場合と，明確に間違いである分割不足とを区別することは尺度[MATH]には不可能なので，尺度[MATH]により分割不足を検出するのは，過分割の場合ほどには上手くいかない．
本稿では，形態素解析結果から過分割を検出する統計的尺度を提案した．
その尺度は，文字列に関する尺度であり，文字列が分割される確率と分割されない確率との比に基づいていて，分割されにくい文字列ほど大きな値となる．
したがって，この値が大きい文字列は過分割されている可能性が高い．
提案尺度を使うことにより，規則に基づいた形態素解析システムの解析結果から高精度で過分割を検出できたし，人手で修正されたコーパスに残る過分割も検出できた．
また，提案尺度の過分割検出精度は，その他の統計的尺度と比べて高かった．
これらのことは，提案尺度が，形態素解析システムの高精度化に役立つこと，及び，コーパス作成・整備の補助ツールとして役立つことを示している．
今後は，提案尺度を実際に使い，形態素解析システムの精度向上やコーパスの整備に役立てたい．
本稿の実験では，([REF_eq:n])式の確率を推定するために，[REF_sec:overview]節に述べたような[MATH]の値と確率推定法を用いたが，確率推定の方法には，最尤推定やバックオフスムージングの他にも様々な方法があり，さらに，バックオフスムージングについても様々なdiscountingの方法があるので，これらを適用した場合の尺度[MATH]の過分割検出精度について網羅的に調べることを今後の課題としたい．
本稿でこのことを網羅的に調べなかった理由は，本稿での主要な目的は，[REF_sec:introduction]章で述べたように，従来の研究で人手で発見されることが前提となっていた過分割を，尺度[MATH]を用いることにより半自動的に抽出できることを示すことにあったので，そのことを示すためには，なんらかの(代表的な)確率推定法を利用した場合について示すだけで十分であったからである．
すなわち，確率推定法の優劣(尺度[MATH]と併用したときの過分割検出精度の良否)を調べることは副次的な事柄であったからである．
なお，予備実験として，京大コーパスを利用し，
n=2，または，n=3
Witten-Bell discountingによるバックオフスムージング，または，最尤推定
から作られる四つの組合せのそれぞれについて([REF_eq:n])式の確率を推定し，尺度[MATH]による分割点調査率を調べた結果は，教師あり学習と教師なし学習の双方について，[MATH]に最尤推定を組み合わせたものと[MATH]にバックオフスムージングを組み合わせたものとがほぼ等しく良く(教師なし学習では前者が若干良く，教師あり学習では後者が若干良い)，その他の組み合わせ([MATH]と最尤推定および[MATH]とバックオフスムージング)は，この二つよりも劣っていた．
このような結果の原因としては，[MATH]や確率推定法の違いの他に，訓練データのサイズが約1万文と比較的少ないことが影響していると考えられる．
確率に基づいた形態素解析システム(あるいは単語分割システム)には，文字の連鎖確率に基づいたシステム[CITE]と単語や品詞の連鎖確率に基づいたシステム[CITE]がある．
[CITE]では，本稿とは実現手法は異なるが，形態素境界の情報を文字に取り込むことにより，文字列により形態素列を表現している．
そして，入力文に対して，(形態素境界情報を含む)文字の連鎖確率が最大になるような解を求めることにより，最適な形態素列を得ている．
一方，[CITE]では，単語や品詞n-gramに基づいて形態素解析をしており，文字情報を直接用いているのは未知語モデルに限定されている．
これらの形態素解析システムの解析結果からも尺度[MATH]が過分割を検出できるかを調べることは今後の課題であるが，[CITE]と[CITE]を比べた場合，前者は，文字の連鎖確率を直接用いて形態素列への分割を行なっている点が，尺度[MATH]と極めて類似しているため，前者に尺度[MATH]を適用した場合の過分割検出精度は，(文字レベルでの分割の最適化を行なっていない)後者に適用した場合と比較して劣ることが予想される．
しかし，[CITE]の品詞や単語のn-gramに基づくシステムに尺度[MATH]を適用した場合についても，規則に基づく形態素解析システムに比較すれば，最適な形態素列を求めるときに，可能な分割を相互に比較し最高確率のものを出すという形で，尺度[MATH]に用いた情報が既に用いられているとも言えるため，尺度[MATH]の有効性は低いと予想される．
筆者は，予備実験として，実験1,2と同様の確率推定法で，JUMANにより解析された京大コーパスB全体を訓練およびテストコーパスとして，教師なし学習での確率推定値を用い，尺度[MATH]により分割不足の検出を試みた．
つまり，尺度[MATH]の値が小さい位置が形態素として結合されている場合について，それが実際に分割不足かを確かめた．
その結果は，分割不足の再現率が10％の時点で，既に適合率が4％であり，実験2における，再現率が10％のときの適合率が47％と比べて非常に劣っていた．
その理由の一つは，形態素解析システム中の形態素に比較的長い単位が多く，かつ，分割不足として抽出されたものの多くが，その長い単位の形態素を短い単位に分割しようとしているためである．
たとえば，分割不足として抽出されたものの上位には，'/'が候補位置とすると，「穴を/あけた」「目を/見張る」「あっという/間」などがある．
このような場合と，明確に間違いである分割不足とを区別することは尺度[MATH]には不可能なので，尺度[MATH]により分割不足を検出するのは，過分割の場合ほどには上手くいかない．
本稿では，形態素解析結果から過分割を検出する統計的尺度を提案した．
その尺度は，文字列に関する尺度であり，文字列が分割される確率と分割されない確率との比に基づいていて，分割されにくい文字列ほど大きな値となる．
したがって，この値が大きい文字列は過分割されている可能性が高い．
提案尺度を使うことにより，規則に基づいた形態素解析システムの解析結果から高精度で過分割を検出できたし，人手で修正されたコーパスに残る過分割も検出できた．
また，提案尺度の過分割検出精度は，その他の統計的尺度と比べて高かった．
これらのことは，提案尺度が，形態素解析システムの高精度化に役立つこと，及び，コーパス作成・整備の補助ツールとして役立つことを示している．
今後は，提案尺度を実際に使い，形態素解析システムの精度向上やコーパスの整備に役立てたい．
