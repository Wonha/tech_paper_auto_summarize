================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[2159] このため，接続制約に違反する解析結果を受理しないLR表が作られるだけでなく，LR表の大きさを大幅に縮小することができる．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[2366] 例えば，「太郎が渋谷で買った本を借りた」という文を解析する際に，次のような括弧付けによる制約を付けた文が入力されたときには，括弧付けと矛盾した解析結果は出力しない．

================================================================
[section type  : proposed_method]
[section title : LR表作成器]
================================================================
[1303] 本節では，MSLRパーザ・ツールキットにおけるLR表作成器の機能と特徴について詳しく説明する．
-----------------------------------------------------
  [subsection title : 3種類のLR表を作成する機能]
-----------------------------------------------------
  [1355] 一般化LR法で用いられるLR表には，SLR (Simple LR), CLR (Canonical LR), LALR (Lookahead LR)の3種類がある．
-----------------------------------------------------
  [subsection title : 品詞間の接続制約を組み込む機能]
-----------------------------------------------------
  [2447] 品詞間の接続制約は，接続表として文法とは独立に記述し，LR表を作成する段階で接続制約を組み込む方が，最終的に得られるLR表の状態数・動作数も少なく，メモリ使用量を小さくすることができる．
-----------------------------------------------------
  [subsection title : 評価実験]
-----------------------------------------------------
  [2133] 本ツールキットに付属されている日本語解析用の文法と接続表を用いて，品詞間の接続制約を組み込む場合と組み込まない場合のLR表を比較した．

================================================================
[section type  : proposed_method]
[section title : MSLRパーザ]
================================================================
[991] 本節では，MSLRパーザの機能と特徴について概説する．
-----------------------------------------------------
  [subsection title : 形態素解析と構文解析を同時に行う機能]
-----------------------------------------------------
  [2792] 具体的には，位置[MATH]におけるスタックトップの状態[MATH]において，``vs_1''を先読み記号とする動作が図[REF_fig:lalr_table]のLR表に存在しないことから，``(に,vs_1)''という辞書引き結果を含む解析はこの時点で中断される．
-----------------------------------------------------
  [subsection title : 括弧付けによる制約のついた入力文を解析する機能]
-----------------------------------------------------
  [1984] 上記の入力例において，``*''は括弧で示された範囲を支配する非終端記号に特に制約がないことを表わしている．
-----------------------------------------------------
  [subsection title : PGLRモデルを取り扱う機能]
-----------------------------------------------------
  [2590] また本ツールキットには，このようにして得られた[MATH]から式([REF_eq:act_prob1])([REF_eq:act_prob2])に従って各動作の実行確率を推定し，その実行確率が付与されたLR表を作成するツールが含まれている．
-----------------------------------------------------
  [subsection title : 解析例]
-----------------------------------------------------
  [2770] また，表[REF_tab:exp parser2]の【形態素解析の文正解率】は，PGLRモデルに基づく構文木の生成確率の上位[MATH]位の解析結果の中に，単語分割と品詞付けの結果がコーパスに付加されたものと一致する構文木が含まれる文の割合を表わしている．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[2405] また，本ツールキットに付属の文法を用いて解析を行った場合，PGLRモデルを学習するための構文木付きコーパスが存在しないために，PGLRモデルに基づく生成確率によって解析結果に優先順位を付けることはできない．

