著者らの英日機械翻訳システムで現在利用している格フレームの例(説明用)を図1に示す．
これは，英語の動詞が持つ複数の日本語訳語から適切な訳語を選択するために利用される．
これらの格フレームは，それぞれの訳語ごとに記述されている．
著者らの格フレームに記述してある要素は次の4つである．
動詞が必須格として取りうる格要素
格要素の制約(語形や意味分類のマーカー)
動詞の日本語訳語
ウエイト(図1では省略)
ウエイトとは，それぞれの格フレームに与えられた数値であり「使われにくさ」の指標として使われる．
この値が大きいほどその格フレームは利用されにくくなる．
格フレームは構文解析が終了してから利用される．
すなわち入力英文の構文構造と動詞が認定されてから利用される．
この動詞の訳語を決定するには，まず動詞の持つ格フレームすべて(辞書中に登録されているもの)と構文構造の比較が行われ，それらの間の類似度が計算される．
そして最も類似度の高い格フレームの訳語が出力される．
類似度は，構文構造と格フレームの間での格要素と制約の一致度合，および格フレームのウエイトを総合して計算される．
従来，格フレームは人手で記述されていたが，困難かつコストのかかる作業となっていた．
これは以下のような理由による．
利用する情報の一貫性の確保
格要素として何を記述すべきか．
必須格の定義は何か．
格要素の制約は何を使用するか．
これらは記述する時に必ず決めなければならないパラメータである．
これらは何らかの規範として事前に決められ，作業者はそれに添って記述を行う．
このとき，規範で決められた制約と格要素は一貫して利用しなくてはならない．
なぜなら，動詞の訳語を選択する時に行われる計算は，すべての格フレームが平等であることを前提としているからである．
しかし，人手で一貫した方針を貫くのは困難であり不平等な記述になりがちである．
格フレームの不透明性
格フレームは一旦記述し終わった後で部分的に変更されることがしばしばある．
例えば，ある格フレームの格要素を削除，追加したり，格要素の制約を変更することなどである．
しかし，この結果が動詞の訳語選択にどういう影響を与えるかを把握するのは難しい．
これには構文構造との比較時に発生する他の格フレームとの競合の状態の変化，すなわち類似度計算への影響を把握しなくてはならないからである．
このような格フレームの変更結果の不透明性は，記述，保守管理の重大な障害となっている．
ウエイト決定の恣意性
ある格フレームのウエイト，すなわち「使われにくさ」を人間の内省で決めるのは非常に難しい．
しかもウエイトは格要素と制約の一致度合と共に類似度計算に用いられるため，両者の評価の比重をどう設定するかなど問題は多い．
実際には辞書の頻度情報などを参考に記述することが多いが，客観的なウエイトを与えることは難しい．
以上の3点の問題の内，問題3は著者らのシステムに固有の問題であるが，問題1，2は格フレームを利用して動詞の訳語を決定する場合の共通する問題であると考える．
著者らは，2章で述べた問題の解決のため以下の2点を提案する．
格フレームを決定木の形で表現する(格フレーム木)
英日の対訳コーパスから，統計的な帰納学習アルゴリズムを用いて格フレーム木を自動的に学習する
また，本章ではこれらを実現する手法を具体的に述べる．
\unitlength=1mm
(60,35)
\thicklines
格フレーム木は図2に示すような構造をしている．
各ノードには格要素，アークにはその制約，リーフには動詞の訳語が付与されている．
一方，従来の形式の格フレーム(図1)を便宜的に線形格フレームと呼ぶ．
格フレーム木は決定木であるため，動詞の訳語選択を行うには，ルートからリーフに向かって構文構造と比較するだけでよい．
このため線形格フレームよりも効率良く動詞の訳語選択を行うことができる．
しかし，この構造を採用する最大の利点は，2章で述べた問題2の「格フレームの不透明さ」を軽減できる点にある．
これは，決定木にすることによって，変更の影響が変更場所の下の訳語に限られるためである．
例えば，図2の格要素PN (前置詞)を削除した場合には，下位の訳語「連れていく」と「選ぶ」の選択が行われなくなることが容易にわかる．
2章で述べた問題1「利用する情報の一貫性の確保」は，統計的な帰納学習プログラムを利用することで解決される．
このようなプログラムとしてはCART [CITE]，ID3 [CITE]，C4.5 [CITE]など，いろいろなものが既に提案されている．
これらは共通して(属性，属性値，クラス)の形式の表から決定木を学習する．
著者らの目的とする格フレーム木を学習するには属性として格要素，属性値として格要素の制約，クラスとして動詞の訳語を与える(表1)．
本稿ではこの表を原始格フレーム表と呼ぶ．
またこの表の各行を事例と呼ぶ．
著者らの利用するプログラム(C4.5)では，原始格フレーム表の格要素が，動詞の訳語の分類にどれだけ有効かを統計的に計算する．
すなわち，ある格要素の制約に従って訳語を分類した場合に，どれだけ「きれいに」訳語が分類されるかをエントロピーを用いて計算し，これによって有効性を判定する．
そして，有効性の高い格要素から順番に上位ノードから下位ノードに配置して決定木を生成する(アルゴリズムの概要は付録Aに示す．
)．
表1にプログラムを適用すると，図2で示した格フレーム木が学習される．
このアルゴリズムでは，格要素およびその制約は，訳語の分類に対する有効性という観点で一貫して評価されることになり，2章の問題1「利用する情報の一貫性の確保」は解決される．
この手法で獲得された格フレーム木には，線形格フレームの個々のウエイトに相当する指標は陽には現われない．
しかし，個々の格要素の有効性の高い順に格フレーム木が構成されるのでウエイトによる評価は必要なくなる．
そのため2章の問題3「ウエイト決定の恣意性」の問題も解決されると言える．
また，この手法を用いると格要素が必須格か自由格かという判定は，訳し分けの観点からプログラムで自動的に決定されることになる．
例えば，図2には主格がなく不自然な印象を受ける．
しかし，これは訳し分けのための有効性を主格が持たなかった結果である．
従来，自動学習は手間の軽減を目的として利用されることが多かった．
しかし，有用な情報を目的に合わせて適切に配列する能力も大きな特徴である．
本提案はこの特徴を生かしており，動詞の訳し分けを行うのに必要な情報を単に自動的に獲得するだけでなく，それらを，動詞の訳語を最適に選択できる決定木の形で構成する．
またこの決定木の表現は実用上の利便性が高いものである．
統計的な帰納学習アルゴリズムを利用する上で重要なのは入力，すなわち，原始格フレーム表である．
この表は，訳し分けの対象とするドメインの事例の頻度分布を反映して作成しなければならない．
なぜなら格フレーム木は，原始格フレーム表の事例の頻度を元に作成されるため，対象ドメインと原始格フレーム表で事例の分布が違った場合には，対象ドメインの動詞を有効に訳し分ける条件が学習されないからである．
さらに，原始格フレーム表に記述する格要素と制約を決める必要があるが，これには試行錯誤を要する．
以上のことより，対象ドメインの英日対訳コーパスを柔軟に変換して原始格フレーム表を作成する手法が有効と考えられる．
しかし，著者らの対象ドメインである放送ニュース分野の英日対訳コーパスの入手は難しい．
このため，著者らは英日の対訳コーパスを作成し，これを変換して原始格フレーム表を作成する方針を採用した．
この結果，格フレーム木獲得の筋道は図3に示すものとなった．
従来，線形格フレームは直接的に人手で記述していた．
しかし，提案手法では，対訳コーパスから人手を介しながら段階的に格フレーム木を獲得することになる．
この手法で人間が介入する部分は，対訳コーパスの作成，および原始格フレーム表へ変換する部分だけである．
対訳コーパス作成の部分では，英文への統語ラベルの付与，日本語への翻訳等を行う．
また，原始格フレーム表への変換では，単に利用する格要素や制約を決定するだけである．
このような人手の作業は，線形格フレームをいきなり記述するより安定に行うことができる．
そのため，格フレーム木に入る人間の恣意性を最小限に押さえることができると期待できる．
先に述べたように，本手法では原始格フレーム表の事例の頻度分布が重要となる．
このため英和辞典の例文などを利用することには問題がある．
なぜなら高頻度で出現する訳語もそうでない訳語も例文の数にあまり差がないからである．
そこで著者らの場合は，AP (Associated Press)電ニュースをコーパスのソースとして採用することにした．
そしてこの英文から以下に示す条件を満たすものを抽出して，日本語訳を付与することで対訳コーパスを作成した．
訳語の数が多く機械翻訳を行う場合に問題となる以下の動詞を対象とした．
``come'', ``get'', ``give'', ``go'', ``make'', ``run'',``take''
上記の動詞を訳し分けるために必要な対訳コーパスの量を直接見積るのは困難である．
そこで，これらの動詞が出現する頻度調査を6ヶ月分のAP電について行った．
この結果，各月での動詞の出現頻度はほとんど一定していることが明らかになった．
もちろんこれは訳語の頻度が一定であることを保証するものではないが，一月単位が最低必要な量であろうと考えた．
そこで1990年1月，1991年1月の2ヶ月を英文抽出の母集団とした．
作成は以下の手順で行った．
図4に作成したコーパスの一部を示す．
英文の抽出
2ヶ月分のAP電から上記の7動詞を含む文を自動的に抽出した．
このとき文の長さは15語以下とした．
これは，文の長さをあまり長くすると解析が大変になること，類似の文型の個数が減るため有効な原始格フレーム表が作成できないことによる．
動詞の支配範囲の認定
対象動詞が直接支配している範囲を人手で認定した．
図4のENG行がこれを示す．
英語の格要素の認定
英語の文章を人手で解析して必要な情報を付与した．
精度の高い構文解析器が利用できればこの作業はかなり自動化ができる．
しかし，現状ではかなりの人手の介入が必要であるため，著者らは人手による解析を行うことにした．
また，人手による精密な構文解析は手間が大きいので，原始格フレーム表を作成するのに最低限必要な解析を行うことにした．
この解析で認定，付与した情報は，
文のタイプ，
主格，目的格などの統語単位，
統語単位中の主辞単語と前置詞，副詞小詞などの機能語である．
(I)，(II)には，それぞれラベルを設定した．
文のタイプは11種類設定した．
そして英文中の動詞に文のタイプを示すラベルを付与した．
統語単位は24種類設定した．
そして英文中の各統語単位に該当する範囲を\bras{ }で認定し，統語単位を示すラベルを付与した．
また，各統語単位の主辞は{[ ]}で，機能語は\ppで認定した．
ここで作成したデータを英語のケースデータと呼ぶ．
図4のCASE行がこれにあたる．
ラベルの詳細を付録Bの表6, 7に記す．
日本語翻訳の付与
英語のケースデータの主辞と機能語に対して日本語の訳語を人手で付与した．
図4のJAP行がこれにあたる．
また，JAP行でも主辞と機能語の指定がしてある．
対象の英文一つだけで翻訳できない場合は，前後の文脈を翻訳者に提供した．
対訳コーパスを作成するのに要した労力は6人月であった．
表2に作成したコーパスのデータを示す．
この表の2行目に示した数字は，翻訳を行う場合に前後の文脈が必要であった比率を示す．
すなわち，人間の翻訳者が一つの文だけを見て翻訳ができなかった割合を示している．
このような文章の多くは``it''などの代名詞を含んでおり，翻訳のためにはそれらの指示内容が必要であった．
