================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.65938] 選好依存文法(PDG: Preference Dependency Grammar)は，自然言語の形態素，構文，意味解析を統合的に行う枠組みであり，各レベルの種々の曖昧性を統合的に効率良く保持し，各レベルの知識により優先度を設定し，全体解釈として最適な解を計算する．
[i:1, score:0.86753] 本稿では，PDGの基本モデルである多レベル圧縮共有データ結合モデルとPDGの概要について述べるとともに，選好依存文法で用いられるヘッド付き統語森，依存森といった言語解釈を統合保持するデータ構造とその構築手法について説明する．
[i:2, score:0.66806] また，文の句構造を圧縮共有する統語森と依存構造を圧縮共有する依存森との対応関係において完全性と健全性が成立することを示す．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:20, score:0.41700] このように，文法フレームワークの研究は，生成・制約知識を対象とした研究から統計ベースの選好知識の扱いへと進展し，統計的手法は語系列，句構造，依存構造へと適用範囲を拡大し融合され，生成・制約・選好知識全体の統合のベースが整ってきている．
[i:27, score:0.51557] PDGは，複数の解釈記述空間に基づくアプローチを取っており，後に述べるように複数の解釈記述空間で対応付けられた圧縮共有データ構造をベースに多レベルの知識の融合を行っている．
[i:28, score:0.91293] 本稿では，PDGのモデル・概要について述べた後，PDGで採用している句構造と依存構造という２種類の中心的共有データ構造であるヘッド付き統語森(HPF:Headed Parse Forest)，依存森(DF:Dependency Forest)について構築法を示し，それらに完全性と健全性が成立することを示す．

================================================================
[section type  : proposed_method]
[section title : 選好依存文法(PDG)の概要と圧縮共有データ構造]
================================================================
-----------------------------------------------------
  [subsection title : 多レベル圧縮共有データ結合モデル]
-----------------------------------------------------
  [i:lead, score:0.35486] PDGは，自然言語の曖昧性・多義性の問題に焦点をあてて設計された形態素・構文・意味レベルの文解析を行うフレームワークである．
.....
  [i:30, score:0.35486] PDGは，自然言語の曖昧性・多義性の問題に焦点をあてて設計された形態素・構文・意味レベルの文解析を行うフレームワークである．
  [i:47, score:0.36741] 句構造，依存構造等の複数のデータ構造(言語知識の記述ベース)を利用して，形態素，構文，意味の多レベルの知識をモジュール独立性良く扱う．
  [i:50, score:0.58187] 文解釈となる依存木を圧縮共有した選好スコア付き圧縮共有データ構造から制約と選好を組み合わせた最適解探索手法により最適解を探索する．
-----------------------------------------------------
  [subsection title : 選好依存文法(PDG)のモデル]
-----------------------------------------------------
  [i:lead, score:0.25476] PDGの全体モデルを図[REF_fig:PDGAnalysisModel]に示す．
.....
  [i:58, score:0.83693] 語品詞トレリス，ヘッド付き統語森，機能依存森，意味依存森の４つの圧縮共有データ構造により，それぞれ，語品詞系列，構文木(句構造)，機能依存木，意味依存木の解釈の集合を保持する．
  [i:73, score:0.82834] PDGでは依存構造に対して全可能性を有する依存森を生成するが，これは下位レベルの統語森中の解釈のみから派生する依存木であり，句構造レベルの知識の活用による効率化が行える．
  [i:76, score:0.75215] 以下では，PDGの共有データ構造であるヘッド付き統語森，依存森について説明してゆく．
-----------------------------------------------------
  [subsection title : 圧縮共有データ構造の要件]
-----------------------------------------------------
  [i:lead, score:0.24670] 多レベル圧縮共有データ結合モデルにおける圧縮共有データ構造には次の性質が必要である．
.....
  [i:77, score:0.24670] 多レベル圧縮共有データ結合モデルにおける圧縮共有データ構造には次の性質が必要である．
  [i:84, score:0.34573] (b)は，多レベルの知識を扱う場合に，各レベルの曖昧性を全て過不足なく表現できること，すなわち共有構造そのものに由来する解釈の枝刈り(あるべき解釈の欠落)や解釈の過生成(あるべきでない解釈の生成)が起こらないという性質である．
  [i:86, score:0.25232] (c)は，それぞれのレベルでの知識の記述が行いやすいこと,選好知識と制約知識が適切に扱えることであり[CITE]，(d)は各レベルの解釈の対応関係を取ることができるという性質である．
-----------------------------------------------------
  [subsection title : 句構造と依存構造の併用]
-----------------------------------------------------
  [i:lead, score:0.03932] 文解析を精度良く行なうためには様々な知識を利用する必要がある．
.....
  [i:90, score:0.82457] それぞれの表現レベルでの制約知識・選好知識の記述を自然な形で可能とするため，PDGでは，句構造形式の共有データ構造(ヘッド付き統語森)と依存構造形式の共有データ構造(依存森)をそれぞれ関連付けて組み込んでいる．
  [i:91, score:0.28896] これは句構造(C-構造)と機能構造(F-構造)という２つの構文レベルの表現を持つLFG[CITE]において，SUBJECT,OBJECTなど構文的機能に関する制約がF-構造で記述され，文法の記述性を高めているのと類似している．
  [i:92, score:0.33472] なお，Early法，Chart法といった文脈自由文法の解析アルゴリズムを用いて依存文法を直接解析して依存構造を求める手法も提案されている[CITE]が，句構造を作らない点で本手法とは異なっている．
-----------------------------------------------------
  [subsection title : 圧縮共有データ構造の従来技術と問題点]
-----------------------------------------------------
  [i:lead, score:0.38702] 語品詞トレリスは，全ての語品詞系列を圧縮共有するデータ構造であり，PDGでもそのまま利用する．
.....
  [i:95, score:0.81703] 文脈自由文法で入力文を解析し文の可能な解釈全体を得る手法は広く知られており，例えば，富田により，グラフスタックを用いた構文解析手法と共に文の句構造解釈(構文木)全体を効率的に保持する圧縮共有統語森(Packed Shared Parse Forest)が提案されている[CITE]．
  [i:103, score:0.76887] 構文グラフは，語品詞に対応するノードとノード間の依存関係を表現する名前付きアークで構成される有向グラフであり，排他マトリックス(EM:Exclusion Matrix)と呼ばれるデータと組になって，入力文に含まれる依存構造の集合（文の解釈の集合）を表現する．
  [i:110, score:0.73575] 排他マトリックスの[MATH]行[MATH]列が1である場合には，[MATH]番目と[MATH]番目のアークは，いかなる解釈(依存木)においても共起しない．

================================================================
[section type  : proposed_method]
[section title : PDGにおける共有データ構造]
================================================================
[i:121, score:0.78393] PDGでは，前節で述べた従来手法の問題を解決するデータ保持方式として，文脈自由文法の構文構造の保存方式としてヘッド付き統語森を採用し，依存構造の保存方式として依存森を提案する．
-----------------------------------------------------
  [subsection title : ヘッド付き統語森]
-----------------------------------------------------
  [i:lead, score:0.85279] ヘッド付き統語森は統語森の一種であり，適用された書き換え規則に対応する弧(edge)から構成され，次の条件を満足する構文木を圧縮共有する．
.....
  [i:122, score:0.85279] ヘッド付き統語森は統語森の一種であり，適用された書き換え規則に対応する弧(edge)から構成され，次の条件を満足する構文木を圧縮共有する．
  [i:126, score:0.54530] (a),(b)の２つがヘッド無し統語森の共有条件である[CITE]．
  [i:128, score:0.80303] PDGにおける弧とヘッド付き統語森の具体例は構築アルゴリズムと共に[REF_sec:construction]章で述べる．
-----------------------------------------------------
  [subsection title : 依存森]
-----------------------------------------------------
  [i:lead, score:0.78620] 依存森は，依存グラフ(DG:Dependency Graph)と共起マトリックス(CM:Co-occurrence Matrix）より成る．
.....
  [i:141, score:0.83847] 共起マトリックスCM([MATH],[MATH])が○の場合に限り，アーク[MATH]と[MATH]は１つの依存木（解釈）において共起可能であるという制約を表現する．
  [i:154, score:0.83778] 複数の解釈に対するアークの共有の度合いによって，同じ依存木の集合を表すサイズの異なった複数の依存森を構成可能である．
  [i:155, score:0.80854] 詳細は後述するが，PDGでは，初期依存森(Initial Dependency Forest)と，それから変換して得られる縮退依存森(Reduced Dependency Forest)の2種を扱う．

================================================================
[section type  : proposed_method]
[section title : 統語森と依存森の生成]
================================================================
[i:161, score:0.06023] 本稿では，形態素解析処理については省略し，構文解析以降について述べる．
-----------------------------------------------------
  [subsection title : 文法規則]
-----------------------------------------------------
  [i:lead, score:0.48999] PDGにおいて文法規則は，可能な句構造の定義と，句構造から依存構造へのマッピングとを規定する拡張文脈自由文法(extended CFG)で記述される．
.....
  [i:168, score:0.70721] 構造構築部は，``arc(アーク名,構造変数1,構造変数2)''という形式のアークの集合であり，構造変数には，書き換え規則部の構成要素の句ヘッドとなる語品詞が束縛される．
  [i:169, score:0.71256] 例は，[MATH]をヘッドとし，objアークで[MATH]が，vppアークで[MATH]が接続する依存構造を示している．
  [i:177, score:0.76409] ルート規則は，統語森のルートとなる弧と依存森のトップノードをそれぞれ１つにするために導入している．
-----------------------------------------------------
  [subsection title : 構文解析]
-----------------------------------------------------
  [i:lead, score:0.69394] PDGの構文解析は，本稿では，Bottom-up Chart Parsingのアルゴリズムをベースに，依存構造の生成が可能となるよう，弧の構成やアルゴリズムを拡張することにより実現している．
.....
  [i:185, score:0.73837] PDGの構文解析では，文法規則の部分依存構造に対する処理と複数の弧の圧縮共有処理の２点で拡張を行っている．
  [i:209, score:0.80887] 弧*E3は，``an arrow''をnpとして解釈し，部分依存構造として{arc(det-14,[an]-det-3,[arrow]-n-4)}を持つ不活性弧(RCSが[])である．
  [i:226, score:0.75559] 図[REF_fig:ArcStructure]の弧*E3では，弧#160(弧IDが160の弧)は，``np [MATH] det,n''の規則から生成された弧であり，既存構成素列[153,156]は，弧#153が文法規則中の構成素detに，弧#156が構成素nに対応することを示している．
-----------------------------------------------------
  [subsection title : 統語森・初期依存森の生成]
-----------------------------------------------------
  [i:lead, score:0.42336] 構文解析後のChartは，活性弧，不活性弧より成る．
.....
  [i:241, score:0.80610] それぞれの関数の実行後は,その引数に対する統語森HPF，依存グラフDG，共起マトリックスCMの要素や値が追加設定されている．
  [i:242, score:0.78432] try_edge(E),try_FCSL(FCSL),try_CS(CS)が返すアーク集合中のアークをそれぞれ弧E,構成素列リストFCSL,構成素列CSが支配するアークと呼ぶ．
  [i:267, score:0.83589] また，try_CS([103,119,165])の処理において，CM処理(3)により(CM3)すなわち弧#103,#119,#165が支配するアーク間の共起関係のCMへのセットが行われる．
-----------------------------------------------------
  [subsection title : 縮退依存森の生成]
-----------------------------------------------------
  [i:lead, score:0.88367] 初期依存森には，図[REF_fig:IDF]におけるobj4とobj25のようにアークID以外は同一のアークが存在することがあり，これを同値アークと呼ぶ．
.....
  [i:297, score:0.95990] 「同値アークX,Yのマージ前後の依存森をそれぞれDF,DF'とした時，縮退条件は，``DF中の汎化整依存木集合[MATH]DF'中の汎化整依存木集合''である．
  [i:328, score:0.95543] [ID付き依存木の増加条件]  DG,CMにおいて同値アークX,Yに対するアークペア(A,B)[MATH]diff(X,Y)とした時，YをXにマージして得られるDG',CM'において,{X,A,B}を含むID付き整依存木NDTが存在する時，またこの時に限り，ID付き依存木は増加する．
  [i:358, score:0.96724] \mygapskip「同値アークX,Yのマージ前後の依存森DF,DF'に対して，新規に増加するDF'中のID付き依存木DT[MATH]に対して，?DT[MATH]=?DTなるID付き整依存木DTがDFに存在する」\mygapskip
-----------------------------------------------------
  [subsection title : 統語森と依存森の対応関係]
-----------------------------------------------------
  [i:lead, score:0.53673] 依存森は，統語森との間で完全性と健全性が成立する．
.....
  [i:410, score:0.53673] 依存森は，統語森との間で完全性と健全性が成立する．
  [i:412, score:0.75112] 縮退依存森は初期依存森と同じ(汎化)依存木の集合を保持しているため，統語森と(縮退)依存森に完全性と健全性が成立すると言える．
  [i:413, score:0.53125] 統語森中の構文木（句構造）と依存森中の依存木（依存構造）の対応関係は単純な1対1対応ではなく，1つの構文木が複数の依存木に対応したり，複数の構文木が１つの依存木に対応したりする．

================================================================
[section type  : experiment_result]
[section title : 例文解析評価実験]
================================================================
[i:416, score:0.87127] PDGは依存森により整依存木集合を圧縮共有して表現することにより，各種の曖昧性により生じる組合せ爆発を抑制することを狙いの１つとしており，本稿では，PDGの構文解析から圧縮依存構造の構築までの方式を中心に述べている．
[i:417, score:0.81974] 本章では，自然言語の各種の曖昧性を記述したPDG文法を用いて，典型的な曖昧性例文の構文解析・依存森生成実験を行い，各種の曖昧性がどの様に処理されるかについて述べると共に，統語森と依存森との対応関係やNon-projectiveな依存木の生成についても実例も用いながら述べる．
[i:418, score:0.74065] なお，アルゴリズムの効率も実用上重要なファクタであるが，本稿で示した構文解析アルゴリズム，統語森・依存森構成アルゴリズム，依存森縮退アルゴリズムは，PDGの解析方式の検証を行うことを主眼に実装をしており，実システムとしての実装では種々の改善が考えられる．
-----------------------------------------------------
  [subsection title : 例文解析用文法]
-----------------------------------------------------
  [i:lead, score:0.22843] 図[REF_fig:GrammarForExamples]は，例文解析に使用した文法規則であり，代表的な各種曖昧性構文を含んでいる．
.....
  [i:422, score:0.51953] 文法中の品詞det,n,be,ving,v,adv,pre,relcは，それぞれ，冠詞，名詞，BE動詞，動詞の現在分詞，動詞，副詞，前置詞，関係節を表している．
  [i:433, score:0.42830] R8とR9は動詞と名詞の修飾関係としては類似しているが，どちらが主辞(句ヘッド)であるかという依存構造の観点からは異なった構造である．
  [i:435, score:0.46351] また，(R19)は，non-projectiveな依存木，すなわち，交差する依存関係を含む依存木を生成する規則である．
-----------------------------------------------------
  [subsection title : 典型的曖昧性例文の解析]
-----------------------------------------------------
  [i:lead, score:0.08028] 多品詞に起因する曖昧性の解析例については，既に例題として述べている．
.....
  [i:455, score:0.93288] \myhalfskip最初の弧は，被覆範囲が1〜4(``saw a girl''に対応)で，句ヘッドが[saw]-v-1，圧縮弧v(ID:109)とnp(ID:126)を構成素としてもち，アークIDが5で関係名がobjのアークを有する．
  [i:485, score:0.97433] {arc(prg-2,[is]-be-2,[watching]-ving-3),arc(obj-7,[birds]-n-4,[watching]-ving-3)}[MATH] \myhalfskipこれら同値アークは全て1つのアークにマージされ，結果として得られる縮退依存森では同値アークは存在していない．
  [i:489, score:0.96266] 同値アークで違う規則からの期待(R9) np/V→ving/V,np/NP : [arc(obj,NP,V)] (R10) np/V→ving/V,np/NP,pp/PP : [arc(obj,NP,V),arc(vpp,PP,V)] --> objアークdgarc(obj-5,[birds]-n-4,[watching]-ving-3)×dgarc(obj-6,[birds]-n-4,[watching]-ving-3)×dgarc(obj-7,[birds]-n-4,[watching]-ving-3)×dgarc(obj-27,[birds]-n-4,[watching]-ving-3)×dgarc(obj-29,[birds]-n-4,[watching]-ving-3)
-----------------------------------------------------
  [subsection title : 構文木と依存木の１対多/多対１対応関係]
-----------------------------------------------------
  [i:lead, score:0.47522] 統語森中の構文木と依存森中の依存木の対応関係は保証されているが，1つの構文木が複数の依存木に対応したり，複数の構文木が１つの依存木に対応したりする．
.....
  [i:514, score:0.85015] # Parse Tree [1] s[0,7,is/be]:207 +--np[0,2,hobby/n]:108 | +--det[0,1,my/det]:101 | +--n[1,2,hobby/n]:104 +--vp[2,7,is/be]:182 +--be[2,3,is/be]:117 +--np[3,7,birds/n]:179 +--np[3,5,birds/n]:132 | +----ving[3,4,watching/ving]:121 | +----n[4,5,birds/n]:128 +--pp[5,7,with/pre]:176 +----pre[5,6,with/pre]:165 +----np[6,7,telescope/n]:170 +----n[6,7,telescope/n]:168
  [i:527, score:0.88326] ====== Number of various trees ======== [Parse Forest] (a) Parse Forest Size : 19 (b) Number of collection of parse trees : 3 (c) Number of set of parse trees : 3 [Dependency Forest] (I-1) Initial DF size : 12 (I-2) Initial DF ID-tree collection number : 3 (I-3) Initial DF ID-tree set number : 3 (I-4) Initial DF Generalized-tree number : 2 (R-1) Reduced DF size : 9 (R-2) Reduced DF ID-tree collection number : 2 (R-3) Reduced DF ID-tree set number : 2 (R-4) Reduced DF Generalized-tree number : 2
  [i:546, score:0.87570] ====== Number of various trees ======== [Parse Forest] (a) Number of collection of parse trees : 2 (b) Number of set of parse trees : 2 [Dependency Forest] (I-1) Initial DF size : 7 (I-2) Initial DF ID-tree collection number : 2 (I-3) Initial DF ID-tree set number : 2 (I-4) Initial DF Generalized-tree number : 1 (R-1) Reduced DF size : 5 (R-2) Reduced DF ID-tree collection number : 1 (R-3) Reduced DF ID-tree set number : 1 (R-4) Reduced DF Generalized-tree number : 1 ------
-----------------------------------------------------
  [subsection title : Non-projective依存木の生成]
-----------------------------------------------------
  [i:lead, score:0.24428] 非交差制約(Projectivity constraint)は，多くの依存構造解析システムにより受け入れられている制約であり，これらシステムはProjective parserと呼ばれる．
.....
  [i:570, score:0.75514] PDGでは，[REF_sec:bunpoukisoku]節で述べたように，構成素列(規則ボディ)とアーク集合(部分依存構造)のマッピングが拡張CFG規則で定義される．
  [i:574, score:0.63815] 図[REF_fig:Non-projectiveDT]に``She saw the cat curiously which was Percian''に対して例文文法が生成する依存森を示す．
  [i:575, score:0.71752] 依存森には，non-projectiveな整依存木が１つ存在している．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:576, score:0.75937] 本稿では，PDGの基本モデルである多レベル圧縮共有データ結合モデルとPDGの概要について述べるとともに，特にPDGにおける圧縮共有データ構造である統語森と依存森について述べた．
[i:578, score:0.70653] 圧縮共有された句構造解釈（統語森）を圧縮共有された依存構造（依存森）に対応関係を持って変換でき，それぞれのレベルでの言語知識の適応が可能である点が最大の特徴である．
[i:579, score:0.78625] また，自然言語の曖昧性例文に対してPDGの文法と試作システムを用いて解析実験を行い，各種曖昧性が依存森により圧縮共有表現できることを示し，さらに，PDGではNon-projectiveな構造を必要に応じて規則導入できることを示した．

