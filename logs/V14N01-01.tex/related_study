関連研究
ここでは，主に時間計算量に重点を置いて関連研究を述べる．
日本語はもちろん英語でも依存構造解析 (dependency analysis) は研究されてい
る \cite{Lafferty1992,Collins1996,Eisner1996}．
これらの論文の解析アルゴリズムでは，$O(n^{3})$ の時間がかかる．
ここで $n$ は単語数である\footnote{
Nivre \shortcite{Nivre2003} は，projective dependency parsing の決定的
なアルゴリズムを提案している．
このアルゴリズムの時間計算量の上限は $O(n)$ である．
このアルゴリズムをスウェーデン語のテキストで評価している．}
    $^{,}$\footnote{
Ratnaparkhi は実際の処理時間が $O(n)$ となる句構造を返す英語のパーザにつ
いて述べている \cite{Ratnaparkhi1997}．
これは依存構造解析について述べたものではない．
このアルゴリズムでは，解析途中の各ノードに対して，
いくつかの手続きを行ない，その中で確率値の高い $K$ 個の導出 
(derivation) を残して解析を進める (幅優先探索)．
そのため，時間計算量の上限は $O(n^2)$ と考えられる．
}．


日本語の係り受け解析では，文中の二つの文節の係り受けの確率を使うことが
非常に多かった．
Haruno ら \shortcite{Haruno1998} は，決定木を用いて係り受けの確率を推
定した．
Fujio と Matsumoto \shortcite{Fujio1998} は Collins のモデル\cite{Collins1996} の
修正版を日本語の係り受け解析に適用した．
Haruno らと，Fujio と Matsumoto の両グループとも CYK 法を用
いている．これは $O(n^{3})$ の時間がかかる．ここで $n$ は文の長さ，つまり文
節数を表している．
Sekine ら \shortcite{Sekine2000Backward} は最大エントロピー法 (Maximum
Entropy Modeling; ME) を係り受けの確率の推定に使い，後方ビームサーチ 
(文末から文頭に向かうビームサーチ) で最
もよい解析結果を見つける．
このビームサーチのアルゴリズムは $O(n^{2})$ の時間がかかる．
Kudo と Matsumoto \shortcite{Kudo2000Japanese} らも同じ後方ビームサーチ
を ME ではなくサポートベクタマシン (SVMs) とともに用いている\footnote{
彼らは，係り先候補間の係りやすさの相対的な大小関係をモデル化する手法
も報告している \cite{Kudo2005}．係り受けのモデルは異なるが，
同じく後方ビームサーチを用いている．
}．

二つの文節間の係り受けの確率を使わない統計的手法も少ないながらある．
一つは Sekine の決定的有限状態変換器を用いる手法\cite{Sekine2000Japanese} である．
Sekine は，\TermHead{}の場所の 
97\% は文中の五つの候補でカバーされると報告している．
似た現象は Maruyama と Ogino \cite{Maruyama1992} も観測している．
これらの調査にもとづき，Sekine は，決定
的有限状態変換器を用いる効率のよい解析アルゴリズムを提案している．
このアルゴリズムは，考慮する係り先の文節数を制限することでしらみつぶし
に探索することを避け，$O(n)$ の時間計算量となっている．
しかしながら，彼のパーザは京大コーパスに対して 77.97\% の係り受け正解
率 (定義は第~\ref{subsec:results} 節で述べる) しか得られていない．
これは，89\% を超える現在の最高精度よりもかなり低い．

2文節間の係り受けの確率を用いない別の興味深い手法は，Kudo と Matsumoto \shortcite{Kudo2002} による 
Cascaded Chunking Model である．このモデル
は \cite{Abney1991,Ratnaparkhi1997} のアイデアにもとづく．
彼らはこのモデルと SVMs を用いて，89.29\% を得ている．
彼らの手法では，解析時に評価される係り関係の数は CYK 法や後方ビームサーチ
よりも相当少ないが，それでも時間計算量の上限は $O(n^2)$ である．

以上見たように，高い精度を保ちつつ線形時間の処理を保証して，
どのように日本語係り受け解析を行なうかは，
まだ解決されていない問題である．
以下に記述するアルゴリズムがこの問題に対する答えとなろう．


