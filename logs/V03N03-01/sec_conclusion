この稿では，文法規則の体系的な記述方法を提示した．
まず，形態素と表層形態の概念区分をした上で，日本語の持つ階層構造に注目した．
形態素の述部階層位置との関係から，表層での形態の現れ方を構文構造に結び付ける形態構文論的な文法作成のアプローチを採用し，文法規則の開発手続きを確立した．
融通性を持ち容易に修正できることを例証するため，試作した文法規則を新聞の論説文の分析に適用し，分析の出来なかった言語現象を検討した．
そして，その言語現象を取り上げて，これを新たな分析性能を満たす要求仕様と見なし，同じ手続きを用いて文法規則を拡張した．
この結果，拡張した文法規則の分析性能が漸増していることを確認した．
これまでにも何らかの設計の指針を使って文法規則の開発は行われてきた．
しかし，それは，基本的な文法の枠組みがあるとしても，実際に文法規則を書くものの経験に基づく勘であったり，あるいは，言語現象ごとに規則を演繹する場合も，この言語現象についてはこのような文法規則の書き方，ある言語現象についてはこの規則に類似させる，というような体系性に欠けるものであった．
こうした経験的な方法や，言語現象に依存する方法は，手順が明確でなくとも文法規則を記述してゆくことができるという意味で役に立つが，新しい言語現象に対応する文法を記述してゆく一般的な方法とはいい難い．
文法規則を記述する際に，経験的な方法や言語現象に依存する方法を使って，適用分野の変化に応じてその都度文法規則を開発してゆくことは，コスト的にも，加えて文法規則の分析能力の不安定さの点からも避けることが望ましい．
言葉は，分析対象が認識的なものであるために分析のために客観的な方法論が適用されにくく，アプリケーションの多様化に対応する客観的な文法規則の記述の手続きを求めることは困難な課題である．
本稿では一アプローチとして(1)文法規則の開発手続きを手順化することによって展望を見いだそうとした．
さらに，(2)その手順に従った文法規則の作成の試み，(3)計算機上への文法規則の実装による動作確認と文法規則の適用実験によって有効であることを確認した．
これまで言語データは大学や企業内において収集が進められ，蓄積も進んでいる．
国家的なプロジェクトとしてデータの蓄積を進める試みもある[CITE]．
しかしながら，そうした資料の資源保全についての取り組みは具体例をみない．
ニーズの多様化に伴い，他の分野での言語データベースの有効活用を進めるためには，言語データベースを再利用する技術の開発を推進する必要がある．
最後に，本稿で試作した中規模の文法規則は，そのすべてが公開されている．
個々の文法規則はDCG[CITE]記述のため，Prologの実行メカニズムをパージングの処理過程とすることができ，機械の種類に依存することがなく，Prologの動作するいかなる計算機においても利用が可能である．
DCGについてもLangLAB [CITE]ならびにSAX [CITE]といった無償公開ソフトウェアを利用することができる．
そのためにパーサーを作る必要はない．
この稿では，文法規則の体系的な記述方法を提示した．
まず，形態素と表層形態の概念区分をした上で，日本語の持つ階層構造に注目した．
形態素の述部階層位置との関係から，表層での形態の現れ方を構文構造に結び付ける形態構文論的な文法作成のアプローチを採用し，文法規則の開発手続きを確立した．
融通性を持ち容易に修正できることを例証するため，試作した文法規則を新聞の論説文の分析に適用し，分析の出来なかった言語現象を検討した．
そして，その言語現象を取り上げて，これを新たな分析性能を満たす要求仕様と見なし，同じ手続きを用いて文法規則を拡張した．
この結果，拡張した文法規則の分析性能が漸増していることを確認した．
これまでにも何らかの設計の指針を使って文法規則の開発は行われてきた．
しかし，それは，基本的な文法の枠組みがあるとしても，実際に文法規則を書くものの経験に基づく勘であったり，あるいは，言語現象ごとに規則を演繹する場合も，この言語現象についてはこのような文法規則の書き方，ある言語現象についてはこの規則に類似させる，というような体系性に欠けるものであった．
こうした経験的な方法や，言語現象に依存する方法は，手順が明確でなくとも文法規則を記述してゆくことができるという意味で役に立つが，新しい言語現象に対応する文法を記述してゆく一般的な方法とはいい難い．
文法規則を記述する際に，経験的な方法や言語現象に依存する方法を使って，適用分野の変化に応じてその都度文法規則を開発してゆくことは，コスト的にも，加えて文法規則の分析能力の不安定さの点からも避けることが望ましい．
言葉は，分析対象が認識的なものであるために分析のために客観的な方法論が適用されにくく，アプリケーションの多様化に対応する客観的な文法規則の記述の手続きを求めることは困難な課題である．
本稿では一アプローチとして(1)文法規則の開発手続きを手順化することによって展望を見いだそうとした．
さらに，(2)その手順に従った文法規則の作成の試み，(3)計算機上への文法規則の実装による動作確認と文法規則の適用実験によって有効であることを確認した．
これまで言語データは大学や企業内において収集が進められ，蓄積も進んでいる．
国家的なプロジェクトとしてデータの蓄積を進める試みもある[CITE]．
しかしながら，そうした資料の資源保全についての取り組みは具体例をみない．
ニーズの多様化に伴い，他の分野での言語データベースの有効活用を進めるためには，言語データベースを再利用する技術の開発を推進する必要がある．
最後に，本稿で試作した中規模の文法規則は，そのすべてが公開されている．
個々の文法規則はDCG[CITE]記述のため，Prologの実行メカニズムをパージングの処理過程とすることができ，機械の種類に依存することがなく，Prologの動作するいかなる計算機においても利用が可能である．
DCGについてもLangLAB [CITE]ならびにSAX [CITE]といった無償公開ソフトウェアを利用することができる．
そのためにパーサーを作る必要はない．
