\resp{コミュニケーションの手段として，メールやWebの掲示板を日常的に利用するシーンは非常に多い．
}メール\resp{やWebの掲示板}によるコミュニケーションの特徴として，非言語情報が欠落しているため，会話時に相手から感じる対人圧力が低くなり，気軽に考えていることを書き出すことができるメリットがあげられる[CITE]．
しかし一方で，\resp{メッセージ}の受け取り手は\resp{テキスト}の内容のみから相手の考えを読み取らなければならないため，ちょっとした言葉の誤解が，感情的な問題へと発展していくことがある[CITE]．
また，書き方によっては書き手の感情が伝わりにくいことがあったり[CITE]，書き手はそれほど怒っていないにもかかわらず，非常に怒っているようにとらえられたりと，過剰に感情が伝わってしまうこともある[CITE]．
このように，\resp{書き手が思っている程，伝えたいことが相手に伝わらない傾向があるため{[CITE]}，メールやWebの掲示板では相手に誤解を与えやすいというデメリットを持っているといえる．
}そこで我々は上記の問題点を解決するため，\respeqn{テキスト}から読み手が想起する書き手の感情を推定し，推定結果を書き手に示すことで\resp{テキスト}を書き手に修正させ，相手に誤解を与えないようにするシステムの開発を目指した研究を行っている．
このようなシステムを実現するためには，\resp{読み手が想起する書き手の感情をテキスト中の発話文}から推定する手法が必要となる．
\respeqn{発話文}からの感情推定手法として，目良らは複数の事象の格フレームタイプのうち，どれに入力文が当てはまるかを判定し，該当した格フレームタイプに対応する情緒計算式を用いて発話者の感情が快か不快かを判定する手法を提案している[CITE]．
この手法では，あらかじめ用意した情緒計算式のほかに，ユーザの嗜好情報を基にした単語に対する好感度データを用いる．
単語に限らず，文の冒頭に現れる副詞や文末表現によって話し手の意図や心的態度を表すモダリティ[CITE]も，感情推定に有用であることが考えられる．
文末表現から情緒を推定する可能性についての検討を徳久らが行っており[CITE]，文末表現と情緒の間に若干の相関がみられたと報告している．
単語や文末表現に感情の属性を振ったとしても，単語や文末表現の組み合わせによって感情が変化すると考えられる．
そのため，単語や文末表現を用いて感情推定を行うためには，これらの組み合わせに対応して感情を出力するルールの作成が必要になると考えられる．
ルールの例として，例えば``嬉しい''という語に``喜び''の属性が割り振られていたとする．
ここで``嬉しいことなんてひとつもない''という文の感情を推定する場合，推定結果としては``喜び''ではなく``悲しみ''や``怒り''といった感情が出力されるべきである．
``喜び''の単語が含まれているからといって，単純に``喜び''を出力してよいわけではない．
ここで``悲しみ''や``怒り''を出力するためのルールを作成しておくことで，感情推定が可能になる．
しかし，このようなルールの作成は単語に感情の属性を割り振る作業以上にコストがかかると考えられる．
この問題を解決する方法として，三品らは用例に基づく感情推定手法を提案している[CITE]．
この手法では，発話者が表現している感情ごとに\respeqn{発話文}を分類した感情コーパスを用い，入力文と最も類似度が高い発話文が含まれる感情コーパスの感情を推定結果として得る．
類似度計算には機械翻訳システムの性能のスコアを求めるBLEU [CITE]を用いている．
この手法を実装するためには発話文を収集して感情ごとに分類した感情コーパスを構築すればよく，先に述べた例のようなルールを作成する必要がない．
しかし，この手法は感情推定成功率が決して高くないため，類似度の計算式を改良する必要がある．
この方法では入力文とコーパス中の各文の類似度を計算し，その最大値の文が持つ感情を出力している．
そのため，次のような特異な文によって感情推定に失敗することがある．
感情が異なっていても，たまたま表現や文型が類似している文
コーパスを構築する際に誤って分類された文
感情が異なるが類似している文の例として，``嫌悪''の文``嫌いなんです''と``喜び''の文``好みなんです''があげられる．
ともに\resp{名詞の後に``なんです''}が続く形となっており，文型が類似している．
ここで入力文として``好きなんです''が与えられたとき，入力文の``なんです''は二つの文に存在しており，形態素数も同じであるため，``嫌悪''と``喜び''の文とのBLEUスコアは同じになってしまう．
その結果，``嫌悪''と``喜び''が出力されてしまう．
この推定結果としては``喜び''のみが出力されることが適切であると考えられる．
また，コーパスを構築する際には誤って分類される\respeqn{発話文}を完全に取り除くことは非常に困難であると考えられる．
このことから，誤って分類された\respeqn{発話文}の影響を最小限に抑える手段が必要となる．
本稿では三品らの手法を改善し，([REF_enum:prob1])や([REF_enum:prob2])の文による影響を抑え，感情推定成功率を向上させる手法を提案する．
本稿では，まず[REF_sec:conventional]章で従来手法である``BLEUを類似度計算に用いた用例に基づく感情推定手法''について述べる．
次に[REF_sec:proposed_method]章で，従来手法で用いられていた類似度計算式とは異なる新たな類似度計算式を提案する．
また，この新たに提案する類似度計算式で，どのようにして従来手法の問題点を解決するかについて述べる．
そして[REF_sec:ev]章では従来手法と提案手法の感情推定成功率の比較を行う．
また三品らの方法とは異なる感情推定の従来法として，SVMを用いた感情推定を行い，結果を比較する．
最後に[REF_sec:conclusion]章でまとめと今後の課題を述べる．
