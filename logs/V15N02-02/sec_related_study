同義語を自動的に計算する研究は，これまで数多く行われてきた．
その種類としては，カタカナと英語の対応，英語とその略語の対応，日本語とその略語の対応などがある．
略語処理では，略語の近傍に括弧書きで略語の定義がされている場合の研究がある[CITE], [CITE].
この手法は，略語の定義が略語の近傍でされているものについては有効であるが，文書の中で必ずしも略語の定義がされているとは限らない．
本論文で扱う文書では略語の定義はされていないので，この手法は適用できない．
カタカナとアルファベット（英語）の対応では，Knightらは，カタカナとアルファベット（英語）の対応を発音記号から対応付けしている[CITE].
阿玉らは，カタカナのローマ字表記とアルファベットとの対応付けをしている[CITE].
Teradaらは，英語における原型語とその略語の対応を両者に含まれる文字及びその順序などの情報を使用することで同定している[CITE].
この研究も本論文と同じく，航空分野という特定分野を対象としているが，対象とする言語が英語であり，略語をその原型語に復元するタスクを目的としている．
同義語の類似度の計算は，文脈情報から余弦を用いて計算するものが多い．
文脈情報として，語句の前後の局所的なものを用いるもの[CITE],文書全体から抽出して用いるものがある[CITE].
Ohtakeらは，カタカナの変形を探すのに，エディット距離で候補を絞った後に，文脈情報を用いているが，その際，カタカナが用いられている構文を解析して，動詞，名詞，助詞を使用している[CITE].
Masuyamaらは，カタカナ処理でWEBデータから英語に対応するカタカナのエディット情報を取得している[CITE].
文脈情報を用いる場合には，全ての種類の語句を用いるのでなく，内容語を用いるものが多い．
計算量の削減及び精度の向上のために，文脈情報だけではなく，文字情報を用いて，対応関係を絞り込む，または，決定する研究が多い．
本論文では，日本語を対象とし，漢字，ひらがな，カタカナ，アルファベット，およびそれらの略語の類似度を同時に計算するために，文字情報による絞り込みは行わず，文脈情報のみでどの程度の精度が得られるかを実験した．
Teradaらは，英語を対象として，略語とその原型語の対応を文脈情報および文字情報を使用して行っているが[CITE],略語とその原型語のみならず，その他の同義語においても文脈情報を使用することにより，クエリに対する同義語が得られると考えた．
したがって，提案手法は，Teradaらの手法を応用し，言語を日本語に適応し，対象を略語から同義語に拡張し，文脈情報の使用に工夫を加えたものである．
また，Teradaらは，略語復元の精度を向上させるために，略語の多いコーパスと略語の少ないコーパスを使用しているが，提案手法では，同義語が同一のコーパスに含まれている場合は，コーパスは1つでよいと考え，1種類のコーパスのみを使用した．
文脈情報のみを使用しているが，同義語の日本語の文字種（漢字，ひらがな，カタカナ，アルファベット）について，種類の組み合わせにより精度が異なるかを調べ，今後の精緻なシステム構築の参考となるようにした．
さらに，文脈情報のみでは，十分な精度が得られない場合があるので，既知の同義語を知識として使用することにより，精度の向上を図った．
同義語を自動的に計算する研究は，これまで数多く行われてきた．
その種類としては，カタカナと英語の対応，英語とその略語の対応，日本語とその略語の対応などがある．
略語処理では，略語の近傍に括弧書きで略語の定義がされている場合の研究がある[CITE], [CITE].
この手法は，略語の定義が略語の近傍でされているものについては有効であるが，文書の中で必ずしも略語の定義がされているとは限らない．
本論文で扱う文書では略語の定義はされていないので，この手法は適用できない．
カタカナとアルファベット（英語）の対応では，Knightらは，カタカナとアルファベット（英語）の対応を発音記号から対応付けしている[CITE].
阿玉らは，カタカナのローマ字表記とアルファベットとの対応付けをしている[CITE].
Teradaらは，英語における原型語とその略語の対応を両者に含まれる文字及びその順序などの情報を使用することで同定している[CITE].
この研究も本論文と同じく，航空分野という特定分野を対象としているが，対象とする言語が英語であり，略語をその原型語に復元するタスクを目的としている．
同義語の類似度の計算は，文脈情報から余弦を用いて計算するものが多い．
文脈情報として，語句の前後の局所的なものを用いるもの[CITE],文書全体から抽出して用いるものがある[CITE].
Ohtakeらは，カタカナの変形を探すのに，エディット距離で候補を絞った後に，文脈情報を用いているが，その際，カタカナが用いられている構文を解析して，動詞，名詞，助詞を使用している[CITE].
Masuyamaらは，カタカナ処理でWEBデータから英語に対応するカタカナのエディット情報を取得している[CITE].
文脈情報を用いる場合には，全ての種類の語句を用いるのでなく，内容語を用いるものが多い．
計算量の削減及び精度の向上のために，文脈情報だけではなく，文字情報を用いて，対応関係を絞り込む，または，決定する研究が多い．
本論文では，日本語を対象とし，漢字，ひらがな，カタカナ，アルファベット，およびそれらの略語の類似度を同時に計算するために，文字情報による絞り込みは行わず，文脈情報のみでどの程度の精度が得られるかを実験した．
Teradaらは，英語を対象として，略語とその原型語の対応を文脈情報および文字情報を使用して行っているが[CITE],略語とその原型語のみならず，その他の同義語においても文脈情報を使用することにより，クエリに対する同義語が得られると考えた．
したがって，提案手法は，Teradaらの手法を応用し，言語を日本語に適応し，対象を略語から同義語に拡張し，文脈情報の使用に工夫を加えたものである．
また，Teradaらは，略語復元の精度を向上させるために，略語の多いコーパスと略語の少ないコーパスを使用しているが，提案手法では，同義語が同一のコーパスに含まれている場合は，コーパスは1つでよいと考え，1種類のコーパスのみを使用した．
文脈情報のみを使用しているが，同義語の日本語の文字種（漢字，ひらがな，カタカナ，アルファベット）について，種類の組み合わせにより精度が異なるかを調べ，今後の精緻なシステム構築の参考となるようにした．
さらに，文脈情報のみでは，十分な精度が得られない場合があるので，既知の同義語を知識として使用することにより，精度の向上を図った．
