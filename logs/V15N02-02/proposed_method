システムは，クエリに対して同義語候補語を順位付けして出力する．
そのためには，クエリに対する同義語候補語の類似度を計算できなければならない．
本節では，同義語候補語，文脈情報を定義し，提案手法での類似度について説明する．
本節では，単名詞の処理について述べ，複合名詞の処理については，第6節で述べる．
単名詞の同義語候補語は，テキストを形態素解析し，形態素解析器が出力した名詞である，漢字・ひらがな，カタカナ，アルファベットとした．
形態素解析器は茶筅を使用し，その中で出現頻度が100以上のものを使用した．
「同義語は，同じような文脈で使用される」という仮定から，語句の類似度を文脈の類似性から計算できると考えた．
これは，人間が語の意味を理解するのにその語句が出現する前後の文脈から類推しているというアイデアからである．
文脈は，同義語の近傍の語句（局所的文脈）とした．
人間は，前後の語句の中で，場面に応じて文脈語を選別をしていると考えられるが，計算機で実現するのは不可能であるので，場面に応じた選別については，この研究では考慮しないことにした．
クエリを[MATH]とし，その前後の語句の並びを，[MATH]とする．
ここで，前後の語句は，形態素解析器が出力した単語とする．
対象とするクエリの文脈語をクエリの前で[MATH]，クエリの後ろで[MATH]とすると，window幅は[MATH], [MATH]であり，これ以降window [[MATH]]と表現することとする．
同義語候補語のwindow幅についても，同様とする．
window幅は，クエリ，同義語候補語を含む1文の範囲内だけを考慮した．
どのような文脈語を選択するかについては，第4.3節で述べる．
クエリ(query)の文脈情報を[MATH]，同義語候補語(synonym)の文脈情報を[MATH]とする．
[MATH]と[MATH]をベクトル空間モデルで表し，その類似度をベクトルの余弦で表すと，クエリと同義語候補語の類似度([MATH])は，次式で計算される．
情報検索の性能評価として精度と再現率がよく用いられるが，これらは，与えられたクエリに対する検索結果全体に対する性能を表すものである．
同義語の検索結果から辞書作成者が辞書登録することを考えると，検索結果の順位における精度が重要である．
つまり，上位の検索結果ほど評価値は高い必要がある．
このような評価尺度を表すものとして平均精度(average precision)を用いた．
N個のクエリの評価をする場合，[MATH]番目のクエリに対する平均精度は次式で表される:
ここで，
[MATH]: [MATH]番目のクエリの同義語の候補数．
[MATH]: [MATH]番目のクエリの同義語数．
[MATH]:システムが順序付けした回答の中で，[MATH]番目の回答が正解であれば1，そうでなければ0．
[MATH]番目のクエリに対する平均精度は，検索結果の各順位での精度[MATH]の同義語[MATH]番目全体に対する和を同義語数[MATH]で割ったものである．
[MATH]個のクエリ全体の平均精度は，次式のように個々のクエリに対する平均精度の平均として定義する：
第4節での実験結果をもとにして，以下のような考察を行った．
第5.1節ではクエリ・候補語の種類による精度の違いを調査した．
第5.2節では，文脈情報の正規化による精度変化について述べる．
第5.3節では，本手法がクエリ・候補語の近傍の文脈情報を使用しているのに対して，文書からの大域的情報を用いる手法との精度の比較を行った．
第5.4節では関連語の検索について述べる．
本節では，クエリと候補語の種類による精度の違いについて調べる．
同義語の種類として，「Dispatch」と「DISP」のようなアルファベット同士，「ベルト」と「Belt」のようなカタカナとアルファベット，「座席」と「席」のような漢字同士，「Check」と「検査」のようなそれ以外のものに分類して，表[REF_classification]のような基準で平均精度を調べた．
一般に，候補語の頻度が高いほど文脈情報が豊富となり，平均精度も高くなる傾向にあるため，候補語の頻度に対する閾値を増加させることで平均精度を上げることができる．
このようにして平均精度を上げることで50%を超えることができた場合，基準3に該当する．
また，10%以上50%未満のときを基準4，10%未満のときを基準5として分類した．
また，閾値の頻度100未満でも50%を超えることができた場合を基準2，頻度50未満でも50%を超えることが出来た場合を基準1とした．
表[REF_variation]にその結果を示すが，横軸の基準の数字は，各分類毎の基準1〜5での比率を示す．
各分類の括弧の中の数字は，各分類の全体での比率を示す．
アルファベット同士は，基準1と基準2の合計で81%以上の平均精度が得られた．
カタカナとアルファベットでは，基準1から基準3までの合計でも平均精度は15%程度であった．
この理由としては，カタカナとアルファベットでは，ごく近傍に出現する語の種類（カタカナではカタカナが多く，アルファベットではアルファベットが多い）が異なるためである．
漢字同士の場合には，基準1から基準3までの合計で平均精度は約63%得られた．
それ以外の場合は，全体の76%を占めるが，基準1から基準3までの合計で平均精度は約27%であった．
この結果から，カタカナとアルファベット及びそれ以外の分類のものの精度が低いことが分かった．
それに対して，アルファベット同士，漢字同士の同義語の場合には，高い確度でユーザに同義語を提示できる．
第5.1節でカタカナとアルファベット及びそれ以外の分類のものの精度が低いことが分かったが，その解決法を考える．
その方法として，文脈語に出現する同義語を同定することを考え，それによる精度変化を調べた．
同義語同士の周辺に出現する文脈語を観察すると，文脈語の中にも同義語が多く存在する．
例えば，「Cargo」と「貨物」という同義語には，「Cargo Loading」と「貨物搭載」というように「Loading」と「搭載」という文脈同義語が出現する．
しかしながら，「Cargo搭載」，「貨物Loading」という使用は，ほとんどされないので，「Cargo」と「貨物」の文脈語の中で「Loading」と「搭載」の分布は偏っている．
したがって，特徴ベクトルにおいて別の要素である「Loading」と「搭載」は，「Cargo」と「貨物」の類似度の向上にあまり寄与しない．
そこで，これらの文脈同義語を正規化することにより平均精度の向上が期待できる．
実験として，筆者の1人が選択した25対の同義語（表[REF_syn1]参照）について，41個の文脈同義語（表[REF_syn]参照）の正規化を行い，個々の同義語の精度変化および評価辞書全体への影響を調査した．
25対の同義語の平均精度は，9.6%で，評価辞書全体の精度43.1%と比較して難易度の高いものである．
文脈同義語は，各同義語について特徴的なものを，筆者の1人が，PortableKiwi [CITE]を使用して1〜4個選択した．
PortableKiwiは，対象としているコーパスに対して，ある言語表現を入力すると，その前後に現れる適当な長さの文字列[CITE]のうち，頻度の高いものから順に表示する用例検索システムである．
最初に文脈語の頻度をこれまで通り50から600のものに制限すると，表[REF_syn]の41個の文脈同義語の内，使用されたものは21個で，表[REF_syn1]の25対の同義語の中で文脈同義語が使用されたものは，15対であった．
ただし，15対の同義語は，想定していた文脈同義語が1個でも使用されたもので，想定していた文脈同義語が全て使用されていないものを含む．
15対の同義語について，平均精度の変化を調べたところ，正規化しない場合の8.4%から，正規化した場合は43.0%に上昇した．
その内容は，平均精度が上昇したものが28個，精度の低下したものが2個であった．
精度の低下した例は，クエリ「Final」に対する「最終」とクエリ「最終」に対する「Final」である．
両例とも精度の低下した理由は同様なので，クエリ「Final」に対する「最終」の例を見てみると，正規化しない場合の順位203位から，正規化した場合は355位に落ちていた．
理由としては，文脈同義語が想定していた3個の内，「搭載」⇒「Load」という1個しか使用されず，その文脈同義語も「Final」と「最終」を同義語として認識させ，他の候補語の順位は上昇させないようなものではなかったからであると推定される．
次に，文脈同義語のみ，文脈語の頻度制限（50〜600）を外して実験を行った．
その結果，想定していた全ての文脈同義語が使用され，25対の同義語について平均精度が上昇したものが46個，低下したものが2個，変化しないものが2個であった．
25対の同義語について平均精度の変化を調べたところ，正規化しない場合の9.6%から，正規化した場合は42.9%に上昇した．
精度の低下した同義語の1つの例は，クエリ「GRP」に対する「グループ」である．
類似度の値は，正規化しない場合の0.24から，正規化した場合の0.32に上昇していたが，他の候補語，例えば，「同行」の類似度が0.21から0.39のようにより上昇したために順位が低下したものである（「同行」は不正解である）．
もう1つの低下した例は，クエリ「手順」に対する「PROC」であるが，その理由も同様である．
精度の変化しなかった同義語の1つ例は，クエリ「PROC」に対する「手順」である．
正規化しない場合の「手順」の順位は2位で，1位は「PROC」の同義語の「Procedure」であったが，正規化により双方の類似度が上昇し，結果として「手順」の順位は2位のままであった．
もう1つの精度の変化しなかった例は，クエリ「DEP」に対する「出発」であるが，正規化しない場合の順位が2位はあり，その類似度は0.42であった．
「遅延」⇒「Delay」という文脈同義語により正規化すると，「出発」の類似度は，0.48に上昇したが，1位であった「ARR」も同様に0.48から0.57に上昇した（「ARR」は不正解である）．
これは，文脈同義語「遅延」⇒「Delay」が「出発」にも「ARR」にも関係しているためである．
したがって，正解にのみ関係する文脈同義語を選択できれば，正解のみ精度を向上させることが期待できるが，どのように選択すればよいかは今後の課題である．
15対の同義語の文脈語を正規化した場合の評価用辞書全体での平均精度は45.7%であり，文脈語の正規化を行う前の43.1%よりも向上していた．
その理由の1つは，15対の同義語の精度が上がり，その結果として平均精度を向上させたもの（その効果は，1.3%），もう1つの理由は，それ以外の同義語も文脈語の正規化により若干精度が向上したためである．
文脈同義語の頻度制限を外した25対の同義語の文脈語を正規化した場合の評価用辞書全体での平均精度は46.8%であり，文脈語の正規化を行う前の43.1%よりも向上していた．
25対の同義語の精度向上による効果は，2.1%であった．
結論として，文脈同義語は，第4.3節で述べたような高頻度と低頻度の文脈語の制限を外した方がよい結果となった．
尚，頻度制限を外した場合，高頻度側で使用可能となった文脈同義語は20個，低頻度側で使用可能となった文脈同義語は1個であった．
高頻度の文脈同義語が圧倒的に多かった．
したがって，高頻度の同義語が既知である場合には，同義語の文字種に拘わらず，正規化することによりシステムの精度を向上できることが分かった．
酒井らは，日本語の略語からその原型語との対応関係を取得するのに以下のような手法を用いている[CITE].
略語候補とそれに対応する原型語の候補を，それを構成している文字情報から獲得する．
略語候補と原型語の候補の類似度を計算して，対応関係を取得する．
文脈情報の類似度について第3節で提案した手法との比較を行った．
彼らは，漢字・ひらがなの名詞の略語を対象としたが，それをカタカナ，アルファベットに拡張して提案手法との比較を行った．
彼らの類似度の計算は，コーパス中の略語候補語を含んでいる文書における略語候補語の出現頻度，全ての名詞の総出現頻度，文の数，略語候補語が最初に出現する文番号の情報を用いて重みを付与して順位付けを行い，その上位[MATH]文書を取り出して，略語候補の関連文書としている．
次に，その関連文書に含まれる各名詞に対して出現頻度，文書頻度などの情報を用いて重みを付与して順位付けを行い，上位[MATH]個の名詞を取り出し，名詞の重みを付与したベクトルを生成している．
原型語候補に対しても同様のベクトルを生成する．
そして，その余弦により類似度を計算している．
本論文でも酒井ら[CITE]と同様に，[MATH]，[MATH]として実験した．
結果は，表[REF_tbl1]にあるように，提案手法よりも，かなり低い値となった．
その原因として，略語とその原型語の対応関係を求めるのに，関連文書全体から代表的な名詞を抽出して類似度を計算している（大域的文脈情報）が，必ずしも，略語に関連する文書があるとは限らないと考えられる．
我々は，局所的な文脈語から類似計算を行っている（局所的文脈情報）が，この手法の優秀性が証明された．
語句には，同義であるもの以外に関連性のあるものが存在する．
このような語句の分類も，テキスト処理においては重要である．
例えば，「引き返し」という語句の関連語として「GTB（Ground Turn Back:地上引き返し）」，「ATB（Air Turn Back:空中引き返し）」，「RTO（Rejected Takeoff:離陸中止）」，「トラブル」などがある．
「トラブル」は，「GTB」，「ATB」，「RTO」の上位概念あり，「GTB」，「ATB」，「RTO」は類義語である．
これらの語句にも，「HYD FailureによるGTB」，「HYD FailureによるATB」のように同じような文脈が現れる場合が多い．
したがって，提案手法で関連語の検索も可能と考えられる．
表[REF_rel]に，いくつかのクエリに対する回答の中での関連語を示す．
事実「RTO」について調べたところ，クエリに対する50位までの回答で類義語が2つ，原因を表す関連語が5つ，結果を表す関連語が1つ含まれていた．
同じような文脈で使用される関連語は，本手法で検索できることが分かる．
関連語によりどのように文脈が違うかについては．
今後の研究課題である．
本論文では，精度は計算していないが，関連語の検索にも本手法が適用できると考えられる．
複合名詞の処理については，全ての連接する単名詞の組み合わせを調べると，その数が多くなり非効率である．
したがって，最初に複合名詞を抽出して，それを単名詞と同様に扱うことで，これまで述べた処理と同じ手法を用いることとした．
複合名詞の抽出については，専門用語抽出システム[CITE]を使用し，それが抽出したものの中で，重要度評価値が3,000以上の用語の中の複合名詞を使用した．
専門用語抽出システムは，単名詞の左右に出現する単名詞の連接種類数と連接頻度および候補語の出現頻度から専門用語を抽出するものである．
上記の条件で，350の複合名詞が得られた．
人手で複合名詞に対して同義語辞書を作成した結果，辞書の登録数73で，平均同義語数は2.00であった．
複合名詞の同義語の中には，複合名詞と単名詞が含まれる．
この複合名詞350と単名詞1,343に対してwindow [2,2]で文脈語の最小頻度50，最大頻度600で文脈情報を取得した．
実験の結果，平均精度は，44.3%であった．
辞書登録数が少ないので単純には比較できないものの単名詞と同等の精度が得られた．
複合名詞と単名詞について以下のような関係があることが分かった．
複合名詞の同義語が単名詞の同義語の組み合わせでできているもの：
例：\ul{出発} \ul{遅れ}‐\ul{出発} \ul{遅延}
複合名詞の基底名詞と単名詞が同義なもの：
例：搭乗\ul{券}‐\ul{券}
複合名詞の基底名詞以外の語同士が同義なもの：
例：\ul{整備}点検‐\ul{整備}
複合名詞の中で一部の名詞に省略があるもの：
例：搭乗\ul{旅客}数‐搭乗数
単名詞同士では，同義でなかったものが複合名詞では同義になるもの：
例：\ul{搭乗} \ul{口}‐\ul{ゲート}，\ul{到着}地‐\ul{目的}地
以下では，複合名詞を最初に抽出した利点に着目して述べる．
（1）については，複合名詞の処理を行わなくても，単名詞の同義語を置き換えることにより複合名詞の同義語を得ることが可能であるが，その場合には，「DEP遅延」のようにあまり使用されない複合名詞の同義語が得られてしまい，単名詞の同義語を置き換えだけでは複合名詞の同義語を絞り込むことができない．
したがって，複合名詞抽出の前処理を行うのが効率的である．
（2）と（3）については，複合名詞を構成する名詞の中でより一般的で省略しても意味が変化しないものが省略されている．
（4）の日本語の略語ついては，第6.2節で述べる．
（5）の関係は，上記4種類と異なり，単純に省略や単名詞の置き換え，単名詞の同義語の組み合わせだけでは扱えないもので，複合名詞の前処理を行わないと同義語が得られないものである．
日本語の略語の平均精度について調査した．
日本語の略語とは，例えば，「整備作業」と「整備」のようなものであり，略語が原型語に完全に包含されるものである．
したがって，「整備作業」と「整備点検」のようなものは含まれない．
単名詞と複合名詞を合わせた同義語候補語1,693個について日本語の省略語の辞書を人手で作成したところ，エントリー数：92，項目数：123，平均項目数：1.34であった．
この辞書を使用して実験したところ，平均精度で52.3%という高い精度が得られた．
これは，日本語の原型語と一部省略されている略語では，その周辺には同じような文脈語が出現しやすいと考えられ，本手法の得意な分野だといえる．
同義語辞書は，表[REF_dic]のように見出し語に対して1語以上の同義語が辞書項目として登録される．
情報検索やテキストマイニングでは，同じ概念をグループ化し精度を向上させるために見出し語に対して1対1で同義語を対応させる必要がある場合がある．
例えば，表[REF_dic]に対して，同義語リストは表[REF_list]のようになる．
表[REF_list]では，「APP」が「進入」に，「Approach」が「進入」に，「CRZ」が「巡航」に変換されることを示す．
「進入」，「巡航」は，変換されないでそのまま使用される．
複数の同義語の中からどの語を変換語に選択するかは，専門用語抽出システムの重要度評価値の最も大きなものを用いた．
つまり，同義語同士の中で最も重要度の高い語に変換するものである．
また，「CRZ」⇒「巡航」と「巡航」⇒「CRZ」の場合には，「CRZ」と「巡航」の重要度評価値の大きな方に変換した．
この例では，「巡航」の方が重要度評価値が大きく「CRZ」⇒「巡航」という云い換えになる．
もちろん多義性のある語では，一意に同義語を決定できないのでこのようなリストは使用できない．
この場合には，個々の語が出ている文脈から判断する必要があるが，これは今後の課題である．
次に同義語辞書を作成する際に一度に全て作成するのではなく，以下に示すように同義語辞書を一部作成した段階で同義語リストを文脈情報の正規化に使用するために文脈同義語としてシステムに与えることにより，残りの辞書作成の精度（平均精度）が向上するかを検証した．
例えば，「PAX」を「旅客」に変換することにより，「PAX Boarding」と「旅客搭乗」の例では，「Boarding」と「搭乗」という同義語の文脈語が同一になる．
第[REF_subsec:文脈語の正規化]節では，筆者の一人が選択した同義語対について，頻出する1〜4個の文脈同義語を選択して使用したが，今回は出現頻度順に自動的にシステムに付与した．
文脈同義語は，第[REF_subsec:文脈語の正規化]節の文脈語の正規化で頻度制限をしない方が精度が良かったので，本節でも頻度制限を行わなかった．
出現頻度が500以上の同義語リストを作成したところ，41個の同義語リストが得られた．
これを文脈同義語とし，正規化したものとしないものについて平均精度を比較したところ，それぞれ平均精度は43.3%，41.1%であり，正規化したものの方が約2.2%精度が向上した（文脈同義語リストに含まれる同義語は評価から除外した）．
同様に出現頻度が300以上，1,000以上のものについて比較したところ，正規化したものの平均精度がそれぞれ約2.2%，1.8%精度が向上した．
出現頻度が100〜300，300〜500のものについては，平均精度の変化はなかった．
以上の結果から，同義語の中で頻度の高いものを文脈同義語としてシステムに付与すると，若干平均精度が向上することが分かった．
