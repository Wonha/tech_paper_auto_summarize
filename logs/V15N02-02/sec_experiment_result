第4.1節では，実験に使用したコーパスの説明をする．
第4.2節では，評価用に人手で作成した辞書について述べ，第4.3節では，提案手法で用いる特徴ベクトルについて述べる．
第4.4節では，window幅等による比較についての実験結果を示す．
コーパスとして，日本語の航空分野のレポートを使用した．
個人情報保護の観点から，事前に名前等の個人情報は削除し，個人を特定できないような処理を行った．
レポートの内容には，出発地・到着地などの定型情報とテキストで自由に記述された表題，本文が含まれているが，本文を対象とした．
1992年から2003年までのレポートを使用した結果，6,427件のレポートが対象となり，そのサイズは，約6.9 Mバイトであった．
同義語候補語は，第3.1節で述べたように名詞を対象とし，その中には，漢字・ひらがな，カタカナ，アルファベット，およびそれらの略語があるが，その頻度が100以上のものを対象とした．
その結果，同義語候補語の数は，1,343になった．
同義語抽出のタスクは，クエリに対する同義語をこれらの同義語候補語の中から選択するものである．
今回の実験評価のために，4.1節と同じ条件で出現頻度が100以上の候補語の中から，人手で選んだ406個の単語に対する同義語を求めることにより同義語辞書を作成した．
単語には，同義な語句が複数存在する場合があるので，406個のクエリに対する同義語数は777になり，平均同義語数は1.91であった．
同義語の中には，「Service」，「SVC」，「サービス」のようにアルファベット（英語）とその略語およびそのカタカナ表現のほか，「Traffic」，「相手機」のようにドメイン特有のものも含まれる．
文脈情報を特徴ベクトルとして表すが，類似度計算に使用する特徴ベクトルの定義には，様々な方法がある．
本節では，特徴ベクトルの定義が精度にどのような影響を及ぼすかを調査した．
クエリと同義語候補語の文脈語としてそれぞれの前後に出現する語句を用いるが，本節では，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞という内容語を使用した．
クエリ・同義語候補語の文脈情報は，コーパス全体の中でクエリ・同義語候補語のwindow内に出現する文脈語を取得し，その頻度ベクトルとした．
類似度は，3.3節で述べたように余弦で計算する．
クエリの文脈ベクトルを[MATH]，同義語候補語の文脈ベクトルを[MATH]とすると，類似度(sim)は次式で表される（[MATH]:文脈語の異なり数）：
ここで，文脈ベクトルの各要素([MATH]又は[MATH])は，文脈語の頻度を対数で補正したものを表す．
表[REF_tblf]は，頻度の対数による補正の有無の比較を示すが，対数による補正が精度に与える影響が大きいことが分かる．
文脈語として，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞を選択した場合とそれ以外の文脈語を選択した場合の比較を表[REF_tblc]に示す．
文脈語の頻度については，高頻度の文脈語は，一般的であり同義語の判別に役立たず，一方，低頻度の文脈語は，特殊すぎてノイズとなることが考えられる．
したがって，中程度の頻度の文脈語を採用するのがよいと考えられるので，最小頻度50，最大頻度600を使用するものとする（図[REF_fig:minfreq], [REF_fig:maxfreq]参照）．
window幅をどのように設定すれば，平均精度が最適になるかを調査した．
window幅を大きくすれば，候補語に対する文脈語を多く得られる反面，候補語から遠い文脈語は，候補語と関連性が薄くなり，ノイズとして悪影響を及ぼすので同義語の判別能力が弱くなり，また逆に，window幅を小さくすれば，候補語に対して得られる文脈語が少なくなり，判別に使用する情報が少なくなると考えられる．
window幅を同義語候補語の前(FWD)に0〜4語，後(AFT)に0〜4語，変化させて実験した結果を表[REF_window]に示す．
平均精度は，window [2,2]が43.1%で最も高かった．
同義語候補語の前後のwindowの比較では，window [2,0]では35.5%, window [0,2]では37.8%であった．
例えば，「Boarding」というクエリに対する正解は「搭乗」であるが，window [2,0]では「搭乗」が1位になるが，window [0,2]では8位になる．
理由としては，window [2,0]では「Boarding」と「搭乗」の前に共通の語である「お客様」が多く出現するが，window [0,2]では「Boarding」と「搭乗」の後に共通の文字列（例：「を開始」など）の出現が少ないためであると考えられる．
つまりwindow [2,2]では，window [2,0]の影響を受けて1位になっているといえる．
「CAT」というクエリに対する正解は「TURB」と「揺れ」であるが，window [2,0]では「TURB」が2位，「揺れ」が9位になる．
共通に出現する代表的な言葉は「突然の」であるが，その数がそれ程多くないためだと考えられる．
window [0,2]では「TURB」が1位，「揺れ」が2位になる．
その理由として，後に「に遭遇」という表現が多く出現しているからだと考えられる．
window [2,2]では，window [0,2]の影響を受けて「TURB」が1位，「揺れ」が2位になっている．
各同義語によりバラツキはあるものの，全体を通して，window [2,2]では，同義語の前2語のwindow [2,0]と同義語の後2語のwindow [0,2]が補完しあって，よい結果になっているものと考えられる．
クエリ・候補語のwindow幅内の前と後とでどちらが精度に貢献しているかについては，顕著な差は認められなかった．
第4.1節では，実験に使用したコーパスの説明をする．
第4.2節では，評価用に人手で作成した辞書について述べ，第4.3節では，提案手法で用いる特徴ベクトルについて述べる．
第4.4節では，window幅等による比較についての実験結果を示す．
コーパスとして，日本語の航空分野のレポートを使用した．
個人情報保護の観点から，事前に名前等の個人情報は削除し，個人を特定できないような処理を行った．
レポートの内容には，出発地・到着地などの定型情報とテキストで自由に記述された表題，本文が含まれているが，本文を対象とした．
1992年から2003年までのレポートを使用した結果，6,427件のレポートが対象となり，そのサイズは，約6.9 Mバイトであった．
同義語候補語は，第3.1節で述べたように名詞を対象とし，その中には，漢字・ひらがな，カタカナ，アルファベット，およびそれらの略語があるが，その頻度が100以上のものを対象とした．
その結果，同義語候補語の数は，1,343になった．
同義語抽出のタスクは，クエリに対する同義語をこれらの同義語候補語の中から選択するものである．
今回の実験評価のために，4.1節と同じ条件で出現頻度が100以上の候補語の中から，人手で選んだ406個の単語に対する同義語を求めることにより同義語辞書を作成した．
単語には，同義な語句が複数存在する場合があるので，406個のクエリに対する同義語数は777になり，平均同義語数は1.91であった．
同義語の中には，「Service」，「SVC」，「サービス」のようにアルファベット（英語）とその略語およびそのカタカナ表現のほか，「Traffic」，「相手機」のようにドメイン特有のものも含まれる．
文脈情報を特徴ベクトルとして表すが，類似度計算に使用する特徴ベクトルの定義には，様々な方法がある．
本節では，特徴ベクトルの定義が精度にどのような影響を及ぼすかを調査した．
クエリと同義語候補語の文脈語としてそれぞれの前後に出現する語句を用いるが，本節では，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞という内容語を使用した．
クエリ・同義語候補語の文脈情報は，コーパス全体の中でクエリ・同義語候補語のwindow内に出現する文脈語を取得し，その頻度ベクトルとした．
類似度は，3.3節で述べたように余弦で計算する．
クエリの文脈ベクトルを[MATH]，同義語候補語の文脈ベクトルを[MATH]とすると，類似度(sim)は次式で表される（[MATH]:文脈語の異なり数）：
ここで，文脈ベクトルの各要素([MATH]又は[MATH])は，文脈語の頻度を対数で補正したものを表す．
表[REF_tblf]は，頻度の対数による補正の有無の比較を示すが，対数による補正が精度に与える影響が大きいことが分かる．
文脈語として，名詞（漢字・ひらがな，カタカナ，アルファベット），動詞，形容詞を選択した場合とそれ以外の文脈語を選択した場合の比較を表[REF_tblc]に示す．
文脈語の頻度については，高頻度の文脈語は，一般的であり同義語の判別に役立たず，一方，低頻度の文脈語は，特殊すぎてノイズとなることが考えられる．
したがって，中程度の頻度の文脈語を採用するのがよいと考えられるので，最小頻度50，最大頻度600を使用するものとする（図[REF_fig:minfreq], [REF_fig:maxfreq]参照）．
window幅をどのように設定すれば，平均精度が最適になるかを調査した．
window幅を大きくすれば，候補語に対する文脈語を多く得られる反面，候補語から遠い文脈語は，候補語と関連性が薄くなり，ノイズとして悪影響を及ぼすので同義語の判別能力が弱くなり，また逆に，window幅を小さくすれば，候補語に対して得られる文脈語が少なくなり，判別に使用する情報が少なくなると考えられる．
window幅を同義語候補語の前(FWD)に0〜4語，後(AFT)に0〜4語，変化させて実験した結果を表[REF_window]に示す．
平均精度は，window [2,2]が43.1%で最も高かった．
同義語候補語の前後のwindowの比較では，window [2,0]では35.5%, window [0,2]では37.8%であった．
例えば，「Boarding」というクエリに対する正解は「搭乗」であるが，window [2,0]では「搭乗」が1位になるが，window [0,2]では8位になる．
理由としては，window [2,0]では「Boarding」と「搭乗」の前に共通の語である「お客様」が多く出現するが，window [0,2]では「Boarding」と「搭乗」の後に共通の文字列（例：「を開始」など）の出現が少ないためであると考えられる．
つまりwindow [2,2]では，window [2,0]の影響を受けて1位になっているといえる．
「CAT」というクエリに対する正解は「TURB」と「揺れ」であるが，window [2,0]では「TURB」が2位，「揺れ」が9位になる．
共通に出現する代表的な言葉は「突然の」であるが，その数がそれ程多くないためだと考えられる．
window [0,2]では「TURB」が1位，「揺れ」が2位になる．
その理由として，後に「に遭遇」という表現が多く出現しているからだと考えられる．
window [2,2]では，window [0,2]の影響を受けて「TURB」が1位，「揺れ」が2位になっている．
各同義語によりバラツキはあるものの，全体を通して，window [2,2]では，同義語の前2語のwindow [2,0]と同義語の後2語のwindow [0,2]が補完しあって，よい結果になっているものと考えられる．
クエリ・候補語のwindow幅内の前と後とでどちらが精度に貢献しているかについては，顕著な差は認められなかった．
