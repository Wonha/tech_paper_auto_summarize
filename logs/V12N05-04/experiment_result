評価実験には，読売新聞とThe Daily Yomiuriの対訳コーパスのうち1996年7月中旬から2001年までの記事のうち文対応スコアの上位三万文対を用いた．
この三万文対に対して対応付け処理を行ない，各について，総合類似度[MATH]が閾値[MATH]以上であり，かつ条件[REF_cond:pp]を満たすものが存在する場合には，そのうち総合類似度が最も高いを出力し，存在しない場合には何も出力しないようにした．
総合類似度の閾値は，予備実験において閾値を1から0.1まで0.1刻みで変化させて処理を行ない最良の結果が得られたときの値である．
得られたデータから200文対を標本抽出し，この200文対から人手で正解データを作成し，提案方法による対応付け結果と比較した．
正解，対応付け漏れ，対応付け誤りの件数をそれぞれ[MATH]，[MATH]，[MATH]とするとき，提案方法の性能を評価する指標として次の式で計算される再現率，適合率，F値を用いた．
提案方法は，文字種を考慮した文字単位の照合([REF_sec:alignment:align:sem_chartype]節)，ローマ字読みの照合([REF_sec:alignment:align:pho]節)，を構成する各の関与を考慮した照合([REF_sec:alignment:align:pp]節)の三つの処理によって対応付けを行なう．
これに対して，文字種を考慮しない文字単位の照合だけで対応付けを行なう方法をベースラインする．
提案方法とベースラインのそれぞれで対応付けを行なった場合の評価結果を表[REF_tab:result]に示す．
表[REF_tab:result]によれば，提案方法のF値は0.678であり，ベースラインのF値0.583から0.095向上している．
提案方法とベースラインの再現率，適合率を比べると，再現率はベースラインのほうが0.101高いが適合率は提案手法のほうが0.271高く，提案方法では再現率の低下を抑えつつ適合率の向上が実現できている．
我々は，対応付け漏れを抑えることよりも対応付け誤りを抑えることを重視しているため，この結果により所期の目標が達成されていると考える．
[REF_sec:alignment:align:pp]節で述べたように，関与率の閾値は予備実験の結果に基づいて0.5に設定した．
表[REF_tab:result]は，この設定で評価実験を行なった場合の結果であるが，評価実験においても閾値を0.1刻みに変化させて性能の変化を観察した．
その結果を表[REF_tab:threshold]に示す．
表[REF_tab:threshold]によれば，予備実験の場合と異なり，閾値が0.6の場合に最もよいF値が得られており，閾値を0.5とした場合のF値は，閾値を0.7とした場合に次いで第三位である．
提案した各処理が性能の向上にどの程度寄与しているかを調べた．
その結果を表[REF_tab:cond-effect]に示す．
表[REF_tab:cond-effect]において，処理欄の記号`[MATH]'はその処理を導入して対応付けを行なったことを意味し，記号`[MATH]'はその処理なしで行なったことを意味する．
どの処理も導入していない(a)がベースラインの性能であり，すべての処理を導入した(h)が提案方法の性能である．
(a)と(b)を比べると，の関与を考慮した処理を導入することによって，対応付け漏れが16件増えているが，対応付け誤りが81件と大幅に減っていることが分かる．
このことから，(1)英文から抽出されたが意味的に不適格である場合や，(2)英文から抽出されたが意味的に適格であるが正解が和文中に存在しない場合にこのに何らかのが対応付けられる誤りを抑制することに関しての関与を考慮した処理が有効に働いているといえる．
読みの類似度を考慮した処理が性能向上に寄与する度合いは，(a)と(c)を比べて分かるように，ベースラインで対応付け漏れであったものが正解になった1件だけであるので，非常に低いようにみえる．
[REF_sec:alignment:align:integ]節で述べたように，この処理が機能するのはに辞書未登録語が含まれている場合である．
正解データ中ののうちそのMT訳に辞書未登録語が含まれるものは20件存在した．
この20件のうちベースラインで正解が得られなかったものは8件であった．
このうち1件が読みの類似度を考慮した処理によって改善されたことになる．
(a)と(e)を比べると，文字種を考慮した処理を導入することによって，対応付け誤りが4件減っている．
この処理の目的は漢字以外の文字が短すぎる単位で適合することを防ぐことであるが，解消された4件の対応付け誤りで期待した効果が得られている．
他方で，正解が2件減り対応付け漏れが2件増えているが，これは，ベースラインで正解であった2件が文字種を考慮した処理では対応付け漏れになったものであった．
今回の実験では英字と数字を同一文字種とみなし英数字は最長文字列単位で一致しなければならないという設定にした．
このため，``the Group of Seven''というのMT訳「７のグループ」と「Ｇ７」との対応付けが得られなくなっていた．
複数の処理を同時に導入することによってF値がどのように変化したかを見る．
読みの類似度を考慮した処理との関与を考慮した処理を同時に導入した(d)のF値0.678は，前者の処理だけを導入した(c)のF値0.586よりも高く，かつ後者の処理だけを導入した(b)のF値0.667よりも高い．
文字種を考慮した処理との関与を考慮した処理を同時に導入した(f)のF値0.669も，これらの処理を個別に導入した(e)と(b)のF値0.581，0.667を上回る．
文字種を考慮した処理と読みの類似度を考慮した処理を同時に導入した(g)のF値0.585は，読みの類似度を考慮した処理を同時に導入した場合(c)のF値0.586よりも若干低くなっているが，文字種を考慮した処理だけを導入した場合(e)のF値0.581よりも高い．
三種類の処理をすべて導入した提案方法(h)のF値が最も高い．
以上のことから，文字種を考慮した処理と読みの類似度を考慮した処理を同時に導入した場合に若干の副作用が見られるが，概ね，これらの処理は互いの効果を抑制していないといえる．
提案手法で生じた62件の対応付け漏れと30件の対応付け誤りについて，の抽出，の抽出，との照合のうちどの処理に原因があるのかを調査した．
その結果を表[REF_tab:cause_of_failure]に示す．
表[REF_tab:cause_of_failure]を見ると，対応付け漏れの場合も対応付け誤りの場合も，との照合の際に生じる失敗が他の処理で生じる失敗に比べて多いことが分かる．
対応付け漏れのうちの抽出に原因がある14件を細かく分類すると，条件[REF_cond:length]に関するものが最も多く9件であり，条件[REF_cond:comma]に関するものが3件であり，条件[REF_cond:poss]に関するものと条件[REF_cond:adv]に関するものがそれぞれ1件ずつであった．
条件[REF_cond:length]により最長の単語列だけを抽出していることが原因で抽出できなかったもの9件のうち4件には抽出された最長の単語列に月名などの時間表現が含まれていた．
例えば次の英文(E[REF_SENT:time])から条件[REF_cond:np]ないし[REF_cond:adv]を満たす単語列のうち最も長いものを抽出すると，``July through August''を含む``July through August in Sendai, Sapporo and Kyoto''が抽出される．
\sentE More classes are scheduled to be held from July through August in Sendai, Sapporo and Kyoto. \sentJ７月から８月にかけては仙台，札幌，京都で開く予定だ．
``[MATH]''という前置詞句において，[MATH]がof以外の前置詞であり，かつ[MATH]が月名などの時間表現であるとき，この前置詞句は副詞的に働きやすい．
また，このような時間表現は，of以外の前置詞句による修飾を受けにくく，新たな固有名詞句を作り出す生産性は低い．
これらの点から，``[MATH]''という表現において，[MATH]か[MATH]が時間表現であり，かつ[MATH]がof以外の前置詞であるとき，この表現が意味的に適格な一つのを構成することは少ないと考えられる．
従って，時間表現は抽出する単語列に含めないという抽出条件を設けることで，ある程度の改善が期待できる．
対応付け漏れのうちの抽出に原因がある14件のうち11件は，条件[REF_cond:jn]と条件[REF_cond:jn_exception]に関するものであった．
例えば``the House of Representatives''と「衆院選」が対応付けられ，「衆院」との対応付けが得られていなかった．
正しい対応付けを得るためには，条件[REF_cond:jn_exception]により「衆院」と「選」を分離する必要がある．
残りの3件は，例えば``the Japanese Society for History Textbook Reform''と「新しい歴史教科書をつくる会」との対応付けが得られないような場合であり，抽出するの構成要素として用言を認めていないことが原因であった．
対応付け漏れのうちとの照合に原因がある34件のうち27件が条件[REF_cond:pp]によっての抽出が抑制されてしまったものであり，残りの7件が総合類似度が閾値を超えなかったものである．
条件[REF_cond:pp]によりの抽出が抑制された27件のうち20件は，のMT訳ととの差異が大きいために関与率が閾値を超えなかったものである．
例えば``Japan and France''というに対して「日仏」というを対応付ける必要があるが，実験に用いた機械翻訳システムによる``Japan and France''のMT訳は「日本，及び，フランス」となるため，「仏」と「フランス」の照合に失敗する．
27件のうちの残りの7件は，実験に用いた機械翻訳システムの辞書に登録されていない単語が含まれていたために，関与率が閾値を超えなかったものである．
対応付け誤りのうちの抽出に原因がある6件を細かく分けると，条件[REF_cond:length]に関するものが3件であり，条件[REF_cond:comma]に関するもの，条件[REF_cond:poss]に関するもの，条件[REF_cond:adv]に関するものがそれぞれ1件ずつであった．
の抽出に原因がある10件はすべて，``the House of Representatives''が「衆院選」に対応付けられるというように，条件[REF_cond:jn]と条件[REF_cond:jn_exception]に関するものであった．
との照合に原因がある14件は主に条件[REF_cond:pp]に関連するものであった．
例えば``the Italian Embassy for 22''に「イタリア大使館」というが対応付けられるという誤りが生じていたが，関与率により抽出が抑制されなければならない．
しかし，実験に用いた機械翻訳システムで``the Italian Embassy for 22''を翻訳すると「22のイタリアの大使館」というMT訳が得られるため，このMT訳を構成する三つの名詞のうち「イタリア」と「大使館」の二つが対応に関与していることになるので，関与率が2/3となり閾値を超えていた．
提案方法の性能を，の抽出に構文解析系を利用した場合の性能と比較する．
両者の違いは，(1)を単語列から抽出するか，実験に用いた機械翻訳システムの構文解析系により生成した構文解析木から抽出するかという点と，(2)意味的不適格表現の抽出抑制を，を構成する各の関与を考慮した処理で行なうか，構文解析系で行なうかという点である．
なお，利用した構文解析系の性能評価として，前置詞付加の曖昧性解消の精度を本稿の実験とは別に評価したところ，正解率は82%であった．
構文解析系を利用した場合の性能を表[REF_tab:parser]に示す．
表[REF_tab:parser]において，(a)がベースラインの性能，(h)が提案方法の性能，(p1)ないし(p4)が構文解析系を利用した場合の性能である．
(h)と(p1)ないし(p4)を比べると，対応付け誤り件数において比較的大きな差があることが分かる．
対応付け誤りの多くは，の抽出において意味的に不適格なものが抽出され，それにが対応付けられることによって生じる．
表[REF_tab:parser]の実験結果によれば，本稿で対象としたようなとその対訳を獲得することを目的とした場合，この問題に対しては，構文解析(単一言語内での処理)で対処するよりも，を構成する各の関与を考慮した照合(二言語間での処理)で対処するほうが望ましいことを示している．
