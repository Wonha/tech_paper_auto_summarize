2つの問題 \label{2issues}

基本語ドメイン辞書構築には2つの問題がある．
1つは世界を適切に分類するドメイン体系の設計であり，もう1つは
文書集合を必要としない基本語ドメイン辞書構築技術の開発である．

1つ目の問題は，人間の外界認識の様式を明らかにするという
難問である．
本研究ではこの問題には深く立ち入らず，
表\ref{domain-table}にある，
多くの人から合意が得られやすいと思われるシンプルなドメイン体系を採用した．
このドメイン体系はOpen Directory Project (\url{http://www.dmoz.org})等の
検索ディレクトリのカテゴリを参考にした．
また，「人」や「青」のような特定のドメインに属さない
語のために\dom{ドメイン無し}も用意した．


\begin{table}[b]
\caption{本研究のドメイン体系}
\label{domain-table}
\begin{center}
\input{04table01.txt}
\end{center}
\end{table}


もう1つの問題は，
あるドメインと深く関わる単語集合を得ようとする場合，文書集合からの重要語
抽出技術がその手法の第一候補と考えられるが，
その種の手法が本研究には適用しにくいというものである．
これは，特定の専門分野を対象とした場合に比べて，
表\ref{domain-table}にあるような一般的・日常的な粒度のドメインの
文書集合を集めることが困難なことに起因する．
当初我々は，
検索ディレクトリの登録ページをそのような文書集合として利用した．
しかし，登録ページの多くはいわゆるトップページ（特定のWebサイトの「入口」
にあたるページ）で，
統計的指標でキーワードを同定するには文章量が十分ではなかった．
文章量を増やすためトップページのリンクを辿ってみたが，
そのトップページが属する1つのサイトから多くのページが収集されたため，
ドメインのキーワードというより，そのサイトのキーワー
ドというべき語が抽出された．
他に，関連性の低い広告リンクを辿ってしまうという問題もある．

そこで我々は，文書集合を必要としない基本語ドメイン辞書構築手法を開発した．
次節でその手法について述べる．



基本語ドメイン辞書構築手法 \label{domain-construction-method}

本手法のポイントは，基本語にドメインを割り当てるヒントとして，
文書集合ではなく，少数の手掛かり語集合を用いる点にある．
本手法の流れは次の通りである（図\ref{association-figure}）．


\begin{figure}[p]
\begin{center}
\includegraphics{15-5ia4f1.eps}
\end{center}
\caption{各ドメインへの基本語の割り当て}
\label{association-figure}
\end{figure}

\begin{enumerate}
 \item 各ドメインへの手掛かり語の付与（\S\ref{keyword-assignment}）
 \item 各基本語へのドメインの割り当て（\S\ref{association}）
 \item \dom{ドメイン無し}の割り当て（\S\ref{nodomain-identification}）
 \item 人手による修正（\S\ref{manual-correction}）．
\end{enumerate}

ここで注意すべきは，以下で述べる構築手法は
特定のドメイン体系に依存しないという点である．
つまり，本研究では表\ref{domain-table}にある12ドメインを採用したが，
異なるドメイン体系を採用しても以下の手法はそのまま適用可能である．


\subsection{各ドメインへの手掛かり語の付与 \label{keyword-assignment}}

表\ref{domain-table}のドメイン（\dom{ドメイン無し}以外）に20〜30語ずつ人
手で手掛かり語を与える．
手掛かり語はWeb高頻度語リストの上位から選ぶ．
\revise{その際，判断に迷う語は無視し，当該ドメインへの所属が比較的明確な
もののみを選ぶようにした．}
\footnote{\revise{
今回は著者1名がこの作業を行った．
作業者間でどの程度判断がばらつくのか，そしてそのばらつきが辞
書自動構築と後述するブログ分類にどのような影響を与えるのかは今後検討する
必要がある．
しかし，上記の作業仕様により，作業者が異なっても判断に大き
なばらつきはないと予想している．}}\ 
表\ref{ex_kw}に手掛かり語の例を挙げる．


\begin{table}[t]
\caption{手掛かり語の例}
\label{ex_kw}
\begin{center}
\input{04table02.txt}
\end{center}
\end{table}

本研究と異なるドメイン体系を採用した場合は，それに応じて，表\ref{ex_kw}
とは異なる手掛かり語を独自に収集する必要がある．
しかし，以下に述べるその後のプロセスは全く同じである．


\subsection{各基本語へのドメインの割り当て \label{association}}

基本語と（\dom{ドメイン無し}以外の）ドメインの間に関連度スコア（$A_d$スコ
ア）を定義し，
基本語を最も$A_d$スコアの高いドメインに割り当てる．
$A_d$スコアとして，基本語とドメインの各手掛かり語の間に定義される
関連度スコア（$A_k$スコア）の上位5つを合計したものを与える．
本研究では，
コーパスにおいてよく共起する語ほど関連度が高いという前提のもと，
$A_k$スコアとして$\chi^2$に基づく指標を，コーパスとしてWebを採用する
\footnote{我々が行った予備実験では，他に，相互情報量，Dice係数，Jaccard
係数を試したが，$\chi^2$が最もよい結果を示した．
これは\citeA{佐々木:佐藤:宇津呂:2006}の報告と一致する．}．
共起頻度として，基本語と手掛かり語をクエリとした場合の検索エンジンヒット
数を用いる\cite{佐々木:佐藤:宇津呂:2006}．
結局，基本語$w$と手掛かり語$k$の間の$A_k$スコアは以下のようになる．
$$A_k(w,k)=
\frac{n(ad-bc)^{2}}{(a+b)(c+d)(a+c)(b+d)}$$
ただし$n$は日本語Webページ総数で\footnote{
我々は10,000,000,000を$n$とした．
}，$a$から$d$はそれぞれ以下のようになる．
\begin{center}
\begin{tabular}{ll}
$a = hits(w\ \&\ k)$ &
$b = hits(w) - a$ \\
$c = hits(k) - a$ &
$d = n - (a + b + c)$
\end{tabular}
\end{center}
$hits(q)$は$q$をクエリとした場合のヒット数である．
この段階で，各基本語は（\dom{ドメイン無し}以外の）いずれかのドメインを割り
当てられる．


\subsection{\dom{ドメイン無し}の割り当て
  \label{nodomain-identification}}

割り当てられたドメインの$A_d$スコアが低い基本語には，そのドメインの
代わりに\dom{ドメイン無し}を割り当てる．
ここで$A_d$スコアが低いかどうかを決める閾値が必要となる．
我々が行った予備調査によると，検索エンジンヒット数が多い基本語ほど閾値を
高めに設定する必要がある．

そこで，ヒット数に応じた適切な閾値を与える関数を次の手順で得た（図
\ref{reassociation-nodomain}）．

\begin{figure}[b]
\begin{center}
\includegraphics{15-5ia4f2.eps}
\end{center}
\caption{\dom{ドメイン無し}の再割り当て：\textbf{1}から
\textbf{4}まで}
\label{reassociation-nodomain}
\end{figure}

\begin{enumerate}
 \item 〈基本語，ヒット数，割り当てられたドメインの$A_d$〉の3つ組をヒッ
ト数の降順に並べる\footnote{
\S\ref{association}の段階でこれら3つ組が全て得
られていることに注意．
}．
 \item 3つ組の集合を130のヒット数セグメントに分割する．
 \item 各セグメントから，\dom{ドメイン無し}に属すべき基本語を含む3つ組
とそれ以外の3つ組をそれぞれ5つ手作業で抽出する\footnote{
通常，前者より後者の3つ組の方が$A_d$スコアが高い．
}．
 \item セグメントごとに，\dom{ドメイン無し}に属すべき基本語を含む3つ組
とそれ以外の3つ組を分離する$A_d$スコアの値を同定する．
この値が当該ヒット数セグメントにおける閾値となる．
この段階で，（セグメントによって表された）ヒット数とその閾値のペア
が130組得られる．
 \item ヒット数と閾値の関係を最小二乗法により1次関数で近似する．
この1次関数が
ヒット数に応じた適切な閾値を与える
関数である．
\end{enumerate}


\subsection{ドメイン割り当ての性能評価}

\S\ref{keyword-assignment}から\S\ref{nodomain-identification}で述べた手
法のドメイン割り当て正解率を測定した．
\pagebreak
ドメイン割り当て結果から基本語—ドメインのペアを380組抽出し，
そのうち何\%が正解か調べた．
比較のためベースラインも用意した．
ベースラインは，全ての基本語を\dom{ドメイン無し}とした場合の正解率である．
これは，予備調査の段階で，基本語の半分以上が\dom{ドメイン無し}と判定される
ことがわかったためである．

結果として，81.3\% (309/380)の正解率を得た．
一方ベースラインの正解率は69.5\% (264/380)だった．


\subsection{複数ドメインの割り当て}

ある基本語は複数のドメインに属す．
例えば「大学院」なら\dom{教育・学習}と\dom{科学・技術}の両方に属すものと考え
られる．
しかし，上述の手法は1語を1つのドメインにしか割り当てないように設計
されている．
本節では，1語に対し複数のドメインを割り当てることが可能な，上述の手法の拡張
版について述べる．

語を，$A_d$スコアが最も高いドメインだけでなく，以下の2つ
の条件を満たすドメイン全てに割り当てる．

\begin{enumerate}
 \item そのドメインの$A_d$スコアが\S\ref{nodomain-identification}で述
べた閾値以上である．
 \item そのドメインの$A_d$スコアが最も高い$A_d$スコアに十分近い．
\end{enumerate}

2番目の条件は次のように定式化される．
$$\frac{\textrm{最も高い$A_d$ $-$ そのドメインの$A_d$}}
{\textrm{最も高い$A_d$}} < 0.01$$

この手法により，基本語—ドメインの組は814組増えた．
一方，基本語—ドメインの全ペアから392組抽出して正解率を調べたところ，
正解率は78.6\% (308/392)に落ちることがわかった．


\subsection{人手による修正 \label{manual-correction}}

人手による修正では，その正解率の高さから，複数ドメイン版ではなく，単一ド
メイン版の手法の結果を使用した．
複数ドメインを割り当てるべき基本語には人手による修正で対応した．

ドメイン割り当て結果を人手で修正するにあたって，指針をいくつか設けた．
それらの中でも重要な，複数のドメインに属する語の扱いと，多義語の扱い，
\dom{ドメイン無し}の判定基準
について述べる．


\paragraph{複数のドメインに属する語の扱い：}

複数ドメインを割り当てるべき語は，それら複数のドメインに
\textbf{同程度に}関連するもののみに限定した．
これには，基本語ドメイン辞書をなるべくシンプルなものにするという狙いが
ある．
複数ドメインを割り当てた語には，「大学院」（\dom{教育・学習}と
\dom{科学・技術}），「登山」（\dom{レクリエーション}と\dom{スポーツ}），
「円高」（\dom{ビジネス}と\dom{政治}）などが含まれる．
一方で，複数ドメインに属すると考えられるが，関連性が同程度では
ないために単一ドメインと判定された語として，例えば「微分」や「ゴルフ」が
ある．
前者は\dom{教育・学習}のみとし，\dom{科学・技術}には含めなかった．
後者は\dom{スポーツ}のみとし，\dom{レクリエーション}には含めなかった．


\paragraph{多義語の扱い：}

多義語には，各語義に対応するドメインを割り当てる．
例えば，「ボール」には\dom{スポーツ}と\dom{料理・食事}が割り当てられる．

\paragraph{\dom{ドメイン無し}の判定基準：}

今回構築した基本語ドメイン辞書では，特定ドメインの割り当ては「保守的」に
行われた．
つまり，どのドメインに属するか意見が分かれそうな語，あるいは多くのドメ
インに属すると考えられる語は，無理に特定のドメ
インを割り当てるのではなく，
\dom{ドメイン無し}と判定した．
今回の構築では，属するドメインが4つまでなら
それぞれのドメインを割り当てた．5つ以上のドメインに属すると考えら
れる場合は\dom{ドメイン無し}にした．
例えば「委員」や「組織」などが該当する．


基本語ドメイン辞書の詳細 \label{dic-spec}

表\ref{breakdown_domain-dictionary}は完成した基本語ドメイン辞書の語の内
訳である．
\dom{ドメイン無し}が63\%と大半を占めるのは，\S\ref{manual-correction}
で述べた\dom{ドメイン無し}の判定基準に従ったためである．
また，複数ドメインを割り当てられた語は787語 (26.2\%)だった．


\begin{table}[b]
\caption{基本語ドメイン情報の内訳}
\label{breakdown_domain-dictionary}
\input{04table03.txt}
\end{table}

完成した基本語ドメイン辞書は，JUMANに組み込んで，それとともに配布してい
る．
JUMANは下記のWebサイトで入手可できる．

\begin{itemize}
 \item \url{http://nlp.kuee.kyoto-u.ac.jp/nl-resource/juman.html}
\end{itemize}

JUMANで，例えば「研究室のゼミで先生と議論した．」を形態素解析す
ると図\ref{juman-pic}のようになる．
「研究」，「ゼミ」，「先生」は特定のドメインに属する語であり，
基本語ドメイン辞書から当てはまるドメインが付与される．
それ以外の語は\dom{ドメイン無し}の語である．

\begin{figure}[t]
\includegraphics{15-5ia4f3.eps}
\caption{JUMAN解析結果中のドメイン情報}
\label{juman-pic}
\end{figure}


ブログ自動分類への応用 \label{bunrui-method}

基本語ドメイン辞書の評価の一環として，ブログ記事を，\dom{ドメイン無し}以
外の12ドメインに分類する実験を行った．
ブログ自動分類を取り上げた理由は，ブログが近年自然言語処理において注目を
集めていることと，文書分類が基本語ドメイン辞書を最も直接的に適用できるタ
スクであることの2点である．

本研究では基本語ドメイン辞書を利用してブログ記事を分類する．
その概略は，記事中の語にドメインを付与して，その結果，最も支配的なドメ
インをその記事のドメインとする，というものである（図\ref{bunrui-syuhou}）．


\begin{figure}[t]
\begin{center}
\includegraphics{15-5ia4f4.eps}
\end{center}
\caption{ブログ分類手法の全体像}
\label{bunrui-syuhou}
\end{figure}

より具体的には次のようになる．

\begin{enumerate}
 \item 記事中の語を抽出する．
 \item 各語にドメインとIDF値を付与する．
 \item ドメインごとに，割り当てられた語のIDF値を合計．
 \item IDF値合計が最も高いドメインを記事に割り当てる\footnote{今回の実験
       では，IDF値合計が最も高いドメインが〈ドメイン無し〉の場合は2番目
       のドメインを割り当てた．}．
\end{enumerate}

IDF値は次の定義に従う\footnote{我々は10,000,000,000を日本語Webページ総
数とした．}．
$$\textrm{語のIDF値}=log\frac{\textrm{日本語Webページ総数}}
{\textrm{語のWebヒット数}}$$

なお，今回実験に使用した基本語ドメイン辞書には，各基本語に対して，そのド
メインだけでなくIDF値もあらかじめ付与しておいた．

記事からの単語の抽出方法として，\S\ref{eval}で述べる評価実験では次の3通
りを試みた．

\begin{enumerate}
\renewcommand{\labelenumi}{}
 \item 基本語 
 \item 基本語と未知語 
 \item 基本語と未知語と複合名詞
\end{enumerate}

基本語は基本語ドメイン辞書にある語で，未知語とは，例えば「コンプライアン
ス」などのように，基本語ドメイン辞書にない語である．
複合名詞は「贈収賄／容疑」や「軍需／企業」などが該当する．
本研究では同じ文節内にある名詞の連続を複合名詞として認識している．
複合名詞は，未知語と同様，基本語ドメイン辞書に含まれていない．
また，上記A.あるいはB.の場合，複合名詞は単語に分割され，
その中の基本語のみが抽出される．
例として，「コンプライアンスが叫ばれる中，贈収賄容疑をかけられた軍需商社
と次官は$\cdots$」という内容の記事から，上の3通りの方法で語を抜き出した
結果を図\ref{words-ext}に示す．


\begin{figure}[t]
\begin{center}
\includegraphics{15-5ia4f5.eps}
\end{center}
\caption{記事からの3通りの語抽出}
\label{words-ext}
\end{figure}

ブログ分類時に未知語あるいは未知語と複合名詞両方を用いる場合は，
語抽出の段階で基本語とそれ以外にわける必要がある．
これは，基本語は基本語ドメイン辞書からドメインとIDF値が与えられるのに対
し，未知語と複合名詞は\S\ref{unknown_domest}で述べる方法により，
動的にドメインとIDF値が推定されるためである．

以下，未知語と複合名詞を区別せず，両者を合わせて「未知語」と呼ぶことにす
る．
両者を区別する必要がある場合は，前者を「単純未知語」，後者を「複合名詞未
知語」と呼ぶ．



未知語ドメイン推定 \label{unknown_domest}

未知語（単純未知語と複合名詞未知語の両方）のドメインはWeb上の情報を利用
して推定する．
これは，Webに書かれていると考えられる，その未知語の世の中での解釈を利用
するのが狙いである．
Web上の情報として，より具体的には，Wikipediaの記事と，Web検索結果
\footnote{本研究ではYahoo!JAPANを用いた．}のタイトルとスニペットを利用する．
後述するように，未知語ドメイン推定においても基本語ドメイン辞書を活用する．

未知語ドメイン推定は次の手順に従う（図\ref{unknown-domest-pic}）．

\begin{figure}[b]
\begin{center}
\includegraphics{15-5ia4f6.eps}
\end{center}
\caption{未知語ドメイン推定手法の全体像}
\label{unknown-domest-pic}
\end{figure}

\begin{enumerate}
 \item 未知語をクエリとしてWeb検索を実行する．その際，検索結果から得られ
       るWebヒット数をもとに，その未知語のIDF値を計算する．
 \item 検索結果上位100件の中に，その未知語とエントリが完全一致する
       Wikipedia記事があれば，その記事を取得して，記事中の
       基本語を手掛かりにドメインを推定し，終了．
     （\textbf{Wikipedia-strict法}）
 \item もし未知語とエントリが完全一致するWikipedia記事が無ければ，検索結
       果上位30件の中から何らかのWikipedia記事を探し，もしあれば，その記
       事中の基本語を手掛かりにドメインを推定し，終了
       \footnote{例えば未知語が「亀田兄弟」で，検索結果に「亀田兄弟」
       とエントリが完全一致するWikipedia記事がない場合，検索結果上位30件
       から何らかのWikipedia記事を探す．この例の場合，「亀田三兄弟」のエ
       ントリのWikipedia記事が見つかるので，その記事を取得し，ドメイン推
       定に利用する．}．
     （\textbf{Wikipedia-loose法}）
 \item Wikipedia記事が全く見つからなければ，検索結果から企業の広告サイト
       等のタイトルとスニペットを除外し，その残りのタイトルとスニペット
       にある基本語を手掛かりにドメインを推定し，終了．
       （\textbf{Snippets法}）
 \item 企業サイトを全て削除すると何も残らない場合もある．その場合，
       未知語が基本語を構成素に持つ複合語なら，その構成語のドメインから
       未知語のドメインを推定して終了．
       （\textbf{Components法}）
 \item 検索結果に，Wikipedia記事も，企業サイト以外のサイトも無く，
       また，その未知語が基本語を構成素に持つ複合語でもない場合，
       ドメイン推定不可能のメッセージを出力して終了．
\end{enumerate}

未知語ドメイン推定で用いられるWikipedia-strict法，Wikipedia-loose法，
Snippets法，Components法について順に説明する．
これらに共通するのは，手掛かりとなる記述（Wikipedia記事，検索結果のタイ
トルとスニペット，複合語の構成語）にある基本語のドメインを調べ，最も支配
的なドメインをその未知語のドメインとする，という発想である．

\subsection{Wikipedia(-strict$|$-loose)法}

Wikipedia-strict法とWikipedia-loose法の流れは次の通りである（図
\ref{Wikipedia-pic}）．

\begin{figure}[t]
\begin{center}
\includegraphics{15-5ia4f7.eps}
\end{center}
\caption{Wikipedia(-strict$|$-loose)手法による未知語ドメイン推定}
\label{Wikipedia-pic}
\end{figure}

\begin{enumerate}
 \item 検索結果をもとにWikipedia記事を取得する．
 \item 記事から基本語のみを抽出する．
 \item 基本語ドメイン辞書を参照して，各基本語にドメインとIDF値を付与する．
 \item IDF値合計が最も高いドメインを未知語に割り当てる．ただし，IDF値合計
       が最も高いドメインが〈ドメイン無し〉の場合，次の条件のもと，2番目
       にIDF値が高いドメインに割り当てる．
       $$\frac{\textrm{2番目のドメインのIDF値}}{\textrm{〈ドメイン無し〉のIDF値}}>0.15$$
\end{enumerate}

ドメイン推定の所要時間は，Wikipedia-strict法，Wikipedia-loose法
ともに約10秒である\footnote{
使用した計算機はDell PowerEdge 830（Pentium Dプロセッサ 3.00~GHz，
メモリ512~MB）である．
}．


\subsection{Snippets法}

Snippets法の流れは次の通りである．
\begin{enumerate}
 \item 企業の広告サイト等のタイトルとスニペットを検索結果からあらかじめ
       除外しておく．
       \begin{itemize}
	\item 次のリスト中の語がタイトルとスニペットに2回以上現れたら，
	      それを企業サイトのものと判断する\footnote{このリストは，ブ
	      ログ分類の予備実験におけるエラー分析をもとに作成した．}．
	      \begin{quote}
	       会社，株式，商品，販売，製品，価格，無料，市場，企業，ショッ
	       プ，通販，事業，発売，サービス，法人，店舗，購入，採用，
	       会員，業務，当社，営業，工業，ビジネス，広告，仕事，出荷，
	       料金
	      \end{quote}
       \end{itemize}
 \item 検索結果から基本語のみを抽出する．
 \item 基本語ドメイン辞書を参照して，各基本語にドメインとIDF値を付与する．
 \item IDF値合計が最も高いドメインを未知語に割り当てる．ただし，IDF値合計
       が最も高いドメインが〈ドメイン無し〉の場合，次の条件のもと，2番目
       にIDF値が高いドメインに割り当てる．
       $$\frac{\textrm{2番目のドメインのIDF値}}{\textrm{〈ドメイン無し〉のIDF値}}>0.15$$
\end{enumerate}

あらかじめ企業サイトのタイトルとスニペットを除外するのは次の理由による．
検索結果には企業の広告サイト等のタイトルとスニペットが含まれうるが，
これが多くなると，未知語の本来のドメインとは関係なく\dom{ビジネス}と
誤判定されてしまう．
例えば「プロピレングリコール」という未知語は，本来\dom{科学・技術}に属す
るべきだが，検索結果に医療あるいは工業関係の企業が多数現れるため\dom{ビ
ジネス}と誤判定されてしまう．
これを防ぐために企業サイトのタイトルとスニペットを除外しておく．

ドメイン推定の所要時間は6秒程度である\footnote{
これは，
未知語が入力されてから，Wikipedia-strict法とWikipedia-loose法を経由した
後，Snippets法によりドメインが出力されるまでの時間である．
2つのWikipedia法の方が先に実行されるにも関わらず所要時間が長いのは，
Snippets方が既に得られている検索結果を手掛かりとする一方，
2つのWikipedia法では，新たにWebにアクセスし，Wikipedia記事を取得する手間
がかかるためである．
}．


\subsection{Components法}

Components法の流れは次の通りである．

\begin{enumerate}
 \item 未知語を構成する基本語を抽出する．
 \item 基本語ドメイン辞書を参照して，各基本語にドメインとIDF値を付与する．
 \item IDF値合計が最も高いドメインを未知語に割り当てる．ただし，IDF値合計
       が最も高いドメインが〈ドメイン無し〉の場合，次の条件のもと，2番目
       にIDF値が高いドメインに割り当てる．
       $$\frac{\textrm{2番目のドメインのIDF値}}{\textrm{〈ドメイン無し〉のIDF値}}>0.15$$
\end{enumerate}

例えば未知語が「金融市場」の場合，その構成語である基本語「金融」と「市場」
のドメインを手掛かりとして「金融市場」のドメインを得る．

ドメイン推定の所要時間は約4秒である\footnote{
これは，
未知語が入力されてから，Wikipedia-strict法とWikipedia-loose法，Snippets
法を経由した後，Components法によりドメインが出力されるまでの時間である．
他の3つの手法よりも高速なのは，基本語抽出対象が他の手法よりもずっと小規
模で，かつ，Wikipedia法のように新たにWebにアクセスする必要もないからであ
る．
}．


