1 現在統計的言語モデル の 一クラス として 確率文脈自由文法probabilisticcontextfreegrammar以下PCFG が 広く 知ら れ て いる 
0 PCFG は 文脈自由文法contextfreegrammar以下CFG の 生成規則 に 確率パラメタ が 付与 さ れ た もの と 見る こと が でき それら の パラメタ によって 生成 さ れる 文 の 確率 が 規定 さ れる 
0 しかし すべて の パラメタ を 人手 で 付ける の は コスト と 客観性 の 点 で 問題 が ある 
0 そこで 計算機 による コーパス から の PCFG の パラメタ推定 すなわち PCFG の 訓練training が 広く 行なわ れ て いる 
0 現在構造つきコーパス中 の 規則出現 の 相対頻度 に 基づき PCFG を 訓練 する 方法以下相対頻度法 と 呼ぶ が 広く 行なわ れ て いる が 我々 は より 安価 な 訓練データ として 分かち書き さ れ て いる 形態素解析済み の 括弧 なし コーパス を 用いる 
1 括弧 なし コーパス から の PCFG の 訓練法 として は InsideOutsideアルゴリズムCITE が 広く 知ら れ て いる 以下IOアルゴリズム と 略す 
1 IOアルゴリズム は CYKCockeYoungerKasamiパーザ で 用い られる 三角行列 の 上 に 構築 さ れ た PCFG用 の EMexpectationmaximizationアルゴリズムCITE と 特徴 づける こと が できる 
0 IOアルゴリズム は 多項式オーダ の EMアルゴリズム で あり 効率的 と さ れ て いる が 訓練コーパス の 文 の 長 さ に対し 3乗 の 計算時間 を 要する ため 大 規模 な 文法コーパス から の 訓練 は 困難 で あっ た 
0 また 基 に なる CFG が Chomsky標準形 で なけれ ば なら ない という 制約 を もっ て いる 
1 一方 本 論文 で は PCFG の 文法構造基 に なる CFG が 所与 で ある とき の 効率的 な EM学習法 を 提案 する 
0 提案手法 は wellformedsubstringtable以下WFST と 呼ば れる データ構造 を 利用 し て おり 全体 の 訓練過程 を 次 の 2段階 に 分離 し て PCFG を 訓練 する 
0 
0 はじめ に パーザ によって 与え られ た テキストコーパス もしくは タグ付きコーパス中 の 各 文 に 構文解析 を 施し その 文 の 構文木すべて を 得る 
0 ただし 構文木 は 実際 に 構築 せ ず に 途中 で 構築 さ れる WFST の まま で とどめ て おく 
0 
0 上 で 得 られ た WFST から 支持グラフ と 呼ば れる データ構造 を 抽出 し 新た に 導出 さ れ た グラフィカルEMgraphicalEM以下gEM と 略記アルゴリズム を 支持グラフ上 で 走ら せる 
0 WFST は 構文解析途中 の 部分的 な 解析結果部分構文木 を 格納 する データ構造 の 総称 で あり CITEパーザ は WFST を 参照 する こと により 再 計算 を 防い で いる 
0 また 最終的 に WFST に 格納 さ れ て いる 部分構文木 を 組み合わせ て 構文木 を 出力 する 
0 表 REF_tabWFST に 各 構文解析手法 における WFST を 掲げる 
0 なお Fujisakiら も 文法 が 所与 で ある として 上 の 2段階 で PCFG を 訓練 する 方法 を 提案 し て いる が CITE その 方法 で は WFST は 活用 さ れ て い ない 
0 提案手法 の 特長 は 従来法 で ある IOアルゴリズム の 一般化 と 高速化 が 同時に 実現 さ れ た 点 すなわち 
0 特長1従来 の PCFG の EM学習法 の 一般化 と なっ て いる 
0 特長2現実的 な 文法 に対して は IOアルゴリズム に 比べ て EM学習 が 大幅 に 高速化 さ れる 
0 特長3提案手法 が PCFG に 文脈依存性 を 導入 し た 確率言語モデルPCFG の 拡張文法 と 呼ぶ に対する 多項式オーダ の EMアルゴリズム を 包含 する 
0 点 に ある 
0 先述 し た よう に IOアルゴリズム は CYK法 の WFST で ある 三角行列 を 利用 し て 効率的 に 訓練 を 行なう 手法 と 捉える こと が でき 提案手法 の CYK法 と gEMアルゴリズム を 組み合わせ た 場合 が IOアルゴリズム に 対応 する 
0 一方 提案手法 で Earleyパーザ や 一般化LR以下GLRパーザ と 組み合わせる 場合文法構造 に Chomsky標準形 を 前提 と し ない ため本手法 は IOアルゴリズム の 一般化 と なっ て いる 
0 加え て 本 論文 で は Stolcke の 確率的EarleyパーザCITE や Pereira と Schabes によって 提案 さ れ た 括弧 なし コーパス から の 学習法CITE も 提案手法 の 枠組 で 扱う こと が できる こと を 示す 
0 また 特長2 が 得 られる の は 提案手法 で は が WFST という コンパクト な データ構造 のみ を 走査 する ため で ある 
0 そして LR表 へ の コンパイルボトムアップ解析 といった 特長 により 実用的 に は 最も 効率的 と さ れる 一般化LR法CITE以下GLR法 を 利用 できる 点 も 訓練時間 の 軽減 に 効果 が ある と 考え られる 
0 そして 特長3 は 提案手法 の 汎用性 を 示す もの で あり 本 論文 で は 北ら の 規則バイグラムモデルCITE の 多項式オーダ の EMアルゴリズム を 提示 する 
0 本 論文 の 構成 は 次 の 通り で ある 
0 まず 節REF_secPCFG で PCFGCYKパーザIOアルゴリズム および それら の 関連事項 の 導入 を 行なう 
0 IOアルゴリズム と 対比 さ せる ため提案手法 を CYKパーザ と gEMアルゴリズム の 組合せ を 対象 に し た 場合 を 節REF_secGEM で 記述 し た 
0 特長2 を 検証 する ためGLRパーザ と gEMアルゴリズム を 組み合わせ た 場合 の 訓練時間 を ATR対話コーパスSLDB を 用い て 計測 し た 
0 その 結果 を 節REF_secexperiment に 示す 
0 また 特長3 を 具体的 に 示す ため節REF_secextensions で は PCFG の 拡張文法 に対する 多項式オーダ の EMアルゴリズム を 提示 する 
0 最後 に 節REF_secrelatedwork で 関連研究 について 述べ 特長1 について 考察 する 
0 本 論文 で 用いる 例文法例文 および それら に 基づく 構文解析結果 の 多く は CITE の もの もしくは それ に 手 を 加え た もの で ある 
1 以降 で は MATH を 非終端記号 を 表す メタ記号MATH を 終端記号 を 表す メタ記号MATH を 一つ の 終端 または 非終端記号 を 表す メタ記号MATHMATHMATH を 空列 もしくは 終端記号 または 非終端記号 から 成る 記号列 を 表す メタ記号 と する 
0 空列 は MATH と 書く 
0 一方 一部 の 図 を 除き 具体的 な 文法記号 を MATH など タイプライタ書体 で 表す 
0 また MATH を 第 MATH要素 と する リスト を MATH で 表現 する 
0 また リストMATH で ある ときMATH と 書く 
1 集合MATH の 要素数記号列MATH に 含ま れる 記号数リストMATH の 要素数 を それぞれMATHMATHMATH で 表す 
0 これら は どれ も 見た目 は 同じ だ が 文脈 で 違い を 判断 できる 
