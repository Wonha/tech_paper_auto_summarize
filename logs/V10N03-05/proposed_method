ILP による多義語の曖昧性解消


ILP による分類問題の解決については，書籍\cite{furukawa}に詳しく解説されている．
ここでは関連する事柄についてのポイントのみを述べる．

自然言語処理の個々の問題の多くは分類問題として以下のように定式化できる．
まず分類先のクラスの集合\( C = \{ c_1,c_2, \cdots, c_m \} \)を
設定し，次に事例\( x \)を\( n \)個の要素からなる素性ベクトル\( ( f_1, f_1, \cdots, f_n ) \) で表す．
各素性は事例を識別するための観点に対応する．
\( k \)番目の素性を\( attr_k \)と名前をつけておく．
訓練事例は事例\( x \)とそのクラス\( c_x \) の対の情報\( (x, c_x) \)であり，
これを多数集めたものが訓練データとなる．
確率統計的な帰納学習手法（決定木，決定リスト，ME 法など）は訓練データを入力として，
分類器\( F \) を構築する．分類器\( F \)への入力は事例であり，出力はクラスである．
分類問題を解決するとは，この分類器\( F \)を作成することである．

ILP では訓練事例\( (x, c_x) \)を以下の節で表現する．

\bigskip

\hspace{25mm}
\begin{minipage}[t]{50mm}
\verb|class (|{\bf x}, \(\bf{c_x}\)).\\
\verb|attr_1 (|{\bf x}, \(\bf{f_1}\)).\\
\verb|attr_2 (|{\bf x}, \(\bf{f_2}\)).\\
 ...\\
\verb|attr_n (|{\bf x}, \(\bf{f_n}\)).
\end{minipage}

\bigskip

これらの節が訓練データとなる．ILP ではここからあるクラスにのみ共通して見られ，他の
クラスには見られないある種のパターンの発見を行う．これは本質的に帰納推論の処理である．
その結果，例えば，以下のような節を ILP は出力する．

\bigskip

\hspace{25mm}
\begin{minipage}[t]{50mm}
\verb|class(X,c) :- attr_5(X, h).|
\end{minipage}

\bigskip

これは事例\verb| X |の 5 番目の素性が\verb| h |であれば，事例\verb| X |のクラスが\verb| c |であることを示している．
また左辺が\verb| class(Y,c) |である節が他になくしかも，
事例\verb| X |の 5番目の素性が\verb| h |でなければ，事例\verb| X |のクラスは\verb| c |でないことも示している．

ここまでは特に確率統計的な手法と大きな違いはない．確率統計的手法にはない ILP の大きな
特徴は，訓練データ中に任意の述語や節を記述できる点である．
この与えられた訓練事例の集合以外から追加される述語や節を背景知識と呼ぶ．
つまり問題固有の知識や，人間の常識といったものを
背景知識として訓練データ内に簡単に追加できることが ILP の大きな特徴となっている．
特に，述語論理の節の表現力は高く，ILP は表形式（素性ベクトル）では表現できない複雑な構造を持つ訓練事例も表現できる．

以下，ILP によって多義語の曖昧性解消を行う．利用する素性は以下の4種類を用いた．

\begin{verbatim}
      対象単語の直前の単語  e1 
      対象単語の直後の単語  e2 
      e1 から前方3単語  e3 
      e2 から後方3単語  e4
\end{verbatim}

例を示す．対象とする多義語を「与える」として「彼では力不足という印象を与えるかもしれない。」
という文は，以下のように形態素解析される．第1列が表記，第2列が原型，第3列が品詞を表す．

\begin{verbatim}
       彼          彼         普通名詞      
       で          で         格助詞        
       は          は         副助詞        
       力          力         普通名詞      
       不足        不足       サ変名詞      
       と          と         格助詞        
       いう        いう       動詞
       印象        印象       普通名詞      
       を          を         格助詞        
       与える      与える     動詞
       かも        かも       接続助詞      
       しれ        しれる     動詞
       ない        ない       形容詞性述語接
       。          。         句点          
\end{verbatim}

ここから以下の素性が得られる．

\begin{verbatim}
        e1 = 'を'
        e2 = 'かも'
        e3 = {'と'，'いう'，'印象'}
        e4 = {'しれ'，'ない'}
\end{verbatim}

例えば，この例文の ID が \verb| sen25 |であり，
この文の「与える」の語義 ID が\verb| ataeru2 |だとすれば，
この例文に対するデータは，以下の節で表現される．

\begin{verbatim}
       class(sen25, ataeru2).
       e1(sen25, 'を').
       e2(sen25, 'かも').
       e3(sen25, 'と'). 
       e3(sen25, 'いう').
       e3(sen25, '印象').
       e4(sen25, 'しれ').
       e4(sen25, 'ない').
\end{verbatim}


分類語彙表の利用


前節の設定で，訓練事例を節に変換すれば，ILP により分類規則が
節の形で得られる．ここで得られる規則を，背景知識を利用することで
更に高めることも可能である．

本論文では，背景知識として分類語彙表\cite{bunrui-tab}を利用する．
分類語彙表は木構造をもったシソーラスである．
ただし木のリーフノードにのみ単語が配置されている．
つまり木のあるノード以下に位置するリーフノードの単語群は
そのノードの階層において同一の意味クラスに属すると考えて良い．
当然階層が上がるほど，同じ意味クラスの単語は増加することになる．

\begin{figure}[htbp]
\begin{center}
\epsfxsize=95.67mm
\epsfbox{bunrui2.eps}
\end{center}
\caption{分類語彙表}\label{fig::bunrui}
\end{figure}

例えば\mbox{図\ref{fig::bunrui}}において一番下の階層で考えると，
「課題」「宿題」「問題」は同じ意味をもつグループとなり，
「語意」「題意」「意義」は別の意味のグループとなる．
1 つ上の階層で考えると，これらの単語はすべて同じ意味をもつ単語と見なせる．
本論では一番下の階層でみた場合のグループの単語を同じ意味をもつ単語とした．

図\ref{fig::ex_rule}に示した規則は，素性（\verb|e1|，\verb|e2|，\verb|e3|，
\verb|e4| の単語）と，分類語彙表に含まれる単語と，その単語と同じ意味を持
つ単語を結び付ける．つまり，ILP は同じ意味の単語を同じ単語として扱う
ようになる．述語\verb|b| は，分類語彙表の単語とその意味の番号の組
を表す．述語 \verb|e1 〜 e4| は，文の素性を表す．
述語 \verb|e1_w 〜 e4_w| は，単語の代わりに語義を用いることによって述語\verb|e1 〜 e4|
を拡張したものであり，\verb|e1 〜 e4|の代りに素性として用いられる．

\begin{figure}[htbp]
\begin{verbatim}
           e1_w(ID, Number) :- e1(ID, Word), b(Word, Number).
           e2_w(ID, Number) :- e2(ID, Word), b(Word, Number).
           e3_w(ID, Number) :- e3(ID, Word), b(Word, Number).
           e4_w(ID, Number) :- e4(ID, Word), b(Word, Number).
\end{verbatim}
\caption{単語を語義に一般化する規則}
\label{fig::ex_rule}
\end{figure}



