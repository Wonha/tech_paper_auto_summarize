\documentstyle[epsf,jnlpbbl]{jnlp_j_b5}      

\setcounter{page}{23}
\setcounter{巻数}{9}
\setcounter{号数}{5}
\setcounter{年}{2002}
\setcounter{月}{10}
\受付{2002}{1}{18}
\再受付{2002}{4}{11}
\再々受付{2002}{5}{20}
\採録{2002}{7}{17}

\setcounter{secnumdepth}{2}

\title{構文解析と融合した階層的句アライメント}
\author{今村 賢治\affiref{ATR-SLT}}

\headauthor{今村}
\headtitle{構文解析と融合した階層的句アライメント}

\affilabel{ATR-SLT}
{ATR音声言語コミュニケーション研究所}
{ATR Spoken Language Translation Research Laboratories}

\jabstract{
本稿では，機械翻訳知識の自動獲得を目的とした，2言語の対訳文の階層的句
アライメントについて提案する．従来提案されてきた句アライメント方法は，
いずれも構文解析結果を取得したのちに，部分木同士の対応をとるものであっ
た．本稿で提案する方式は，構文解析器が持つ部分解析結果を句対応スコアと
呼ぶ構造類似性評価尺度で評価し，前向きDP後ろ向きA*アルゴリズムを用いて
最適な組み合わせを探索する．この方式を用いることにより，実験では従来手
法に比べ2倍の同等句を得ることができ，そのときの精度の低下はほとんどな
いことが観察された．\\
\indent また，本提案方式は単語アライメントを用いる．この単語レベルの対
応は，内容語のみでなく，機能語間対応を含めた方が句アライメント精度が向
上する．その一般形として，本方式に適合した単語アライメントは，再現率重
視のものが望ましいことを併せて示す．}

\jkeywords{句アライメント，用例ベース機械翻訳，翻訳知識獲得，
部分構文解析，単語アライメント精度}

\etitle{Hierarchical Phrase Alignment \\ Harmonized with Parsing}
\eauthor{Kenji Imamura \affiref{ATR-SLT}} 

\eabstract{
In this paper, we propose a hierarchical phrase alignment method that
aims to acquire translation knowledge.  Previous methods utilize the
correspondence of sub-trees between bilingual parsing trees after
determining the parsing result.  The method described in this paper
combines partial tree candidates, and selects the best sequence of
partial trees.  Then, a structural similarity measure (called a
`phrase score') is used for evaluation. A forward DP backward $A^{*}$
search algorithm is applied in order to combine partial trees.  Using
this method, about twice as many as equivalent phrases were extracted
experimentally, and almost no deterioration was observed. \\
\indent This method employs word alignment. The accuracy of the phrase
alignment increases when we consider the word correspondences between
not only content words but also functional words. In addition, we
found that a word alignment method with a high recall rate is suitable
for this method.}

\ekeywords{Phrase Alignment, Example-Based Machine Translation,
Translation Knowledge Acquisition, Partial Parsing, Word Alignment
Accuracy}



\newcommand{\smalltable}{}

\newcounter{condctr}
\newenvironment{conditionlist}{}{}

\newcounter{casectr}
\newcommand{\caselist}[1]{}


\begin{document}
\maketitle
\thispagestyle{empty}


\section{階層的句アライメントの基本方式}
\label{sec-phrase-alignment}

対訳文，特に原言語を翻訳して対訳を作成した場合，別語族の言語であっても
同じ種類の句に翻訳されることが多いと考えられる．たとえば，動詞句``{\em
arrive in New York}''は，日本語も「ニューヨークに着く」という動詞句に
翻訳される場合が多い．

このような性質を踏まえ，我々は「対訳文の連続領域が同じ情報を持ち，かつ
句の種類が同じであれば，それは同等な句と見なせる」と仮定する．これを処
理可能な表現で置き換える必要があるため，ここでは，

\begin{conditionlist}
\item 「同じ情報を持つ」→「2文間で，対応づけられている単語に過不足がない」
\label{cond-same-information}
\item 「句の種類が同じ」→「構文カテゴリが同じ」
\label{cond-same-category}
\end{conditionlist}

\noindent
と解釈することとする．

上記2条件を満たす句を抽出するには，以下の処理手順となる(図
\ref{fig-proc})．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-proc.eps,scale=0.812802}
\caption{階層的句アライメントの処理フロー}\label{fig-proc}
\end{center}
\end{figure}

\begin{enumerate}\labelwidth=25pt
\item まず，日本語文，英語文ともに形態素解析，構文解析を行う．

\item 次に，単語アライメントを行い，文間の単語レベルの対応をとる．ここ
では，$W$個の単語対(これを単語リンクと呼び，$WL(\mbox{英語単語},\mbox
{日本語単語})$と表現する)が抽出されたとする．単語アライメント方法は，
特に統計ベースの方法が多数提案されているため
\footnote{たとえば，
\shortciteA{Melamed:WordAlignment2000,Sumita:WordAlignment2000}などを
参照のこと．}，その方式については本稿では特に議論しない．

\item 次に，単語リンクのうち，$i$個のリンク($1 < i \leq W$) を選択し，
それらをすべて含み，それ以外をまったく含まない構文解析木のノードをすべ
て取得する．\label{num-get-node}

\item 入力文1のノードと入力文2のノードを比較し，構文カテゴリが同じであ
る場合，それを同等な句と見なす．ただし，文または助動詞を含んだ動詞句が
複数取得された場合は最大範囲を示すものを，それ以外の場合で同じ種類の句
が複数取得された場合は最小範囲を示すものを取得する．
\label{num-combination}

\item 処理\ref{num-get-node}, \ref{num-combination}を，すべての単語リンク
の組み合わせについて試験する．
\end{enumerate}

\paragraph{処理例(1)}

たとえば，英語``{\em I have just arrived in New York.}''と，その日本語
訳「{ニューヨークに着いたばかりです．}」があったとする．単語リンクが
$WL(\mbox{\em New York}, \mbox{ニューヨーク})$, $WL(\mbox{\em
arrive},\mbox{着く})$の2つあり，構文木が図\ref{fig-example1}のようであっ
たとすると，以下のとおり句の対応が取られる．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-ex1.eps,scale=0.858984}
\caption{英語と日本語の句の対応例}
(上段が英語，下段が日本語を，言語間の実線は単語リンクを表す．以下同様)
\label{fig-example1}
\end{center}
\end{figure}

\begin{enumerate}\labelwidth=25pt
\item 葉に$WL(\mbox{\em New York}, \mbox{ニューヨーク})$のみを含む(つ
まり，$WL(\mbox{\em arrive},\mbox{着く})$を含まない)英語構文木上のノー
ドと，日本語構文木のノードを比較し，同じ種類のノードがある場合，それを
同等句とする．この例では，{\tt NP(1)}同士，{\tt VMP(2)}同士のノードが
それに該当する．
\item 同様に，葉に$WL(\mbox{\em arrive},\mbox{着く})$のみを含む英語ノー
ドと日本語ノードを比較し，同じ種類のノードを同等句とする．この例では，
{\tt VP(3)}同士のノードがそれに該当する．
\item 次に，$WL(\mbox{\em New York}, \mbox{ニューヨーク})$と
$WL(\mbox{\em arrive},\mbox{着く})$の両方を含むノードを比較し，同じ種
類のノードを同等句とする．この例では，{\tt VP(4)}同士，{\tt AUXVP(5)}
同士，{\tt S(6)}同士が該当する．
\end{enumerate}

従って，最終的に表\ref{tbl-alignment-result}に示す6つの同等句が得られ
る．

\begin{table*}
\begin{center}
\caption{句アライメント結果例}\label{tbl-alignment-result}
{\smalltable
\begin{tabular}{c|ll}
\hline\hline
構文カテゴリ & 英語句 & 日本語句 \\
\hline
{\tt NP}    & {\em New York} & {ニューヨーク} \\
{\tt VMP}   & {\em in New York} & {ニューヨークに} \\
{\tt VP}    & {\em arrive} & {着く} \\
{\tt VP}    & {\em arrive in New York} & {ニューヨークに着く} \\
{\tt AUXVP} & {\em have just arrived in New York} 
	    & {ニューヨークに着いたばかりです} \\
{\tt S}     & {\em I have just arrived in New York} 
	    & {ニューヨークに着いたばかりです} \\
\hline\hline
\end{tabular}
}
\end{center}
\end{table*}

本例は，2つの単語リンクが存在する場合であるが，3単語の場合はリンク1を
含みリンク2，3を含まない句，リンク1，2を含みリンク3を含まない句，リン
ク1，2，3をすべて含む句のように，組み合わせ的に句を取得する．これによ
り，同等句が階層的に得られる．

なお，英語と日本語では，当然，構文カテゴリは異なるが，今回は両者の構文
カテゴリを言語共通と考えられる表\ref{tab-phrase-type}に示すような7種類
に分類した．このような抽象化を行うことにより，異なる言語の構文カテゴリ
の比較が可能となる．

\begin{table}
\begin{center}
\caption{構文カテゴリの分類}\label{tab-phrase-type}
{\smalltable
\begin{tabular}{ccl}
\hline\hline
句の種類 & 記号 & \multicolumn{1}{c}{備考} \\
\hline
名詞句		& {\tt NP}	& \\
動詞句		& {\tt VP}	& \\
助動詞付動詞句	& {\tt AUXVP}	& 助動詞を含んだ動詞句 \\
連用修飾句	& {\tt VMP}	& 用言を修飾する句． \\
連体修飾句	& {\tt NMP}	& 体言を修飾する句． \\
独立句		& {\tt INDP}	& 感動詞等\\
文		& {\tt S}	& \\
\hline
その他		& 	& 言語依存の句．比較対象外 \\
\hline\hline
\end{tabular}
}
\end{center}
\end{table}

\paragraph{処理例(2)}

言語が異なると，単語同士が１対１に対応できたとしても，品詞が異なること
も多い．そのような句を構文カテゴリによる制約なしで対応づけると，不自然
に短い単位となり，対訳として不適切になると考えられる．しかし，本稿で述
べる方式では，句の種類が同じもののみを同等句として取得するため，同等句
が不自然に短くならない．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-ex2.eps,scale=0.91073}
\caption{品詞が異なる場合の対応例}\label{fig-example2}
\end{center}
\end{figure}

たとえば，英語``{\em Business class is fully booked.}''と日本語「{ビジ
ネスクラスは予約で一杯です}」から同等句を抽出することを考える(図
\ref{fig-example2})．単語アライメントで$WL(\mbox{{\em fully}/ADV},
\mbox{一杯/名詞})$, $WL(\mbox{{\em book}/V}, \mbox{予約/名詞})$の単語
リンクが得られたとしても，どちらか一方の単語リンクのみを含んで構文カテ
ゴリが同じノードはない．しかし，両者を同時に含み，同じ構文カテゴリを持
つノードとしては{\tt VP(2)}があるので，``{\em be fully booked}''と
「{予約で一杯です}」が同等句として最初に抽出される．

\paragraph{処理例(3)}

意訳の例を図\ref{fig-example3}に示す．この例では，英語``{\em fly}''を
日本語「{飛行機で行く}」と訳しているため，両者は単語アライメントで対応
づけられていないにも関わらず，最終的な出力では英語``{\em fly to New
York tomorrow}'' と日本語「{ニューヨークに明日飛行機で行く}」が対応づ
けられている．つまり，間接的に``{\em fly}''と``{飛行機で行く}''が対応
づけられる．このように，本方式では，単語アライメントで対応が取れないよ
うな意味的な翻訳がされた句(言い換えると，単語の直訳でない句)もある程度
対応づけることができる．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-ex3.eps,scale=0.92316}
\caption{意訳の場合の対応例}\label{fig-example3}
\end{center}
\end{figure}

単語リンク不足のときの句アライメントについては，
\ref{sec-wa-accuracy}で詳細を述べる．

\newpage

\section{句アライメントと構文解析の融合}
\label{sec-parsing-for-pa}

\ref{sec-phrase-alignment}章で述べた方法は，構文解析結果が一意に決まっ
たと仮定している．しかし，構文解析結果を一意に決定した後に句アライメン
ト処理を行うと，句アライメント結果が構文解析結果に直接影響される．たと
えば，構文解析器が解析出来ない文は，句アライメント処理を行えない．また，
誤った構文解析結果を元に句アライメント処理を行えば，句アライメント結果
も誤る可能性が高い．

構文解析エラーは大きく以下の2種類に分類することができる．

\begin{itemize}\itemsep=0mm
\item 曖昧性の問題 \\
構文解析結果の候補が複数あり，それを選択ミスする場合．この場合，構文解
析結果が誤ったものになる．

\item 解析木作成失敗 \\
文法(書き換え規則)が不足しており，文全体をカバーする解析木の作成に失敗
する場合．この場合は通常，構文解析器からの出力がない．
\end{itemize}

このうち，曖昧性は単言語の構文解析では必ず発生する問題である．一方，解
析木作成失敗は，稠密な文法を用意すれば解決可能である．しかし，対話翻訳
をターゲットにする場合，文法的な崩れの多い話し言葉を扱わなければならな
いという問題がある．また，機械翻訳のように複数の言語を扱う場合，言語に
よってツール・コーパス等の整備状況が異なっているため，すべての言語にお
いて失敗のない構文解析器を用意できる可能性は低い．もし，用意できない場
合は文法を人手で作成するしかなく，解析木作成失敗は必ず起こりうる問題と
なる．

本提案方式では，以下の特徴および手法を利用して句アライメント処理と構文
解析を融合させることにより，曖昧性の問題，解析木作成失敗の解決を図る．


\subsection{言語間の構造の類似性を利用した曖昧性解消}
\label{sec-disambiguation}

個々の言語の構文解析で発生した曖昧性は，2言語を対応づけることにより，
ある程度解消することができる．これは2言語間の構造の類似性を利用するも
のである\cite{Kaji:PhraseAlignment1992,Matsumoto:PhraseAlignment1993}．

たとえば，英語におけるPPアタッチメントの曖昧性は，対応する日本語の構造
が一意に決まると解消することができる．図\ref{fig-pp}での`{\em for
breakfast}' は，点線の構文木のように`{\em need}'と組み合わさってVPを形
成することもできるし，実線の構文木のように`{\em room service}'と組み合
わせてNPを形成することもできる．しかし，日本語の構造を解析すると，`{朝
食}'は`{ルームサービス}'とともにNPを形成しているため，英語についても同
様に，``{\em room service for breakfast}''で名詞句を構成していると考え
るのが妥当である．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-pp.eps,scale=0.893807}
\caption{PPアタッチメントの曖昧性解消例}\label{fig-pp}
\end{center}
\end{figure}

この現象は，言語によって曖昧性が発生しやすい条件が異なっているため，そ
れら条件のANDを求めることにより，曖昧性を解消できる場合があることを示
している．

このように，2言語の構造が類似した時に高いスコアを出す評価関数を設定す
ることにより，曖昧性を評価・解消することができる．今回は，英語，日本語
の全ノード(非終端記号)について，対応づけを行い，その対応づけられたノー
ド数と単語リンク数の和を評価値として，最大スコアを持つ構造を採用するこ
ととした．これを本稿では，{\bf 句対応スコア}と呼ぶ．図\ref{fig-pp}では，
実線の構造では{\tt (1)NMP}, {\tt (2)NP}, {\tt (3)VP}同士が同等句と判定
されるが，点線の構造では，同じ範囲の同等句は{\tt VP(1)}のみである．し
たがって，実線の構造の句対応スコアは2だけ大きくなり，こちらの構造が採
用される．

なお，今回は単語アライメントの結果は一意に決定しているが，もし，たとえ
ば同じ単語が複数回出現するなど，単語アライメント結果自体に曖昧性がある
場合も，句対応スコアが最大となる単語リンクの組み合わせを探索することに
より，上記評価尺度である程度解消することができる．

\subsection{部分解析結果の組み合わせによる解析失敗への対応}
\label{sec-partial}

本稿で述べる句アライメントは，構文解析器としてチャートパーザを用いてい
る．このパーザは，文法(書き換え規則)が不足して，解析木の作成に失敗する
場合，通常何も出力することはないが，パーサ内のアジェンダに部分解析結果
を残している．つまり，部分的ではあるが，正しい句の候補がアジェンダ内に
あるということである．これらを適切に組み合わせて用いることができれば，
文法不足による解析失敗に対応できる．この方法は，特に文法的な崩れが多い
話し言葉で有効である\cite{Takezawa:Parsing1996j}．組み合わせを行う際は，
その部分木が適切かどうか検査する必要があるが，その評価基準に
\ref{sec-disambiguation}節で述べた句対応スコアが利用できる．

もちろん，解析が成功した場合(すなわち，文全体が1つの木で表現できた場合)
は，その解析結果を優先しなければならないため，トータルの部分木数が少な
い組み合わせを優先するよう，\ref{sec-disambiguation}節の評価尺度を修正
した．最終的な評価尺度は以下のとおりとなる．

\begin{enumerate}\labelwidth=25pt
\item 2つの入力文の句を比較し，句対応スコアが最大の句を対応する候
補として取り出す．
\item 文全体について，句の対応ノード数の総和をとり，最大となる句の列を
解析結果として採用する
\item 同点の句列が複数存在する場合は，句の数が最小のものを解析結果とす
る．
\end{enumerate}

しかし，すべての部分解析結果の組み合わせを試した場合，組み合わせ数は指
数的に増大する．この問題を回避するため，今回，形態素解析で使われている
2パスの探索手法である前向きDP後ろ向き$A^{*}$アルゴリズム
\cite{Nageta:ForwardDPBackwardAStar1994}を使用した．

\begin{figure*}
\begin{center}
\epsfile{file=fig/fig-search.eps,scale=0.893444}
\caption{部分解析結果組み合わせ探索例}\label{fig-search}
(三角は構文解析の部分結果，三角内の数字は句対応スコア，\\ 網掛けは最終的
に探索された句を表す．)
\end{center}
\end{figure*}

本探索手法を用いた部分解析結果組み合わせ法について説明する．(図
\ref{fig-search}．説明上，片言語の句のみを示す)．なお，ここで各部分木
の句対応スコアは予め算出されているものとする\footnote{現在のインプリメ
ンテーションでは，2言語のすべての部分木同士について句対応スコアを算出
し，その後に探索を行っている．したがって，句対応スコア算出には$\mbox
{英語部分木数} * \mbox{日本語部分木数}$ に比例した時間がかかる．句対応
スコアは，部分木の下位ノードの句対応スコアを再帰的に加算したものである
ので，下位ノードから（ボトムアップに）算出し，重複ノードの再計算を避け
ている．}．

まず，片言語(ここでは英語とする)のすべての部分木をラティス構造に配置す
る．前向き探索時には，動的計画法を用いて始点からエッジ$i (0 \leq i
\leq \mbox{形態素数}N)$までの句対応スコアの最大値を算出する．これを便
宜上見積スコアと呼ぶ．この時，どの経路を通過したかは記録しない．見積ス
コアは，始点からエッジ$i$まで，このスコアで至る組み合わせが存在するこ
とを示している．

次に後ろ向き探索では，$A*$探索を用いて最適な組み合わせを探索する．この
とき，$A*$アルゴリズムのヒューリスティック関数値として，見積スコアを用
いる．見積スコアは最も精度のよいヒューリスティック関数値であるので，無
駄な経路をほとんど展開することなく，最適経路を探索する．

このように，本探索手法を用いると，ビーム探索のように枝刈りをする必要が
なく，形態素数にほぼ比例した時間で最適な英語句の列を得ることができ，そ
れに対応する日本語句の列も得られる．

しかし，１つの英語句に対応する日本語句は複数の候補があるため，一部，日
本語句同士が重なる場合がある．そのため，後ろ向き探索の経路展開時に日本
語句列の範囲をチェックし，重なりがある経路を展開しないという処理が必要
となる．その場合，展開中の経路が無効になる可能性があるが，$A*$探索は，
展開中経路が無効となっても，次点の経路を展開するため，探索結果は，句対
応スコアの総和が最大で，かつ日本語句の列に重なりがない最適解となる．


\section{単語アライメントに要求される機能}
\label{sec-word-alignment-for-pa}

\subsection{機能語間，機能語--内容語対応}
\label{sec-func-word}

機能語は様相，法などを表しているため，文の表現のバラエティを表すことが
多い．これを無視してむやみに句の対応をとると，意味的には問題がないが，
表現上，対訳として不適切なものが同等句として抽出されることがある．特に，
日本語では，時制などまでが機能語で表されるため，これを扱うことは重要で
ある．

たとえば，図\ref{fig-func-word}の例では，$WL(\mbox{\em after},\mbox{以
降})$の対応がない場合，$WL(\mbox{\em three},\mbox{三時})$のみを使って，
``{\em three}''と``{三時以降}''という{\tt NP(1)}を対応づけてしまう．し
かし，$WL(\mbox{\em after},\mbox{以降})$がある場合，{\tt NP(1)}ノード
は単語リンクに過不足があるため，対応づけられない．

このように，機能語間，または機能語--内容語間対応を追加して，
\ref{sec-phrase-alignment}章で述べた条件\ref{cond-same-information}の
制約を強くすることにより，誤った同等句を抽出しにくくなり，精度を向上さ
せることができる．

\begin{figure}
\begin{center}
\epsfile{file=fig/fig-func.eps,scale=0.928378}
\caption{機能語--内容語対応文の例}\label{fig-func-word}
\end{center}
\end{figure}


\subsection{単語アライメントの精度と句アライメントの関係}
\label{sec-wa-accuracy}

現在のところ，単語アライメントの適合率，再現率共に100\%の方式は提案さ
れていない．すると，本方式を実際に用いる場合は，単語アライメント誤り，
または不足が含まれていると考えるのが妥当である．では，本方式にとっては，
適合率と再現率のどちらが重要であるのか？

単語アライメントの適合率が低下すると言うことは（再現率を100\%に保って
いると仮定すると），不要な単語リンクが含まれているということである．
\ref{sec-func-word}節でも述べたが，本方式は単語リンクが増加すると，条
件\ref{cond-same-information}の制約が強くなり，抽出されるべき同等句が
抽出されなくなる．しかし，これはあくまで制約が強くなっているため，誤っ
た同等句の抽出は起こりにくい．

一方，単語アライメントの再現率が低下した場合（言い換えると，本来あるべ
き単語リンクが不足した場合）は，条件\ref{cond-same-information}の制約
が緩くなる．そのため，\ref{sec-disambiguation}節で述べたPPアタッチメン
トの曖昧性解消や，動詞の有効範囲に曖昧性が生じるため，誤った同等句を抽
出しやすくなる．

このように，本方式に適合する単語アライメントは，再現率を重視したもの，
言い換えると，少々不要な単語リンクが含まれていても，必要な単語リンクが
ほとんど含まれているものであることが望ましい．


\section{まとめ}

本稿では，構文構造の類似性を用いた曖昧性解消，部分解析結果の組み合わせ
を用い，構文解析と融合した階層的句アライメント方法を提案し，その有効性
を示した．

特に提案方式では，比較的精度の低い構文解析器を用いたにも関わらず，構文
解析を独立させた場合に比べ，実験では約2倍の同等句を抽出することができ
た．そのときの適合率は86\%程度で，構文解析独立方式と比べても精度の低下
はほとんどない．また，機能語対応を追加することにより，句アライメント精
度が向上することを示した．

本稿で提案した句アライメント方法は，単語アライメントの適合率より再現率
が同等句の精度に影響をおよぼしやすいため，再現率重視の自動単語アライメ
ント方法と組み合わせる方が，質のよい同等句を抽出することができる．

今後は，本方式で抽出された同等句から翻訳知識を作成し，用例ベースの翻訳
システムに適用する予定である．


\acknowledgment

本研究を進めるにあたって有意義なコメントを戴いた隅田英一郎主任研究員，
白井諭前第三研究室長をはじめ，ATR音声言語コミュニケーション研究所第三
研究室の皆様に感謝いたします．

なお，本研究は通信・放送機構の研究委託「大規模コーパスベース音声対話翻
訳技術の研究開発」により実施したものです．


\bibliographystyle{jnlpbbl}
\bibliography{368.bbl}


\begin{biography}
\biotitle{略歴}

\bioauthor{今村 賢治}{
1985年千葉大学工学部電気工学科卒業．同年日本電信電話株式会社入社．
2000年より，ATR音声言語通信研究所主任研究員，現在に至る．
主として自然言語処理の研究・開発に従事．情報処理学会，電子情報通信学会各会員．
}

\bioreceived{受付}
\biorevised{再受付}
\biorerevised{再々受付}
\bioaccepted{採録}

\end{biography}

\end{document}
