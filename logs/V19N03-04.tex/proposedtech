    \documentclass[japanese]{jnlp_1.4}
\usepackage{jnlpbbl_1.3}
\usepackage[dvips]{graphicx}
\usepackage{amsmath}
\usepackage{hangcaption_jnlp}
\usepackage{udline}
\setulminsep{1.2ex}{0.2ex}
\let\underline


\usepackage{color}

\Volume{19}
\Number{3}
\Month{September}
\Year{2012}

\received{2012}{1}{5}
\revised{2012}{3}{8}
\accepted{2012}{4}{6}

\setcounter{page}{193}

\jtitle{地方自治体の例規比較に用いる条文対応表の作成支援}
\jauthor{竹中　要一\affiref{Osaka} \and 若尾　岳志\affiref{Dokkyou}}
\jabstract{
地方自治体が制定する条例（規則も含め，以下例規という）は，章節／条項号という階層を有する，
基本的に構造化された文書である．各自治体はそれぞれ別個に各議会等でこの例規を制定するため，
複数の自治体が同一の事柄に関する規定（例えば「淫行処罰規定」など）を有している事が多い．
この同一の事柄に関する規定の自治体間における異同を明らかにするための比較は，
法学教育や法学研究，地方自治体法務，企業法務において実施されている．
実務における法の比較では，対応する条項を対とし，それらの条文を左右または上下に
並べた条文対応表の作成が主体となっている．
これまで条文対応表は手作業で作成されてきたが，
対象とする例規の条数や文字数が多い場合の表作成には3時間以上も必要としていた．
そのため計算機による条文対応表の作成支援が強く求められているが，本件に関する研究はこれまでに行われていない．
そこで我々の研究は，条文対応表を計算機で自動作成することによる条文対応表の作成支援を目的とする．
この目的を達成するため，我々は条文対応表を，各条をノードとする二部グラフとしてモデル化し，
このモデルに基づき条文対応表を自動作成するために有効な手法の検討を行った．
二文書間の類似度を定義する多くの研究がこれまでに報告されている．
これらの類似度比較手法より
本研究ではベクトル空間モデル，最長共通部分列，及び文字列アライメント（編集コスト可変のレーベンシュタイン距離）
に基づく96個の類似尺度の性能を比較した．
評価には愛媛県の11の条例とそれに対応する香川県の11の条例を用い，
法学者が作成した条文対応表に基づき正解率を求めた．
その結果，名詞，副詞，形容詞，動詞，連体詞を対象としたベクトル空間モデルに基づく類似尺度の
正解率が85\%と最も高かった．また，文字列アライメントに基づく類似尺度の正解率は最高で81\%，最長共通部分列は
最高で75\%であった．
本研究は条文対応表の作成支援であるため，
推定された対応関係の信頼度，あるいは尤もらしさを提示する事が望ましい．
そこで
各比較手法で最も正解率の高かったパラメータを用いた合計3つの類似尺度に対して
受信者操作特性曲線による評価を行ったが，曲線下面積がいずれも狭くて
信頼度の尺度として適さない．
そこで，推定された対応関係の類似度を二番目に高い類似度を持つ対応関係の値で
割る事による正規化を行ったところ，
最長共通部分列の曲線下面積が0.80と最も高く，
ベクトル空間モデルの面積は0.79と良好であった．
以上の評価結果より，条文対応表の作成支援では
条見出しに対して最長共通部分文字列を，
条文に対してベクトル空間モデルをそれぞれ適用した類似尺度を
併用する事が，
そして得られた条文対応関係の信頼度を評価する尺度としては
二番目に高い類似度で割った値を用いるとよい事を明らかにした．
}
\jkeywords{法，条例，比較法，ベクトル空間モデル，文字列アライメント，\pagebreak 地方自治体}

\etitle{Automatic Generation of Article Correspondence Tables for the Comparison of Local Government Statutes}
\eauthor{Yoichi Takenaka\affiref{Osaka} \and Takeshi Wakao\affiref{Dokkyou}} 
\eabstract{
Local governments establish ordinances and regulations (hereinafter collectively referred to as ``statutes''). They are structured documents that
possess a chapter $>$article $>$paragraph $>$item hierarchy. Since each local government establishes statutes in its councils independently, similar statutes
on the same matter are often found in separate local governments (e.g. punishment for obscene habits). In legal education, legal research and legal
works at local government and business enterprise, comparisons are made to clarify the differences between similar statutes. In the comparison of laws
for practical purposes, article correspondence tables are normally created with pairs of corresponding articles aligned horizontally or vertically.
The objective of our research is to use a computer to automatically generate the article correspondence tables that are currently created
manually. In order to accomplish this objective, we have focused on the relationships between articles in article correspondence tables, which were
modeled with directed bipartite graphs that used each article as a node. 96 methods based on the vector space model, longest common subsequence and
sequence alignment were examined in order to clarify effective methods for searching for corresponding articles. In the course of the research, we
automatically generated article correspondence tables  of 22 statutes in total (11 statutes of Ehime and Kagawa Prefectures, respectively). Their
accuracy rates were calculated based on article correspondence tables created by legal scholars. Consequently, the vector space model-based method
proved the highest accuracy rate at 85\%. Its targets were nouns, adverbs, adjectives, verbs and attributives. The sequence alignment-based method
showed up to 81\% of accuracy rate, while the rate with the longest common subsequence method was 75\%.
As the results of the computer-generated article correspondence tables are checked by legal scholars on a practical level,
it is required to posess the degree of reliability for each relationships between articles.
To meet the requirement, we examined two measurements for the three methods by receiver operating charasteristic curve.
The results shows the ratio of the selected relations and the runner-up gives 0.80 AUC for longest common subsequences.
In this research, the problem was defined by focusing on the correspondence relationship between articles in the article correspondence tables.
For practical purposes, there is a need to focus not just on the correspondence relationship between articles, but also on the clarification of
different words used in corresponding articles. Since  vector space model cannot be used to clarify such differences, sequence alignment---with which
it is feasible to clarify differing texts---is necessary. Composite methods that combine those two will therefore be required in the future.
}
\ekeywords{Law, Local Government Statue, Comparative Law, Vector Space Model, \linebreak Sequence Alignment, Local Government}

\headauthor{竹中，若尾}
\headtitle{地方自治体の例規比較に用いる条文対応表の自動生成}


\affilabel{Osaka}{大阪大学大学院情報科学研究科}{Graduate School of Information Science and Technology, Osaka University}
\affilabel{Dokkyou}{獨協大学法学部}{Faculty of Law, Dokkyo University}



\begin{document}
\maketitle

\section{モデル化と問題定義}
\label{sec:definition}

\subsection{例規の構造}

本研究で対象とする例規とは，法特有の階層構造を有する文章である．
典型的な法では，例規名を表す「表題」，効力を発する日を記した「発令」，公布を宣言する「公布文」，
例規の内容を記した「本則」，そして「制定附則」及び「改正附則」が第一番目の階層を構成する．
このうち本則は，「章」「節」／「条」「項」「号」の階層を有している．
図\ref{reikiStructure}に例規に共通する主要な階層構造を示す．
ただし，実際の例規では章が存在しない場合も多く，特に制定時期が古い例規ではこの階層構造に従わない
場合もある事を付記する．
章と一部の条にはその内容を記載した見出しがついている．
図\ref{reikiExample}に愛媛県青少年保護条例から抜粋した本則の一部を記す．
図\ref{reikiExample}において章と条の右横に括弧で記載した文字列が章見出しおよび条見出しである．

\begin{figure}[t]
\noindent\begin{minipage}[b]{171.5pt}
\begin{center}
\includegraphics{19-3ia947f1.eps}
\end{center}
\caption{例規の主要な共通階層構造}
\label{reikiStructure}
\end{minipage}
\begin{minipage}[b]{248.5pt}
\begin{center}
\includegraphics{19-3ia947f2.eps}
\caption{本則の階層構造の例（抜粋）}
\label{reikiExample}
\end{center}
\end{minipage}
\end{figure}


\subsection{条文対応表}\label{sec:taiouhyou}

例規比較を行う際には，対応する条文の関係を記した比較対照表が作成される．この表を
条文対応表と呼ぶ．
表\ref{reikiHikakuTable}に，愛媛県青少年保護条例と香川県青少年保護育成条例の
条文対応表の典型例を記す．
表では，例規構造より表題，発令，公布文がまず並ぶ．
その後，二つの条例において対応する条が左右に並ぶという形をとっている．
条番号の一行上に書かれている括弧書きの文字列は条見出しである．
表より以下のような事がわかる．
\begin{itemize}
\item 愛媛県の第1条が香川県の第1条に，愛媛県の1条が香川県の4条に
対応している．
\item 香川県の第3条に対応する愛媛県の条文が存在しない．
\item 香川県の第15条は，愛媛県の第12条と第13条の2つに対応している．
\end{itemize}
この表を利用する事により「青少年」の定義や，夜間の時間帯といった二つの条例の違いを
網羅的に比較する事が行われている．

\begin{table}[p]
\caption{愛媛県と香川県の青少年保護に関する条例の条文比較表（一部抜粋）}
\label{reikiHikakuTable}
\input{04table01.txt}
\end{table}

条文比較表において対応する条文は類似する事が多い．これを示すため，
表中で対応する両県の第一条の共通部分に下線を引いた．

\begin{quote}
愛媛県：\underline{この条例は、青少年の}健全な育成を\underline{阻害する恐れのある行為}
から青少年を保護し、
もって青少年の\underline{健全な育成をはかる事を目的とする。}

香川県：\underline{この条例は、青少年の}福祉を\underline{阻害するおそれのある行為}を禁止し、
その\underline{健全な保護育成を図る事を目的とする。}
\end{quote}

この場合，両方の条が大変よく一致している事がわかる．
次に対応する条の文字数に差がある包含関係にある例として，愛媛県の第13条の3と第10条の3を挙げる．
\begin{quote}
愛媛県：\underline{何人も、青少年に}対し、ツーショットダイヤル等
\underline{利用カード}（ツーショットダイヤル
等営業に関して提供する役務の数量に応ずる対価 を得ることを目的として発行する文書その他の物 品をいう。以下同じ。）を\underline{販売}し、配布し、贈与し、 又は貸し付けては\underline{ならない。}

香川県：\underline{何人も、青少年に利用カード}の\underline{販売}等をしては
\underline{ならない。}
\end{quote}

この例は「利用カード」の定義が条内で行われているか否により共通部分に偏りが出ている事を示している．
そのため，香川県側は24文字中18文字 (75\%) が一致しているが，愛媛県側は110文字中18文字 (16\%) が一致しているにすぎない．
ただし，共通部分が多い場合でも必ずしも対応する条であるとは限らない．
例として愛媛県の第5条の8と香川県の第10条の2を示す．

\begin{quote}
愛媛県：自動販売機等業者は、次に掲げる施設の敷地の周囲から200メートル以内の区域に、（中略）設置しないように努めなければならない。
\\(1)　\underline{学校教育法（\mbox{昭和22年法律第26号}）\mbox{第1条}に規定する学校（大学を除く。）}
\\(2)　児童福祉法（昭和22年法律第164号）第7条第1項に規定する児童福祉施設
\\(3)　\underline{図書館法\mbox{（昭和25年法律第118号）第2条第1項}に規定する図書館}
\\（後略）

香川県：卑わいな姿態等を被写体とした写真又は描写した絵を掲載した広告文書等は（中略）「有害広告文書等」（中略）とする。
\\2　何人も、次に掲げる行為をしてはならない。
（中略）
\\(3)　次に掲げる施設の敷地内において有害広告文書等の配布をすること。
\\ア　\underline{学校教育法\mbox{（昭和22年法律第26号）第1条}に規定する学校（大学を除く。）}
\\イ　\underline{図書館法\mbox{（昭和25年法律第118号）第2条第1項}に規定する図書館}
\\（後略）
\end{quote}
このように，共通部分が多い場合でも必ずしも対応するとは限らない事がわかる．







\subsection{条文対応表のモデル化と推定問題}
\label{sec:jidouseisei}

本研究で目的とする計算機支援を達成するためには，与えられた2条例より条文比較表を自動生成する必要がある．
そのためには，計算機で解決可能な形に問題をモデル化する必要がある．
一般に条文対応表は，その名の通り表として表現されているが，
条の対応関係は多対多であり，また対応する条がない場合も存在する．
当然にして同一例規内の条の間には対応関係は存在しない．
また，例規の主要構造のうち対応関係を決める必要があるのは
本則に属する条のみであり，制定附則や改正附則に属する条の対応関係を決める必要はない．
そこで，我々は条文比較表より本則の部分に着目し，
各例規の本則に属する条を頂点とする2部グラフとしてモデル化する．
2部グラフを構成する2つの頂点集合は例規ごとに構成され，
対応する条の間に辺が引かれる．

ここで2つの例規A, Bの条文対応表のモデルを以下のように定義する．
\begin{description}
\item 二部グラフ$G=(V_A,V_B,E)$, ただし，
\begin{itemize}
\item 頂点$v_a \in V_A$がAの本則に属する条に，$v_b\in V_B$がBの本則に属する条に対応し，
\item 辺$e=(v1\in V_A,v2\in V_B)$は，$v1$と$v2$が条文比較表において対応する事を表す．
\end{itemize}
\end{description}
図\ref{taiouhyou}に，愛媛県と香川県の青少年保護に関する条例の条文対応表を示す．
図中左側の四角が愛媛県側の，右側の四角が香川県側の各条を表す頂点である．
左右の頂点間の辺が，両県の条例における条の対応関係を表現している．

\begin{figure}[t]
\begin{center}
\includegraphics{19-3ia947f3.eps}
\end{center}
\caption{二部グラフによる条文対応表のモデル}
\label{taiouhyou}
\end{figure}

条文対応表の推定問題とは，2つの例規$A,\ B$を入力とし，
法学者が作成する条文対応表と一致または類似した
二部グラフ$G=(V_A,V_B,E)$を出力する問題と定義する．



\subsection{条文対応表生成アルゴリズム}
\label{algorithm}

条文対応表の推定問題は，
入力として与えられる二例規の各条間の類似度を計算し，
その類似度に基づき条文が対応するか否かを判定
する事で解く事ができる．
本研究では，類似度の定義，すなわち類似尺度が与えられたとき以下のアルゴリズムによって
条文の対応関係を推定する方法を提案する．

\begin{description}
\item[入力] 2つの例規A, B
\item[出力] 二部グラフ $G(V_A,V_B,E)$
\item[step1] 2つの例規の本則に属する条に対応する頂点集合$V_A,V_B$を生成する．
\item[step2] 2つの頂点$v_a\in V_A,v_b\in V_B$間の辺重みを条$v_a,v_b$間の類似度とする
重み付き完全二部グラフ $G_p=\{V_A,V_B,E_p\}$を生成する．
\item[step3] $V_A$に属する各頂点$v_a$を端点とする辺集合$E_{v_a}=\{(v_a,v_b| v_b \in V_B)\}$のうち，
最も重みの大きい辺を二部グラフ$G$の辺集合$E$に加える．
\item[step4] $V_B$に属する各頂点$v_b$を端点とする辺集合$E_{v_b}=\{(v_a,v_b| v_a \in V_A)\}$のうち，
最も重みの大きい辺を二部グラフ$G$の辺集合$E$に加える．
\item[step5] 二部グラフ$G$を出力する．
\end{description}

条文対応表では，図\ref{taiouhyou}に示したように一つの条に対して複数の条が対応する事例がある．
提案アルゴリズムでは両方の例規からではなく，Step3 と 4において一方の例規の条からみて
類似度の最も高い条に対応関係があると判定した辺をグラフに追加している．
Step3とStep4は独立して辺，すなわち1つの条と対応関係にある条を選択しているため，
一つの頂点が複数の辺の端点となりうる．
結果的にStep5において多対多の二部グラフ，すなわち多対多の関係を含む条文対応表が出力される．



\section{条間の類似尺度}
\label{sec:method}

前節のアルゴリズム内では条間の類似度を定義していない．
この類似度は，法学者が二条間に対応関係が存在する場合に大きい値を，
対応関係が存在しない場合に小さい値をとる事が求められる．
しかしながら，法学者の暗黙知を適切に表現する類似尺度が明らかとなっていないため，
本研究では既存の3種類の文書比較，文字列比較法に基づく類似尺度を用い，
それらの比較評価を行った．



\subsection{ベクトル空間モデル}

与えられた文章を，単語の出現頻度を表現したベクトルとしてモデル化する方法を
ベクトル空間モデルと呼ぶ\cite{salton1975vector}．
2つの文章に対応するベクトル間の距離を計算する事により，文章間の関連度を求める方法であり，
情報抽出や情報フィルタリング等に用いられる．
距離尺度としては，コサイン，内積，マンハッタン距離やユークリッド距離等が用いられる．

要素数$n$個の単語集合$W=\{w_1,w2_,\cdots,w_n\}$が与えられたとき，
ベクトル空間モデルによりある文章$T$は長さ$n$のベクトル$V_T = (v_1,v_2,\cdots,v_n)$ で
表現される．ここで，$v_i$は，文章$T$中における単語$w_i$の出現回数である．
このベクトルはしばしばtf-idf (Term Frequenc, Inverse Document Frequency) に基づく重みが
加味される．
この重みにより，多くの文章に出現する単語の重要度を下げ，特定の文章にしか出現しない単語の重要度を上げる
事が可能となる．

本研究では，
条文対応表作成問題における各条文をこのベクトル空間モデルでベクトル化し，
2つのベクトルの距離によって対応関係の強さを数値化する．
なお，距離尺度としてコサインを用い，
利用する単語を頻出順に10,50,100個選んだもの，及び全例規に出現する全単語の4種類を比較した．
ベクトルの重み付けについては，定数重み及びtf-idf重みの2種類を比較した．
また，利用する単語の品詞として，全品詞の利用，全品詞の原形を利用，
名詞のみ利用，名詞，副詞，形容詞，動詞，連体詞の5種類を利用，の4種類を適用した．

例規の条文はその長さ，すなわち単語数や文字数の分散値が大きい．
これが本手法で計算される条文間の類似度は条文の長さの違いが影響を及ぼす可能性がある．
そこで類似度を2つの条文のうち短い方の条文の文字数で割る事で正規化した値も類似尺度とする．
以降，正規化前を「絶対スコア」，正規化後を「相対スコア」と呼ぶこととする．
以上によりベクトル空間モデルに基づく類似尺度数は，
$(\text{ベクトル長}) \times (\text{対象品詞}) \times (\text{重み}) \times (\text{絶対}|\text{相対スコア}) = 4 \times 4 \times 2 \times 2 = 64$ 個となる．



\subsection{最長共通部分列}
\label{subsec:LCS}

最長共通部分列(Longest Common Subsequence)とは，
入力として与えられた2つの文字列における最長の共通部分文字列をいう\cite{Maier:1978:CPS:322063.322075}．
共通部分文字列とは，もとの文字列から文字を出現順序をかえずに取り出したものとなる．
今，二本の文字列 $X=(\text{アイウエオ})$, $Y=(\text{アイクエオ})$ が与えられたとする．
このとき最長共通部分列は，（アイエオ）となり，その長さは4である．

最長共通部分列は動的計画法により計算する事が可能である．
入力として2つの文字列$X=(x_1x_2\cdots x_n)$と
$Y=(y_1y_2\cdots y_m)$が与えられたとき，最長共通部分列長を求めるアルゴリズムは以下の通りである．

\begin{description}
\item[Step1] $n+1$行，$m+1$列の行列$M$を準備する
\item[Step2] 行列$M$の値を以下の漸化式によって計算していく
\begin{equation}
M(i,j) = \begin{cases}
0 & ( i=0\text{または} j=0 )\\
M(i-1,j-1) +1  & ( i,j>0\text{かつ} x_i=y_j )  \\
\text{max}(M(i-1,j), M(i,j-1)) & ( i,j>0 \text{かつ} x_i \neq y_j ) \nonumber
\end{cases}
\end{equation}
\item[Step3]行列 $M$ の要素より最大値を出力する
\end{description}

本手法による条文の対応関係の強さは，最長共通部分列の長さとして定義する．
比較する単位としては，文字単位と単語単位の比較を行った．
文字単位では，ひらがなカタカナを含む全ての文字を対象とした場合と漢字のみを対象とした場合を，
単語単位では，全品詞，全品詞の原形，名詞のみ，名詞，副詞，形容詞，動詞，連体詞の5種類の4つの場合の
比較を行った．
また，本手法の性能比較では，入力として条見出しを用いた場合の評価も行った．
以上により最長共通部分列に基づく類似尺度数は，
定数重みを用いたものが $(\text{条題}|\text{条文}) \times (\text{対象文字}) \times  (\text{絶対}|\text{相対スコア}) = 2\times 2\times 2= 8$ 個，
tf-idf 重みを用いたものが $(\text{対象品詞}) \times (\text{絶対}|\text{相対スコア}) = 4 \times 2= 8$ 個の
合計16個となる．



\subsection{文字列アライメント}

文字列アライメントは，入力として与えられた文字列に存在する類似した領域を特定できるよう，
文字列を整列させる事をいう．
この整列に必要とする文字・単語の挿入や削除，置換コストの合計値によって文字列間の類似度が定義される．
挿入・置換のコストを1，置換コストを2とした場合，レーベンシュタイン距離あるいは編集距離と呼ばれる
類似尺度になる．
挿入等のコストの異なる例としては，生物情報学におけるアミノ酸配列（タンパク質）に適用される手法がある\cite{smithwaterman,needleman}．この手法におけるコストは生物の進化において変化が発生する確率に基づいて
決定されている．

文字列アライメントは，文字列を整列させるため，一致しない事を表す文字として「—」を用いる．
今，二本の文字列 $X=(\text{アイウエオ})$, $Y=(\text{アイクエオ})$ が与えられたとすると，
(アイ—エオ)がアライメントである．
アライメントは，例えば一致した文字に2点を加点し，一致しない場合（「—」の場合）に2点を減点する，といった
基準を設定する事により，類似度の数値が行われる．
上記のアライメントは6点となる．
与えられた基準において最も高い類似度を持つアライメントの計算には動的計画法が用いられる．
入力として2つの文字列$X=(x_1x_2\cdots x_n)$と
$Y=(y_1y_2\cdots y_m)$が与えられたとき，最も高い類似度を求めるアルゴリズムは以下の通りである．

\begin{description}
\item[Step1] $n+1$行，$m+1$列の行列$M$を準備する
\item[Step2] $0$行及び，$0$列の値を$0$にする

\item[Step3] 行列$M$の値を以下の漸化式によって計算していく
\[
M(i,j) = \text{max}
\begin{pmatrix}
0, &\\
M(i-1,j-1) +s(x_i,y_j),  &  \\
M(i-1,j)-g, &\\
M(i,j-1)-g& 
\end{pmatrix}
\]

\item[Step4] 行列Mの要素より最大値を出力する
\end{description}

ここで関数$s(x,y)$は，文字$x$と$y$をアライメントさせた場合の点数であり，上記の例の場合$2点$である．
また，定数$g$は，一致しない場合，すなわち「—」の時の点数であり，上記の例では$-2$点である．


一般に最長共通部分列や文字列アライメントでは，共通部分文字列の順序は保存される．
しかし例規比較において対応させるべき条文は，必ずしも順序が保存されているとはいいがたい．
例として，愛媛県と香川県の青少年の保護に関する条例を挙げる．
愛媛県の5条の2及び香川県の8条の2はともに，有害ながん具類等の販売等の制限や禁止について規定している．
愛媛県では，青少年に対する有害がん具の所持制限，有害がん具の定義の順で記述しているのに対し，
香川県では，有害がん具の定義，所持制限の順で記述されている．
表\ref{alignOrderReal}に該当部分の抜粋を記載する．
そこで，本研究では，アライメントアルゴリズムを再帰的に適用する事により
順序関係が保存されていない条文へ対応した手法も用いた．
再帰的な適用法は，以下の通りである．

\begin{description}
\item[入力]長さ$l$の文字列Aと長さ$m$の文字列B
\item[Step1] 文字列にアライメントを行う．その結果，文字列Aの$l_s$〜$l_e$までの部分文字列と
文字列Bの$m_s$〜$m_e$までの文字列のアライメントが得られたとする．
\item[Step2] 文字列Aと文字列Bの整列していない部分文字列の組合せ4種類に対してそれぞれアライメントを行う．
4種類の組合せは以下の通りである．
\begin{itemize}
\item[(a)] 文字列Aの$1$〜$l_s-1$文字と文字列Bの$1$〜$m_s-1$文字
\item[(b)] 文字列Aの$1$〜$l_s-1$文字と文字列Bの$m_e+1$〜$m$文字
\item[(c)]文字列Aの$l_e+1$〜$l$文字と文字列Bの$1$〜$m_s-1$文字
\item[(d)]文字列Aの$l_e+1$〜$l$文字と文字列Bの$m_e+1$〜$m$文字
\end{itemize}
\item[Step3]  対角線に位置する(a)と(d)の類似度の和と(b)と(c)の類似度の和のうち大きい方のアライメント結果と
Step1でえられたアライメント結果を出力する．
\end{description}


\begin{table}[b]
\caption{青少年保護に関する条例における記述順序が異なっている箇所}
\label{alignOrderReal}
\input{04table02.txt}
\end{table}


文字列アライメントによる条文の対応関係の強さは，再帰的に得られた各アライメントの類似度の値の和とした．
アライメントの単位としては，\ref{subsec:LCS}節に記した最長共通部分列と同様に文字単位と単語単位の比較を行った．
関数$s(x,y)$の値としては，文字単位の場合は漢字が一致した場合に2点，漢字以外が一致した場合1点とし，
単語単位の場合は各単語のtf-idfスコアを用いた．
以上により文字列アライメントに基づく類似尺度数は，
定数重みを用いたものが $(\text{順序の保存関係}) \times (\text{対象文字}) \times (\text{絶対}|\text{相対スコア}) = 2 \times 2 \times 2 = 8$ 個，
tf-idf重みを用いたものが $(\text{対象品詞}) \times (\text{絶対}|\text{相対スコア}) = 4 \times 2 =8$ 個の
合計16個となる．


\end{document}
