\section{はじめに}\label{intro}

述語項構造解析は，言語処理分野における挑戦的な研究分野の一つである．
この解析は，自然文または自然文による文章から，「誰が，何を，誰に，どうした」というような，基本的な構造情報を抽出する．
これらの情報は，文書要約や機械翻訳など，他の応用的な言語処理研究に不可欠なものであり，その他にも幅広い応用が期待されている．

図\ref{example1}に，日本語の述語項構造の一例を示す．
この例では，「行った」が\textbf{述語}であり，この述語が二つの\emph{項}を持っている．
一つは\textbf{ガ格}の「彼」，もう一つは\textbf{ニ格}の「図書館」である．
このように，述語とそれに対応する項を抽出し，\textbf{格}と呼ばれるラベルを付与するのが述語項構造解析である．
それゆえに，述語項構造解析は，格解析と呼ばれることもある．
本稿では，個々の述語—項の間にある関係を\emph{述語項関係}，
そして，文全体における述語項関係の集合を\emph{述語項構造}と呼ぶことにする．

\begin{figure}[b]
\begin{center}
\includegraphics{20-2ia8f1.eps}
\end{center}
\caption{日本語述語項構造の例}
\label{example1}
\end{figure}

尚，一般には図\ref{example1}の「昨日」という単語も時間格相当の項の対象となり得るが，
本研究の述語項構造解析では限定的な述語項関係を対象としており，「昨日」はその対象としない．
この対象の範囲は解析に利用するデータのアノテーション基準に依存する．
本研究ではNAISTテキストコーパス~\cite{iida:2007:law}を利用しており，このデータのアノテーションに準拠した述語項関係のみの解析を行う．

日本語以外の言語では，意味役割付与と呼ばれる述語項構造解析に相当する解析が行われている．
特に英語では，FrameNet~\cite{fillmore:2001:paclic}やPropBank~\cite{palmer:2005:cl}など，意味役割を付与した中規模のコーパスが構築されてきた．
さらに近年では，CoNLL Shared Task\footnote{CoNLL Shared Task 2004，2005では意味役割付与(Semantic Role Labeling)，同2008，2009では意味論的依存構造解析(Semantic Dependency Parsing)のタスクが設定された．}
などの評価型ワークショップが意味役割付与をテーマとして複数行われ，盛んに研究されている．

日本語の述語項構造解析はいくつかの点で英語の意味役割付与以上に困難であると考えられている．
中でも特に大きな問題とされるのが，\emph{ゼロ照応}と呼ばれる現象である．
この現象は，述語に対する必須格が省略される現象で，日本語では特にガ格の省略が頻繁に起きる．
英語では対象となる述語の項がその述語と同一の文内に出現する上，
必須格の述語項関係については，直接係り受け関係（係り受け木上の親子関係）になる場合が多い．
ゆえにPropBankではタグ付与の範囲を同一文内に限定しており，解析も相対的に容易になる．
ゼロ照応には分類があり，述語に対する項の出現位置によって，\emph{文内ゼロ照応}，\emph{文間ゼロ照応}，\emph{文章外ゼロ照応（外界照応）}の三つに大別される．
述語項関係の種類は，この3種類のゼロ照応に加えて，直接係り受け関係にある場合（以下，「\emph{直接係り受け}」とする），
そして同一文節内にある照応（以下，「\emph{同一文節内}」とする）がある．
本研究では「直接係り受け」と「文内ゼロ照応」を対象に解析を行うものとする．

日本語の述語項構造解析研究では，平ら~\cite{taira:2008:emnlp}や今村ら~\cite{imamura:2009:acl}がNAISTテキストコーパスを用いた研究を行っているが，
彼らはいずれも，コーパス中に存在する3種類の格：ガ格，ヲ格，ニ格について，別々のモデルを構築して解析を行っている．
また別の視点から見ると，彼らの手法は``述語毎''に解析を行っていると言える．
英語における意味役割付与の手法でも，この``述語毎''の解析を行った手法が多い~\cite{toutanova:2008:cl,watanabe:2010:acl}．

しかしながら，現実の文書では同じ述語に属する項の間には依存関係があると考えられる．
例えば，次の文を考えてみる．

\begin{enumerate}
\item \textit{ライオン}$_i$ が\textit{シマウマ}$_j$ を\underline{食べた}$_{ガ:i,ヲ:j}$
\end{enumerate}

この例文の``食べた''という述語に対し，ガ格とヲ格がともに``ライオン''になることは考えに
くいが，ガ格とヲ格を個別に扱う分類器で解析を行った場合，このような矛盾した結果を生んでしまうことがありうる．

さらには，ある述語とその項の関係を同定する際に，文内にある他の述語との関係が同定の
手がかりになることがある．次の例文を見てみよう．

\begin{enumerate}
		\setcounter{enumi}{1}
\item ライオン$_i$ に\underline{追いかけ}$_{ガ:i,ヲ:j}$られた シマウマ$_j$ が谷底$_k$に\underline{落ちた}$_{ガ:j,二:k}$
\end{enumerate}

この例文(2) において``ライオン''が項として妥当なものであり，且つ，述語``落ちた''の項が``シマウマ''と``谷底''だけであると仮定すると，
``ライオン''はもう一つの述語``追いかける''の項になることが確定する．
このように，同一文内に複数の述語が存在し，固有表現などを手がかりとして，項候補が絞り込まれている時には，
どの項候補をどの述語に割り当てるべきかという述語間の依存関係を考慮することで，
最適な述語—項の配置を得ることができるのである．

本研究では日本語の述語項構造解析を扱うが，``文毎''の解析を行う手法を用い，文内に複数ある述語項関係の重要な依存関係を利用できるようにする．
このような依存関係を大域的な制約として扱うために，本研究ではMarkov Logicを利用した解析器を提案する．
英語の意味役割付与ではMarkov Logicによる手法が提案されており，効果的であることが示されている~\cite{meza:2009:naacl}．
これは，Markov Logicモデルが複数の述語項関係を捉え，その間の依存関係を考慮することにより，文内における論理的矛盾を軽減できるためである．

さらに本研究では，述語項構造の要素として不適切な文節を効率的に削減するため，新たな大域的制約を導入する．
明らかに不適切な候補を削除することは，適切な述語項構造を抽出するための探索空間を小さくすることができ，項同定を行う述語の推論をより確かなものとする．

本稿の実験では，Markov Logicを用いた日本語述語項構造解析を行い，その大域的制約が効果的に働くことを詳細に示す．
従来手法の結果と比較しても，本研究の提案手法は，同等以上の結果を達成していることを示す．
また，定性的な分析においても，大域的制約が効果的に働いた事例を紹介する．

なお，次章以降，本稿の構成は次のようになる．
まず2章では関連研究についてまとめ，3章ではMarkov Logicについて導入の説明を行う．
4章では提案手法として構築されるMarkov Logic Networkについて詳細に述べる．
5章は評価実験について述べ，実験結果について考察する．
6章はまとめである．



