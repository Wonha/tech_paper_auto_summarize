================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:3, score:0.47345] ユーザからフィードバックが得られたら，これに対してもLDAを実行し，フィードバックに潜在する単語の分布を推定する．
[i:4, score:0.53556] そして，表層的な単語の分布と潜在的な単語の分布の両方を用いてフィードバックと検索結果中の各文書との類似度を算出し，これに基づいて検索結果をリランキングする．
[i:6, score:0.48061] また，提案手法が，フィードバックが少ない状況でも，初期検索結果のランキング精度を改善する特性を持つことが示された（e.g.,フィードバックに[MATH]単語しか含まれていなくても，P@10で[MATH]の改善が見られた）．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:29, score:0.45915] 上の「マック」の例であれば，仮にフィードバック（この例では「Mac（コンピュータ）」の価格に関する文書）に「CPU」や「ハードディスク」などの単語が含まれていなくても，これらの単語はフィードバックとよく関連しており，潜在的にはフィードバックに現れうる．
[i:36, score:0.55786] そして，推定された潜在的な単語の分布とテキストの表層的な単語の分布の両方を用いて，フィードバックと検索結果中の各文書との類似度を算出し，これを基に検索結果をリランキングする．
[i:38, score:0.48061] また，提案手法が，フィードバックが少ない状況でも，初期検索結果のランキング精度を改善する特性を持つことが示された（e.g.,フィードバックに[MATH]単語しか含まれていなくても，P@10で[MATH]の改善が見られた）．

================================================================
[section type  : proposed_method]
[section title : 言語モデルに基づくランキング]
================================================================
[i:46, score:0.05040] ここで紹介する技術は，[REF_sec:proposed_method]章で説明する提案手法の基礎をなしている．
-----------------------------------------------------
  [subsection title : 概要]
-----------------------------------------------------
  [i:lead, score:0.14173] 言語モデルに基づくランキングアルゴリズムは，三つのタイプに分類できる．
.....
  [i:49, score:0.21559] クエリの尤度に基づく方法では，文書セット中の各文書[MATH]について，[MATH]を表す言語モデル[MATH]を構築する．
  [i:51, score:0.21451] そして，[MATH]が高い順に各文書をランキングする．
  [i:56, score:0.22243] そして，各文書[MATH]について，[MATH]と[MATH]のカルバック・ライブラー情報量[MATH]を計算し，これが小さい順に各文書をランキングする．
-----------------------------------------------------
  [subsection title : 言語モデルの構築方法]
-----------------------------------------------------
  [i:lead, score:0.23133] クエリや文書を表す言語モデルは，Maximum Likelihood Estimation (MLE)やDIRichlet smoothed estimation (DIR) [CITE]などの方法を用いて構築する．
.....
  [i:57, score:0.23133] クエリや文書を表す言語モデルは，Maximum Likelihood Estimation (MLE)やDIRichlet smoothed estimation (DIR) [CITE]などの方法を用いて構築する．
  [i:58, score:0.23635] MLEでは，テキスト[MATH]（[MATH]はクエリや文書）における単語[MATH]の生起確率[MATH]を次式によって算出する．
  [i:62, score:0.11588] ただし，[MATH]は文書セットを表す．
-----------------------------------------------------
  [subsection title : 代表的な適合性フィードバックの手法]
-----------------------------------------------------
  [i:lead, score:0.38996] 言語モデルに基づくランキングアルゴリズムに対する代表的な適合性フィードバックの手法として，Zhaiらの手法[CITE]がある．
.....
  [i:65, score:0.38996] 言語モデルに基づくランキングアルゴリズムに対する代表的な適合性フィードバックの手法として，Zhaiらの手法[CITE]がある．
  [i:69, score:0.38754] Zhaiらの手法は，言語モデルに基づくランキングアルゴリズムに対する基本的な適合性フィードバックの手法として重要である．
  [i:71, score:0.40492] これに対し，提案手法では，テキストに潜在的に現れうる単語の分布を推定し，この情報も用いて適合性フィードバックを行う．

================================================================
[section type  : proposed_method]
[section title : LDA]
================================================================
[i:73, score:0.30554] LDAは，提案手法において，各単語がテキストに潜在的に現れうる確率を推定するために用いられる．
-----------------------------------------------------
  [subsection title : 概要]
-----------------------------------------------------
  [i:lead, score:0.21878] LDAは文書の生成モデルの一つである．
.....
  [i:74, score:0.21878] LDAは文書の生成モデルの一つである．
  [i:75, score:0.22223] LDAでは，文書は複数のトピックから生成されると仮定する．
  [i:79, score:0.24275] 以上の生成過程をまとめると，LDAにおける文書[MATH]の生成確率は，次のようにして計算される．
-----------------------------------------------------
  [subsection title : パラメータの推定方法]
-----------------------------------------------------
  [i:lead, score:0.22946] LDAでは，変分ベイズ法やギブスサンプリングなどを用いてパラメータを推定する[CITE]．
.....
  [i:85, score:0.22946] LDAでは，変分ベイズ法やギブスサンプリングなどを用いてパラメータを推定する[CITE]．
  [i:107, score:0.19020] [MATH]と[MATH]の値が推定されれば，式([REF_equ:lda])を用いて，文書[MATH]の生成確率を求めることができる．
  [i:108, score:0.15777] また，[MATH]の値が推定されれば，次式を用いて，文書[MATH]における単語[MATH]の生起確率[MATH]を求めることができる．
-----------------------------------------------------
  [subsection title : 未知テキストに対する適用]
-----------------------------------------------------
  [i:lead, score:0.18587] LDAはProbabilistic Latent Semantic Analysis (PLSA) [CITE]をベイズ的に拡張したモデルと位置付けられる．
.....
  [i:112, score:0.19220] PLSAに対するLDAの長所として，LDAは未知テキスト（訓練データ中に含まれないテキスト）に関する確率も推定できるという点が挙げられる．
  [i:113, score:0.24710] 未知テキスト[MATH]にLDAを適用するときは，[MATH]に対して変分パラメータ[MATH]と[MATH]を導入し，式[MATH]と式[MATH]を用いてこれらの値を推定する．
  [i:116, score:0.45574] 提案手法では，LDAのこの長所を利用して，各単語がフィードバックに潜在的に現れうる確率を求めている．
-----------------------------------------------------
  [subsection title : 情報検索におけるLDAの利用]
-----------------------------------------------------
  [i:lead, score:0.14301] LDAは，自然言語処理や画像処理，音声認識など，様々な分野で利用されている[CITE]．
.....
  [i:118, score:0.37672] 情報検索の分野では，例えばWeiらが，クエリの尤度に基づくランキング手法にLDAを利用している[CITE]．
  [i:120, score:0.36802] これらの研究は，LDAを用いて各文書の文書モデルを構築し，それぞれのスコア（e.g.,クエリの尤度）に基づいてクエリに対する検索結果を取得するものである．
  [i:122, score:0.39288] 我々は，フィードバックに対してもLDAを用いてその言語モデルを構築し，構築されたフィードバックモデルを用いて検索結果を修正する．

================================================================
[section type  : proposed_method]
[section title : 提案手法]
================================================================
[i:123, score:0.03313] 本章では，提案手法の概要と，提案手法を構成する各ステップについて詳説する．
-----------------------------------------------------
  [subsection title : 概要]
-----------------------------------------------------
  [i:lead, score:0.32419] 提案手法では，テキストに表層的に存在する単語の情報だけでなく，テキストに潜在的に現れうる単語の情報も利用して，検索結果をリランキングする．
.....
  [i:125, score:0.49608] 表層情報だけでなく潜在情報も考慮することで，表層的なレベルだけでなく潜在的なレベルでもフィードバックと類似する文書を検索結果の上位にリランキングする．
  [i:131, score:0.51267] ユーザからフィードバック[MATH]が得られたら，[MATH]に対してもLDAを実行し，[MATH]に潜在的に現れうる単語の分布を推定する．
  [i:142, score:0.54272] 一方，提案手法では，検索結果中の各文書に対する[MATH]やフィードバックに対する[MATH]を構築するため，検索結果に対してLDAを実行する必要がある（[REF_ssec:hdm_construction]節及び[REF_ssec:hfm_construction]節で後述）．
-----------------------------------------------------
  [subsection title : 初期検索結果の取得]
-----------------------------------------------------
  [i:lead, score:0.20689] 提案手法では，カルバック・ライブラー情報量に基づいて[CITE]，各文書をランキングする．
.....
  [i:150, score:0.30140] この重要度に従って各文書をランキングし，[MATH]に対する初期検索結果[MATH]を得る．
  [i:151, score:0.25588] クエリモデルの構築にMLEを用いたのは，言語モデルに基づくランキングに関する先行研究(e.g., [CITE])に倣ってのことである．
  [i:152, score:0.28610] なお，クエリモデルの構築にMLEを用いた場合，カルバック・ライブラー情報量に基づくランキングは，クエリの尤度に基づくランキング[CITE]と等価になる．
-----------------------------------------------------
  [subsection title : 文書モデル$P^{HYB]
-----------------------------------------------------
  [i:lead, score:0.23575] [MATH]中の各文書[MATH] [MATH]について，[MATH]の表層情報と潜在情報の両方を含む言語モデル[MATH]を構築する．
.....
  [i:154, score:0.33647] まず，各文書[MATH]について，LDAを用いて，[MATH]の潜在情報を含む言語モデル[MATH]を構築する．
  [i:156, score:0.25742] まず，[MATH]に対してLDAを実行し，[MATH]に対するLDAのパラメータ[MATH]と[MATH] [MATH]，[MATH] [MATH]を推定する（[REF_ssec:parameter_estimation]節参照）．
  [i:158, score:0.27802] [MATH]は，[MATH]に潜在するトピックの分布を基に構築されており，各単語が[MATH]に潜在的に現れうる確率の分布になる（式([REF_equ:pwd])参照）．
-----------------------------------------------------
  [subsection title : フィードバックモデル$P^{HYB]
-----------------------------------------------------
  [i:lead, score:0.35287] フィードバック[MATH]が得られたら，[MATH]に対しても，[MATH]の表層情報と潜在情報の両方を含む言語モデル[MATH]を構築する．
.....
  [i:163, score:0.35287] フィードバック[MATH]が得られたら，[MATH]に対しても，[MATH]の表層情報と潜在情報の両方を含む言語モデル[MATH]を構築する．
  [i:164, score:0.26797] まず，LDAを用いて，[MATH]の潜在情報を含む言語モデル[MATH]を構築する．
  [i:166, score:0.27708] まず，Step 2で訓練されたLDAを[MATH]に適用し，[MATH]に対する変分パラメータ[MATH]を推定する（[REF_ssec:inference]節参照）．
-----------------------------------------------------
  [subsection title : リランキング]
-----------------------------------------------------
  [i:lead, score:0.19953] [MATH]をリランキングするため，まず新しいクエリモデルを構築する．
.....
  [i:173, score:0.33479] 新しいクエリモデル[MATH]は，[MATH]を得るために使用したクエリモデル[MATH]と，Step 3で構築したフィードバックモデル[MATH]を次式のようにして混合し，構築する．
  [i:176, score:0.35336] すなわち，クエリ[MATH]とフィードバック[MATH]が与えられた下での文書[MATH]の重要度を次式のように定義する．
  [i:177, score:0.34460] この重要度に従って各文書をリランキングすることで，検索結果のランキングを修正する．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[i:178, score:0.03275] 本章では，提案手法の有効性を調査するために行った実験と，その結果について報告する．
-----------------------------------------------------
  [subsection title : 実験データ]
-----------------------------------------------------
  [i:lead, score:0.11893] 実験は，第[MATH]回NTCIRワークショップで構築されたウェブ検索評価用テストセット[CITE]を用いて，これを行った．
.....
  [i:199, score:0.35127] このように検索される文書が少ないと，適合性フィードバックの有効性が検証しにくい．
  [i:200, score:0.45108] すなわち，実際に適合性フィードバックによって初期検索結果のランキングが改善されても，その結果がP@10などの評価尺度の値に反映されにくく，適合性フィードバックが有効に働いたかどうかが判断しづらい．
  [i:207, score:0.42620] しかし，これらの文書は，仮に初期検索結果に含まれていた場合も，リランキング前後のランキング精度を測定・比較する際，結局ランキングから取り除かれる（[REF_ssec:evaluation_method]節で後述）．
-----------------------------------------------------
  [subsection title : 実験用検索システム]
-----------------------------------------------------
  [i:lead, score:0.30191] 実験を行うため，提案手法に従って適合性フィードバックを行う検索システムを作成した．
.....
  [i:217, score:0.30191] 実験を行うため，提案手法に従って適合性フィードバックを行う検索システムを作成した．
  [i:222, score:0.20120] 解析結果及び式([REF_equ:dir])を用いて，DIRに基づく文書モデルを構築する．
  [i:232, score:0.23938] ただし，LDAで考慮する語彙は，初期検索結果に対する重要度を基に選出した．
-----------------------------------------------------
  [subsection title : ランキング精度の測定方法]
-----------------------------------------------------
  [i:lead, score:0.43226] 適合性フィードバックの効果は，適合性フィードバック前のランキング（i.e.,初期検索結果のランキング）と，適合性フィードバック後のランキングを比較することで検証できる．
.....
  [i:235, score:0.43226] 適合性フィードバックの効果は，適合性フィードバック前のランキング（i.e.,初期検索結果のランキング）と，適合性フィードバック後のランキングを比較することで検証できる．
  [i:238, score:0.40805] これは，フィードバックとして与えられた文書（適合であることが分かっている文書）が，適合性フィードバック後のランキングの上位に含まれやすいためである．
  [i:239, score:0.40802] そこで，適合性フィードバック前後のランキングを比較する際，フィードバックとして与えられた文書を適合性フィードバック後のランキングから取り除くという方法が考えられる．
-----------------------------------------------------
  [subsection title : リランキング性能の調査]
-----------------------------------------------------
  [i:lead, score:0.23164] まず，提案手法が初期検索結果のランキング精度をどの程度改善できるか調査した．
.....
  [i:260, score:0.45112] 両手法とも，フィードバックの表層の単語分布を文書セット全体の単語分布で補正することでフィードバックモデルを構築し，これを用いてリランキングを行っている．
  [i:265, score:0.49417] 提案手法の核となるアイディアは，テキスト（フィードバック及び検索結果中の各文書）に潜在的に現れうる単語の情報を適合性フィードバックに利用することである．
  [i:296, score:0.41008] 擬似適合性フィードバックでは，初期検索結果の上位[MATH]文書を適合文書とみなし，適合性フィードバックを行う．
-----------------------------------------------------
  [subsection title : フィードバックが少ない状況でのリランキング性能]
-----------------------------------------------------
  [i:lead, score:0.22066] 現実的には，ユーザが多くのフィードバックを与えてくれるとは考えにくい．
.....
  [i:308, score:0.33012] 具体的には，提案手法に与えるフィードバックを少しずつ減らしていき，リランキング性能がどのように変化するかを調査した．
  [i:311, score:0.32565] また，例えば[MATH]は，フィードバックとして[MATH]適合文書の半分だけを用いることを意味している．
  [i:313, score:0.33673] [MATH]の場合も調査したのは，フィードバックとして文書より小さい単位（e.g.,文書のタイトル，スニペット）が与えられた場合を想定し，このような場合にも提案手法が機能するかを調べたかったからである．
-----------------------------------------------------
  [subsection title : パラメータとリランキング性能の関係]
-----------------------------------------------------
  [i:lead, score:0.05483] 提案手法には[MATH]つのパラメータ[MATH]，[MATH]，[MATH]がある．
.....
  [i:327, score:0.28561] [MATH]は[MATH]と[MATH]の混合比を調整するパラメータ（式([REF_equ:hdm])及び式([REF_equ:hfm])参照），[MATH]は[MATH]と[MATH]の混合比を調整するパラメータ（式([REF_equ:nqm])参照），[MATH]はLDAのトピック数である．
  [i:337, score:0.38759] 他の実験と同様，クエリには[MATH]TITLE[MATH]タグの最初の[MATH]単語を，フィードバックには[MATH]RDOC[MATH]タグの最初の[MATH]文書を用いた．
  [i:348, score:0.29774] これは，潜在情報を考慮することで，フィードバックモデルの信頼度が増すことを示唆している．
-----------------------------------------------------
  [subsection title : LDA の実行時間]
-----------------------------------------------------
  [i:lead, score:0.32507] 提案手法では，検索結果中の各文書に対する[MATH]を構築するため，検索結果に対してLDAを実行する．
.....
  [i:354, score:0.37538] また，フィードバックに対する[MATH]を構築する際は，フィードバックに対してLDAを実行する．
  [i:358, score:0.46750] 適合性フィードバックは，(1)システムによる検索結果の提示，(2)ユーザによる検索結果の閲覧，適合文書の選択，(3)適合文書を用いた検索結果のリランキングという三つのステップから成る．
  [i:372, score:0.35113] 最後に，フィードバックに対してLDAを実行するのに要した時間を報告する．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:377, score:0.56126] 提案手法では，LDAを用いて，フィードバックや検索結果中の各文書に潜在的に現れうる単語の分布を推定した．
[i:378, score:0.53556] そして，表層的な単語の分布と潜在的な単語の分布の両方を用いてフィードバックと検索結果中の各文書との類似度を算出し，これに基づいて検索結果をリランキングした．
[i:380, score:0.47961] また，提案手法が，フィードバックが少ない状況でも，初期検索結果のランキング精度を改善する特性を持つことを示した（e.g.,フィードバックに[MATH]単語しか含まれていなくても，P@10で[MATH]の改善が見られた）．

