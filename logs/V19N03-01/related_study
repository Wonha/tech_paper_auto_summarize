表[REF_sbtbl:eRF]を見ると，すべての尺度において，OURSがINITを大きく上回っている．例えばP@10は[MATH]改善しており，提案手法が初期検索結果をうまくリランキングできたことが分かる．また，提案手法は，ZHAIやOURS ([MATH])より高い性能を示した．ZHAIやOURS ([MATH])は，テキストの表層情報だけを用いて適合性フィードバックを行っている．一方，提案手法は，テキストの表層情報に加え，テキストの潜在情報も用いて適合性フィードバックを行っている．提案手法がこれらの手法を上回ったことから，潜在情報が適合性フィードバックに有用であったことが分かる．

さらに，リランキング結果を調査したところ，提案手法が，テキストに表層的には出現しないが潜在的には現れうる単語の情報をうまく利用していることが確認できた．図[REF_fig:ntcir_subject]の検索課題を例に取ると，「宗教」や「祝日」「聖書」などの単語は，情報要求によく関連するが，フィードバックとして使用した文書には含まれていなかった．そのため，ZHAIやOURS ([MATH])では，これらの単語の情報を使用することができなかった．一方，提案手法では，これらの単語がフィードバックにおいてもある程度の確率で現れうると推定できた．具体的には，「宗教」「祝日」「聖書」は，それぞれ[MATH]，[MATH]，[MATH]の確率で現れうると推定できた．なお，フィードバックに[MATH]回出現した単語として「クリスマス」や「ＥＡＳＴＥＲ」などがあったが，これらの生起確率の推定値は，それぞれ[MATH]，[MATH]であった．提案手法では，これらの推定結果を用いることで，これらの単語を含む検索結果中の適合文書を上位にリランキングすることができた．

DICはあまり有効に機能せず，その結果はZHAIやOURS ([MATH])の結果を少し上回る程度であった．この原因は，我々が構築した同義語辞書のカバレッジにあると思われる．DICは，よりカバレッジの高い知識リソースが利用できれば（同義語や関連語などの知識をより多く利用できれば），より有効に機能する可能性を持つ．しかし，そのようなリソースを構築するのは容易ではない．一方，提案手法でも，単語と単語が関連するという知識を必要とする．しかし，DICと違って，何のリソースも必要としない．すなわち，提案手法では，LDAを用いることで，単語と単語が関連するという知識を検索結果から動的に獲得することができる．[REF_sec:introduction]章の「マック価格」というクエリを例に取ると，このクエリに対する検索結果には「CPU」や「ハードディスク」「ハンバーガー」「ポテト」などの単語が含まれると考えられる．提案手法では，検索結果に対してLDAを実行することで，「CPU」と「ハードディスク」が関連するという知識や「ハンバーガー」と「ポテト」が関連するという知識を，トピックという形で動的に獲得することができる．そして，獲得された知識を用いることで，文書に「ハードディスク」という単語が出現していなくても，「CPU」という単語が出現していれば，「ハードディスク」も潜在的にはその文書に現れうると推測できる．このように，DICと比べると，（カバレッジの高低に関わらず）何のリソースも必要としないという点で，提案手法の方が優れている．

paragraph score: 1.06729708123143
