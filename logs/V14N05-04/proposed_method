NMFは[MATH]の索引語文書行列[MATH]を，[MATH]の行列[MATH]と[MATH]の行列[MATH]の転置行列[MATH]の積に分解する[CITE]．
ただし[MATH]はクラスタ数である．
NMFはクラスタに対応したトピックの次元を[MATH]個想定し，その基底ベクトルの線形和によって，文書ベクトル及び索引語ベクトルを表現することに対応する．
つまり基底ベクトルの係数が，そのトピックとの関連度を表しているので，行列[MATH]自体がクラスタリング結果と見なせる．
具体的には，[MATH]番目の文書[MATH]は，行列[MATH]の第[MATH]列のベクトルで表現され，その次元圧縮された結果が，行列[MATH]の第[MATH]行のベクトルとなる．
このとき，[MATH]の第[MATH]行のベクトルは
と表せ，文書[MATH]のクラスタの番号は
となる．
与えられた索引語文書行列[MATH]から，[MATH]と[MATH]は以下の繰り返しで得ることができる[CITE]．
u'_{ij} \leftarrow u_{ij} \frac{(XV)_{ij}}{(UV^{T}V)_{ij}}
v'_{ij} \leftarrow v_{ij} \frac{(X^{T}U)_{ij}}{(VU^{T}U)_{ij}}
ここで[MATH]と[MATH]はそれぞれ[MATH]と[MATH]の[MATH]行[MATH]列の要素を表す．
また[MATH]により行列[MATH]の[MATH]行[MATH]列の要素を表す．
上記の式により，現在の[MATH]と[MATH]から，[MATH]と[MATH]が得られる，つまり新たな[MATH]と[MATH]が得られるので，それを[MATH]と[MATH]と見なして，上記の式を繰り返し適用する．
また各繰り返しの後に[MATH]を以下のように正規化する．
繰り返しの終了は，繰り返しの最大回数を決めておくか，[MATH]と[MATH]との距離[MATH]の変化量から判定する．
[MATH]の値はNMFの分解の精度を表現している．
NMFではこの分解の精度がクラスタリングの目的関数となっており，この分解の精度が高い，つまり[MATH]の値が小さいほど，良好なクラスタリングであると推定する．
また[MATH]はFrobeniusノルムを表し，[MATH]の行列[MATH]のFrobeniusノルムは以下で定義される．
通常，行列[MATH]と[MATH]の初期値にはランダムな値を与える．
しかし式[REF_eq:1]と[REF_eq:2]による繰り返しは局所最適解にしか収束しないために，[MATH]と[MATH]の初期値の与え方によって，最終的に得られる[MATH]と[MATH]は大きく異なり，結果としてクラスタリングの精度も大きく異なる．
例えば，図[REF_tr45a]は本論文の実験で用いた文書データセットtr45に対して，NMFによるクラスタリングの実験を20回行った結果である．
ただし各実験でのNMFの初期値にはランダムな値を与えており，各実験の初期値は異なる．
図[REF_tr45a]の横軸は実験の番号を示し，縦軸はクラスタリングの精度を表している．
図[REF_tr45a]から初期値によって得られる精度が大きく異なることが確認できる．
つまり，NMFは初期値によって得られるクラスタリング結果が異なる．
通常は適当な初期値を与える実験を複数回行い，それらから得た複数個の解の中で[MATH]の分解の精度が最も高いものを選ぶ．
しかし分解の精度は，直接的にはクラスタリングの精度を意味していないため，最も精度の高いクラスタリング結果を選択できる保証がない．
ここでは複数個のクラスタリング結果から1つを選択するのではなく，それらをアンサンブルするアンサンブルクラスタリングを試みる．
本手法のアンサンブルクラスタリングでは，NMFの初期値を様々に変化させて，複数個のクラスタリング結果を生成する．
次に複数個得られたクラスタリング結果から各データに対するベクトル表現を新たに作成し，その新たにベクトル表現されたデータに対してクラスタリングを行うことで，アンサンブルクラスタリングを実現する．
ここでは複数個得られたクラスタリング結果からデータに対する新たなベクトル表現を作る方法を説明する．
基本的には論文[CITE]で提案されたハイパーグラフを用いる．
クラスタの数が[MATH]個であり，得られているクラスタリング結果が[MATH]種類の場合，各データは[MATH]次元のベクトルで表現される．
データ[MATH]の[MATH]次元の値は，[MATH]番目のクラスタリング結果として，データ[MATH]がクラスタ番号[MATH]のクラスタに属していれば1を，属していなければ0を与える．
この結果，データ[MATH]の[MATH]次元のベクトル表現が得られる．
例を示す．
[MATH]，[MATH]とする．
またデータは[MATH]の7つとする．
4種類のクラスタリング結果が以下のようになっていたとする．
第1のクラスタリング結果：
この結果から目的の行列の1列目から3列目が得られる．
第2のクラスタリング結果：
この結果から目的の行列の4列目から6列目が得られる．
第3のクラスタリング結果：
この結果から目的の行列の7列目から9列目が得られる．
第4のクラスタリング結果：
この結果から目的の行列の10列目から12列目が得られる．
以上の4つの行列を結合させ，以下の[MATH]の行列を得る．
これがハイパーグラフである．
このハイパーグラフにおける行ベクトルが，各データ（本論文の場合，文書）の新たなベクトル表現に対応している．
このベクトルの類似度に基づいて，データをクラスタリングする．
ハイパーグラフが表す行列の各要素の値は0か1のバイナリ値である．
しかし値の意味を考えれば，その次元に対応するあるクラスタリング結果のあるクラスタに属する度合いと捉えられる．
そのため0か1のバイナリ値ではなく，非負の実数値を与える方が適切である．
しかもNMFの場合，各クラスタリング結果では各クラスタに属する度合いに対応する値が行列[MATH]に記載されている．
そこでここではハイパーグラフの要素が1である部分を，行列[MATH]の値から得ることで，非負の実数値を与えることにした．
このようにして作成したハイパーグラフを，ここでは重み付きハイパーグラフと呼ぶ．
図[REF_ensemble]に重み付きハイパーグラフの作成例を示す．
これは先の第1のクラスタリング結果に対応する部分である．
[MATH]から[MATH]の7個の文書データセットをNMFにより3グループにクラスタリングする．
結果は行列[MATH]で表される．
次に行列[MATH]を正規化する．
[MATH]の各行に注目し，最大値の部分を1に，それ以外を0に変換したものが通常のハイパーグラフである．
[MATH]の各行に注目し，最大値の部分はそのままに，それ以外を0に変換したものが本論文で提案する重み付きハイパーグラフである．
