本システムの構成を図[REF_fig:system]に示す．
本システムは，Webサーバ上のWikiとして動作し，教師が作文課題用のサイトを構築する．
学習者は，Webブラウザを介して作文するとともに，互いの作文を添削する．
システムは，教師の設定した「作文規則」に基づいて，学習者の作文をチェックする．
作文，および，添削結果は，WikiコンテンツとしてWebサーバ上に格納されていく．
システムは，教師に対して，作文を分析する手段を提供する．
本システムの機能は，Wikiのプラグインとして実現される．
プラグインは，次の4種類に大別される．
WYSIWYGエディタとして機能する．
エディタとしての基本的な機能の他，学習者による作文へのマークアップ，Webサーバへの作文の保存（排他処理を含む）ができる．
作文結果は，XHTMLとしてWikiコンテンツの中に埋め込まれる．
図[REF_fig:edit]に編集プラグインの実行例を示す．
「作文規則」に基づき，作文をチェックする．
チェックは，作文を保存する際に行われ，結果はWikiページに保存される．
作文規則は，[REF_ssec:model_student_sys]節，[REF_sec:composition_rule]節で詳しく説明する．
学習者同士の添削を支援する．
添削時には，まず，作文の該当箇所にハイパーリンクを作成する．
添削の内容は，リンク先のWikiのページに記入する．
図[REF_fig:edit]中の「冗」「口」などのアイコンは，ハイパーリンクの例である．
作文中の文字数，文数，段落数，添削数などの統計や作文の検索など，主として教師が学習者の作文を分析するための役割を果たす．
Wikiを利用している理由の一つは，Webコンテンツを作成するのが容易なことである．
Wikiは，HTMLのタグではなく，Wikiの簡易的なタグでWebページを作成できる．
作文教育の担当教師は，必ずしもWebシステムの利用やWebコンテンツの作成に精通しているとは限らない．
しかし，もし，作文支援システムを含めたWebコンテンツを容易に作成できれば，授業の資料を含めた形の作文用のWebサイトを構築するという形で，作文支援システムを授業の中に導入しやすくするなると考えられる．
Wikiを利用した，もう一つの理由は，プラグインとして実装することにより，機能の拡張やその利用が容易になるためである．
作文課題のテーマや授業での利用方法は多様であり，システムの拡張性やその利用の容易性は重要である．
Wikiのプラグインとして実装すれば，必要に応じて，機能を拡張することが可能であると同時に，拡張したプラグインを通常のプラグインと同様にWikiコンテンツに埋め込むことができる．
}
本節では，本システムの特徴である「相互教授モデル」について述べる．
このモデルは，学習者，教師，システムが互いの作文に関する「知識」を教授しあうことにより，学習者の作文を支援する．
概要を図[REF_fig:interaction]に示す．
この図のとおり，このモデルには，教師[MATH]システム，学習者[MATH]システム，学習者[MATH]学習者，という三つのタイプのインタラクションがある．
このモデルの中で，学習者は二人以上を想定する．
通常は，10名以上の学習者を想定し，特定の学習者間だけでなく，複数の学習者間でインタラクションが行われるようにする．
これは，後述するように，学習者間のインタラクションにおいて，誤った作文知識が教授されるのを防ぐためである．
教師は作文規則をシステムに「教授」し，システムがその作文規則に基づいて，個別の学習者とインタラクションしつつ，作文をチェックする．
実際の授業で利用する場合は，次の手順で示すように，作文課題に関連する授業と本モデルとを組み合わせて運用することを想定している．
教師が，学習者に対して作文を書く前の事前授業を行う．
教師がシステムに対して「作文規則」（[REF_sec:composition_rule]節を参照のこと）を設定する（教師[MATH]システム）．
学習者がそれぞれ作文する．
この際，自分の作文に対して，各種のマークアップを行う（学習者[MATH]システム）．
また，作文の過程で，システムが学習者の作文をチェックし，チェック結果に基づいて，学習者が自分の作文を修正する（システム[MATH]学習者）．
他の学習者の添削を行う（学習者[MATH]学習者）．
学習者が添削結果に基づき，自分の作文の修正を行う（学習者[MATH]学習者）．
システムが教師に対して，作文の分析支援を行う（システム[MATH]教師）
分析結果に基づき，授業で教師が学習者を指導する．
この後の節では，それぞれのインタラクションでどのような作文知識が教授され，どのように学習者の知識獲得につながるのか，ということを説明する．
まず，教師からシステムへは，教師自身が設定する「作文規則」が教授される（手順2）．
作文規則は，作文の表記，文法，文体，文章構造などの言語的な規則に加えて，作文の形式や内容を規定する規則である．
一般的には，作文課題ごとに学習者に教授したい事柄（以後，「指導項目」）が存在するので，その指導項目に基づいて，作文規則が決定される．
なお，指導項目は，教師が手順1で授業する内容と基本的に対応する．
例えば，本論文の[REF_sec:experiment]節で実施した実験では，「章立て」の習得を目的として，「旅行計画」をテーマとする作文課題を出している．
教師は，この目的とテーマを満たす作文が書かれるように，作文規則を設定する．
この実験の場合，1文の長さ，文体（です・ます調で書く）といった一般的な作文上の規則に加えて，「章立て」に関する作文規則を設定した．
さらに，作文のテーマに則して，必ず記述しなければならない項目（以後，「必須記述項目」）を設けて，作文規則とした．
具体的には，「旅行計画」というテーマから，「旅行目的」「スケジュール」などを必須記述項目としている．
一方，システムから教師へは，学習者が作成した作文を分析するための機能が提供される（手順6）．
具体的には，(1)作文規則の作文への適用結果の集計，(2)作文中の文字，文，段落数などの集計，(3)全作文に対する横断的な全文検索，(4)学習者同士の添削結果の集計などである．
教師は，これらの機能を使って，全学習者の作文を分析（例えば，誤りの傾向分析）をした上で，授業で学習者を指導する（手順7）．
学習者とシステムとの間のインタラクションは，学習者が作文する過程で行われる（手順3）．
学習者は，自分の作文に対して，マークアップを加える．
それに対して，システムは，作文に対する自動的なマークアップと，学習者のマークアップ結果を利用しつつ，作文規則を作文に適用する．
そして，図[REF_fig:check]のように，作文規則に適合しない部分を学習者に指摘する．
学習者が実際にどのようなマークアップを行うかは，教師の指導項目や自動的なマークアップの精度などに応じて決定する．
例えば，[REF_sec:experiment]節の実験では，章節タイトル，引用部分などの言語的な要素の他に，「旅行目的」「スケジュール」といった必須記述項目の記述範囲に対するマークアップを行っている．
これは，この実験の教育目的が「章立て」の習得であり，作文テーマが「旅行計画」だからである．
このように教育目的上，重要な部分については，自動的なマークアップの精度にかかわらず，学習者によるマークアップを行う．
学習者のマークアップが，学習者の作文技術習得に与える効果は，二つある．
一つは，学習者自身が自分の作文に対してマークアップすることによって，教師が学習者に対して習得してほしいと考えている事柄を学習者が自覚的に確認しつつ，作文を行うことができることである．
また，マークアップを行うことは，他者であるシステムに対して作文知識を「教える」ことになる．
したがって，CAI関連研究において，[CITE]や[CITE]が主張しているように，学習者の自発的な学習を促し，学習者自身の作文知識が整理・詳細化されることが期待される．
学習者がマークアップすることの，もう一つの効果は，現在の自然言語処理技術では十分な精度で解析することが困難な対象に対しても，マークアップが可能になることである．
現在のシステムでは実現困難なマークアップ処理を学習者が行えば，作文規則にそのマークアップ結果を取り込んで，学習者の作文を検査することが可能になる．
例えば，上記でマークアップの例として挙げた「旅行目的」を自動的に検出するには，表層的な解析のみならず，意味的な解析が必要になると思われる．
しかし，学習者がマークアップを行えば，「旅行目的」が記述されているか否かを機械的に判断し，記述されていない場合は，学習者にその誤りを指摘できる．
学習者間のインタラクションは，互いに作文に対して，コメントしたり，質問しあうことである．
コメントや質問の内容についての制限はないが，(a)誤字・脱字の指摘，(b)語の用法や文法の誤りの指摘，(c)内容に対する質問，(d)文章構成などの改善案などを，教師が学習者に事前に推奨しておくものとする．
学習者が行ったコメント，質問などは，システムが管理し，学習者同士が掲示版システムを用いて対話できるようにする．
図[REF_fig:correction]に添削例を示す．
学習者間のインタラクションが学習者の作文技術習得に与える効果は，学習者とシステム間のインタラクションと同様，学習者が他人に教授することによる効果と，広範な支援内容を実現できる点にある．
ただし，その効果の内容は異なる．
まず，他人に教授することの効果について説明する．
学習者が他の学習者の作文に対してコメントや質問をすることは，コメントするだけの知識を自ら持たなければならず，学習者自身の知識が整理・詳細化されると考えられる．
また，他人の作文を読むということは自分の作文作成の参考にもなる．
自分の作文に対してマークアップする場合と異なるのは，添削した相手や他の学習者から添削自体に対する反応があることである．
そのため，学習者（添削者，被添削者）の作文知識が矯正・強化される可能性がある．
具体的には，(a)誤った知識に基づいて他人の作文を添削した場合でも，学習者同士の対話の過程で誤った知識が矯正されうること，(b)複数の添削者が同じ内容の添削を行えば，その添削内容の信頼性が被添削者や他の添削者にも伝わること，などが挙げられる．
次に，広範な支援内容を実現できるという点について説明する．
学習者とシステム間でのインタラクションでも同様の効果が得られるが，学習者間のインタラクションはそれを補完する役割を果たす．
つまり，学習者・システム間のインタラクションでは，作文規則に記述できる範囲でしか支援しかすることができない．
それに対して，学習者間のインタラクションでは，添削する側の学習者の作文知識の範囲での支援が可能である．
以上のような学習効果がある一方，添削するのが学習者であり，専門家でないことから，添削内容に誤りが含まれる可能性を考慮しなければならない．
そこで，本モデルでは，二つの対策を考えている．
一つは，一人の学習者の作文に対して，複数の学習者が添削し，添削内容について議論できるようにすることである．
もう一つは，添削用の掲示板システム上に，教師が部分的に介入することにより，添削者・被添削者が互いに解決できないような場合に対処することである．
{\mod
本節では，ユーザ（学習者）による知識の教授という面から，相互教授モデルと既存の教授モデルとを比較する．
まず，学習者同士の教授という面から見てみると，作文教育では従来から学習者同士の添削を導入している．
例えば，国語教育では，学習者同士が作文を交換しあって読みあわせる「相互推敲」と呼ばれる手法が用いられている[CITE]．
また，第2言語学習者に対する作文教育でも，学習者同士で推敲しあう，ピア・レスポンスと呼ばれる手法が導入され，成果を挙げている[CITE]．
これらの教授モデルと相互教授モデルとの違いは，本教授モデルでは，教師の指導項目が習得されているかをチェックする手段が，第三者であるシステムに作文規則として取り込まれている点である．
教師の指導意図が学習者に伝わっているかを確認する場合，従来のモデルでは，各学習者の作文を個別に確認しなければならないが，本教授モデルでは，作文規則を用いて教師の指導意図を徹底させつつ，学習者同士の知識教授を実現することができる．
このことは，学習者の習得結果を確認しづらい，多人数を対象とした授業において，特に有効である．
次に，工学的な見地，つまり，ユーザ・システム間の知識教授という側面から本モデルと既存手法とを比較する．
従来から，自然言語処理システムでは，全自動で十分な精度の解が得られない場合，ユーザとのインタラクションが用いられてきた．
最も一般的に利用されているのは，仮名漢字変換システムである．
[REF_ssec:problems]節の問題点2で取り上げた意味処理に関しても，GDA [CITE]を用いて，ユーザが意味的情報をアノテーションする手法が提案されている（例えば，[CITE]による要約生成）．
本モデルが既存手法と異なる点は，(1)アノテーションが学習者にとって手間になるのではなく，作文技術を習得する助けになる（[REF_ssec:model_student_sys]参照）という，積極的な意味を持つこと，(2)複数の学習者が存在するため，アノテーションの誤りを修正できる可能性があることである．
二つ目の特徴は，誤ったアノテーションを行う可能性がある学習者をユーザとする作文支援システムにとっては，アノテーション結果を有効利用する上で重要である．
}
作文規則は，学習者の作文が教師の指導項目に適合しているか検査するための規則である．
本システム上で作成される作文は，XMLを用いて，内部的に構造化されており，作文規則はその構造に対して適用される．
作文規則の例を表[REF_tbl:example_composition_rule]に示す．
なお，これらの規則は，[REF_sec:experiment]節の実験で，実際に使用した作文規則の一部である．
作文規則は，次の4種類のテンプレートを論理的に結合することにより構成する．
テンプレート中の作文要素[MATH]は，作文自体，文，段落，文字など，作文を構成する言語的な要素である．
なお，作文要素には，学習者がマークアップする言語要素も含まれる．
[MATH]
[MATH]
[MATH]
[MATH]
テンプレート1と2は，作文要素の包含関係を規定する．
作文要素[MATH]が[MATH]を[MATH]だけ含む場合，作文とテンプレートが一致したことになる．
[MATH]は，[MATH]の個数を表し，定数，もしくは，数値範囲で指定する．
テンプレート1と2との違いは，テンプレート1では[MATH]が[MATH]を単に包含していればよいのに対して，テンプレート2では，[MATH]が[MATH]の子要素となっていなければいけないところである．
この二つのテンプレートの使用例として，表[REF_tbl:example_composition_rule]の作文規則1, 17を挙げる．
作文規則1は，「作文には，一つの作文タイトルが存在する」ことを規定するもので，作文要素「作文」の中に，子要素として作文要素「作文タイトル」が一つ含まれることを意味する．
作文をXMLで記述した例を図[REF_fig:structured_data]に示す．
一方，作文規則17は，必須記述項目の「旅行の目的」が作文中に書かれているかを検査するための規則である．
したがって，作文規則1とは異なり，作文の子要素ではなく，作文に単に包含されていればよい．
図[REF_fig:structured_data]では，2章の章タイトルに「目的」タグとして付与されており，「作文」要素に包含された構造になっている．
テンプレート3は，作文要素間の位置関係を規定する．
作文要素[MATH]と[MATH]が位置関係[MATH]のときにテンプレートと一致したことになる．
[MATH]の値は，「直前」「直後」「前」「後」「先頭」「末尾」のいずれかを取る．
このテンプレートの使用例としては，表[REF_tbl:example_composition_rule]の規則3を挙げる．
この規則では，図[REF_fig:structured_data]のように，「作文タイトル」要素が「作文」要素の先頭にあることを規定する．
テンプレート4は，作文要素間の対応関係を規定し，作文要素[MATH]と[MATH]が対応関係[MATH]であることを示す．
対応関係には，「引用・出典」「図表参照」がある．
このテンプレートの例としては，表[REF_tbl:example_composition_rule]の作文規則16を示す．
この規則は，引用を行った場合，必ず出典を示すことを指導するためのものである．
以上の四つのテンプレートに対して，論理演算子([MATH])を適用することにより，複数のテンプレートを論理的に結合させることができる．
また，演算子[MATH]を適用することにより，必須的な作文規則なのか，任意的な作文規則なのか（従ったほうが好ましい規則なのか）を表現することができる．
作文規則[MATH]の形式は，次のBNFで規定される．
R ::= & R' \mid desirable(R')
R' ::= & (R' and R') \mid(R' or R') \mid not(R') \mid
& include(e_i, e_j, N) \mid locate(e_i, e_j, P) \mid correspond(e_i, e_j, C)
作文規則に基づく誤り検出は，次の手順で行う．
作文要素の付与
規則の適用
エラーの生成
作文要素の付与方法には，(a)生テキストに自動付与，(b)学習者が付与，(c) (b)で付与された情報を利用して自動付与，の3通りがある．
どのような作文要素を付与するかは，作文規則（つまり，教師の指導項目）に依存するが，ここでは，表[REF_tbl:example_composition_rule]に示した作文規則中の作文要素と関係づけつつ，三つのタイプの作文要素の付与方法を説明する．
まず，(a)の方法で付与される作文要素は，自動的な認定の精度が高いものが対象となる．
認定の精度が低い場合や，精度が高くても，必須記述項目に関連した作文要素のように教育上の重要性が高い部分については，(b)(c)の付与方法を取ることになる．
表[REF_tbl:example_composition_rule]中の作文要素のうち，(a)の方法で付与された作文要素は，「作文」「段落」「文」「文字」「章番号」「話し言葉形態素」「だ・である形態素」である．
これらは，表層的なパターンマッチングや形態素解析結果を利用して付与されている．
例えば，「文」は，改行情報や句点（。
）などの表層的な情報に基づいて認定している．
また，「話し言葉形態素」は，作文全体を形態素解析し，主として，話し言葉でよく用いられる文末の助詞，助動詞を「話し言葉形態素」として認定している．
次に，(b)のタイプの作文要素は，学習者が作文作成時にマークアップする．
表[REF_tbl:example_composition_rule]中の作文要素のうち，このタイプの作文要素としては，章節タイトル（「章タイトル」「節タイトル」など），「引用」「出典」「作文タイトル」「著者」に加えて，必須記述項目に関連する作文要素「目的」「日程」「予算」「イベント」「導入部」「まとめ」がある．
(c)のタイプの作文要素の例としては，作文要素「章」（図[REF_fig:structured_data]参照）がある．
「章」要素の範囲を自動認定する際には，学習者がマークアップした「章タイトル」の付与結果を利用する．
また，必須記述項目の「導入部」についても，第1章の「章」要素を「序章」として認定するのに利用されている（図[REF_fig:structured_data]では，「章」要素のtype属性値として記述されている）．
作文規則の適用は，学習者が作文を保存するタイミングで実行される．
作文が保存されると，まず，（前節で説明した）付与方法(a)(c)の順序で作文要素を付与する．
その後，すべての作文規則を順次，作文に対して，適用する．
もし，作文規則に合致しない場合は，エラーとして学習者に伝達する．
エラーメッセージは，個々の作文規則ごとに対応づけられているものとする．
実際の実行結果については，[REF_ssec:model_student_sys]節の図[REF_fig:check]を参照されたい．
