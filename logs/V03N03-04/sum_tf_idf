================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:1, score:0.45691] 文脈自由文法形式の費用付き構文規則が与えられたとき，規則に従って生成されうる各部分構造について，その構造に相当する現在状態からその構造を構成要素として持つ全体構造に相当する目標状態までの費用を，構文解析に先立って，[MATH]法の最適性条件を満たすように推定しておく．
[i:2, score:0.36901] 従って，構文解析では，競合する構造のうちその生成費用と推定費用の和が最も小さいものから優先的に処理していくと，生成費用の最も小さい全体構造が必ず得られる．
[i:3, score:0.34812] また，優先すべき構造は，個々の規則に付与された費用に基づいて定まるので，優先すべき構造をきめ細かく指定でき，優先したい構造の変更も規則の費用を変更するだけで容易に行なえる．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:12, score:0.37811] 後者の手法を実現するためのアプローチでは，費用が付与された部分構造を状態とする状態空間において，目標状態のうち費用の最も小さいものを発見するという探索問題として構文解析を捉えるのが自然である．
[i:14, score:0.34572] 本稿では，可能な構造のうち生成費用の最も小さいものだけをまず生成し，必要ならば可能な構造が尽きるまですべての構造を生成費用の昇順に生成する構文解析法を提案する．
[i:17, score:0.44645] 解析過程において生成されうる部分構造に，構文規則に付与された費用に基づいて計算される生成費用を付与するとともに，その構造を構成要素として持つ全体構造を生成するまでの費用を，[MATH]法の最適性条件を満たし実際の費用になるべく近くなるように推定して付与し，競合する部分構造のうちその生成費用と推定費用の和が最も小さいものに対する処理を優先的に進めれば，効率の良い構文解析が実現できる．

================================================================
[section type  : proposed_method]
[section title : $\A^*$法の探索戦略に従うアジェンダ制御]
================================================================
[i:43, score:0.57574] 弧には，費用付き構文規則を適用して初期弧からその弧を生成するために要した費用を付与する．
[i:51, score:0.55455] このアルゴリズムは，費用の最も小さい目標弧を生成した後も，そのまま処理を続ければ，目標弧を費用の昇順に必要なだけ生成することができる．
[i:57, score:0.69374] 生成された弧が不活性弧であり，そのラベル，位置，全推定費用と同じものを持つ不活性弧がアジェンダに存在すれば，それら二つの弧を統合してアジェンダに入れ，チャートに存在すれば，二つの弧を統合してチャートに入れる．

================================================================
[section type  : proposed_method]
[section title : 弧の生成費用の計算]
================================================================
[i:59, score:0.56366] 弧を生成するための費用は，構文規則に付与された費用に基づいて計算される．
[i:67, score:0.64280] 活性弧[MATH] ([MATH]ならば不活性弧)を生成するための費用は，不活性弧[MATH]を生成するための費用[MATH]に重み[MATH]をかけたものの和に，規則([REF_eq:rule])の適用
[i:69, score:0.50963] 初期弧の生成費用は0とする．

================================================================
[section type  : proposed_method]
[section title : 目標弧までの費用の推定]
================================================================
[i:90, score:0.69544] 例えば，図[REF_fig:rule]のような費用付き構文規則が与えられたとき，この規則に従って生成される各不活性弧の最小生成費用は，図[REF_fig:min_cost]のアルゴリズムを用いて次のように計算される．
[i:106, score:0.76209] ステップ[REF_algo:est_pop]で構文範疇Sが取り出されるので，規則(a)がステップ[REF_algo:est_est]での処理対象となり，目標弧から不活性弧NPまでの推定費用は，[MATH]と計算され，不活性弧VPまでの推定費用は[MATH]となる．
[i:120, score:0.72861] ステップ[REF_algo:est_compare]では，不活性弧Aについて，今，規則(d)から得られた値0は，二回目のループで規則(b)から得られた値6より小さいので，推定費用は0となる．

================================================================
[section type  : proposed_method]
[section title : 解析例]
================================================================
[i:125, score:0.65454] 図[REF_fig:astar_chart]のアルゴリズムによる解析で，費用の最も小さい目標弧が得られるまでのアジェンダの変化の様子を表[REF_tab:agenda]に示す．
[i:132, score:0.62650] 例えば，アジェンダ1の第一要素1:#4は，表[REF_tab:chart]の四行目の全推定費用が1である弧hardを指す．
[i:137, score:0.60945] 以下，同様に処理を進め，アジェンダ15から先頭要素7:#23を取り出すと，弧#23は目標弧であるので，費用の最も小さい目標弧を発見したことになり，解析を中断する．

================================================================
[section type  : related_study]
[section title : 関連研究との比較]
================================================================
[i:147, score:0.40071] これに対し，本手法では，探索機構と規則記述の枠組みが分離されているので，探索機構には手を加えずに，構文規則の適用費用を修正するだけで，優先すべき構造を柔軟に変更できる．
[i:149, score:0.45228] この規則に従って生成される不活性弧を図[REF_fig:leftright]に示す．
[i:162, score:0.43412] 例えば，図[REF_fig:rule]の構文規則において，規則(f)を(h)より優先させたい場合，費用付き規則では，(f') [MATH]と(h') [MATH]とすればよいが，確率付き規則では，規則の適用確率[MATH]は[MATH]なる実数であり，左辺の構文範疇が同じである各規則の適用確率の和は1でなければならないので，規則(h)の適用確率よりも大きな値を規則(f)に付与することはできない．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:179, score:0.35868] この方法では，推定を，文が入力される度に行なう必要はなく，費用付き構文規則に変更がない限り一度だけ行なっておけばよい．
[i:182, score:0.35269] もう一つの課題は，人間が見て最も適切な構文構造を最初に生成できるように，構文規則に費用を付与することである．
[i:183, score:0.37753] [REF_sec:comparison]節で述べたように，費用付き構文規則は確率文脈自由文法規則の拡張とみなせるので，確率文脈自由文法規則のパラメータ学習法として知られているInside-Outsideアルゴリズムなどを利用することで，この課題には対処できる．

