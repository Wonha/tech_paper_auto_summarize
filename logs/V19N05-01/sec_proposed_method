本論文では，既に出版されているオノマトペ辞書に掲載されているオノマトペにそれらが表現している印象を事前に人手で付与したデータを用い，類似したオノマトペに付与されている印象を推定結果として出力する．
ここで重要になるのが，「類似度の計算方法」と「印象語の出力方法」である．
以下，順に説明する．
オノマトペから抱く印象は，主にオノマトペの表記に使用されているモーラ自体やモーラの並び方に影響すると考えられる[CITE]．
そこで以下に，4種類の類似度算出手法を提案する．
オノマトペには，「フワフワ」，「チラチラ」のようにモーラの並び方にいくつかのパターンがあり，そのパターンによって表現する印象が変化する[CITE]．
そこで，モーラの並びのパターンに着目した類似度を以下に2種類定義する．
抽象化した型表現間の類似度
オノマトペの表記をモーラの並びを表す型表現[CITE]に変換し，その型表現同士のレーベンシュタイン距離を元に類似度を計算する．
型表現への変換は，オノマトペ内の1モーラを1つの記号へと変換する．
特定のモーラに``X''，``Y''等の記号を割り振るが，一部の特徴的なモーラには特別な記号を付与する．
オノマトペの型表現に用いられる記号のリストを表[REF_type-symbol]に，オノマトペの型表現への変換例を表[REF_type-example]に示す．
ここで，``t''，``r''，``n''については，オノマトペの表記中で基本とみられる表現（例えば「パチ」）に対して付与されるモーラ（「パチッ」，「パチリ」，「パチン」）に対してのみ用いられ，基本とみられる表現内のモーラ（「キリキリ」内の「リ」等）には用いられない（この場合，通常のモーラと同様，``X''等が用いられる）．
例えば「フワフワ」「チラチラ」はいずれも``XYXY''と変換される．
このように変換された型表現同士のレーベンシュタイン距離を算出し，更に類似度に変換する．
本論文では，記号の置換・挿入・脱落をそれぞれ距離1としてレーベンシュタイン距離の計算を行うため，系列長がそれぞれ[MATH]，[MATH]である2つの系列[MATH]，[MATH]のレーベンシュタイン距離の最大値[MATH]は，
となる．
そこで，2つの系列[MATH]，[MATH]のレーベンシュタイン距離を[MATH]として，2つのオノマトペ間の型表現による類似度[MATH]を
と定義する．
この類似度は，全く同じ系列同士の時に最大値1を，全く異なる系列同士の時に最小値0をとる．
モーラ系列間の類似度
前項ではオノマトペの表記を型表現に変換し，その系列間の類似度を計算していたが，ここでは，より直接的にオノマトペ内のモーラ系列間の類似度を計算する．
オノマトペをモーラに分解し，モーラ系列間のレーベンシュタイン距離を算出する．
その後，式([REF_eq:leven])を用いて類似度を計算する．
なお，この計算方法は，前項の型表現に使用した記号の代わりにモーラを直接用いる点を除き，その他はまったく同じ計算である．
ここで得られる類似度を以降，[MATH]と表記する．
前項の型表現間の類似度では「フワフワ」と「チラチラ」はどちらも``XYXY''に変換されるため，類似度は1となるが，本項のモーラ系列間の類似度では0となる．
そのため，モーラの並びが持つ印象の違いに加えて，モーラ自体が持つ印象の違いも考慮した類似度であると言える．
オノマトペに使用されている様々なモーラを構成する各音素には，その音自体が印象を持っていることが知られている．
\addtext{この各音素が表現する印象をベクトルとして表現したものに音象徴{[CITE]}がある．
そこで，音象徴を基に類似度を計算する．
なお，音象徴} \addtext{ベクトルは，「強さ」，「硬さ」，「湿度」，「滑らかさ」，「丸さ」，「弾性」，「速さ」，「温かさ」の8次元の属性を有し，各属性に[MATH]から2までの5段階の数値を与えることで音素が表現する印象を定義している．
}
まず，音素ごとに定義された音象徴ベクトルを用い，あるモーラの音象徴ベクトルをそのモーラを構成するすべての音素に対応する音象徴ベクトルの総和として定義する．
この時，モーラが表現する印象として，母音と比較して子音の方がより強く影響することが知られている[CITE]ことから，子音の音象徴ベクトルを[MATH]倍してから和をとる．
このようにして得られたモーラの音象徴ベクトル[MATH]，[MATH]間の類似度は，以下の式で計算される正規化されたコサイン類似度[MATH]により計算する．
この式では，値域が0〜1になるように通常のコサイン類似度に対して正規化を行っている．
本論文では，音象徴ベクトルに基づく類似度として，以下の2種類の類似度算出手法を提案する．
モーラの\addtext{並び順と長さ}を考慮した類似度
\addtext{オノマトペの表記中のモーラの並び順と長さを考慮するため，2つのオノマトペのモーラ系列間の類似度を動的計画法(DP)を用いたDTW (Dynamic Time Warping)で計算する．
DTWは2つのシンボル系列において，各シンボル間に定義された類似度をもとに，系列同士の類似度を求める方法である．
2つのシンボル系列{[MATH]}と{[MATH]}（{[MATH]}は各系列の長さ）があった時，あらかじめ各シンボル間の類似度{[MATH]}を定義しておき，シンボルの順序を保存する（シンボル{[MATH]}が{[MATH]}と対応したとすると，{[MATH]} ({[MATH]})は必ず{[MATH]} ({[MATH]})と対応づけがなされる）という制約のもとで，対応するシンボル間の類似度の総和が最大になるような対応づけを求める．
この時，{[MATH]}は{[MATH]}と，{[MATH]}は{[MATH]}と対応づけを行うこととする．
最適な対応づけの探索は動的計画法を用いて効率よく計算され，結果として非線形に伸縮する系列間の類似度を計算することが可能となる．
}
\addtext{ここでは，各オノマトペをモーラの系列と捉え，2つのモーラ系列間の類似度をDTWで計算する．
この時，各モーラ間の類似度は式({[REF_eq:cosine]})で計算される正規化されたコサイン類似度を用いる．
こうして得られた類似度の最大値を，{[MATH]}と表記する．
}
全体の音象徴ベクトルによる類似度
オノマトペの表記中のモーラの並びを考慮せず，各モーラの音象徴ベクトルをすべて加算することでオノマトペの音象徴ベクトルを計算し，その正規化コサイン類似度を式([REF_eq:cosine])を用いて計算する．
ここで得られた類似度を，[MATH]と表記する．
前節までに定義した4種類の類似度を用い，オノマトペ同士の類似度を計算する．
ここでは，4種類の類似度の重み付き和を計算することで，2つのオノマトペ[MATH]，[MATH]間の類似度[MATH]を算出する．
ここで，[MATH]，[MATH]，[MATH]，[MATH]はそれぞれの類似度に対する重みであり，モーラの音象徴ベクトルを計算する際に子音に与える重み[MATH]と合わせて調整可能なパラメータである．
\addtext{各類似度はすべて，全く同じもの同士の時が1，全く異なるもの同士の時に0となるように正規化されている．
しかし，各類似度がオノマトペの印象を推定する上でどの程度重要であるかはわからないため，各類似度の重要度を変化させるためのパラメータとして重みを用い，実験的に最適な値を探索することとする．
}
本論文での提案手法の基本的な考え方は，入力されたオノマトペと高い類似度を持つオノマトペを辞書内から検索し，それに付与されている印象語を出力するというものである．
しかし，常に最も類似したオノマトペに付与された印象語だけを出力するだけではなく，2位以下のオノマトペに付与されている印象語ついても，その類似度に比例した重みで考慮する必要があると思われる．
そこで，以下の手順で検索を行い，最終的な印象語を出力する．
辞書内のすべてのオノマトペと類似度計算を行い，上位[MATH]個のオノマトペを抽出する．
抽出された各オノマトペに付与されているすべての印象語について，類似度に比例した得点を与える．
具体的には，最も類似度の高いオノマトペに付与されているすべての印象語に対して，類似度と同じ値の得点をそれぞれ与える．
また，2位のオノマトペに付与されているすべての印象語についても同様に得点を与える．
この時，1位と2位のオノマトペ双方に同じ印象語が付与されていれば，その印象語には1位の類似度と2位の類似度が加算された得点が与えられることになる．
以下同様に，[MATH]位のオノマトペに付与された印象語まで得点を与えていく．
得られた印象語を得点の高い順に並べかえ，最も高い得点を[MATH]とした時，[MATH]以上の得点を持つすべての印象語を出力する．
ここで，[MATH]は0〜1の値であり，[MATH]とあわせて実験的に決定するパラメータである．
