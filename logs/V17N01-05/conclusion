[REF_exp1]章（表[REF_tab:result]）から，単純な単語列アライメントモデルと比較して，提案モデルが十分に高精度なアライメントを行えていることがわかる．
図[REF_fig:word_align]および図[REF_fig:proposed_align]で二つの手法のアライメント結果の比較を示す．
灰色に塗られたマスはアライメントの正解であり，黒い四角（■）がある部分が出力である．
図[REF_fig:word_align]は単語列アライメントの結果の例である．
文内に“非去勢マウス”と“去勢マウス”，``non-castrated mice''と``castrated mice''というように，同じ語が複数回出現しており，アライメントに曖昧性があるが，単語列アライメントモデルはこの曖昧性解消に失敗している．
これは文を単純な単語列として見た場合，曖昧性を持つ語同士が互いに近くに位置しており，さらに曖昧性解消の手がかりとなる“同様に[MATH] as”といった対応ともほぼ等距離にあるためである．
一方で図[REF_fig:proposed_align]に示すように，提案モデルではこれらの語を正しく対応付けることができており，文を木構造で見た場合の利点が生かされている．
例えば英語側の木構造において，``as''に係っているのは``castrated mice''ではなく``non-castrated mice''であり，同様に日本語側の木構造においても，“同様に”に係っているのは“去勢マウス”ではなく“非去勢マウス”である．
このような関係から，“非去勢マウス[MATH] non-castrated mice”，“去勢マウス[MATH] castrated mice”という正しい対応関係が獲得されている．
[REF_Introduction]章で述べたように，IBMモデルに代表されるような文を単純な単語列として扱う既存の統計的単語列アライメントモデルは，英語とフランス語などのように語順がほぼ同じであり，語順変化がある場合でも局所的である言語対においては十分頑健に働くが，語順が大きく変化する言語対においてはその精度に問題がある．
例えば日本語と英語について考えてみると，日本語の文はSOVの語順であるのに対し，英語ではSVOの語順であり，このため語順の変化が大きくなりやすい．
このような言語対においては言語の構造情報を利用することが自然であり，また有効であることが本実験により示されている．
句を扱うことによる改善例としては，図[REF_fig:result_fail]において単語列アライメントモデルでは“受光素子[MATH] photodetector”という句対応の獲得に失敗しているのに対し，図[REF_fig:result_good2]に示すように提案手法では正しく獲得されている．
単語レベルでの対応を後から重ね合わせる手法では，どこまでが句となるべきかの境界判定ができないなどの欠点があり，このような句対応を精度良く発見することは難しい．
これに対し提案手法ではパラメータの学習と同時に句を獲得することができる上に，木構造を利用しているため，単語列としては連続であっても意味上不連続であり，句となるべきではないといった境界判定が自然に行える．
表[REF_tab:phrase_dist]に，得られた対応を大きさごとに計数した結果を示す（単語列アライメント手法はgrow-diag-final-and，提案手法はStep 2の5回目のイタレーションの結果）．
なお提案手法ではイタレーションが進むにつれて，1ずつ句の大きさが大きくなる．
このため，5回目のイタレーションにおいては日英の句の合計が6の対応が最大となる．
結果を見ると，単語列アライメント手法に比べて提案手法では得られた対応の個数がサイズがより大きなものへとシフトしていることが見て取れ，より大きなサイズの対応が獲得されていることがわかる．
これが再現率の向上に大きく貢献しているといえる．
さらにイタレーションごとの各言語のNULL対応ノード数と，平均フレーズサイズの推移を図[REF_fig:phrase-size]に示す．
平均フレーズサイズは，例えばある一つの対応に含まれる日本語の単語が[MATH]語，英語の単語が[MATH]語ならば[MATH]とした．
ある程度までは平均フレーズサイズは上昇するが，6回目程度からはそれほど大きくは変化しておらず，アライメントが安定していることがわかる．
翻訳での利用を考えた場合，適合率は高ければ高いほどもちろん翻訳の精度が向上すると考えられる．
しかしながら再現率が低いと，例えばPhrase-based SMT [CITE]やHiero [CITE]などにおいてはフレーズテーブルのサイズが大きくなりすぎるという問題が起こり，用例ベース翻訳システム[CITE]においては利用可能な用例の数が減ってしまうなど，再現率もおざなりにはできない．
一方で再現率のみが高く，適合率が低くてもやはり質の良い翻訳は行えない．
つまり両者のバランスを取り，どちらも向上させることが，翻訳の質の向上につながるはずであり，[REF_exp2]章で示したように，提案手法はこの観点からも有効であると言える．
実際に提案手法によるアライメントによって翻訳精度が向上するかの調査は今後の課題である．
提案手法におけるアライメント誤りの要因で最も大きいものは，構文解析の誤りによるものである．
提案手法は構文解析結果に強く依存しており，構文解析が誤っていると容易にアライメントの誤りにつながってしまう．
長期的には各言語の構文解析の精度が向上していくことも十分期待できるが，構文解析結果を修正しつつアライメントすることも考えられる[CITE]．
また山登り法によるアライメントの探索の際に局所解に陥ってしまうという問題もしばしば見受けられた．
これはほとんどの場合，一方の言語で1文内に同じ語や句が複数回出現しているが，他方では省略されて1度しか出現していないなど，出現回数に差がある場合に起こる．
初期アライメント生成時には周りのノードとの関係は一切見ていないため，このような省略がある場合にはどちらが正しい対応かを判断することができないため，ランダムにどちらかが選ばれる．
このとき運悪く誤った方を選択してしまい，さらにその周囲に誤った対応がいくつかあると，お互いに足を引っ張り合い，局所解に陥ってしまう．
このように，提案手法では必ずしも最もよいアライメントが得られるとは限らない．
この問題を解決するためには，山登り法の初期値を複数用意しておき，探索を複数回行うといった方法を取ったり，アライメントの探索アルゴリズムをよりよいものに改良する必要があり，例えばBelief Propagationを利用する[CITE]ことなどが考えられる．
さらに，機能語をどのように扱うかといった難しい問題も残されている．
機能語は明確に対応する語を持たないことがしばしばある．
例えば日本語における格助詞などや英語における冠詞などはその典型的な例である．
このような語に対しては，アライメントの正解の基準と出力とが整合的でない場合が多く，これがアライメント精度の向上の障害になってしまう．
[REF_exp1]章の最後に示したように，提案手法では簡単なルールを用いるだけで大幅な精度の向上を達成できる．
これは木構造を利用していることの利点であるといえる．
本稿では依存関係確率モデルを用いた統計的句アライメント手法を提案した．
提案モデルは木構造上でのreorderingモデルということができ，シンプルなモデルながらも言語構造の違いを柔軟に吸収し，精度の高いアライメントを実現できた．
実験結果から，語順の大きく異なる言語対に対しては既存の単語列アライメント手法では十分な精度を達成することは困難であり，構文解析などの言語情報を利用することが自然であり，高い効果を示すことが証明された．
今回は日本語と英語間のアライメント実験のみしか行わなかったが，同様に語順に大きな違いのある日本語と中国語間での実験などを行い，提案手法が言語対によらずロバストな手法であることを示す必要がある．
考察にも述べたとおり，提案手法は依存構造解析に大きく依存しており，依存構造解析誤りが容易にアライメントの誤りにつながってしまう．
両言語の解析結果を照らしあわせて，文構造を修正しつつアライメントすることも可能なはずであり，現在検討中である．
これが実現できれば，依存構造解析とアライメント双方の精度向上が可能となると考える．
アライメントの精度のみを評価したが，この結果が翻訳の精度にどのように影響するかを調査することは今後の課題である．
