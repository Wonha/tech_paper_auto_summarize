================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:256] 語順や言語構造の大きく異なる言語対間の対訳文をアライメントする際に最も重要なことは，言語の構造情報を利用することと，一対多もしくは多対多の対応が生成できることである．
[i:1, score:298] 本論文では両言語文の依存構造木上での単語や句の依存関係をモデル化した新しい句アライメント手法を提案する．
[i:5, score:230] アライメント実験では，既存の単語アライメント手法と比較して，提案手法にではアライメントの精度をF値で8.5ポイント向上させることができた．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:7, score:314] 一つは構文解析や依存構造解析などの言語情報をアライメントに組み込み，語順変化を克服することであり，もう一つはアライメントの手法が1対1の単語対応だけでなく，1対多や多対多などの句対応を生成できることである．
[i:20, score:351] phrase-based SMTでいうところの“句”はただの単語列に過ぎないが，NakazawaとKurohashi [CITE]は言語的な句をアライメントの最小単位とし，句の依存関係に着目したモデルを提案しているが，そこでは内容語は内容語のみ，機能語は機能語のみにしか対応しないという制約があり，また複数の機能語をひとまとまりに扱っているという問題もあり，これらがしばしば誤ったアライメントを生成している．
[i:26, score:307] 本モデルは二つの依存構造木において，一方の依存構造木で直接の親子関係にある一組の対応について，他方のそれぞれの対応先の依存関係をモデル化しており，単語列アライメントで扱うのが困難な距離の大きな語順変化にも対応することができる．

================================================================
[section type  : proposed_method]
[section title : 提案モデル]
================================================================
[i:44, score:86] 提案モデルは依存構造木上で定義されるものであるので，まず対訳文を両言語とも依存構造解析し，単語の依存構造木に変換する．
[i:45, score:87] 図[REF_fig:word-based-alignment]の一番右に依存構造木の例を示す．
[i:47, score:282] アライメントの最小単位はこれら各単語であるが，モデル推定時に複数単語のかたまりを句として自動的に獲得する．
-----------------------------------------------------
  [subsection title : 提案モデル概観]
-----------------------------------------------------
  [i:lead, 250] 本章では，広く知られており，かつ一般的に用いられている統計的なアライメント手法であるIBMモデルと比較しながら，我々が提案するモデルについて説明する．
.....
  [i:50, score:273] IBMモデル[CITE]では，与えられた日本語文[MATH]と英語文[MATH]からなる対訳文間の最も良いアライメント[MATH]は以下の式により獲得される：
  [i:60, score:287] また図[REF_fig:word-based-alignment]の左側にIBMモデルによるアライメントの例を示す．
  [i:71, score:268] 図[REF_fig:word-based-alignment]の一番右に提案モデルによるアライメント例を示す．
-----------------------------------------------------
  [subsection title : 句翻訳確率]
-----------------------------------------------------
  [i:lead, 93] [MATH]が[MATH]個の句([MATH])からなり，[MATH]が[MATH]個の句([MATH])とNULL([MATH])からなるとする．
.....
  [i:81, score:246] またアライメント[MATH]は[MATH]の各句から[MATH]の単句への対応を表し，[MATH]は句[MATH]が句[MATH]に対応していることを示すとする．
  [i:82, score:120] 提案モデルでは，IBMモデルにおける単語翻訳確率[MATH]の代わりに，句翻訳確率[MATH]を考える．
  [i:87, score:125] 表[REF_tab:sample_prob]の上部に図[REF_fig:word-based-alignment]の例における句対応確率を示す．
-----------------------------------------------------
  [subsection title : 依存関係確率]
-----------------------------------------------------
  [i:lead, 301] IBMモデルにおいて，単語の移動，すなわちreorderingモデルは，式[REF_eq:align]に示したように，一つ前の単語のアライメントとの相対位置によって定義されている．
.....
  [i:88, score:301] IBMモデルにおいて，単語の移動，すなわちreorderingモデルは，式[REF_eq:align]に示したように，一つ前の単語のアライメントとの相対位置によって定義されている．
  [i:90, score:258] まず[MATH]のある単語[MATH]と，[MATH]に係る単語[MATH]について考え，それらの可能なアライメントのうち，[MATH]が句[MATH]に属し，[MATH]が句[MATH]に属しており，[MATH]が[MATH]に係っているものを考える．
  [i:109, score:282] 次にNULLアライメントに関してだが，これには[MATH]がNULL対応の場合，[MATH]がNULL対応の場合，両方ともNULL対応の場合の3通りがあり，それぞれ[MATH]の値は`NULL_p'，`NULL_c'，`NULL_b'となる．

================================================================
[section type  : proposed_method]
[section title : トレーニング]
================================================================
[i:117, score:57] これはIBMモデルにおいて，完全に最適解が求まる簡単なモデルからスタートし，徐々により複雑なモデルに移行することに対応する．
[i:118, score:143] Step 1では単語翻訳確率の推定が行われ，Step 2では句翻訳確率と依存関係確率の推定が行われる．
[i:121, score:98] 複数単語の塊＝句はStep 2において自動的に獲得される．
-----------------------------------------------------
  [subsection title : Step 1]
-----------------------------------------------------
  [i:lead, 98] Step 1では各方向独立に，単語翻訳確率を推定する．
.....
  [i:126, score:291] これはStep 1の段階で可能な句の候補全てを考慮すると，アライメント候補数が爆発し，扱えなくなるためである．
  [i:127, score:275] [MATH]から[MATH]へのアライメントを考えると，[MATH]の各単語は，他の単語に関係なく，[MATH]の任意の単語，またはNULLに対応することができる．
  [i:133, score:316] 単語翻訳確率の初期値として一様な確率を与えておき，式[REF_eq:trans_prob]と[REF_eq:all_align_prob]を計算して，正規化したアライメント回数[MATH]をアライメント[MATH]内の全ての単語対応に与える．
-----------------------------------------------------
  [subsection title : Step 2]
-----------------------------------------------------
  [i:lead, 134] Step 2では句翻訳確率と依存関係確率の両方を推定する．
.....
  [i:141, score:334] そこで我々は最も良いアライメントを探索するために，まず句翻訳確率のみから初期アライメントを生成し，その後依存関係確率も考慮しつつ，山登り法によってアライメントを徐々に修正するという方法をとる．
  [i:145, score:393] 全体として，Step 2の1回のイタレーションは，E-stepでの“初期アライメント”の生成と“山登り法”により最適なアライメントの探索，E-stepとM-stepの間での新たな句候補の生成，M-stepでのパラメータの更新の4つの要素からなる．
  [i:148, score:335] 依存関係確率は，Step 1の最後のイタレーションで得られた最も良いアライメント結果において依存関係の生起回数を計数し，そこから求めた確率を用いる．

================================================================
[section type  : experiment_result]
[section title : アライメント実験]
================================================================
[i:187, score:211] ただし，正解データにはSure([MATH])アライメントのみが付与されており，Possible([MATH])アライメントはない[CITE]．
[i:190, score:262] またStep 2のパラメータ推定の際に用いるアライメントの数は[MATH]とした．
[i:192, score:294] 一つ目は既存の単語列アライメント手法と比較することによって提案手法の有効性を示すための実験であり，二つ目は依存構造を利用することと，単語より大きな単位である句を扱うことの効果を示すための実験である．
-----------------------------------------------------
  [subsection title : 単語列アライメント手法との比較]
-----------------------------------------------------
  [i:lead, 263] 比較実験として，単語列アライメント手法として広く利用されているIBMモデルを実装したアライメントツールであるGIZA++ [CITE]を用いてアライメントを行った．
.....
  [i:200, score:344] まず`Step 1'に示されているのは，Step 1のイタレーションを5回行った後に学習されたパラメータ（単語翻訳確率）を用いたアライメントの精度である．
  [i:203, score:335] `Step 2-1'は句翻訳確率は`Step 1'のものと同じだが，それに加えて`Step 1'のアライメント結果から推定した依存関係確率を用いてアライメントを行っている．
  [i:206, score:310] 結果として，提案手法では単語列アライメント手法よりもF値で4.9ポイントのアライメント精度向上を達成した（Step 2-7とgrow-diag-final-andとの比較による）．
-----------------------------------------------------
  [subsection title : 依存構造と句を扱うことの有効性]
-----------------------------------------------------
  [i:lead, 88] 依存構造木を用いることと，単語より大きな句という単位を用いることの有効性を示すための実験を行った．
.....
  [i:224, score:88] 例えば原言語側で連続している一組の対応のそれぞれの対応先が前，又は後ろに何単語（もしくは句）離れているかをモデル化した．
  [i:226, score:297] 全ての実験条件において，示した結果はStep 2で5回イタレーションを行った後のアライメント結果での評価である．
  [i:227, score:103] この結果から，句を扱うことは再現率の向上につながり，依存構造木を利用することは適合率の向上につながることがわかり，両方を用いることにより，適合率・再現率ともにバランスよく高い精度を達成することができると言える．

================================================================
[section type  : conclusion]
[section title : 考察]
================================================================
[i:228, score:274] [REF_exp1]章（表[REF_tab:result]）から，単純な単語列アライメントモデルと比較して，提案モデルが十分に高精度なアライメントを行えていることがわかる．
[i:232, score:296] 文内に“非去勢マウス”と“去勢マウス”，``non-castrated mice''と``castrated mice''というように，同じ語が複数回出現しており，アライメントに曖昧性があるが，単語列アライメントモデルはこの曖昧性解消に失敗している．
[i:243, score:368] 表[REF_tab:phrase_dist]に，得られた対応を大きさごとに計数した結果を示す（単語列アライメント手法はgrow-diag-final-and，提案手法はStep 2の5回目のイタレーションの結果）．

================================================================
[section type  : conclusion]
[section title : 結論]
================================================================
[i:271, score:291] 本稿では依存関係確率モデルを用いた統計的句アライメント手法を提案した．
[i:272, score:262] 提案モデルは木構造上でのreorderingモデルということができ，シンプルなモデルながらも言語構造の違いを柔軟に吸収し，精度の高いアライメントを実現できた．
[i:273, score:256] 実験結果から，語順の大きく異なる言語対に対しては既存の単語列アライメント手法では十分な精度を達成することは困難であり，構文解析などの言語情報を利用することが自然であり，高い効果を示すことが証明された．

