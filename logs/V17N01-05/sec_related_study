日本語と英語のように言語構造が著しく異なり，語順変化が大きな言語対において，対訳文をアライメントする際に重要なことは二つある．
一つは構文解析や依存構造解析などの言語情報をアライメントに組み込み，語順変化を克服することであり，もう一つはアライメントの手法が1対1の単語対応だけでなく，1対多や多対多などの句対応を生成できることである．
これは一方の言語では1語で表現されているものが，他方では2語以上で表現されることが少なくないからである．
しかしながら，既存のアライメント手法の多くは文を単純に単語列としてしか扱っておらず[CITE]，句対応は単語対応を行った後にヒューリスティックなルールにより生成するといった方法を取っている[CITE]．
Quirkら[CITE]やCowanら[CITE]はアライメントに構造情報を統合しようとしたが，前述の単語列アライメントを行った後に用いるに留まっている．
単語列アライメント手法そのものの精度が高くないため，このような方法では十分な精度でアライメントが行えるとは言い難い．
一方で，アライメントの最初から構造情報を利用する手法もいくつか提案されている．
Wata\-nabeら[CITE]やMenezesとRichardson [CITE]は構文解析結果を利用したアライメント手法を提案しているが，対応の曖昧性解消の際にヒューリスティックなルールを用いている．
YamadaとKnight [CITE]やGildea [CITE]は木構造を利用した確率的なアライメント手法を提案している．
これらの手法は一方の文の木構造に対して葉の並べ替え，部分木の挿入・削除といった操作を行って，他方の文構造を再現するものであるが，構文情報の利用が逆に強い制約となってしまい，文構造の再現が難しいことが問題となっている．
YamadaとKnightはいったん木構造を崩すことによって，Gildeaは部分木を複製することによってこの問題に対処している．
我々はこのような木構造に対する操作は不要であり，依存構造木中の部分木をそのままアライメントすればよいと考えた．
またCherryとLin [CITE]は原言語側の依存構造木を利用した識別モデルを提案している．
しかしながらこの手法はアライメント単位が単語のみであり，一対一対応しか扱えないという欠点がある．
phrase-based SMTでいうところの“句”はただの単語列に過ぎないが，NakazawaとKurohashi [CITE]は言語的な句をアライメントの最小単位とし，句の依存関係に着目したモデルを提案しているが，そこでは内容語は内容語のみ，機能語は機能語のみにしか対応しないという制約があり，また複数の機能語をひとまとまりに扱っているという問題もあり，これらがしばしば誤ったアライメントを生成している．
