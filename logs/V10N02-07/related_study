実験では圧縮する次元の数を交差検定では75に，実際の評価では100に固定している．この値は適当である．最適な次元数については様々な議論があるが，ここではSVDPACKCの利用例として紹介した実験であるため，最適な次元数を推定する処理は行わなかった．ちなみに実際の評価における次元数を100から増減させた場合の，実験結果を表[REF_jigen]に示す．次元数を100に圧縮するといっても行列のランク数がそれ以下であれば，100よりも小さい数になるので，100のときに圧縮された次元数を基準に[MATH]20, [MATH]10, +10, +20と次元数を変更させて実験を行った．また表中にMAXとあるのは，行列のランク数で圧縮した場合を示す．これが圧縮できる次元の最大値である．大まかな傾向としては次元数が多い方が精度は高いようである．ただし最高精度を記録する次元数は個々の単語によって異っており，最適な次元数は問題に依存すると言える．



LSIのアイデア自体は情報検索以外にも適用できる．ここでは語義判別問題への利用を試みた．他にも文書分類への応用が報告されている[CITE]．このような教師付き学習のタイプでは，訓練事例数が大規模なものになることはないため，SVDPACKCが利用できる．また素性ベクトルの次元圧縮という手法は，統計学では主成分分析，パターン認識ではKarhunen-Lo\`{e}ve展開や線形判別法[CITE]として知られている手法である．またデータマイニングの分野ではデータ数が非常に大きいために，現実的には機械学習手法を直接適用できないという問題がある．そのために類似する事例集合を抽象表現として表される事例に変換し，変換後の事例に対して機械学習手法を適用するData Squashingという手法が使われる[CITE]．これは索引語ベクトルではなく文書ベクトルに対する次元圧縮の手法に対応する．このように次元圧縮の手法は様々な分野で重要であり，新しい手法が次々と提案されている（例えば[CITE]など）．次元圧縮の手法として，特異値分解は古典的と言えるが，ベースとなる手法として容易に試すことのできる意味でもSVDPACKCは有用であろう．

paragraph score: 1.07027841393803
