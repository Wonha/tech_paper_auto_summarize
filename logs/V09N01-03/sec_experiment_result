システムと模擬ユーザとの間のシミュレーション対話実験によって，デュアルコスト法の評価を行った．
模擬ユーザとは，実ユーザの振舞をシミュレートしながらシステムと対話するエージェントである．
各対話の初期時点において，模擬ユーザはシステムに対する要求内容を保持している．
ユーザはシステムに要求内容を伝え，ユーザとシステムは確認対話を通して要求内容を確定する．
要求内容が確定すると，システムは確定したユーザ要求内容に応じたデータをユーザに伝達する．
システムと模擬ユーザは，音声で対話するのではなく，発話内容を属性と値の対のリストとして表現した上で、属性と値の対のリストをやり取りすることによって対話を行う．
ユーザの発話内容をシステムに送るときには，属性認識率に応じて属性値に誤りが含まれるように，システムの音声認識誤りをシミュレートした．
実験で用いたタスクは，[REF_sec-system]節で述べた気象情報案内タスクである．
場所は50個の都市，日は今日か明日の2通りである．
警報種別としては，洪水，大雨など10個の種別がある．
システムは，データベースの中に，各都市の今日，明日の天気，最高気温と最低気温，6時間ごとの降水確率のデータを保持している．
また，警報については，現在どこにも警報は発表されていないということをデータとして保持している．
このデータベースの内容の場合，警報の問い合わせに関しては，情報種別だけを確認することが，最適な対話プランとなる．
天気，気温，降水確率の問い合わせに関しては，たいていの場合，場所，日，情報種別の属性をすべてを確認することが最適な対話プランとなる．
ただし，属性認識率が低い状況においては，日属性の確認を行わずに，今日と明日の両日の気象情報を伝達することが，最適なプランとなる場合もある．
これは，属性認識率によっては，日属性の確認をするための確認対話が，一日分の気象情報を伝達するための応答文よりも長くなる場合があるからである．
デュアルコスト法と比較するために，システム知識の範囲にかかわらずユーザ要求の内容のすべてを逐一確認する2つの従来方法として，従来法1，従来法2と呼ぶ対話制御方法を用いた．
従来法1は，できるだけ多くの属性を一度に確定しようとする方法であり，従来法2は，属性を一つずつ確定する方法である．
従来法1は次のように動作する．
なお，従来法1，従来法2とデュアルコスト法の違いは，以下に述べる点のみである．
システム理解状態から可能なユーザ要求タイプを導き出す．
システム理解状態において，既に値が与えられている属性があるなら，そういった属性の値をできるだけ多く一度に確定するための確認行動を選択し，(C1-4)へ移行する．
さもなければ，(C1-3)へ移行する．
できだけ多くのユーザ要求タイプで有効となる属性を優先するように，値が与えられていない属性を一つ選択し，その属性のための情報要求行動を選択する．
選択されたシステム行動を実行し，ユーザからの応答を待って，システム理解状態を更新する．
ユーザ要求タイプが一意に決まっており，その要求タイプの属性値がすべて確定しているなら，システム情報伝達フェーズに移行する．
さもなければ，(C1-1)に戻る．
従来法2は，従来法1の(C1-2)を次の(C2-2)に置き換えた方法である．
システム理解状態において，値が既に与えられている属性があるなら，それらの属性の一つを確定するための確認行動を選択し，(C1-4)へ移行する．
さもなければ，(C1-3)へ移行する．
模擬ユーザの振舞は以下の通りである．
対話の開始時点で要求内容の一部をシステムに伝える．
システムの確認発話に対して，訂正発話か承認発話を行う．
訂正発話は，システムの確認発話に含まれるすべての属性の値を伝達することによって行う．
システムの情報要求発話に対して，属性の値を伝達するための発話を行う．
システムがユーザ要求タイプにとって無効な属性の値を要求してきたならば，システム発話を拒否する．
(U4)は，ユーザ要求タイプが天気問い合わせであるにもかかわらず，システムが警報種別属性の値を要求してくるような場合に相当する．
そういった場合，ユーザはシステムの情報要求に応えることができないことを伝えるための発話(拒否発話)を行う．
システムは，ユーザの拒否発話を受け取ると，現在の行動をあきらめ，別のシステム行動を選択し，実行する．
各方法において別のシステム行動を選択する際の基準を説明する．
デュアルコスト法では，損失ができるだけ小さい行動を優先して選択する．
従来法1では，(C1-2)で選んだ確認行動が拒否されたなら，まだ確認を試みていない属性の組合せのうち，できるだけ多くの属性の値を一度に確定する確認行動を優先して選択し，(C1-3)で選んだ情報要求行動が拒否されたなら，まだ情報要求を試みていない属性のうち，できだけ多くのユーザ要求タイプで有効となる属性を優先して選び，その属性のための情報要求行動を選択する．
従来法2では，(C2-2)で選んだ確認行動が拒否されたなら，値が与えられている別の属性を任意に選び，その属性についての確認行動を選択する．
(C1-3)で選んだ情報要求行動が拒否された場合は，従来法1と同様である．
シミュレーション対話実験では，4つのユーザ要求タイプごとに，ユーザの要求内容をランダムに生成した．
各属性の属性認識率を等しく0.5から1.0まで0.005刻みで変化させていった．
各認識率において5000回のシミュレーション対話が実施された．
3つの対話制御法の性能を対話の効率性の観点から比較した．
対話の効率性は，タスクが完了するまでの対話の長さの平均によって評価した．
対話の長さは，[REF_sec-cost]節で述べた基準に加えて，模擬ユーザの振舞(U4)におけるユーザ拒否発話は簡潔な否定的表現(例：「いいえ」，「分かりません」)として実現されると仮定した上で，拒否発話の長さは1であるという基準にしたがって計算した．
シミュレーション対話実験の結果を示す．
図[REF_p-a-1-graph]は，ユーザ要求タイプが警報問い合わせの場合における属性の認識率に応じた対話の長さの平均の推移を示しており，図[REF_p-a-3-graph]は，ユーザ要求タイプが気温問い合わせの場合における属性の認識率に応じた対話の長さの平均の推移を示している．
警報問い合わせと気温問い合わせの2例を取り上げたのは，警報問い合わせの場合は，場所属性の確認を回避できるという点で，デュアルコスト法の効果が最も発揮されやすい場合であり，気温問い合わせの場合は，デュアルコストであっても，場所属性，日属性，情報種別属性のすべてを確認しなければならない場合がほとんどであり，デュアルコスト法の効果を発揮することが困難な場合であるからである．
両極端な場合を取り上げることにより，デュアルコスト法にとって有利な状況では，デュアルコスト法が実際に効果を上げることができ，そうでない状況であっても，従来法に比べて対話の効率を低下させないことを実証することを目的とする．
図[REF_p-a-1-graph]から分かるように，ユーザ要求タイプが警報問い合わせの場合，デュアルコスト法は，従来法1，従来法2と比較して，より効率的に対話を実施できた．
警報問い合わせの場合には，警報がどこにも発表されていないというデータベースの内容であるにもかかわらず，場所属性の確認をすると対話が著しく無駄になる場合があるが，デュアルコスト法は，従来法1，従来法2が避けることができない無駄な対話を回避することによって，対話を効率的に実施できたことが分かる．
この実験においては，システムは模擬ユーザ発話を正しく認識できるとは限らず，模擬ユーザが警報の問い合わせを行ったとしても，システムは天気，気温，降水確率の問い合わせであると誤認識する場合がある．
また，ユーザは対話開始時点において要求内容のすべてを伝えるとは限らない．
そのような場合にはシステム理解状態からはユーザ要求タイプを警報問い合わせであると一意に決定することはできないが，デュアルコスト法は，期待損失という概念を活用することによって，対話全体の効率性を向上させるように対話を制御できたことが分かる．
図[REF_p-a-3-graph]から分かるように，ユーザ要求タイプが気温問い合わせの場合には，デュアルコスト法による対話の効率性は，従来法2とほぼ同じである．
これは，気温問い合わせの場合には，デュアルコスト法であろうと，場所属性，日属性，情報種別属性をすべて確認しなければならない場合がほとんどであるからである．
データベースの内容によらずユーザ要求のすべてを逐一確認しなければならないような場合であっても，デュアルコスト法が対話の効率を低下させることはない．
このことから，デュアルコスト法は圧倒的に効果を発揮しやすい場合から，効果を発揮することが困難な場合まで，すべての場合で有効であることが言える．
なお，図[REF_p-a-1-graph]，図[REF_p-a-3-graph]の双方において，属性認識率が低い状況では，従来法1の効率が極端に低い．
これは，認識率が低い状況では，できるだけ多くの属性の値を一度に確定するという従来法1の戦略が，模擬ユーザからの多くの訂正発話を引き起こしてしまうため，不利に働くからある．
認識率が低い状況では，属性の値を1個ずつ確定するという従来法2の戦略の方が有利に働く．
また，図[REF_p-a-3-graph]において，従来法2が，属性認識率が1.0に近づくと，デュアルコスト法より効率が低下していくのは，認識率が高い状況では，複数の属性の値をまとめて確定した方が有利であるにもかかわらず，従来法2が属性の値を常に1個ずつ確定する戦略をとるからである．
デュアルコスト法では，一度に値を確定する属性の可能な組合せごとに異なる対話プランを用意し，認識率に応じて自動的に適切なプランを選択することができる．
このことにより，デュアルコスト法は，認識率が高い状況では，複数の属性の値を一度に確定する対話プランを選択することになり，従来法2より有利であったと考えることができる．
この実験においては，4つの属性から成るタスクを用いたが，属性の数はデュアルコスト法にとっては本質的なことではない．
属性の数が多くなっても，ここで用いた気象情報案内タスクのように，データベースの内容が日々更新され，対話時点のデータベースの内容に依存して対話を制御しないことには，短い対話でユーザの必要とする情報を伝達することができないようなタスクであれば，デュアルコスト法は効果を発揮する．
