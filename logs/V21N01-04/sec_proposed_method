対象単語[MATH]の語義の集合を[MATH]，また[MATH]の用例[MATH]内の[MATH]の語義を[MATH]と識別したときの損失関数を[MATH]で表す．
[MATH]は[MATH]の語義を識別する分類器である．
[MATH]をターゲット領域上の分布とすれば，領域適応の問題における期待損失[MATH]は以下で表せる．
また[MATH]をソース領域上の分布とすると以下が成立する．
ここで共変量シフトの仮定から
となり，[MATH]とおくと以下が成立する．
訓練データを[MATH]とし，[MATH]を経験分布で近似すれば，
となるので，期待損失最小化の観点から考えると，共変量シフトの問題は以下の式[MATH]を最小にする[MATH]を求めればよいことがわかる．
分類器[MATH]として以下の事後確率最大化推定に基づく識別を考える．
また損失関数として対数損失[MATH]を用いれば，式([REF_eq:1])は以下となる．
つまり，分類問題の解決に[MATH]のモデルを導入するアプローチを取る場合，共変量シフト下での学習では，確率密度比を重みとした以下に示す重み付き対数尤度[MATH]を最大化するパラメータ[MATH]を求める形となる．
ここではモデルとして以下の式で示される最大エントロピー法を用いる．
[MATH]が入力で[MATH]がクラスである．
関数[MATH]は素性関数であり，実質[MATH]の真のクラスが[MATH]のときに[MATH]を返し，そうでないとき0を返す関数に設定される．
[MATH]は正規化項であり，以下で表せる．
そして[MATH]が素性に対応する重みパラメータとなる．
共変量シフト下ではない通常のケースでは，重みパラメータは最尤法から求める．
つまり，訓練データ[MATH]とすると，以下の式[MATH]を最大にする[MATH]を求める．
これを各[MATH]で偏微分し極値問題に直すと以下が成立する．
これを勾配法などで解くことにより[MATH]が求まる．
共変量シフト下の学習では式([REF_eq:2])の[MATH]を最大にする[MATH]を求める．
上記と全く同じ手順で，
が得られる．
これを勾配法などで解くことにより[MATH]が求まる．
今，事例[MATH]の頻度を[MATH]とすると，尤度は以下となる．
対数を取れば以下が得られる．
この式は重み付き対数尤度の式([REF_eq:2])と同じ形なので，実際に[MATH]を求めるためには，事例[MATH]の頻度[MATH]を[MATH]と考えて，最大エントロピー法のツールなどを用いればよい．
共変量シフト下の学習では確率密度比の算出が鍵である．
直接的には[MATH]と[MATH]を推定し，その比を取ればよいが，[MATH]や[MATH]を正確に推定することは困難であり，その比をとれば更に誤差が大きくなると予想できる．
そのため確率密度比を直接モデル化して求める手法が活発に研究されている[CITE]．
ただし本稿では簡易な手法を利用して確率密度比を算出することにした．
本稿の目的はこのような簡易な手法による確率密度比の算出法であっても，WSDの領域適応の有力な解法になることを示すことである．
対象単語[MATH]の用例[MATH]の素性リストを[MATH]とする．
求めるのは領域[MATH]上の[MATH]の分布[MATH]である．
ここではNaive Bayesで使われるモデルを用いて算出する．
Naive Bayesのモデルでは以下を仮定する．
領域[MATH]のコーパス内の[MATH]の全ての用例について素性リストを作成しておく．
ここで用例の数を[MATH]とおく．
また[MATH]個の用例の中で，素性[MATH]が現れた用例数を[MATH]とおく．
MAP推定でスムージングを行い，[MATH]を以下で定義する[CITE]．
以上より，ソース領域[MATH]の用例[MATH]に対して，確率密度比[MATH]が計算できる．
ターゲット領域[MATH]の用例[MATH]に対しては[MATH]とする．
また[MATH]となる用例[MATH]は訓練データから削除した．
「関連手法」の節で素性空間拡張法を紹介した．
素性空間拡張法はデータの表現を領域適応で効果が出るように拡張する手法である．
そして拡張されたデータに対しては任意の学習手法が利用できる．
つまり拡張されたデータに対して，共変量シフト下の学習も可能である．
本稿では，素性空間拡張法により拡張されたデータに対して，4章で説明した共変量シフト下の学習を行うことを提案手法する．
具体的に示す．
素性空間拡張法により，ソース領域の訓練データ[MATH]は[MATH]という3倍の長さのベクトルに拡張され，ターゲット領域の訓練データ[MATH]は[MATH]という3倍の長さのベクトルに拡張される．
ここで[MATH]に対しては確率密度比[MATH]の重みをつけ，[MATH]に対しては重み1をつける．
また[MATH]のモデルに最大エントロピー法を用い，重み付き対数尤度を最大化するパラメータを求めることで，[MATH]を推定する．
上記の重み付き対数尤度の式（目的関数）を示しておく．
今，ソース領域の訓練データを[MATH]，ターゲット領域の訓練データを[MATH]とおく．
また[MATH]と[MATH]を素性空間拡張法により拡張したデータをそれぞれ[MATH]と[MATH]とおく．
ここで[MATH]と[MATH]は[MATH]次元，[MATH]と[MATH]は[MATH]次元のベクトルであることに注意する．
提案手法の重み付き対数尤度の式は以下となる．
L(\boldsymbol) = \sum_{i=1}^n r(\boldsymbol{x_s^{(i)}}) \log P(c_s^{(i)}|\boldsymbol{u_s^{(i)}},\boldsymbol) + \sum_{i=1}^m \log P(c_t^{(i)}|\boldsymbol{u_t^{(i)}},\boldsymbol)
P(c|\boldsymbol{u},\boldsymbol) = \frac{1}{Z(\boldsymbol{u},\boldsymbol)} \exp\left( \sum_{j=1}^{3M} \lambda_j f_j(\boldsymbol{u},c) \right)
Z(\boldsymbol{u},\boldsymbol) = \sum_{c \in C} \exp\left( \sum_{j=1}^{3M} \lambda_j f_j(\boldsymbol{u},c) \right)
