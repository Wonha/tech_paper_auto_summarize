はじめに\label{sec:intro}

{\bfseries 機能表現}とは，「にあたって」や「をめぐって」のように，2つ以
上の語から構成され，全体として1つの機能的な意味をもつ表現である．一方，
この機能表現に対して，それと同一表記をとり，内容的な意味をもつ表現が存在
することがある．
例えば，\strref{ex:niatatte-F}と\strref{ex:niatatte-C}には，「にあたって」
という表記の表現が共通して現れている．
\begin{example}
  \item 出発する\underline{にあたって}，荷物をチェックした．\label{ex:niatatte-F}
  \item ボールは，壁\underline{にあたって}跳ね返った．\label{ex:niatatte-C}
\end{example}
\strref{ex:niatatte-F}では，下線部はひとかたまりとなって，「機会が来たの
に当面して」という機能的な意味で用いられている．それに対して，
\strref{ex:niatatte-C}では，下線部に含まれている動詞「あたる」は，動詞
「あたる」本来の内容的な意味で用いられている．
このような表現においては，機能的な意味で用いられている場合と，内容的な意
味で用いられている場合とを識別する必要がある\cite{日本語複合辞用例データベースの作成と分析}．
以下，本論文では，文\nobreak{}（\ref{ex:niatatte-F}），（\ref{ex:niatatte-C}）の下線
部のように，表記のみに基づいて判断すると，機能的に用いられている可能性が
ある部分を{\bf 機能表現候補}と呼ぶ．

機能表現検出は，日本語解析技術の中でも基盤的な技術であり，
高カバレージかつ高精度な技術を確立することにより，
後段の様々な解析や応用の効果が期待できる．

一例として，以下の例文を題材に，機能表現検出の後段の応用として機械翻訳を
想定した場合を考える．
\begin{example}
 \item 私は，彼の車\underline{について}走った．\label{ex:nitsuite-C}
 \item 私は，自分の夢\underline{について}話した．\label{ex:nitsuite-F}
\end{example}
\strref{ex:nitsuite-C}では，下線部は内容的用法として働いており，
\strref{ex:nitsuite-F}では，下線部は機能的用法として働いており，それぞれ
英語に訳すと，\strref{ex:nitsuite-C-e}，\strref{ex:nitsuite-F-e}となる．
\begin{example}
 \item I drove \underline{\mbox{following}} his car.\label{ex:nitsuite-C-e}
 \item I talked \underline{about} my dream.\label{ex:nitsuite-F-e}
\end{example}
下線部に注目すれば分かる通り，
英語に訳した場合，内容的用法と機能的用法で対応する英単語が異なっている．
このように内容的用法と機能的用法で対応する英単語が異なるので，機能表現検
出のタスクは，機械翻訳の精度向上に効果があると考えられる．

また，機能表現検出の後段の解析として格解析を想定する．
格解析は，用言とそれがとる格要素の関係を記述した格フレームを利用して
行われる．
\begin{example}
 \item 私は，彼の仕事\underline{について}話す．\label{ex:nitsuite-k}
\end{example}
「について」という機能表現を含む
\strref{ex:nitsuite-k}において，格解析を行う場合，機能表現を考慮
しなければ，「仕事」と「話す」の関係を検出することができず，「私は」と
「話す」の関係がガ格であることしか，検出できない．それに対して，「につ
いて」という機能表現を考慮することができれば，「仕事」と「話す」の関係の
機能的な関係を「について」という機能表現が表現していることが
検出することができる．
このことから，機能表現検出の結果は，格解析の精度向上に効果がある
と考えられる．

さらに，以下の例文を題材にして，機能表現検出の後段の解析としてを係り受け
解析を想定する．
\begin{example}
 \item 2万円を\ \ 限度に\ \ 家賃\underline{に　応じて}\ \ 支給される．\label{ex:niouzite-1}
 \item 2万円を\ \ 限度に\ \ 家賃\underline{に応じて}\ \ 支給される．\label{ex:niouzite-2}
\end{example}
\strref{ex:niouzite-1}，\strref{ex:niouzite-2}における空白の区切りは，
それぞれ，機能表現を考慮し
ていない場合の文節区切り，機能表現を考慮した場合の文節区切りを表している．
この例文において，「限度に」という文節の係り先を推定する時，「限度に」と
いう文節が動詞を含む文節に係りやすいという特徴をもっているので，
\strref{ex:niouzite-1}の場合，「応じて」という文節に係ってしまう．それに
対して，\strref{ex:niouzite-2}では，「に応じて」を機能表現として扱ってい
るので，「限度に」の係り先を正しく推定できる．
このようなことから，機能表現のタスクは，格解析の精度向上に効果があると考
えられる．
本論文では，これら3つの応用研究の内，係り受け解析への機能表現検出の適用
方法を考えた．

日本語の機能表現として認定すべき表記の一覧については，いくつかの先行研究が存在する．
\cite{Morita89aj}は，450種類の表現を，意味的に52種類に分類し，機能的
に7種類に分類している．
\cite{Matsuyoshi06ajm}は，森田らが分類した表現の内，
格助詞，接続助詞および助動詞に相当する表現について，階層的かつ網羅的な整
理を行い，390種類の意味的・機能的に異なる表現が存在し，その異形は13690種
類に上ると報告している．
\cite{日本語複合辞用例データベースの作成と分析}は，
森田らが分類した表現の内，特に一般性が高いと判断される337種類
の表現について，新聞記事から機能表現候補を含む用例を無作為に収集し，人手
によって用法を判定したデータベースを作成している．このデータベースによる
と，機能表現候補が新聞記事（1年間）に50回以上出現し，かつ，機能的な意味で
用いられている場合と，それ以外の意味で用いられている場合の両方が適度な割
合で出現する表現は，59種類である．
本論文では，この59種類の表現を当面の検討対象とする．

まず，既存の解析系について，この59種類の表現に対する取り扱い状況を調査し
たところ，59種類の表現全てに対して十分な取り扱いがされているわけではない
ことが分かった\footnote{詳しくは，\ref{subsec:既存の解析系}節を参照．}．
59種類の表現の内，形態素解析器JUMAN\cite{juman-5.1}と
構文解析器KNP\cite{knp-2.0}の組合わせによって，機能的な意味で用いられて
いる場合と内容的な意味で用いられている場合とが識別される可能性がある表現
は24種類である．
また，形態素解析器ChaSen\cite{chasen-2.3.3}と
構文解析器CaboCha\cite{TKudo02aj}の組合わせを用いた場合には，識別される可
能性がある表現は20種類である．

このような現状を改善するには，機能表現候補の用法を正しく識別する検出器と
検出器によって検出される機能表現を考慮した係り受け解析器が必要である．

まず，検出器の実現方法を考えた場合，検出対象である機能表現
を形態素解析用辞書に登録し，形態素解析と同時に機能表現を検出する方法と，
形態素解析結果を利用して機能表現を検出する方法が考えられる．現在，広く用
いられている形態素解析器は，機械学習的なアプローチで接続制約や連接コスト
を推定した辞書に基づいて動作する．そのため，形態素解析と同時に機能表現を
検出するには，既存の形態素に加えて各機能表現の接続制約や連接コストを推定
するための，機能表現がラベル付けされた大規模なコーパスが必要になる．しか
し，検出対象の機能表現が多数になる場合は，作成コストの点から見て，そのよ
うな条件を満たす大規模コーパスを準備することは容易ではない．

形態素解析と機能表現検出が独立に実行可能であると仮定し，形態素解析結果を
利用して機能表現を検出することにすると，前述のような問題を避けられる．
そこで，機能表現の構成要素である可能性がある形態素が，機能表現の一部とし
て現れる場合と，機能表現とは関係なく現れる場合で，接続制約が変化しないと
いう仮定を置いた上で，人手で作成した検出規則を形態素解析結果に対して適用
することにより機能表現を検出する手法が提案されてきた\cite{接続情報にもと
づく助詞型機能表現の自動検出，助動詞型機能表現の形態・接続情報と自動検出，
形態素情報を用いた日本語機能表現の検出}．しかし，これらの手法では，検出
規則を人手で作成するのに多大なコストが必要となり，検出対象とする機能表現
集合の規模の拡大に対して追従が困難である．

そこで，本論文では，機能表現検出と形態素解析は独立に実行可能であると仮定
した上で，機能表現検出を形態素を単位とするチャンク同定問題として定式化し，
形態素解析結果から機械学習によって機能表現を検出する
アプローチ~\cite{Tsuchiya07aj}をとる．
機械学習手法としては，入力次元数に依存しない高い汎化能力を持ち，Kernel関
数を導入することによって効率良く素性の組合わせを考慮しながら分類問題を学
習することが可能なSupport Vector Machine (SVM)\cite{Vapnik98a}を用いる．
具体的には，SVMを用いたチャンカーYamCha\cite{TKudo02bj}を利用して，形態素解
析器ChaSenによる形態素解析結果を入力とする機能表現検出器を実装した．ただ
し，形態素解析用辞書に「助詞・格助詞・連語」や「接続詞」として登録されて
いる複合語が，形態素解析結果中に含まれていた場合は，その複合語を，構成要
素である形態素の列に置き換えた形態素列を入力とする．また，訓練データとし
ては，先に述べた59表現について人手で用法を判定したデータを用いる．
更に，このようにして実装した機能表現検出器は，既存の解析系および\cite
{形態素情報を用いた日本語機能表現の検出}が提案した人手で作成した規則に基
づく手法と比べて，機能表現を高精度に検出できることを示す．

次に，機能表現を考慮した係り受け解析器の実現方法としては，既存の解析系である
KNPとCaboChaを利用する方法が考えられる．KNPを利用する場合は，新たに機能
表現を考慮した係り受け規則を作成する必要がある．それに対して，
CaboChaを利用する場合は，現在使用されている訓練用データ
（京都テキストコーパス~\cite{Kurohashi97bj}）を機能表現を考慮したものに自動的に変換すればよい．
そこで，本論文では，CaboChaの学習を機能表現を考慮した訓練データで行うこ
とによって，機能表現を考慮した係り受け解析器を実現する．
訓練データの作成には，訓練の対象となる文の係り受け情報と文に存在する機能
表現の情報を利用する．

本論文の構成は以下の通りである．
\ref{sec:fe}~節で，本論文の対象とする機能表現と，
その機能表現候補の用法を表現するための判定ラベルについて述べる．
\ref{sec:chunker}~節で，機能表現検出をチャンク同定問題として定式化し，
SVMを利用した機能表現のチャンキングについて説明し，
機能表現検出器の検出性能の評価を行い，この検出器が，既存の解析系および人手によって規則を作成した手
法と比べ，機能表現を高精度に検出できることを示す．
\ref{sec:係り受け解析}~節では，機能表現検出器によって検出される機能表現を
考慮した係り受け解析器について説明を行い，機能表現を考慮した係り受け解析器
と従来の係り受け解析器を使った機能表現を考慮した最適な係り受け解析につい
て述べ，実際に機能表現を考慮した係り受け解析の評価を行う．
\ref{sec:関連研究}~節では，関連研究について述べ，
最後に\ref{sec:結論}~節で結論を述べる．



