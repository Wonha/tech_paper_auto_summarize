================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.21896] 差分検出を行なうdiffコマンドは言語処理の研究において役に立つ場面が数多く存在する．
[i:1, score:0.25523] 本稿では，diffを使った言語処理研究の具体的事例として，差分検出，書き換え規則の獲得，データのマージ，最適照合の例を示す．
[i:3, score:0.13338] 本稿は言語処理の研究を行なう上でdiffコマンドが実用的でありかつ有用であることを示すものである．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:4, score:0.21896] 差分検出を行なうdiffコマンドは言語処理の研究において役に立つ場面が数多く存在する．
[i:5, score:0.25899] 本稿では，まず簡単にdiffの説明を行ない，その後，diffを使った言語処理研究の具体的事例として，差分検出，書き換え規則の獲得，データのマージ，最適照合の例を示す．
[i:15, score:0.40883] 本稿では[REF_sec:merge]節で，このデータのマージ，最適照合の例として，対訳コーパスの対応づけ，講演と予稿の対応づけ，さらに最近はやりの質問応答システム(「日本の首都はどこですか」と聞くと「東京」と答えるシステムのこと)といった，種々の興味深い研究をdiffという簡便なツールで実現する方法を示している．

================================================================
[section type  : proposed_method]
[section title : diff と mdiff]
================================================================
[i:35, score:0.38258] 本稿では，-Dオプションをつけてさらにifdefの部分を上記のように表示して，ファイルのマージを行なう場合のdiffをmdiffと呼ぶ(mはmergeのm)．
[i:41, score:0.27694] mdiffの出力はdiffと異なり一致部分も出力されるためにわかりやすい．
[i:57, score:0.29053] diffの表示は見にくく，mdiffはdiffで表示される情報を完全に含むので以降の説明はmidffを用いて行なう．

================================================================
[section type  : proposed_method]
[section title : 差分検出，および，書き換え規則の獲得]
================================================================
[i:59, score:0.28921] 本節ではmdiffを用いて差分検出したり，またその差分結果から書き換え規則を獲得する研究などを記述する．
[i:61, score:0.09671] 複数システムの出力の差分検出
[i:62, score:0.10335] 差分の考察と書き換え規則の獲得
-----------------------------------------------------
  [subsection title : 複数システムの出力の差分検出]
-----------------------------------------------------
  [i:lead, score:0.23884] 筆者は以前，jumanのシステムのバージョン[CITE]が複数乱立しているとき，この複数のjumanの出力をmdiffによりマージして形態素結果の品質を向上させることをしていた．
.....
  [i:63, score:0.23884] 筆者は以前，jumanのシステムのバージョン[CITE]が複数乱立しているとき，この複数のjumanの出力をmdiffによりマージして形態素結果の品質を向上させることをしていた．
  [i:83, score:0.21072] diff3は三つのファイルの差分を検出することができる．
  [i:84, score:0.26762] 上記では形態素解析を例にあげたが，他の解析でも解析結果を行単位にすることでmdiffで差分をとることができる．
-----------------------------------------------------
  [subsection title : 差分の考察と書き換え規則の獲得]
-----------------------------------------------------
  [i:lead, score:0.14432] ここでは，文献[CITE]でも述べた話し言葉と書き言葉のdiffの研究について記述する．
.....
  [i:91, score:0.35027] このような書き言葉と話し言葉のデータが与えられたとき，mdiffをとると，表[REF_tab:write_talk_diff]のような結果を得る．
  [i:95, score:0.25587] 以上のようにmdiffを使うことで話し言葉と書き言葉の差異を検出でき，またそれを考察することで，話し言葉と書き言葉の違いを調査できることがわかる．
  [i:103, score:0.24030] その他にも対応のとれた性質の異なるデータに対してmdiffをとることで，さまざまな考察と，言い換え規則の獲得ができることだろう．

================================================================
[section type  : proposed_method]
[section title : データのマージ，および，最適照合]
================================================================
[i:104, score:0.23021] 本節ではmdiffのデータをマージする機能，および，そのマージの最適照合能力を利用したものについて記述する．
[i:107, score:0.13062] 講演と予稿の対応づけ
[i:108, score:0.04373] 最適照合能力を用いた質問応答システム
-----------------------------------------------------
  [subsection title : 対訳コーパスの対応づけ]
-----------------------------------------------------
  [i:lead, score:0.03615] ここでは対訳コーパスの対応づけを考える．
.....
  [i:116, score:0.21267] この場合，これらのデータのmdiffをとることで，図[REF_tab:mt_corpus_mdiff]のような結果を得ることができる．
  [i:119, score:0.18797] このようにすることで，mdiffを用いて対訳データが作成されることになる．
  [i:122, score:0.22958] しかし，mdiffを使うとそのようなプログラムも書くこともなく対応づけを容易に実現できるのである．
-----------------------------------------------------
  [subsection title : 講演と予稿の対応づけ]
-----------------------------------------------------
  [i:lead, score:0.13465] 本節では講演と予稿の対応づけ[CITE]を考える．
.....
  [i:131, score:0.32062] この形にしておいて，予稿と講演のデータに対して，形態素解析をして各行に単語がくる状態でmdiffを使うことで，図[REF_tab:youkou_mdiff]のような結果を得る．
  [i:132, score:0.36873] ここで，差分部分で予稿に対応する上半分の方を，``<Chapter 1>''のような記号を除いてすべて消し去ると図[REF_tab:youkou_mdiff2]のような結果を得る．
  [i:135, score:0.32505] これは簡単にいうと，mdiffの照合能力を用いて予稿と講演を照合し，章の情報だけ残して予稿の情報を消し去ることにより，講演データに章の情報を挿入するということを行なっていることを意味する．
-----------------------------------------------------
  [subsection title : 最適照合能力を用いた質問応答システム]
-----------------------------------------------------
  [i:lead, score:0.22295] 本節ではmdiffの最適照合能力を用いた質問応答システム[CITE]について記述する．
.....
  [i:137, score:0.22295] 本節ではmdiffの最適照合能力を用いた質問応答システム[CITE]について記述する．
  [i:144, score:0.20780] ここでこの二つを一文字ずつ改行してからmdiffをとると以下のような結果を得る．
  [i:147, score:0.21813] ところで一文字単位に改行してからmdiffを使う場合少々文に食い違いがあっても答えを正しく取り出すことができる．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:160, score:0.22511] そこでは，話し言葉と書き言葉の言い換えを扱っていたが，言い換えの問題は，文を短縮する要約から，文を修正する文章校正支援，わかりにくい文からわかりやすい文を作成する平易文生成の研究まで幅広いものを含むものであり，それらでもdiffを用いることで，種々の考察や種々の書き換え規則の獲得を容易に実現することができる．
[i:163, score:0.26966] diffコマンドは一般には差分の検出に利用されるものなので，データのマージや最適照合にも利用できることを示した[REF_sec:merge]節の例はまた別の新しさがある．
[i:164, score:0.34174] その節では対訳コーパスの対応づけ，講演と予稿の対応づけ，さらに最近はやりの質問応答システム(「日本の首都はどこですか」と聞くと「東京」と答えるシステムのこと)といった，種々の興味深い研究をdiffという簡便なツールで実現する方法を示した．

================================================================
[section type  : proposed_method]
[section title : mdiff の構成方法および使い方]
================================================================
[i:173, score:0.06319] また，現在はこのプログラムは筆者のホームページ(http://www.crl.go.jp/jt/a132/members/murata/software/software.html)からダウンロードできる．
-----------------------------------------------------
  [subsection title : mdiff の構成方法]
-----------------------------------------------------
  [i:lead, score:0.20672] 筆者はmdiffはcshとperlを使って構成している．
.....
  [i:175, score:0.42907] ------------------------------------------------------------ファイルmdiff ------------------------------------------------------------ #! /bin/csh -f /usr/bin/diff -D@@@mm [MATH]|=1; while( <> ) { if ( /^#ifn?def (\/\*)?\@\@\@mm( \*\/)?/ ) { [MATH]_; while( <> ) { [MATH]_; if ( /^#endif (\/\*)?\@\@\@mm( \*\/)?/ ) { # print ";▼▼▼▼▼▼\n"; print ";▲▲▲▲▲▲\n"; if ( [MATH]con =  /^#ifndef (\/\*)?\@\@\@mm( \*\/)?\n((
  [i:199, score:0.29998] また，二つのプログラムの実行許可は与えておき，mdiffは環境変数PATHのとおっているところに，~username/bin/Perl/tmpdiff_patch.plは，~username/bin/Perlのディレクトリに置くこと．
  [i:200, score:0.40350] また，mdiffのプログラム中の``/bin/csh''と``/usr/bin/diff''の部分と，tmpdiff_patch.plのプログラム中の``/usr/local/bin/perl''の部分は各マシンごとに，それらのコマンドがあるディレクトリに書き直すこと．
-----------------------------------------------------
  [subsection title : mdiff の使い方]
-----------------------------------------------------
  [i:lead, score:0.25702] 上のように二つのプログラムを記述しそれぞれのファイルを所定の場所におくとあとは以下のように打ち込んでmdiffを使うだけである．
.....
  [i:201, score:0.25702] 上のように二つのプログラムを記述しそれぞれのファイルを所定の場所におくとあとは以下のように打ち込んでmdiffを使うだけである．
  [i:202, score:0.21301] mdiff <ファイル1> <ファイル2>
  [i:210, score:0.24702] あとはうまく行単位にデータを格納したファイルを二つ作り，これらを上記のようにmdiffにかければよい．

