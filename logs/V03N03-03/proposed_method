本章では，英語動詞選択ルールを説明し，その獲得における問題点について述べる．
NTTの開発しているALT-J/Eでは，日英翻訳のために，1万個を超えるパタン対ルールを利用している．
パタン対ルールは，日本文のパターン(単文)に英文のパターンを対応させるマッピングルールである．
即ち，左辺に日本文のパターンを，右辺に英文のパターンをもつ．
以下に，日本語動詞「焼く」に対するパタン対ルールの例を示す．
{
} {だだし，これより以下，`` \myinm''は，``an instance of''を意味するものとする．
}
本論文における英語動詞選択ルールとは，図[REF_YakuSelectionRule]のようなルールで，左辺に日本文パターン，右辺に英語動詞を持ち，日本文パターンを英語動詞に対応させる．
即ち，英語動詞選択ルールは，パタン対ルールにおいて，英語側パタンを英語動詞のみに限定したものである．
[ht] {
}
図[REF_YakuSelectionRule]から分かるように，左側の日本文パターンは，一つの日本語動詞と[MATH]等のパラメータから成る．
[MATH]等は，主格，目的格等の日本文を構成する格である．
ALT-J/Eでは，13種類の格を持つ．
また，``魚''，``魚介類''等は，意味カテゴリーである．
ALT-J/Eの場合，約３千個の意味カテゴリーを持ち，各意味カテゴリーは，12段を持つ意味カテゴリーシソーラス上のノードである．
上位ノードと下位ノードは，is-a関係で結ばれている．
図[REF_SemanticHierarchy]に，意味カテゴリーシソーラスの一部を示す．
ALT-J/Eは，約40万語の名詞意味辞書を持ち，この名詞意味辞書は，日本語名詞を意味カテゴリーに対応させる機能を持つ．
例えば，名詞``鶏''は，肉と鳥のインスタンスを持つ．
この例からも分かる様に，1個の名詞は，通常，複数の意味カテゴリーを持っている．
図[REF_YakuSelectionRule]において，例えば，英語動詞がbakeとなるのは，(1)入力された日本文の主格の名詞が，``人''またはその下位の意味カテゴリーを持ち，かつ，(2)目的格の名詞が，``パン''，``菓子''，またはそれらの下位の意味カテゴリーを持ち，かつ日本語動詞が，``焼く''である時である．
英語動詞選択ルールを獲得する際に，最も困難な作業は，ルール中の各格に対する適切な意味カテゴリーの組合せの選択である．
これは，ALT-J/Eにおける約３千の意味カテゴリーの組合せが巨大である点に起因する．
従って，ルール中の各格に対して適切な意味カテゴリーの組合せを見い出す事が，学習アルゴリズムに課せられた課題となる．
本章では，従来手法のひとつとしてAlmuallimの手法[CITE]を例にとり，学習事例収集の困難さについて論ずる．
尚，ここで示す問題は他の事例からの翻訳ルール学習手法にも共通していると思われる．
Almuallimは，日英翻訳事例から英語動詞選択ルールを学習する2つのアルゴリズム[CITE]を提案した．
このAlmuallimのアプローチでは，学習用の事例(以下これを，``訓練事例''と呼ぶ．
)が，以下のようにして作成される．
次のような日本語の単文と適切な英語動詞の対を準備，
(``コックがアップルパイを焼く'' ``bake'' )
日本語の単文を構文解析，
単文中の主名詞を抽出，
ステップ(3)で抽出した名詞を元に以下のように訓練事例を生成．
[MATH] N1 \myinm ``道具'', ``人'', or ``職業'', N2 \myinm ``菓子'', ``bake'' [MATH]
Almuallimのアプローチで，未知事例に対して高い正解率を示す英語動詞選択ルールを獲得するには，訓練事例を多数必要とする．
英語動詞選択ルールを獲得するために，十分な訓練事例が現実に準備できるか否かを検証するため，5万事例規模の対訳コーパスを既存のドキュメントから抽出した[CITE]．
この5万文の対訳コーパスには，約５千種類の日本語動詞が含まれていた．
Almuallimらの実験によれば，英語動詞選択ルール1個あたり，最低でも20から30の翻訳事例が必要である．
仮に日本語動詞に対応する英語動詞が，日本語動詞1個あたり平均4英語動詞だとすると，１日本語動詞につき100事例を，準備する必要がある．
5万文の中で，100文以上の日本文で使われている動詞(つまり，訓練事例が100個以上収集できる動詞)は，全体の僅か約1%にすぎなかった．
しかも，現実には，翻訳事例の中には繰り返し出てくるものもあるため，実効的な個数は更に減少する．
逆に，上記の5万事例中では，事例数を2まで許容すれば95%の動詞を包含できた．
従って，95%の動詞を学習するには，５万事例の50倍，250万の単文の対訳が必要になる．
この規模の翻訳事例は，収集が極めて困難である．
即ち，既存のドキュメントだけから抽出した翻訳事例から学習アルゴリズムにより英語動詞選択ルールを獲得できると結論付けるのは楽観的すぎる．
ところで，人間が動詞選択ルールを作成する過程を考えると，(1)頭の中に仮想的な事例を思い浮かべながらざっとしたルールを作成し，(2)この粗いルールを現実の事例と照合させながら修正し，最終的なルールを作成してゆくと考えられる．
もし，実事例に加え，頭に思い浮かべた仮想事例をも学習に利用できれば，学習アルゴリズムに入力される訓練事例を増加させることができる．
しかし，仮想事例そのものにアクセスすることは一般に出来ない．
一方，仮想事例を説明している人手作成の英語動詞選択ルールには，アクセスできる．
従って，上記の事例のスパース性を回避する現実的な方法として，最初に人間にルールを作成させ，この人手作成の英語動詞選択ルールと現実の翻訳事例を融合して最終的なルールを形成する方法が考えられる．
即ち，少ない実事例と，正解率が十分でない人手作成動詞選択ルールを入力として，十分な正解率を示す英語動詞選択ルールを学習する学習アルゴリズムが望まれる．
次章では，上記のアプローチを実現する学習方法を提案する．
本章では，英語動詞選択ルールを人手作成ルールと現実の翻訳事例から獲得する修正型学習手法を提案する．
まず最初に，学習タスクを明確にする．
与えられた日本語動詞\myjv{}と可能なその英語訳[MATH]に対して，アルゴリズムに与えられた課題は，\myjv{}に[MATH]を対応させるために，文脈上，取るべき適切な条件を探す事である．
ある日本語動詞(例えば日本語動詞``焼く'')に対する，英語動詞選択ルールを学習するためには，その学習タスクは以下のように記述される．
【学習タスク】
図[REF_YakuSelectionRule]に示すような英語動詞選択ルールを人手作成．
実事例を収集．
上記実事例と上記人手作成ルールから最終的なルールを生成．
修正型学習手法は，人手作成の英語動詞選択ルールと実事例から情報を得る．
もし，人手作成のルールが，非常に正確であるなら，修正型学習手法は人手作成のルールに重きを置く必要がある．
一方，人手作成のルールが余り正確でなければ，それらのルールに対して，小さな重みだけが付加される必要がある．
人手作成のルールへの重さの程度と実事例への重さの程度を表現するために，修正型学習手法は，数値を利用する．
この数値を以後，``重み値''と呼ぶ．
修正型学習手法では，この重み値を定めるための情報を，人手作成ルールと実事例以外には持たない．
重み値の候補数をNとすれば，修正型学習手法の骨子は以下の通りである．
【修正型学習手法】
人手作成の英語動詞選択ルールから仮事例を生成．
ここで，生成方法の詳細は，[REF_GenerationMethod]節で述べる．
事例集合の族[MATH]を作成．
ここで，[MATH]は，Step-iで生成された仮事例と予め準備した実事例全体からなる集合で，第j番目の重み値候補に従って，仮事例と実事例に重み値が付加されている．
尚，重み値候補の集合は，実事例の重み値と仮事例の重み値の対をその要素としている．
各[MATH]に対して，[MATH]から学習されたルールの未知事例に対する平均正解率[MATH]をクロスバリデーション法により算出．
ここで，クロスバリデーション法の詳細は，[REF_CrossValidation]節で述べる．
最後に，[MATH]の中で，最高値をもつルールを出力．
修正型学習手法Step-iで生成される仮事例は，3章で述べた仮想事例に当るものである．
仮想事例は人手作成のルールで説明されているので，仮事例の中には仮想事例が含まれている．
仮事例の，実事例への混合は，仮想事例をも学習に利用するという狙いの実現である．
ただし，仮事例の中には言語的に間違った事例が存在する可能性がある．
これを防止するためには，ルール作成者が既存ルールを作成する際に，思い浮かべた具体例を汎化し過ぎないように注意する必要がある．
そうすれば，言語的に間違った事例，即ちノイズ事例を最小限に押えられる．
ノイズが少なければ，内部学習アルゴリズムとして，C4.5の様にノイズに強い学習アルゴリズムを選択すれば，提案手法で生成される英語動詞選択ルールは，ノイズの影響を殆んど受けない．
本節では，[REF_Outline]節のStep-iにおける，仮事例の生成法について説明する．
仮事例生成法は以下の通りである．
人手作成の英語動詞選択ルールを単位ルールに分解．
ここで，単位ルールとは，以下に示すようなルールである．
IF ([MATH]) &([MATH]) &[MATH]
THEN Class = CV,
ただし，[MATH]等は格要素，[MATH]等は意味カテゴリー，CVはある英語動詞である．
上記単位ルールから，以下に示す形式の仮事例を生成．
[MATH]，
ここで，[MATH]等は格要素，[MATH]は単位ルール中の意味カテゴリー[MATH]の下位ノード(意味カテゴリーシソーラス上の)からランダムに選択する．
望まれる個数の仮事例が生成されるまで，Step-Bを反復．
仮事例生成法Step-Bにおけるランダムな事例生成は一様分布に基づいており，日本語の分布とは異なるが，今の所一様分布に従うのが最善の策と考える．
本来は，実際に使われる日本語の分布の真の分布に従ってランダム生成するのがいいように思われるが，真の分布は知られておらず，大量の解析済みの日本語コーパスが現在ない以上，真の分布のよい近似を得るのも難しい．
この現実を鑑みると，現在我々が拠り所とすべき分布は，統計学的に見て一様分布をおいて他にない．
もちろん，将来的に，真の分布を推定するのに，十分な量の解析済み日本語コーパスが準備出来れば，それらを利用して推定した分布に基づきランダムな事例生成を行なうべきであろう．
仮事例/実事例の重み値を決定するためには，与えられた重み値で学習を行なった時の，結果として得られるルールの未知事例に対する性能を推定する必要がある．
本論文では，このためにクロスバリデーション法を用いる．
以下，[REF_Outline]節のStep-iiiクロスバリデーション法について説明する．
クロスバリデーションは，機械学習の分野では良く知られている．
クロスバリデーションは，通常はルールの正解率を推定するためにだけに使われる．
しかし，本論文では，これを学習段階の重み値調整に利用する．
与えられた正整数[MATH]とデータ集合[MATH]に対して，クロスバリデーションは以下のようになる．
与えられた集合[MATH]を[MATH]個の部分集合[MATH]に分割．
但し，各[MATH]は，共通な事例を持たない．
各差集合[MATH]毎に内部学習アルゴリズムを利用して，ルール[MATH]を学習．
各ルール[MATH]毎に，残りの集合[MATH]をテスト事例として利用し，正解率[MATH]を計算．
正解率[MATH]の平均値を計算．
尚，通常は，ルールの正解率を計算するために，mの値を10または「学習事例の個数」とする．
本論文の修正型学習手法の様に，既存のルールと実事例から新たにルールを生成する学習手法としてはTheory Revisionがあり，既に多くの研究がある[CITE]．
しかし，Theory Revisionでは，新たな事例を許容する様に既存のルールを修正する事に主眼がおかれ，本論文の様に，既存のルールを満たしていた事例の一部が例外として除去されるようなケースは想定していない[CITE]．
このため，Theory Revisionは本論文の応用には適用困難である．
また，一階述語論理形式の事例表現を用いるTheory Revision以外にも，本論文で扱った属性型の事例表現を用いるものとして，AQ[CITE]，ID3[CITE]において知識と事例の融合を可能にした手法[CITE]等がある．
しかし，Theory Revisionを含めて，これら従来の手法では，いずれも，既存の学習アルゴリズムを，個別に修正型へ改造している．
これに対して，現実の応用においては，対象タスクによって最適な学習アルゴリズムは変化する．
即ち，最初に様々の修正型学習アルゴリズムを適用して，その結果，最も正答率のよい学習アルゴリズムを最終的に採用できる事が望ましい．
本論文で提案した修正型学習アルゴリズムは，内部学習アルゴリムを自由に選択できる点に大きな特長があり，上記要求を満たすロバストな学習アルゴリズムである．
本論文で，複雑な背景知識(意味カテゴリーシソーラス)を前提とした修正型学習が実現できたのもこのロバスト性のひとつの成果である．
尚，評価結果にも示した様に，どの様な人手作成ルールを与えても最終的な学習結果が向上するわけではなく，事例のもつ情報と合致/相補する人手作成ルールを与えない限り，最終的な結果の性能向上は望めない．
従って，事例の統計的性質に合致したルールをどのようにして人間に生成させるかが，今後の一つの課題となると思われる．
