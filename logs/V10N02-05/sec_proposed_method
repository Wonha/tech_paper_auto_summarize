LFGは自然言語文の解析を行うための文法理論であり，[CITE]によってその概念が提唱された後，[CITE]によって現在の形の定式化が完成した．
LFGに基づく解析では，解析結果としてc(onstituent)-structureとf(unctional)- structureと呼ばれる2種の構造を出力する．
c-structureは自然言語文の構造を，文の形態素を上位のフレーズへと纏め上げることによって木構造として表現するものである．
一方，f-structureは，文法機能の概念に基づき，文の格構造，時制，様相，話法等の意味情報を属性-属性値のマトリックス構造で表現するものである．
LFG理論では，SUBJ(ect)やOBJ(ect)等の文法機能をいかなる言語の解析においても有効であると考え，第一義の未定義要素としての地位を与えている[CITE]．
すなわち，見かけの表現は全く異なっていたとしても，文法機能の概念はあらゆる言語において共通に存在するという立場をとる．
この立場は，Arc Pair Grammar [CITE]やRelational Grammar [CITE]，Construction Grammar [CITE]と共通するものである．
言語が異なれば同じ意味内容を表現する文であってもその句構造すなわちc-structureは大きく異なる一方で，文法機能に基づく構造であるf-structureの違いは多くの場合極めて小さいことが知られている[CITE]．
言語解析システムの出力結果が言語を問わず一定であればあるほど，多言語を対象とする言語処理システムの構築に要するコストは低減すると考えられる．
このような工学的観点からみると，f-structureの言語普遍性は，f-structureを中間言語とする機械翻訳システム[CITE]はもとより，質問応答，自然言語によるマンマシンインタフェース，文書集合の内容一貫性保持[CITE]等の自然言語処理アプリケーションを言語の壁を越えて実装する上で重要な特徴であるといえる．
1章で述べた通り，本稿で述べる日本語LFG文法では，このf-structureが持つ言語普遍性の特徴を損なわないことを記述方針の一つとしている．
これまでも，LFGやHead-driven Phrase Structure Grammar (HPSG) [CITE]等の単一化文法に基づいた日本語の解析に関する研究は数多く行われている．
しかし，比較的最近まで，f-structureのような素性構造の単一化は大きな計算量を要する作業であるため，大規模な文法を用いた解析の実行は困難であるとの認識があった[CITE]．
さらに，単一化文法の枠組みにおいて，日本語の文法事項を網羅的に含み高いカバー率を実現する文法規則を記述することは容易ではないと指摘されている[CITE]．
しかしながら，前者の解析効率の問題に関しては，[CITE]，[CITE]等で提案されている解析アルゴリズムの進展によって一定の解決策が得られつつある．
また，この前者の問題の解決は，後者の問題とも大きく関係している．
単一化に基づく解析を実行するシステムは制約充足問題を解決するシステムである．
制約数すなわち文法規則の数が多くなるにしたがって計算量の爆発が生じる．
前者の問題が解決されていないこれまでの状況においては，システムの制約上，大規模な文法を記述し試すことが困難であったため，高い解析カバー率を持つ文法の構築に焦点を当てた研究には至らなかった．
前者の問題が解決される過程にあり，大規模文法の記述に挑戦できる状態になってきたのが現在の状況であるといえる．
例えば，[CITE]では，意味表現出力を伴わないものの極めて高い解析カバー率を持つ日本語HPSGシステムの報告がなされている．
一方，[CITE]では，カバー率の問題は残るものの日本語文法の知見に立脚した精緻な解析を行うJapanese Phrase Structure Grammar (JPSG)システムの構成手法が提案されている．
我々は，Parallel Grammar (ParGram)と呼ばれるプロジェクト活動[CITE]の中で日本語LFG文法の記述を行っている．
ParGramは，LFGを共通の理論基盤として英語，ドイツ語，フランス語，ノルウェー語，ウルドゥー語，デンマーク語そして日本語の各言語を解析するシステムの実現を目標としている．
ParGramでは，半年に一度全言語の文法記述担当者が集まってミーティング(ParGram Meeting)を開催し，複数言語間でf-structureの整合性を可能な限り高める，あるいは，矛盾を回避する機会を継続して持つことにしている．
すなわち，f-structureの構成から属性・属性値の用法やネーミングコンベンションに至るまでの詳細を議論し，ParGramの標準仕様を決定する作業を行っている．
日本語LFG文法における，肯定文，否定文，疑問文，受動文，並置表現等の基本的な構文に対して出力されるf-structureは，このParGram標準仕様[CITE]に準じている．
ただし，この標準仕様は，f-structureの基本的な構成，属性・属性値については全言語でほぼ合意がなされているが，詳細な文法事項に関しては現在も継続的に議論を続けている．
例えば，属性のネーミングレベルの仕様に関しては，当初全言語で性別を示す属性として使用していた「GEND」を，英語と日本語のLFG文法では「GEND-SEM」とし，「GEND」と区別するよう変更を行った．
英語と日本語の文法では代名詞に対して「GEND」属性を与えていたが，これはドイツ語，フランス語，ノルウェー語，ウルドゥー語の一般名詞が持つ性別の概念とは本質的に異なるためである．
ジョンは本をそのテーブルに置いた。
John put a book on the table.
図[REF_fig2-1jp]に，文（1-a）に対して日本語LFGシステムが出力するf-structureを示す．
SUBJおよびOBJのPRED(icate)に自立語(「ジョン」「本」)が挿入されているのに対して，OBL(ique)のPREDには格助詞(「ニ」)が挿入されている．
これは，英語等のParGramが対象とする欧米言語において，SUBJおよびOBJに対応する自立語が前置詞を必要としないのに対して，OBLやADJUNCTは前置詞を伴うことに由来する．
日本語内での整合性だけを考えれば，SUBJやOBJのPREDも格助詞とする，あるいは，OBLやADJUNCTのPREDも自立語とする，という文法を記述することが可能である．
しかしParGramにおいて他言語との整合性（比較のしやすさ）を重視するという立場から，図[REF_fig2-1jp]に示したf-structureを出力する方針で文法記述を行った．
図[REF_fig2-1eng]は，ParGramの英語LFG文法を用いて文(1-a)に対応する英語文（1-b）を解析した結果得られるf-structureである．
基本的に図[REF_fig2-1jp]と等しい構造を持っていることが分かる．
なおc-structureに関しては，ノード(grammatical category)名に対する緩やかなネーミングコンベンションの取り決めはあるものの，どのような構造を定めるかは各言語の担当者に任されている．
図[REF_fig2-2jp]，図[REF_fig2-2eng]は，文(1-a)(1-b)を解析した結果得られるc-structureである．
両者の構造は全く異なっていることが分かる．
ParGramでは共通のプラットフォームとしてXerox Linguistic Environment (XLE)と呼ばれるLFGの処理系を使用している．
XLEはLFG理論の仕様をほぼ完全に実装したparserであると同時に，LFGの文法記述を行う際のデバック環境であり，かつ，f-structureから自然言語文を生成するgeneratorでもある[CITE]．
XLEが持つ最も重要な特徴はその解析速度である．
LFGでは，c-structureを構成するための句構造規則(文脈自由文法規則)と，f-structureを構成するために句構造規則(の右辺の各構成素)に付与する機能的注釈(functional annotation; functional schemata)を同時に記述する．
XLEは，句構造規則に基づく解析処理を実行した後に，処理が必要な機能的注釈を動的に決定する．
すなわち，計算量の大きい機能的注釈の処理を選択的に行うことによって解析速度の向上を実現している[CITE]．
また，解析結果の排他性・独立性を考慮した単一化手法[CITE]も高い解析効率に寄与している．
XLEを採用することによって，大規模なLFG文法に基づく解析を実時間で行うことが可能となった．
図5は，日本語LFGシステムの構成図である．
まず日本語入力文が形態素解析システムに渡され，得られた形態素解析結果から入力文語彙規則を生成する．
形態素解析システムには茶筌[CITE]を使用している．
語彙規則生成部は，約40種の語彙規則テンプレートを持ち，適切なテンプレートを選択して必要項目を埋めることによって，各形態素の語彙規則を動的に生成する．
テンプレートの選択は，各形態素の品詞および前後の形態素の品詞を基に，予め作成したルールによって行う．
また，形態素解析処理によって得られた形態素列はXLEへの入力となる．
活用語については，終止形をXLEへの入力とし，活用形は「M__」(命令形)，「K__」(仮定形)，「Y__」(連用形)等の特別な文字列を形態素相当としてXLEへ渡す．
なお，連用形を示す文字列は必要に応じてXLEへ渡すことにした．
後続する語が自立語ならば，その活用形が句複合を行う結合子など何らかの統語的役割を果たしていると判断し，その目印として文字列を挿入する．
一方，後続する語が助動詞などの付属語ならば挿入を行わないことによって，文法規則を簡略化する．
XLEによる入力形態素列の解析には，上記の入力文語彙規則に加えて，予め用意した基本語彙規則，動詞語彙規則，形容詞語彙規則，形容動詞語彙規則，および，文法規則を使用する．
動詞語彙規則，形容詞語彙規則，形容動詞語彙規則は，IPAL辞書[CITE]の結合価情報をベースに拡張を行い，LFGの規則として必要な記述を追加したものである．
現在のところ，動詞語彙規則は2,366の異なり語彙に対して10,387の語彙規則(41,115の機能的注釈)を含んでいる．
形容詞語彙規則および形容動詞語彙規則は，それぞれ302および67の異なり語彙に対して810，137の語彙規則(1,891，306の機能的注釈)を含んでいる．
基本語彙規則は，助詞，助動詞，代名詞，接続詞等の基本語彙に加え，接続助詞的な働きをする「間」「時」といった名詞等，統語上重要と考えられる語の語彙規則を独自に記述したものである．
現状では，407の異なり語彙に対して954の語彙規則(1,233の機能的注釈)を含んでいる．
文法規則のサイズは，積和標準形に変換した場合の項の総計が2,353であり，1,223の機能的注釈を含む．
文法規則の詳細は次章で説明する．
なお，語彙規則の中で，入力文語彙規則の優先順位は他の語彙規則よりも低く設定してある．
つまり，入力文語彙規則は，同じ語彙に対する規則が既に存在している場合上書きされることになる．
これは，助詞，助動詞などの重要な統語的役割を担う語に関しては，形態素解析結果から動的に生成されるデフォールトの規則よりも精緻な記述が必要となるからである．
同時に，形態素解析の品詞付け誤りを吸収するための措置でもある．
例えば，格助詞の「デ」と助動詞「ダ」の連用形「デ」の違いを形態素解析レベルの処理で正確に判別することは困難である．
そこで，基本語彙規則中の「デ」に対して，格助詞としての振舞いを記述する規則と，「ダ」の連用形としての振舞いを記述する規則の両者を含めておく．
形態素解析処理によって付与された品詞の如何にかかわらず，語彙規則としては双方の可能性を残して解析を進める．
最終的には，その中から文法規則に従う解析結果のみが残ることになる．
日本語の典型的な特徴として，語順の制約が緩い点(free word order)，主語や目的語といった文の必須構成要素の抜け落ち(ゼロ代名詞)が頻出する点，および，複合述部(complex predicate)が多用される点を挙げることができる．
本節では，これら日本語の基本的な性質に対応するために我々が記述したLFG文法規則について述べる．
私が太郎にその本を借りました。
その本を太郎に私が借りました。
東京から太郎が大阪へ行った。
右へその角を次の交差点で曲がって下さい。
日本語がfree word orderの特徴を持つことは明らかである．
ただし，文(2-a)と文(2-b)を比較すると(2-a)がより自然な文であると感じる．
すなわち，基本的には各文に最適な語順が存在すると考えられる[CITE]．
文(3)および(4)は語順の点で不自然な文であり，最適順序性を考慮してこれらの文を解析対象外とする方針を採ることは可能である．
例えば，[CITE]では語順を強く意識した文法記述を行っている．
しかし，文(2-a)と文(2-b)が表現する意味内容に違いがないことから，我々の日本語LFG文法では上記の最適順序性を考慮せず，どちらの文に対しても図[REF_fig4-1]に示すf-structureを出力するよう文法記述を行った．
これは1章で述べた高いカバー率を達成する上でも重要な記述方針である．
実際には，文(3)や(4)のように語順が不自然な文が現れることは珍しくない．
したがって、高い解析カバー率を得るために，最適順序性に依存することのない，以下のような文法規則を日本語LFG文法の基本規則とした．
S:文，PP:後置詞句，V:述語，GF:文法機能
句構造規則が「文Sは任意個の後置詞句PPとそれに後続する述語Vから構成される」ことを定義し，機能的注釈によって「Vが文全体のPREDを担い，PPがそれに下位範疇化される文法機能を担う」ことが定義されている．
なお，以下本稿の文法規則の説明で用いる記号(grammatical category名)は，実際に使用している文法・語彙規則中の記号とは必ずしも一致していない．
また，係助詞や副助詞によって格助詞が省略されている場合，文法的に可能性のある解析結果を全て出力するという方針で文法記述を行った．
花子はその本も読んだ。
その本がシェークスピアを誉めていました。
シェークスピアがその本を誉めていました。
シェークスピアはこの本も誉めていました。
したがって文(5)に対しては，「花子」がSUBJで「本」がOBJの解析結果と，その逆の解析結果の両者を出力する．
解析結果を一つに絞り込む機能は重要であり，これを行うために意味素性および選択制限の概念を文法・語彙規則に取り入れる余地はある．
しかし，直前の文が(6-a)の場合と(6-b)の場合でSUBJとOBJが逆になる文(6-c)の例から分かるように，文単位の解析では本質的に曖昧性を解消できない場合もある．
したがって，現在のところ文法的に誤りのない解析結果は全て出力し，曖昧性の解消は文脈解析等の別処理に委ねるという立場をとっている．
もちろんこれは，格助詞・係助詞に関わるいかなる曖昧性の解消も行わないということを意味するものではない．
太郎が読んだ本
太郎の読んだ本
太郎が本を読んだ。
太郎は読んだ本を捨てた。
太郎の本を読んだ。
例えば，(7-a)の名詞句と(7-c)の文は共に文法に則った表現であり「読む」のSUBJは「太郎」である．
しかし，(7-d)の文では「太郎」は「捨てる」に係る．
同様に，(7-b)の名詞句と(7-c)の文は共に文法に則った表現であるが，(7-e)の文において「太郎」をSUBJと解釈することはできない．
前者は，(I)「関係節内において係助詞「ハ」による主題化は起こらない」，後者は，(II)「関係節内においてのみ格助詞「ノ」による主格表示が可能である」という文法規則に一般化できる．
我々は，(7-d)および(7-e)の解析結果に曖昧性が生じない(「太郎」が「読む」のSUBJとなる解析結果を生成しない)よう，(I)(II)を実現する文法記述を行った．
（(7-e)に対しては，「読む」のSUBJはnullであり「太郎」は「本」の連体修飾成分となる解析結果が得られる．
）(I)(II)を表現するためのLFG文法規則を以下に示す．
文の必須構成要素が抜け落ち可能であるというゼロ代名詞の問題に関しては，述語(語彙規則)の結合価情報を利用する．
結合価に対応する要素が文中に存在しない場合，省略があると判定する．
ただし，このように結合価を埋める要素(下位範疇化すべき要素)がない場合，LFG理論のCompletenessの条件を満たすことができず，したがってf-structureを構成することができない．
そこで，省略された要素のPREDに代名詞を示す'pro'を代入しPRON-TYPEの属性にnullを挿入することによって省略を表現し，f-structureを構成する．
以上のことを実現する語彙規則を，「読む」を例として以下に示す．
{
読む　V　(↑PRED)= '読む＜(↑SUBJ)(↑OBJ)'＞
@(PD SUBJ)
@(PD OBJ)
PD(GF) = @(DEFAULT (↑GF PRED) 'pro' (↑GF PRON-TYPE) null)
DEFAULT(ATTRIBUTE1 VALUE1 ATTRIBUTE2 VALUE2) =
ATTRIBUTE1 = VALUE1
ATTRIBUTE2 = VALUE2
ProDrop: OT
}
「PD」および「DEFAULT」はマクロ定義であり，「＠」はマクロの呼び出しを表す．
語彙規則に「@ (PD SUBJ)」を付加することにより，SUBJのPREDに'pro'が，SUBJのPRON-TYPEにはnullが代入される．
「DEFAULT」マクロ中の「ProDrop: OT」は，「ProDrop」という名前のOTマークの定義である．
OTマークは規則に対して優先順位を付与する働きを持つ．
詳細は5.3.1項で説明する．
ProDropには低い優先順位を設定し，それによって，「読む」が下位範疇化すべき要素がない時に限り「@ (PD SUBJ)」および「@ (PD OBJ)」が機能する．
一般に，OTマークを利用することによって，解析結果の曖昧性を言語学的な根拠のもとに減少させることが可能となる[CITE]．
この記述手法の導入によって，省略要素を適切に同定することが可能となり，欧米言語では問題になることの少ない必須構成要素の抜け落ち問題を解決することができた．
主語や目的語の省略は日本語では極めて頻繁に起こるため，この語彙規則記述は，解析カバー率向上にとって重要な役割を果たすものであるといえる．
日本語のcomplex predicateの取り扱いについても様々な方針が考えられるが，我々は，複数のPREDを立てる解析，すなわち，f-structureの入れ子構造によってcomplex predicateを表現する解析(multi-clausalな解析)を行わない．
複数のpredicate-argument構造の存在が同時に認められる場合(5.2.1項)を除き，mono-clausalな解析を行う．
時制，様相等の情報はf-structure中のPRED以外の属性で表現する．
太郎はその本を買いたくなかっただろう。
例として，文(8)のc-structureとf-structureを図[REF_fig4-2c]，図[REF_fig4-2f]に示す．
日本語のcomplex predicateの構成は極めて多様であり，口語的・非文法的な文も含めて構成規則を網羅的に記述することは事実上困難である．
したがって，高い解析カバー率を実現するために，complex predicateに対応する規則はこのような緩やかなものとする方針を採っている．
本節では，日本語LFG文法で記述されている文法規則の中から1章で述べた高い解析カバー率および他言語との整合性の実現に関わるものを取り上げ，その記述方針を説明する．
前節では，複合述部の取り扱い方針としてmono-clausalな解析を採用すると述べた．
しかし，複数のpredicate-argument構造を持つと認められる間接受動文(いわゆる「迷惑の受身」) [CITE]と使役文については，bi-clausalな解析結果を出力するよう文法記述を行った．
私は雨に降られた。
文(9)は間接受動文の例である．
文(9)には，「「私」が「れる」」に加え，「「雨」が「降る」」という2つのpredicate-argument構造が含まれている．
これを示すため，bi-clausalな解析を行う文法記述を行った．
文(9)のf-structureを図[REF_fig4-3]に示す．
花子は太郎に次郎を殴らせた。
Mary let John hit Bob.
文(10-a)は使役文の例である．
文(10-a)には，「「花子」が「太郎」に「せる」」と，「「太郎」が「次郎」を「殴る」」という2つのpredicate-argument構造が認められるため，同様にbi-clausalな解析を行っている．
文(10-a)のf-structureを図[REF_fig4-4]に示す．
使役の助動詞「セ」「セル」に準ずるものとして，「頂く」「貰う」等の補助動詞も同様に取り扱っている．
この記述方針は他言語のf-structureとの整合性を図る目的に従うものでもある．
文(10-a)に対応する英語文(10-b)のf-structureを図[REF_fig4-x]に示す．
基本的に図[REF_fig4-4]と等しい構造であることが分かる．
副助詞は文脈情報を担うものであるため，意味情報を扱う解析において極めて重要な形態素であるといえる．
さらに日本語文に頻繁に出現するため，副助詞を取り扱う文法規則は高いカバー率を実現する上でも重要なものである．
しかしながら，これまでの実システムにおいて副助詞の振る舞いを十分に考慮した文法記述がなされてきたとは言い難い．
水谷文法[CITE]では，副助詞を体副形成子として規定する．
これは，副助詞が，副詞化可能な体言を形成する働きを持つことを意味する．
太郎が来るまでが問題だ。
太郎が来るまで辛抱しよう。
次郎にさえ分からなかった。
例えば文(11-a)(11-b)のように「太郎が来る」が副助詞「まで」を伴うと，名詞的あるいは副詞的働きを持つようになる．
本システムでは，このような副助詞の性質を表現する文法の記述を行っている．
ただし，文(12)のように副助詞(「さえ」)が格助詞に後続する場合は，[CITE]に倣い格表示の一部とみなして体副形成子とは異なる扱いをする．
図[REF_fig4-5a]，図[REF_fig4-5b]に文(11-a)(11-b)のf-structureを示す．
なお，図[REF_fig4-5b]中の「[MATH]」は5.2.3項で述べる助詞の無形表示を示す記号である．
その女性は子供を優しく育てた。
その女性は子供をパイロットに育てた。
その女性は子供をはじめて育てた。
*その女性は子供を優しくに育てた。
The woman raised a child to a kind person.
The woman raised a child kindly.
[CITE]は，形容詞の連用修飾に曖昧性があることを指摘している．
例えば文(13-a)は2つの解釈が可能である．
1つは「子供が優しくなるように育てる」という意味であり，これは「優しい」が「育てる」という動詞の帰結状態を示している．
もう1つは「子供の育て方が優しい」という意味であり，「優しい」は「育てる」の情況を示している．
(13-b)との比較から分かるように，(13-a)において帰結状態を示す「優しい」は格助詞「ニ」を伴う後置詞句相当の働きを担っている．
しかし，(13-d)が非文であることから分かるように，単なる格助詞「ニ」の省略とはみなせない．
[CITE]はこのような無形表示に対して零記号を導入することによって整合性の高い国文法体系を構築している．
[CITE]では帰結状態を表す零記号を「[MATH]」と定義する．
我々もこれに倣い，以下の文法規則によって，帰結状態を示す無形表示を「[MATH]」で表現した[CITE]．
一方，情況を表す「優しい」は情況語(副詞)と定義し，f-structure中ではADJUNCTとして表現する．
文(13-a)の帰結状態の解釈に対応するf-structureを図[REF_fig4-7a]に，情況の解釈に対応するf-structureを図[REF_fig4-7b]に示す．
また，(13-b)(13-c)に対応するf-structureを図[REF_fig4-8a]，図[REF_fig4-8b]に示す．
図[REF_fig4-7a]と図[REF_fig4-8a]，図[REF_fig4-7b]と図[REF_fig4-8b]がそれぞれ同等の構造を持っていることが分かる．
この記述方針も5.2.1項同様，他言語のf-structureとの整合性を図る目的に従うものである．
文(13-a)の2つの解釈に対応する英語文(14-a)(14-b)のf-structureを図[REF_kind_person]および図[REF_kindly]に示す．
基本的にそれぞれ図[REF_fig4-7a]および図[REF_fig4-7b]と等しい構造であることが分かる．
[htbp]  \center\epsfxsize=72mm \epsfbox{fig/fig4-7a.eps}
\center\epsfxsize=72mm \epsfbox{fig/fig4-7b.eps}
\center\epsfxsize=72mm \epsfbox{fig/fig4-8b.eps}
[htbp] \center\epsfxsize=75mm \epsfbox{fig/fig4-8a.eps}
\center\epsfxsize=120mm \epsfbox{fig/kind_person.eps}
\center\epsfxsize=75mm \epsfbox{fig/kindly.eps}
その他，名詞(サ変動詞語幹を除く)で終わる文(新聞見出し等)に対応するため，名詞句に後続する助動詞(「ダ」「デス」等)の省略を零記号「[MATH]」で表現している．
また，埋め込み句が連用修飾を行う際の助詞の省略を「[MATH]」で表現している．
以上本節では，言語現象の具体例を通して日本語LFG文法の特徴を示した．
表[REF_table1]に，これまでに実装した文法規則の主なものを示す．
ただし，[CITE]に記述されている基本的な文法事項に対する文法規則および本稿で説明済みの文法規則は省略した．
高い解析カバー率を達成するためには，例外的な表現を含む文や非文法的な文を解析できなければならない．
LFGに基づく解析によってf-structureを得るためには，入力文の構文に対応する句構造規則および機能的注釈が全て宣言的に記述されている必要がある．
しかしながら，例外的な事項を網羅的に記述すると，正しい解析結果と同時に不適切な解析結果も多数出力されてしまい，精度を下げることになる．
さらに，前節までに述べたような文法記述をどれほど精緻化したとしても，必ず解析不能な文が残るという問題もある．
本節では，これらの問題を回避しシステムの頑健性を高めるための手法として，OTマークと部分解析について述べる．
日本語LFG文法では，各機能的注釈に対して，Optimality Theory [CITE]に基づいたマーク(OTマーク)を付与している．
OTマークには予め優先順位を設定しておく．
優先順位の高いOTマークが付与された機能的注釈に基づいて得られたf-structureを優先的に最終結果に残す．
すなわち，各OTマークが固有のコストを持ち，文全体のコストが最小となる解析結果を優先する．
5.1節で述べたようにOTマークを付与する本来の目的は言語学的な根拠に基づいて解析結果の曖昧性を減少させることである．
我々もこの目的のためにOTマークを使用し，解析結果数の爆発を防いでいる．
しかし，我々の文法では，それと同時に，例外的な文法事項を見通しよく記述するためにもOTマークを利用している．
現在約40種類のOTマークをLevel 1 - 4の4つのグループに分けて使用している．
Level 1に属するOTマークが最も優先順位が高く，Level 4のOTマークが最も低い．
もちろん，解析結果の曖昧性解消の目的で，同じグループに属するOTマークの間にも細かな優先順位の違いを設定している．
なお，OTマークが明示的に付与されていない機能的注釈には，Level 1に属するOTマークが付与されているとみなして処理を進める．
まずLevel 1のグループに属するOTマークを持つ機能的注釈のみを用いて解析を行う．
f-structureが得られれば解析を終了する．
得られなければ，Level 1に加えてLevel 2に属するOTマークを持つ機能的注釈も用いて再度解析を行う．
これを繰り返し，解析結果が得られるまで，優先順位の低いグループに属するOTマークを持つ機能的注釈を順に加えて解析を行う．
我々は，文法・語彙規則が例外的なものであるほど，低い優先順位のグループのOTマークを付与している．
これによって，例外的な文法・語彙規則が通常の解析結果に悪影響を与えないようにすることができる．
*私は歩くが好きです。
私は歩くのが好きです。
負けるが勝ちだ。
例えば，文(15-a)(15-b)から分かるように通常格助詞が動詞の終止形に直接後続することはない．
しかし，文(15-c)のような特に慣用的な表現においては非文法的な表現とは言えない．
我々は，動詞の終止形の直後に格助詞が後続することを許す文法規則(機能的注釈)に対してLevel 4のOTマークを付与している．
2章で述べた通り，LFGに基づく文法・語彙規則は制約の集合である．
文法記述が大規模になるにつれ，規則が解析結果にいかに影響するかを網羅的に把握することが困難になり，予期せぬ副作用が生じてしまう可能性が高くなる[CITE]．
本項で述べたOTマークを利用した多段階の解析手法は，このような文法記述の本質的な困難さを低減し，副作用の影響を受けずに例外的な文法・語彙規則を付加していく上で有効である．
前項で述べた手法の狙いは，例外的な文法規則を見通しよく記述することであった．
しかし，実際の文，特に口語表現のバリエーションは極めて多彩であり，文法記述を続けることのみによって十分なカバー率を得ることは困難である．
近頃の若いものはだらしがないってさ。
例えば，文(16)のように，接続助詞「テ」の直後に終助詞「サ」が後続する文は自然な文ではあるが，現状のところ文法規則の中で対応する記述は行えていない．
このような問題を解決するために，部分解析を実施する文法記述を行った．
すなわち，前項までに述べた解析を全て実施してもなお解析結果が得られない場合のために，正規の文法表現とは異なる別の規則体系を用意し，部分的な解析結果のリストを得る．
部分解析用の文法規則の例を以下に示す．
ただし，OTマークとして定義された「OTmark1」「OTmark2」「OTmark3」はこの順に優先順位が高いものとする．
この規則によって，文S，関係節Srel，後置詞句PP，名詞句NP，述部V，助詞Pのいずれかの構造が認められればそれが「FRAGMENTS」となり，c-structureにはFRAFMENTSのリスト構造が生成される．
ただし，OTマークの付与によって，SやSrelの構造が認められれば，他の構造に優先してFRAGMENTSとなる．
同様にf-structureとして，「FIRST」「REST」から成る部分解析結果のリスト構造が得られることになる．
上記規則に基づいて得られた，文(16)の部分解析結果(c-structure)を図[REF_fig4-9]に示す．
文末の「さ」の部分がFRAGMENTSとして切り離されてはいるものの，「さ」の直前の部分までは完全な解析結果が得られている．
日本語では，非文法的・口語的な表現は述部，したがって文末(埋め込み文末)に見られる場合が多く，文の大部分は正常に解析できる傾向にある．
すなわち，部分解析結果であっても，前項までに述べた正規の文法記述によって得られる解析結果とほぼ同等の解析結果(f-structure)を得ることができる場合が多い．
本稿で述べた日本語LFG文法は完成したものではなく，文法記述のさらなる精緻化が最も重要な課題である．
5.3.1項で述べたOTマークのグループ化の手法を利用することにより，未対応の言語現象や，口語的・非文法的言語現象であっても頻出するものについては規則化を進めていく．
これによって，カバー率を高めると共にカバー率全体に対する部分解析結果の占める割合を減じ，解析精度をさらに向上させることが可能であると期待できる．
5.1節および前章で述べた通り，本稿で説明した日本語LFG文法は，文単位で文法的に正しいと認められる解析結果を全て出力する方針で記述している．
もちろん，文法的に正しい解析結果と認められないf-structureに関しては，それらを減じるよう文法の精緻化と適切なOTマークの設定を継続的に行っている．
これにより，表3で示した解析結果数にまでは曖昧性を抑えることが可能となっている．
しかしながら，日本語LFG解析システムをアプリケーションに適用することを考えた場合，後工程として，曖昧性を完全に解消するためのシステムが必須である．
統計的手法によって生成された格フレーム辞書[CITE]を利用する等の方法で曖昧性解消を実現することが今後の課題である．
3章および5章で述べた多言語間でf-structureの整合性を高める活動を継続することによって，等しいアーキテクチャで複数の言語を扱うことが可能な言語処理アプリケーションの構築が可能になると期待できる．
しかしながら，異なる言語のf-structureの整合性の度合いを定量的に測定するための方法論は，これまでのところ提案されていない．
このような評価手法の確立は今後の課題である．
