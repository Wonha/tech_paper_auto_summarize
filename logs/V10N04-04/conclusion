言い換えを誤った主な原因は，格フレームの用例不足であった．
本実験では，20年分の新聞記事という大量のコーパスから学習した格フレーム辞書を利用したが，一部の表現には対応できていなかった．
例えば「夢中になる」の格フレームは，次のようなものが集まっている．
しかし，「研究に夢中になる」という表現と類似する格フレームは一つもなかった．
{中学生，選手\dots}ガ{ゲーム，サッカー}ニ夢中になる
{大人，武田\dots}ガ{自分，子育て\dots}ノ{話}ニ夢中になる
\dots
また定義文には，下に示すような，独特の不自然な表現が存在する．
新聞記事から学習した格フレームには，このような表現に対応できる用例は集まっておらず，不適切な対応付けが行われた．
\rsk{ぶら下がる}{ぶらりと下がる}{}格フレームの不適切なクラスタリングが原因で，言い換えを誤った例も見られた．
クラスタリングの際に用いる類似度計算方法は，対応付けの際に用いる類似度計算と同様に，改良の余地があると考えられる．
我々の提案した言い換え手法は，多義性解消の手法と見ることも出来る．
表[REF_WSD]に示したように，先頭の定義文の語義を選択するというベースライン手法の精度は52 %であった．
これに対して我々の手法の精度は71 %であり，有効に働いたといえる．
多義性解消に関する研究の多くは，語義のタグが付与されたコーパスを利用する，教師有りの手法を用いている[CITE]．
このような手法では，各語がどのような語義を持っているかという，タスク設定が変わるとコーパスの再利用が難しくなる．
また，コーパスの作成にコストがかかるという問題もある．
それゆえ今後は，我々の手法のような，教師無しの手法による多義性解消が重要になると考えている．
本研究では，言い換えのタスクの一つとして国語辞典による用言の言い換えを取り上げた．
この言い換えを実現するには，語義の曖昧性解消，定義文からの同等句抽出，格助詞の変換などの処理が必要である．
しかし，定義文にはこれらの処理を実現させるために必要な情報が，十分に記述されているとは限らないため実現が難しく，従来研究でもこれらの処理は十分に扱われていなかった．
これに対して本研究では，格フレームの自動学習・対応付けに基づいて用言を言い換える手法を提案し，実験によってその有効性を示した．
今後は，提案手法を用いて，読解補助やテキスト検索といったアプリケーションの品質向上に取り組む予定である．
