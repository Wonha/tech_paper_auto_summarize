本研究では，国語辞典を使った用言(動詞，形容詞，形容動詞，サ変名詞)の言い換え手法を提案する．
これは定義文から見出し語の同等句を取り出して言い換えを行うというものである．
例えば，見出し語「要求」を言い換える場合，その同等句は「強く求める」であるので，(\theparactr)のように言い換えることができる．
以下では，(\theparactr)のように，「見出し語が用言であれば，その定義文は用言を主辞とする形で記述されており，なおかつ主辞は定義文の末尾に位置する」と仮定して議論を行う．
また，定義文の主辞となる用言のことを定義文主辞と呼ぶ．
\rsk{要求}{強く求めること}{}
\para{工事の中止を要求した}{工事の中止を強く求めた}
国語辞典の定義文は，少数の平易な語彙を使って記述されている．
そのため国語辞典を使って言い換えを行うことによって，以下のことが期待できる．
テキストで使用される語彙のサイズを減らし，冒頭で述べたような同義異表記問題の解決に寄与できる．
ノンネイティブなどの話者でも理解できる語のみを使った表現へと言い換える，テキスト平易化アプリケーションの開発につながる．
例えば「激怒」と「立腹」は類似する意味内容を表しているが，計算機がそれらの意味の同値性を判定することは難しい．
しかし下に示すように，定義文はいずれも「怒る」という語を使って記述されているため，これを利用すれば意味の同値性を判定することも可能である．
\rsk{激怒}{激しく怒ること}{}{}
\rsk{立腹}{怒ること}{}{}
また下に示すのは，国語辞典による言い換えがテキストを平易化し，ユーザの読解支援につながるような例である．
言い換え前の文「渡航費用を支給する」には「渡航」「支給」という語が含まれているが，すべての年少者やノンネイティブがこれらの語を知っているとは限らない．
そのため，この文は彼らにとって理解しにくい可能性がある．
しかし「渡航」「支給」という語を，下に示す定義文を使って言い換えると「外国へ行くのに必要な費用をわたす」となる．
この文に含まれる「行く」「わたす」という語は，年少者やノンネイティブにとっても理解しやすい表現であると考えられる．
\rsk{渡航}{船や飛行機で海をこえて，外国へ行くこと}{}{}
\rsk{支給}{お金や品物をわたすこと}{}{}
\para{渡航費用を支給する}{外国へ行く費用をわたす}
国語辞典を使って用言を言い換える場合，技術的な問題となるのは以下の三つの処理である．
多義語を言い換える場合，その語義の曖昧性解消が必要となる．
例えば「しのぐ」は下のような二つの定義文を持っているので，(\theparactr)のように言い換えるには「苦境をしのぐ」の「しのぐ」が，どちらの意味を持つか判別しなくてはならない．
\rsk{しのぐ}{耐え忍ぶこと}{優れていること}{}
\para{苦境をしのぐ}{苦境を耐え忍ぶ}
先に示した例文(1)のように，見出し語の同等句は「定義文主辞とそれに副詞的にかかる語」であることが多い．
しかし，定義文主辞にかかる「体言＋格助詞」(以下では「体言＋格助詞」のことを項と呼び，そこに含まれる体言を格要素と呼ぶ)も同等句に含めなくてはならない場合も存在する．
例えば「体得」の同等句は「つける」ではなく「身につける」である．
\rsk{体得}{知識やわざを身につけること}{}
\para{技術を体得する}{技術を身につける}
用言を言い換える時，(\theparactr)のように格助詞が変化する現象にも対応しなくてはならない．
\rsk{下回る}{ある数や量より，少なくなる}{}
\para{前年を下回る}{前年より少なくなる}
[t]
国語辞典だけを利用していたのでは，前節で述べたような問題を克服するのは困難である．
当然のことであるが，国語辞典には見出し語がとる項についての記述はない．
また定義文主辞がとる項の情報も，日本語では項の省略が頻繁に行われるため，定義文に記述されているとは限らない．
下の例のように，完全に項が省略されている定義文も珍しくない．
このような現象は，国語辞典に限らず，既存の語彙知識を言い換えに利用しようとする際，つねに起こりうる問題である．
\rsk{しのぐ}{耐え忍ぶこと}{優れていること}
そのため本研究では，格フレーム辞書をあらかじめ大規模コーパスから自動構築して，見出し語と定義文主辞がもつ格フレームの対応付けを学習し，それを利用した言い換え手法を提案する．
言い換えの流れは次のようになる(図[REF_VerbParaphrase])．
次章以降では，1，2の処理について詳しく述べる．
格フレーム辞書の自動構築
まず大規模コーパスから用言の格フレーム辞書を自動構築する[CITE]．
複数の意味を持つ用言には，複数の格フレームが学習される．
格フレームの対応付け
国語辞典から「見出し語と定義文主辞」の対を抽出して，見出し語が持つ格フレームと定義文主辞が持つ格フレーム(見出し語格フレーム，主辞格フレームと呼ぶ)の対応付けを学習する．
図[REF_VerbParaphrase]の場合では「{組織，[MATH]}ガ{メーカー，社，[MATH]}ヲしのぐ」という格フレームは「{[MATH]主体[MATH]}ガ{他社}ヨリ優れている」という格フレームと対応付けられる．
言い換え処理
入力文と類似する見出し語格フレームを一つ選択して，その格フレームの対応付け情報を使って言い換える．
図[REF_VerbParaphrase]の場合では，「しのぐ」の格フレームの中から，入力文「他社をしのぐ」と最も類似する「{組織[MATH]}ガ{メーカー，社[MATH] }ヲしのぐ」という格フレームが選択される．
そして，2の処理で学習した格フレームの対応付けを利用して言い換える．
提案手法を実現するためには，大規模で高精度な格フレーム辞書が必要である．
本研究では，河原らの手法[CITE]を用いて作成した大規模な格フレーム辞書を用いる．
格フレーム辞書をコーパスから自動学習する際に最も問題となるのは，用言の多義性である．
つまり表記が同じ用言でも，その意味が違えば別の格フレームを持つ．
そのため，コーパスから自動収集した用言の係り受けデータを，意味ごとにクラスタリングする処理が必要となる．
用言の直前に現れる項(直前項と呼ぶ)は用言の意味に強い影響を与えているので，直前項が決まれば用言の語義もほとんど一意に決まる．
[CITE]ではこの考え方を使って，自動収集した係り受けデータを次のような二段階の処理でクラスタリングする手法を提案している(図[REF_AbstractCaseFrame])．
同じ直前項をもつ係り受けデータをまとめる．
このようにして作成されたデータを用例パターンと呼ぶ．
以下では「荷物」「物資」など，用例パターンの項に含まれる各単語を用例と呼ぶ．
用例パターン間に類似度を設定して，類似度の高いものをクラスタリングする．
ここで設定されている用例パターンの類似度は，この次のステップの「格フレームの対応付け」で非常に重要な役割を果たしている．
そのため本章では，[CITE]で提案されている用例パターンの類似度の計算方法について説明を行う．
[t]
用例パターン[MATH]の類似度は次のように定める．
用例パターンに含まれる用例の類似度[MATH]項の一致度
以下では，この類似度計算について詳しく述べる．
ただし説明の中では，二つの用例パターン[MATH]は，下のように，それぞれ項[MATH]と[MATH]を持っていて，[MATH]と[MATH], [MATH]と[MATH]と[MATH]が，それぞれ同じ格助詞をもっているものとする．
なお，同じ格助詞をもつ項を共通項と呼ぶ．
\tr{[MATH]:}{}{[MATH]:} \tr{[MATH]}{1}{[MATH]} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{}{[MATH]}
用例群間の類似度を定義するためには，まず二つの用例[MATH]間の類似度[MATH]を定義する必要がある．
[MATH]は，日本語語彙大系[CITE]を利用して，以下のように計算する．
日本語語彙大系は，用例に意味属性を与えるために使う．
日本語語彙大系から与えられる意味属性には，二つの特徴がある．
まず，用例が多義である場合は，一つの用例に複数の意味属性が与えられている．
そして，意味属性は階層構造を持っている．
[MATH]は，用例[MATH]が日本語語彙大系[CITE]の中で持っている意味属性集合で，[MATH]はそれらの中の一つである．
[MATH]は意味属性[MATH]の階層の深さである．
[MATH]は，[MATH]が[MATH]の上位に位置する意味属性であることを表している．
[MATH]の計算式で分子が[MATH]となっているのは，用例間の類似度を1に正規化するためである．
つぎに，共通項[MATH]に含まれる用例の類似度[MATH]を定義する．
類似度は，[MATH]に含まれる用例間の類似度を，それらの出現頻度で重み付けして平均したものとする．
計算式は以下のようになる．
ここで，[MATH]は，[MATH]に含まれる用例を表す．
また，[MATH]は，用例[MATH]の用例パターン[MATH]における出現頻度とする．
用例パターンに含まれる用例の類似度[MATH]は，各共通項の[MATH]の重み付け平均とする．
重みは，[MATH]に含まれる用例の出現総数の積の平方根とする．
したがって，[MATH]は以下のように計算される．
[MATH]は，[MATH]に含まれる用例の延べ数を表す．
用例パターン[MATH]の項の一致度は、それぞれの用例パターンについて「すべての項に含まれる用例の出現総数」に対する「共通項に含まれる用例の出現総数」の割合を求めて，それらの積の平方根をとったものとする．
項の一致度[MATH]の計算式は以下のようになる．
これらを踏まえて，二つの用例パターン[MATH]の類似度[MATH]は次のように定義する．
式の前半部分は用例パターンに含まれる用例の類似度で，後半部分は項の一致度である．
上記の計算式に基づいて用例パターンの類似度を求め，類似度が0.9以上となる用例パターンをマージして格フレームを作成する．
次に，構築された格フレーム辞書を利用して，国語辞典の見出し語の各格フレームに対して，それを言い換える上で最も適切な主辞格フレームを選択する．
ここでは，見出し語の各格フレームと主辞格フレームの間に類似度を定義して，それに基づいて対応先を決定するという方法をとる．
ただし，定義文やそれに付与されている例文が有効に利用できる場合には，あらかじめ対応付ける格フレームの候補を絞り込む処理を行う．
すなわち格フレームの対応付けは以下の三つのステップで行う．
定義文を用いて，見出し語格フレームの対応先候補となる主辞格フレームを絞り込んでおく．
例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．
見出し語格フレームと主辞格フレームの間の類似度計算に基づいて，見出し語格フレームに最も類似する主辞格フレームを選択する．
図[REF_prune]に「{本部，幹部}ガ{外部，専門家}ニ{教え}ヲ仰ぐ」という格フレームに対応する主辞格フレームを決定する過程を示す．
図[REF_prune]の「{米国，団体\dots}ガ{国，日本\dots}ニ{公開，解除\dots}ヲもとめる」のように，主辞格フレームの一部は，定義文主辞と異なる意味を持っている．
このような主辞格フレームと見出し語格フレームの間に対応関係が存在することはありえない．
そのため定義文を使って，これらの主辞格フレームを取り除き，見出し語格フレームの対応付け候補となる主辞格フレームを絞り込む．
絞り込みを行うための手掛かりとして，定義文中に現れる定義文主辞の項を用いる．
とくに定義文主辞の直前に現れる項(主辞直前項と呼ぶ)がガ格，ヲ格，ニ格のときは，主辞直前項だけを使って絞り込みを行う．
このような場合には，主辞直前項が定義文主辞の用法に与える影響は非常に大きいと考えられるからである．
すなわち絞り込み方法は，主辞直前項がガ格，ヲ格，ニ格のいずれかであるときと，それ以外のときの二通りを用意することになる．
ただし，定義文主辞が項をとらない場合は，定義文を用いた絞り込みは行わない．
直前項の格助詞が主辞直前項と同じで，なおかつ直前項の格要素が表[REF_puning]の制約を満たすような主辞格フレームのみを対応付け候補とする．
格要素への制約は主辞直前項のタイプによって三つに分かれている．
ただし，一般概念語とは「人々」「場所」などのように一般的な概念を表す単語のことである．
図[REF_prune]の場合では，主辞直前項のタイプは表[REF_puning]の「格要素が並列構造」である．
それゆえ，主辞直前項の格要素(教え，さしず)と類似度が0.8以上の用例を持った主辞格フレームが対応先候補となる．
この場合は主辞直前項のみを使った絞り込みは難しい．
そのため，主辞格フレームと定義文に共通して現れるガ格・ヲ格・ニ格の項の類似度の平均をもとめ，それが0.8以上の格フレームだけを対応付け候補とした．
なお，主辞格フレーム・定義文間の項の類似度は，以下のように定義した．
ここで[MATH]は定義文主辞がとる格要素であり，[MATH]は主辞格フレームの項[MATH]に含まれる用例である．
また[MATH]は日本語語彙大系に基づいて計算した用例[MATH]の類似度で，[REF_CFSim]節で定義した計算方法と同様である．
上記のように対応付け候補となる主辞格フレームを絞り込んだ後，定義文に与えられた例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．
例えば図[REF_prune]に示した，点線で囲まれた「仰ぐ」の格フレームは，語義2に与えられた例文(先生の教えを仰ぐ)と類似している．
そのため，この見出し語格フレームの対応先を，語義2の定義文主辞「もとめる」の格フレームに絞り込むことができる．
例文と見出し語格フレームの類似度は，例文と見出し語格フレームに共通して現れるガ格・ヲ格・ニ格の項の類似度の平均とする．
項の類似度は前述と同様のものを用いた．
そして，類似度が0.8以上である見出し語格フレームは，その語義を絞り込んだ．
この処理は，定義文に例文が与えられていない場合や，見出し語格フレームと類似する例文が見つからない場合には行わない．
以上のようにして対応先を絞り込んだ後，見出し語格フレームと主辞格フレームの間に設定した類似度に基づき，各見出し語格フレームに対して最も類似する主辞格フレームを一つ選択する．
類似度計算は[REF_CFSim]節で説明した用例パターン間の類似度計算方法に，若干の修正を加えたものを使う．
以下では，見出し語格フレーム[MATH]と主辞格フレーム[MATH]において，[MATH]と[MATH]が共通項で，[MATH]の[MATH]は見出し語の同等句に含まれるとする．
\tr{[MATH]:}{}{[MATH]:} \tr{[MATH]}{1}{[MATH]} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{}{[MATH]} \tr{}{}{[MATH]}
どの項が同等句に含まれているかは，見出し語格フレームと主辞格フレームの類似度計算を通して決定する．
つまり，ある項が同等句に含まれると仮定して求められた類似度が，含まれないと仮定した場合の類似度より高ければ，その項は同等句に含まれると判定する．
ただし，対応付けの処理を補助するために，次に述べる仮定に基づいて同等句に含まれる可能性がある項を絞り込む．
まず，同等句に含められる可能性がある項は，主辞直前項だけであると仮定する．
さらに，主辞直前項が以下のいずれかの場合にあてはまれば，それが同等句に含まれる可能性はないと仮定する．
主辞直前項の格要素が一般概念語である場合
並列構造になっている場合
格助詞がガ格，ヲ格，ニ格以外の場合
つまり，表[REF_puning]の「格要素が単語一つ」に分類される主辞直前項だけが，同等句に含まれる可能性を考慮する対象となる．
[REF_CFSim]節では，同じ格助詞をもつ項が二つの格フレームの共通項であると定義していた．
しかし，この定義は異なる用言の格フレームを対象とした場合には適切ではない．
なぜなら，異なる格助詞をもつ項でも共通項になることができる，同等句に含まれる項は共通項になることができない，といった現象が起こりうるからである．
共通項の決定は，同等句に含まれる項を決定する作業と同様に，見出し語格フレームと主辞格フレームの類似度計算を通して行う．
ただし，任意的な項は用言が変わっても格助詞が変わらないことが多いので，任意的な項は，異なる格助詞をもつ項と共通項にならないと仮定する．
ここでは任意的な項とは「格フレーム中で，その項に含まれる用例出現頻度が低いもの」又は「ガ格，ヲ格，ニ格，ト格，ヨリ格，カラ格，マデ格以外の項」とした．
[REF_CFSim]節においては項の一致度は，それぞれの格フレームについて「すべての項に含まれる用例数の出現総数」に対する「共通項に含まれている用例の出現総数」の割合を求めて，それらの積の平方根をとったものとしていた．
しかし「すべての項に含まれる用例数の出現総数」を数えるときに，同等句に含まれる項の用例は数えない．
見出し語格フレーム[MATH]と主辞格フレーム[MATH]の共通項[MATH]間の類似度[MATH]を以下のように新しく定義する．
[REF_CFSim]節では，項に含まれるすべての用例の組合せについて類似度を計算し，その類似度の重み付け平均を共通項に含まれる用例の類似度としていた．
ここでは見出し語格フレームに出現する一つの用例に対して，主辞格フレームに出現する用例の中から類似度が最大となるものを一つ選び，その類似度の重み付け平均を[MATH]としている．
この修正の理由は，一般に定義文主辞の方が見出し語よりも広い意味をカバーしていることが多く，そこに現われる用例も多様なためである．
高橋らは不完全な構文変換規則とそれを修正する規則を人手で作成し，読解支援のための言い換えを行うシステムを開発している[CITE]．
近藤らは，動詞を受身形や使役形に言い換える際に必要な，格助詞の変換規則を人手で作成している[CITE]．
また近藤らは，既存の辞書を利用して動詞句を言い換える手法も提案している[CITE]．
この他，[CITE]のようにコーパスから言い換えを抽出しようとする研究も多い．
学習対象のコーパスも完全な生コーパスからパラレルコーパスまで様々である．
「同等句の抽出」「格助詞の変換」は，用言の言い換えにおいて非常に重要な処理であるにも関わらず，十分な議論を行った研究はこれまでにほとんどない．
[CITE]は格助詞の変換を扱っているが，「態の変化に伴う格助詞の変化だけを扱っている」「人手で規則を記述するというアプローチである」という二つの理由から，カバレージのある手法とはいえず問題が残っていた．
これに対してわれわれの手法は，広いカバレージをもって上記の処理を実現できる枠組をはじめて提案したといえる．
本研究では，国語辞典を使った用言(動詞，形容詞，形容動詞，サ変名詞)の言い換え手法を提案する．
これは定義文から見出し語の同等句を取り出して言い換えを行うというものである．
例えば，見出し語「要求」を言い換える場合，その同等句は「強く求める」であるので，(\theparactr)のように言い換えることができる．
以下では，(\theparactr)のように，「見出し語が用言であれば，その定義文は用言を主辞とする形で記述されており，なおかつ主辞は定義文の末尾に位置する」と仮定して議論を行う．
また，定義文の主辞となる用言のことを定義文主辞と呼ぶ．
\rsk{要求}{強く求めること}{}
\para{工事の中止を要求した}{工事の中止を強く求めた}
国語辞典の定義文は，少数の平易な語彙を使って記述されている．
そのため国語辞典を使って言い換えを行うことによって，以下のことが期待できる．
テキストで使用される語彙のサイズを減らし，冒頭で述べたような同義異表記問題の解決に寄与できる．
ノンネイティブなどの話者でも理解できる語のみを使った表現へと言い換える，テキスト平易化アプリケーションの開発につながる．
例えば「激怒」と「立腹」は類似する意味内容を表しているが，計算機がそれらの意味の同値性を判定することは難しい．
しかし下に示すように，定義文はいずれも「怒る」という語を使って記述されているため，これを利用すれば意味の同値性を判定することも可能である．
\rsk{激怒}{激しく怒ること}{}{}
\rsk{立腹}{怒ること}{}{}
また下に示すのは，国語辞典による言い換えがテキストを平易化し，ユーザの読解支援につながるような例である．
言い換え前の文「渡航費用を支給する」には「渡航」「支給」という語が含まれているが，すべての年少者やノンネイティブがこれらの語を知っているとは限らない．
そのため，この文は彼らにとって理解しにくい可能性がある．
しかし「渡航」「支給」という語を，下に示す定義文を使って言い換えると「外国へ行くのに必要な費用をわたす」となる．
この文に含まれる「行く」「わたす」という語は，年少者やノンネイティブにとっても理解しやすい表現であると考えられる．
\rsk{渡航}{船や飛行機で海をこえて，外国へ行くこと}{}{}
\rsk{支給}{お金や品物をわたすこと}{}{}
\para{渡航費用を支給する}{外国へ行く費用をわたす}
国語辞典を使って用言を言い換える場合，技術的な問題となるのは以下の三つの処理である．
多義語を言い換える場合，その語義の曖昧性解消が必要となる．
例えば「しのぐ」は下のような二つの定義文を持っているので，(\theparactr)のように言い換えるには「苦境をしのぐ」の「しのぐ」が，どちらの意味を持つか判別しなくてはならない．
\rsk{しのぐ}{耐え忍ぶこと}{優れていること}{}
\para{苦境をしのぐ}{苦境を耐え忍ぶ}
先に示した例文(1)のように，見出し語の同等句は「定義文主辞とそれに副詞的にかかる語」であることが多い．
しかし，定義文主辞にかかる「体言＋格助詞」(以下では「体言＋格助詞」のことを項と呼び，そこに含まれる体言を格要素と呼ぶ)も同等句に含めなくてはならない場合も存在する．
例えば「体得」の同等句は「つける」ではなく「身につける」である．
\rsk{体得}{知識やわざを身につけること}{}
\para{技術を体得する}{技術を身につける}
用言を言い換える時，(\theparactr)のように格助詞が変化する現象にも対応しなくてはならない．
\rsk{下回る}{ある数や量より，少なくなる}{}
\para{前年を下回る}{前年より少なくなる}
[t]
国語辞典だけを利用していたのでは，前節で述べたような問題を克服するのは困難である．
当然のことであるが，国語辞典には見出し語がとる項についての記述はない．
また定義文主辞がとる項の情報も，日本語では項の省略が頻繁に行われるため，定義文に記述されているとは限らない．
下の例のように，完全に項が省略されている定義文も珍しくない．
このような現象は，国語辞典に限らず，既存の語彙知識を言い換えに利用しようとする際，つねに起こりうる問題である．
\rsk{しのぐ}{耐え忍ぶこと}{優れていること}
そのため本研究では，格フレーム辞書をあらかじめ大規模コーパスから自動構築して，見出し語と定義文主辞がもつ格フレームの対応付けを学習し，それを利用した言い換え手法を提案する．
言い換えの流れは次のようになる(図[REF_VerbParaphrase])．
次章以降では，1，2の処理について詳しく述べる．
格フレーム辞書の自動構築
まず大規模コーパスから用言の格フレーム辞書を自動構築する[CITE]．
複数の意味を持つ用言には，複数の格フレームが学習される．
格フレームの対応付け
国語辞典から「見出し語と定義文主辞」の対を抽出して，見出し語が持つ格フレームと定義文主辞が持つ格フレーム(見出し語格フレーム，主辞格フレームと呼ぶ)の対応付けを学習する．
図[REF_VerbParaphrase]の場合では「{組織，[MATH]}ガ{メーカー，社，[MATH]}ヲしのぐ」という格フレームは「{[MATH]主体[MATH]}ガ{他社}ヨリ優れている」という格フレームと対応付けられる．
言い換え処理
入力文と類似する見出し語格フレームを一つ選択して，その格フレームの対応付け情報を使って言い換える．
図[REF_VerbParaphrase]の場合では，「しのぐ」の格フレームの中から，入力文「他社をしのぐ」と最も類似する「{組織[MATH]}ガ{メーカー，社[MATH] }ヲしのぐ」という格フレームが選択される．
そして，2の処理で学習した格フレームの対応付けを利用して言い換える．
提案手法を実現するためには，大規模で高精度な格フレーム辞書が必要である．
本研究では，河原らの手法[CITE]を用いて作成した大規模な格フレーム辞書を用いる．
格フレーム辞書をコーパスから自動学習する際に最も問題となるのは，用言の多義性である．
つまり表記が同じ用言でも，その意味が違えば別の格フレームを持つ．
そのため，コーパスから自動収集した用言の係り受けデータを，意味ごとにクラスタリングする処理が必要となる．
用言の直前に現れる項(直前項と呼ぶ)は用言の意味に強い影響を与えているので，直前項が決まれば用言の語義もほとんど一意に決まる．
[CITE]ではこの考え方を使って，自動収集した係り受けデータを次のような二段階の処理でクラスタリングする手法を提案している(図[REF_AbstractCaseFrame])．
同じ直前項をもつ係り受けデータをまとめる．
このようにして作成されたデータを用例パターンと呼ぶ．
以下では「荷物」「物資」など，用例パターンの項に含まれる各単語を用例と呼ぶ．
用例パターン間に類似度を設定して，類似度の高いものをクラスタリングする．
ここで設定されている用例パターンの類似度は，この次のステップの「格フレームの対応付け」で非常に重要な役割を果たしている．
そのため本章では，[CITE]で提案されている用例パターンの類似度の計算方法について説明を行う．
[t]
用例パターン[MATH]の類似度は次のように定める．
用例パターンに含まれる用例の類似度[MATH]項の一致度
以下では，この類似度計算について詳しく述べる．
ただし説明の中では，二つの用例パターン[MATH]は，下のように，それぞれ項[MATH]と[MATH]を持っていて，[MATH]と[MATH], [MATH]と[MATH]と[MATH]が，それぞれ同じ格助詞をもっているものとする．
なお，同じ格助詞をもつ項を共通項と呼ぶ．
\tr{[MATH]:}{}{[MATH]:} \tr{[MATH]}{1}{[MATH]} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{}{[MATH]}
用例群間の類似度を定義するためには，まず二つの用例[MATH]間の類似度[MATH]を定義する必要がある．
[MATH]は，日本語語彙大系[CITE]を利用して，以下のように計算する．
日本語語彙大系は，用例に意味属性を与えるために使う．
日本語語彙大系から与えられる意味属性には，二つの特徴がある．
まず，用例が多義である場合は，一つの用例に複数の意味属性が与えられている．
そして，意味属性は階層構造を持っている．
[MATH]は，用例[MATH]が日本語語彙大系[CITE]の中で持っている意味属性集合で，[MATH]はそれらの中の一つである．
[MATH]は意味属性[MATH]の階層の深さである．
[MATH]は，[MATH]が[MATH]の上位に位置する意味属性であることを表している．
[MATH]の計算式で分子が[MATH]となっているのは，用例間の類似度を1に正規化するためである．
つぎに，共通項[MATH]に含まれる用例の類似度[MATH]を定義する．
類似度は，[MATH]に含まれる用例間の類似度を，それらの出現頻度で重み付けして平均したものとする．
計算式は以下のようになる．
ここで，[MATH]は，[MATH]に含まれる用例を表す．
また，[MATH]は，用例[MATH]の用例パターン[MATH]における出現頻度とする．
用例パターンに含まれる用例の類似度[MATH]は，各共通項の[MATH]の重み付け平均とする．
重みは，[MATH]に含まれる用例の出現総数の積の平方根とする．
したがって，[MATH]は以下のように計算される．
[MATH]は，[MATH]に含まれる用例の延べ数を表す．
用例パターン[MATH]の項の一致度は、それぞれの用例パターンについて「すべての項に含まれる用例の出現総数」に対する「共通項に含まれる用例の出現総数」の割合を求めて，それらの積の平方根をとったものとする．
項の一致度[MATH]の計算式は以下のようになる．
これらを踏まえて，二つの用例パターン[MATH]の類似度[MATH]は次のように定義する．
式の前半部分は用例パターンに含まれる用例の類似度で，後半部分は項の一致度である．
上記の計算式に基づいて用例パターンの類似度を求め，類似度が0.9以上となる用例パターンをマージして格フレームを作成する．
次に，構築された格フレーム辞書を利用して，国語辞典の見出し語の各格フレームに対して，それを言い換える上で最も適切な主辞格フレームを選択する．
ここでは，見出し語の各格フレームと主辞格フレームの間に類似度を定義して，それに基づいて対応先を決定するという方法をとる．
ただし，定義文やそれに付与されている例文が有効に利用できる場合には，あらかじめ対応付ける格フレームの候補を絞り込む処理を行う．
すなわち格フレームの対応付けは以下の三つのステップで行う．
定義文を用いて，見出し語格フレームの対応先候補となる主辞格フレームを絞り込んでおく．
例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．
見出し語格フレームと主辞格フレームの間の類似度計算に基づいて，見出し語格フレームに最も類似する主辞格フレームを選択する．
図[REF_prune]に「{本部，幹部}ガ{外部，専門家}ニ{教え}ヲ仰ぐ」という格フレームに対応する主辞格フレームを決定する過程を示す．
図[REF_prune]の「{米国，団体\dots}ガ{国，日本\dots}ニ{公開，解除\dots}ヲもとめる」のように，主辞格フレームの一部は，定義文主辞と異なる意味を持っている．
このような主辞格フレームと見出し語格フレームの間に対応関係が存在することはありえない．
そのため定義文を使って，これらの主辞格フレームを取り除き，見出し語格フレームの対応付け候補となる主辞格フレームを絞り込む．
絞り込みを行うための手掛かりとして，定義文中に現れる定義文主辞の項を用いる．
とくに定義文主辞の直前に現れる項(主辞直前項と呼ぶ)がガ格，ヲ格，ニ格のときは，主辞直前項だけを使って絞り込みを行う．
このような場合には，主辞直前項が定義文主辞の用法に与える影響は非常に大きいと考えられるからである．
すなわち絞り込み方法は，主辞直前項がガ格，ヲ格，ニ格のいずれかであるときと，それ以外のときの二通りを用意することになる．
ただし，定義文主辞が項をとらない場合は，定義文を用いた絞り込みは行わない．
直前項の格助詞が主辞直前項と同じで，なおかつ直前項の格要素が表[REF_puning]の制約を満たすような主辞格フレームのみを対応付け候補とする．
格要素への制約は主辞直前項のタイプによって三つに分かれている．
ただし，一般概念語とは「人々」「場所」などのように一般的な概念を表す単語のことである．
図[REF_prune]の場合では，主辞直前項のタイプは表[REF_puning]の「格要素が並列構造」である．
それゆえ，主辞直前項の格要素(教え，さしず)と類似度が0.8以上の用例を持った主辞格フレームが対応先候補となる．
この場合は主辞直前項のみを使った絞り込みは難しい．
そのため，主辞格フレームと定義文に共通して現れるガ格・ヲ格・ニ格の項の類似度の平均をもとめ，それが0.8以上の格フレームだけを対応付け候補とした．
なお，主辞格フレーム・定義文間の項の類似度は，以下のように定義した．
ここで[MATH]は定義文主辞がとる格要素であり，[MATH]は主辞格フレームの項[MATH]に含まれる用例である．
また[MATH]は日本語語彙大系に基づいて計算した用例[MATH]の類似度で，[REF_CFSim]節で定義した計算方法と同様である．
上記のように対応付け候補となる主辞格フレームを絞り込んだ後，定義文に与えられた例文を用いて，それぞれの見出し語格フレームの語義を絞り込む．
例えば図[REF_prune]に示した，点線で囲まれた「仰ぐ」の格フレームは，語義2に与えられた例文(先生の教えを仰ぐ)と類似している．
そのため，この見出し語格フレームの対応先を，語義2の定義文主辞「もとめる」の格フレームに絞り込むことができる．
例文と見出し語格フレームの類似度は，例文と見出し語格フレームに共通して現れるガ格・ヲ格・ニ格の項の類似度の平均とする．
項の類似度は前述と同様のものを用いた．
そして，類似度が0.8以上である見出し語格フレームは，その語義を絞り込んだ．
この処理は，定義文に例文が与えられていない場合や，見出し語格フレームと類似する例文が見つからない場合には行わない．
以上のようにして対応先を絞り込んだ後，見出し語格フレームと主辞格フレームの間に設定した類似度に基づき，各見出し語格フレームに対して最も類似する主辞格フレームを一つ選択する．
類似度計算は[REF_CFSim]節で説明した用例パターン間の類似度計算方法に，若干の修正を加えたものを使う．
以下では，見出し語格フレーム[MATH]と主辞格フレーム[MATH]において，[MATH]と[MATH]が共通項で，[MATH]の[MATH]は見出し語の同等句に含まれるとする．
\tr{[MATH]:}{}{[MATH]:} \tr{[MATH]}{1}{[MATH]} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{1}{[MATH]} \tr{} \tr{[MATH]}{}{[MATH]} \tr{}{}{[MATH]}
どの項が同等句に含まれているかは，見出し語格フレームと主辞格フレームの類似度計算を通して決定する．
つまり，ある項が同等句に含まれると仮定して求められた類似度が，含まれないと仮定した場合の類似度より高ければ，その項は同等句に含まれると判定する．
ただし，対応付けの処理を補助するために，次に述べる仮定に基づいて同等句に含まれる可能性がある項を絞り込む．
まず，同等句に含められる可能性がある項は，主辞直前項だけであると仮定する．
さらに，主辞直前項が以下のいずれかの場合にあてはまれば，それが同等句に含まれる可能性はないと仮定する．
主辞直前項の格要素が一般概念語である場合
並列構造になっている場合
格助詞がガ格，ヲ格，ニ格以外の場合
つまり，表[REF_puning]の「格要素が単語一つ」に分類される主辞直前項だけが，同等句に含まれる可能性を考慮する対象となる．
[REF_CFSim]節では，同じ格助詞をもつ項が二つの格フレームの共通項であると定義していた．
しかし，この定義は異なる用言の格フレームを対象とした場合には適切ではない．
なぜなら，異なる格助詞をもつ項でも共通項になることができる，同等句に含まれる項は共通項になることができない，といった現象が起こりうるからである．
共通項の決定は，同等句に含まれる項を決定する作業と同様に，見出し語格フレームと主辞格フレームの類似度計算を通して行う．
ただし，任意的な項は用言が変わっても格助詞が変わらないことが多いので，任意的な項は，異なる格助詞をもつ項と共通項にならないと仮定する．
ここでは任意的な項とは「格フレーム中で，その項に含まれる用例出現頻度が低いもの」又は「ガ格，ヲ格，ニ格，ト格，ヨリ格，カラ格，マデ格以外の項」とした．
[REF_CFSim]節においては項の一致度は，それぞれの格フレームについて「すべての項に含まれる用例数の出現総数」に対する「共通項に含まれている用例の出現総数」の割合を求めて，それらの積の平方根をとったものとしていた．
しかし「すべての項に含まれる用例数の出現総数」を数えるときに，同等句に含まれる項の用例は数えない．
見出し語格フレーム[MATH]と主辞格フレーム[MATH]の共通項[MATH]間の類似度[MATH]を以下のように新しく定義する．
[REF_CFSim]節では，項に含まれるすべての用例の組合せについて類似度を計算し，その類似度の重み付け平均を共通項に含まれる用例の類似度としていた．
ここでは見出し語格フレームに出現する一つの用例に対して，主辞格フレームに出現する用例の中から類似度が最大となるものを一つ選び，その類似度の重み付け平均を[MATH]としている．
この修正の理由は，一般に定義文主辞の方が見出し語よりも広い意味をカバーしていることが多く，そこに現われる用例も多様なためである．
高橋らは不完全な構文変換規則とそれを修正する規則を人手で作成し，読解支援のための言い換えを行うシステムを開発している[CITE]．
近藤らは，動詞を受身形や使役形に言い換える際に必要な，格助詞の変換規則を人手で作成している[CITE]．
また近藤らは，既存の辞書を利用して動詞句を言い換える手法も提案している[CITE]．
この他，[CITE]のようにコーパスから言い換えを抽出しようとする研究も多い．
学習対象のコーパスも完全な生コーパスからパラレルコーパスまで様々である．
「同等句の抽出」「格助詞の変換」は，用言の言い換えにおいて非常に重要な処理であるにも関わらず，十分な議論を行った研究はこれまでにほとんどない．
[CITE]は格助詞の変換を扱っているが，「態の変化に伴う格助詞の変化だけを扱っている」「人手で規則を記述するというアプローチである」という二つの理由から，カバレージのある手法とはいえず問題が残っていた．
これに対してわれわれの手法は，広いカバレージをもって上記の処理を実現できる枠組をはじめて提案したといえる．
