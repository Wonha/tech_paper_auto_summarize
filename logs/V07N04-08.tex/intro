はじめに
\label{sec:introduction}

日本語は語順が自由であると言われている．
しかし，これまでの言語学的な調査によると実際には，
時間を表す副詞の方が主語より前に来やすい，長い修飾句を持つ文節は前に来やすい
といった何らかの傾向がある．
もしこの傾向をうまく整理することができれば，
それは文を解析あるいは生成する際に有効な情報となる．

本論文では語順とは，係り相互間の語順，
つまり同じ文節に係っていく文節の順序関係を意味するものとする．
語順を決定する要因にはさまざまなものがある．
それらの要因は語順を支配する基本的条件として文献\cite{Saeki:98}に
まとめられており，それを我々の定義する語順について解釈しなおすと
次のようになる．
\begin{itemize}
\item 成分的条件
  \begin{itemize}
  \item 深く係っていく文節は浅く係っていく文節より前に来やすい．

    深く係っていく文節とは係り文節と受け文節の距離が長い文節のことを言う．
    例えば，係り文節と受け文節の呼応を見ると，基本的語順は，
    感動詞などを含む文節，時間を表す副詞を含む文節，
    主語を含む文節，目的語を含む文節の順になり，
    このとき，時間を表す副詞を含む文節は主語を含む文節より深く
    係っていく文節であると言う．
    このように係り文節と受け文節の距離を表す概念を係りの深さという．
  \item 広く係っていく文節は狭く係っていく文節より前に来やすい．

    広く係っていく文節とは受け文節を厳しく限定しない文節のことである．
    例えば，「東京へ」のような文節は「行く」のように何らかの移動を表す
    動詞が受け文節に来ることが多いが，「私が」のような文節は受け文節を
    それほど限定しない．
    このとき，「私が」は「東京へ」より広く係っていく文節であると言う．
    このように係り文節がどの程度受け文節を限定するかという概念を
    係りの広さと言う．
  \end{itemize}
\item 構文的条件
  \begin{itemize}
  \item 長い文節は短い文節より前に来やすい．
    
    長い文節とは修飾句の長い文節のことを言う．
  \item 文脈指示語を含む文節は前に来やすい．
  \item 承前反復語を含む文節は前に来やすい．
    
    承前反復語とは前文の語を承けて使われている語のことを言う．
    例えば，
    「あるところにおじいさんとおばあさんがおりました．
    おじいさんは山へ柴刈におばあさんは川へ洗濯に行きました．」
    という文では，2文目の「おじいさん」や「おばあさん」が承前反復語である．
  \item 提題助詞「は」を伴う文節は前に来やすい．
  \end{itemize}
\end{itemize}
以上のような要素と語順の関係を整理する試みの一つとして，
特に係りの広さに着目し，
辞書の情報を用いて語順を推定するモデルが提案された\cite{Tokunaga91b}．
しかし，動詞の格要素の語順に限定しており必須格しか扱えない，
文脈情報が扱えないなどの問題点が指摘されている\cite{Saeki:98}．
語順を推定するモデルとしては他にN-gramモデルを用いたもの\cite{Maruyama:94}
があるが，これは一文内の形態素の並びを推定するモデルであり，
我々とは問題設定が異なる．
また，上に箇条書きとしてあげたような要素は特に考慮していない．
英語については，
語順を名詞の修飾語の順序関係に限定し
統計的に推定するモデルが提案された\cite{Shaw:99}が，
語順を決定する要因として多くの要素を同時に考慮することはできないため，
日本語の語順に対して適用するのは難しい．

本論文では，上に箇条書きとしてあげたような要素と語順の傾向との関係を
コーパスから学習する手法を提案する．
この手法では，語順の決定にはどの要素がどの程度寄与するかだけでなく，
どのような要素の組み合わせのときにどのような傾向の語順になるかということも
コーパスから自動学習することができる．
個々の要素の寄与の度合は最大エントロピー(ME)モデルを用いて効率良く学習する．
学習されたモデルの性能は，そのモデルを用いて語順を決めるテストを行ない，
元の文における語順とどの程度一致するかを調べることによって
定量的に評価することができる．
正しい語順の情報はテキスト上に保存されているため，
学習コーパスは必ずしもタグ付きである必要はなく，
生コーパスを既存の解析システムで解析した結果を用いてもよい．
後節の実験で示すように，
既存の解析システムの精度が90\%程度であったとしても学習コーパスとして
十分に役割を果たすのである．

