図[REF_fig:system_overview]に本システムの構成を示す．
本システムでは，あらかじめ分類されたシラバスの情報をもとに，未分類のシラバスを（半）自動的に各カテゴリに分類することを目的とする．
以下に各コンポーネントの概要を述べる．
\textgt{・特徴抽出（自動用語認識）}
入力されたシラバスに対して，形態素解析および自動用語認識を行い，シラバス中から特徴を抽出する．
なお，本システムでは，シラバス中の「科目名」，「講義の目的」，「理解すべき事項」，「前提事項」，「応用先」，「事前履修」，「並行履修」，「事後履修」を対象として名詞および用語の抽出を行うこととした．
関連研究で取り上げた文献[CITE]で報告されているように，ユーザ支援を目的とした分類システムでは，分類の根拠となった用語を含めた形でユーザへ情報提示することが重要である．
本システムでも同様の理由により，分類の根拠をユーザに明確にする目的で，シラバス中に含まれる用語を次項で述べるC/NC-value用語認識を利用して抽出を行い，可視化の際に利用することで，可能な限りユーザに提示する．
\textgt{・C/NC-value用語抽出}
本システムでは，機械学習・分類のための素性の一部としてC/NC-value用語認識技術[CITE]を基にした用語の自動認識を利用している．
C/NC-value手法は，テキストを入力とし，言語的な知識と統計的な解析の両者を複合的に利用することで，複数の語からなる用語を自動抽出する手法である．
まず，C-value手法では，形態素のパターンと用語の対象ドメインにおける出現頻度，さらには，用語のネスティングに関する性質に注目し，スコア付けを行うことで用語の高精度な自動認識を行う．
ここで，ネスティングとは，「乱数系列」と「疑似乱数系列」の関係のような，ある用語がさらに長いまとまりの用語に含まれている状態（包含関係）を示す．
具体的な手順としては，まず，対象テキストを形態素解析し，以下のようなパターンによってフィルタリングを行う．
[Filter 1] Noun{2,}例：疑似乱数系列，仮想関数[Filter 2] (Prefix | Adv) (Noun | Adj | Suffix)+ Noun+例：全二重接続，非同期通信[Filter 3] Prefix Noun+ Suffix例：未定義型，再初期化
上記のフィルターによって対象テキスト中から文字列を切り出し，これを用語の候補とする．
次に，用語の候補それぞれの対象テキスト中における出現頻度を計算し，さらにこの出現頻度から，単語のネスティングに関する性質を利用して，以下の式によりC-valueを算出する．
ここで，
[MATH]は用語の候補
[MATH]は用語の候補[MATH]の長さ（形態素の個数）
[MATH]は対象テキスト中の出現頻度
[MATH]は[MATH]を含む抽出された用語の候補の集合
[MATH]は上記集合の要素数
である．
また，NC-value手法では，候補となる用語の実際の文章上でのコンテキスト（前後の文脈）中にある語彙との共起の情報を用いて，用語としての確からしさ(termhood)の指標を求め，求まった指標を基に候補となる用語の再順序づけを行う．
本手法は日英両言語のテキストに対して用語抽出の実験評価が行われており，両言語共に高い精度の認識が行える言語非依存性や，異なる分野に対しても同手法で比較的高精度な用語抽出が可能なドメイン非依存性を持つことを特徴とする．
この性質は，本稿で提案する，分野を越えて関連する講義を抽出するという目的には有効だと思われる．
実際に，AI分野の論文を用いた評価実験の結果，90%以上の用語認識精度が得られており，他の手法と比較して高いドメイン非依存性があると報告されている[CITE]．
なお，抽出した用語の例として，2006年度の東京大学工学部シラバスから抽出した用語のうちスコア上位5件は，「基礎知識」，「線形代数」，「統計力学」，「固体物理」，「ベクトル解析」であった．
\textgt{・サポートベクターマシン(SVM)}
SVMは，あらかじめ学習させたパターンに基づき，未知の入力パターンの分類を行う強力なパターンマッチング手法であり，機械学習理論の構造的リスク最小化原理に基づいている[CITE]．
本システムでは高精度のテキスト分類を実現するためにSVMを分類器として採用した．
なお，SVMによるテキスト分類についての研究は既に報告されており，決定木等の他の手法に比べてSVMが非常に高い分類能力を持つことが示されている[CITE]．
本システムでは，あらかじめいくつかのカテゴリに分類されたシラバス群をSVM分類器に学習させておき，未分類のシラバスを自動的に各カテゴリに分類するためにSVMを利用している．
なお，本コンポーネントでは，カテゴリ数と同数のSVM分類器を用意し，1つのシラバスを複数のカテゴリに分類することが可能である．
本システムでは，SVMソフトウェアのTinySVM 0.09 [CITE]を利用した．
また，SVMを利用したテキスト分類において，素性をどのように選択するかが重要であると報告されている[CITE]．
文献[CITE]では，n-gram，形態素，および複合名詞を含む種々の素性を用いたテキスト分類について議論されており，英語の新聞記事に対するSVMを用いた分類実験では，形態素に複合名詞を加えたものを素性として用いた際に，10個の分類カテゴリのうち8個のカテゴリにおいては若干の分類精度向上が見られることが示されている．
総合的に見た場合には，bag of words以外（フレーズ，語義情報等）の素性を利用しても精度向上は微々たるものであり，計算量とのトレードオフも含め，必ずしも質の向上に寄与するとは言えない面もあるとの報告もあるが，カテゴリの専門性の高さ（専門用語の特徴量としての尤もらしさ）に対する素性の最適化や素性の組み合わせ方式等，未だ議論の余地はある．
例えば，情報検索分野において，従来，素性の単位をn-gramか形態素にするかの議論が成されていたが，今日の検索システムにおいては，両者の融合による検索精度の向上が既に実現されている．
以上の観点より，システムの設計にあたり，事前に学習データのクロスバリデーションによる実験，及び日本語の新聞記事を使った予備実験を行い，名詞と用語を素性に採用した際の分類精度への影響を調査した．
まず，SVMによるテキスト分類の素性として，1)名詞のみ，2)用語のみ，3)名詞および用語，の3つを準備し，tf・idf [CITE]によりスコア付けを行い，それぞれの場合について新聞記事を対象とした分類実験を行った．
その結果，実験全体のF値（適合率と再現率の調和平均）は，1)名詞のみF=0.6390，2)用語のみF=0.5462，3)名詞および用語F=0.6560となり，3)の名詞および用語を素性とした場合に最も精度よく分類出来ることを確認した．
特に，新聞記事での軍事や国際関係等の専門性の高いと考えられるカテゴリにおいて，より多くの精度向上が見られた．
一般に，シラバスの記述内容は専門用語を多く含んでいるため，名詞および用語を素性とすることでより高精度の分類を行うことが期待できる．
以上の理由から本システムではSVM分類の素性として，名詞および用語を素性として採用した．
\textgt{・機械学習}
「特徴抽出」部によって抽出された素性（名詞および専門用語）を基に，tf・idfによりスコア付けを行い，訓練データとなるシラバスを正規化された多次元ベクトルに変換する．
さらに，訓練データをもとにSVM分類器を学習させ，分類知識を生成する．
\textgt{・自動分類}
「特徴抽出」部によって抽出された素性（名詞および専門用語）を基に，テストデータとなるシラバスを多次元ベクトルに変換し，SVM分類器により未分類のシラバスを分類する．
\textgt{・シラバス分類可視化エンジン}
「自動分類」部によって分類されたシラバスから，HTMLドキュメントを自動生成しブラウザに表示する（図[REF_fig:kadai_kankyou]参照）．
なお，実装についてはアプリケーションエンジンの一つであるApache Tomcat 4.1.32をベースに，Java言語によりHTMLを生成するServletを作成した．
また，シラバスデータを保存するためのデータベースエンジンとしてPostgreSQL 7.1.3を利用し，JDBCを介したデータベースコネクションによりモジュラリティの高い構成を採用している．
\textgt{・インタラクティブ修正インタフェース}
「自動分類」部によって生成されたシラバス分類結果を見ながら，インタラクティブに分類間違いを修正する．
まず，図[REF_fig:syllabus_list]に示した分類結果一覧画面を見ながら分類間違いを探し，「修正」ボタンを押すことによって個別シラバスの修正画面に移行し，図[REF_fig:syllabus_detail]に示した個別シラバス修正画面にてシラバス内の各項目を修正する．
実装については「シラバス分類可視化エンジン」部と同様にApache Tomcat 4.1.32上にJava言語によりServletを作成した．
なお，可視化システム，および上記インタラクティブ修正インタフェース等，本システムのすべてのユーザインタフェースをWebベースとすることで，一般のWebブラウザを介した操作のみで，シラバス閲覧等のすべての作業を行うことが可能となっている．
図[REF_fig:kadai_kankyou]は，環境分野に関連する科目について，課題志向型構造（ある課題に着目した場合の関係構造）を相対的な関係で描き出したものである．
「環境大事典」（工業調査会）のセクションあるいはテーマで全体の枠組みを作り，その中に工学部で履修できる環境関連科目を当てはめた．
図[REF_fig:kadai_kankyou]中において，亀甲状のタイルによりある課題の全体構造を示し，六角形の各領域がそれぞれの下位の課題に対応している．
下位の課題の部分をクリックすることにより，その下位の構造全体の可視化画面に遷移する．
色の濃淡は科目数に対応しており，科目ごとの相対的な関係が見えると同時に，工学部の講義の中では技術的なことはよく扱われている反面，法的枠組みのような社会科学的視点や，人文科学的枠組みである心理的問題などが，工学部の講義の中だけでは必ずしも履修できないことが見えてくる．
以上のように，分類結果を可視化することで，学生にとっては，学問分野を俯瞰しながら自分の興味のある講義を探し，さらにその講義に関連する講義を知り，履修しようとする講義の相対的位置付けや，キャリアパスに応じた履修計画の支援に役立てることがきる．
また，教員にとっては，可視化によって，講義の全体像を俯瞰し各講義間の関連性を知ることによって，講義内容の重複や講義の抜けを知ることができ，カリキュラムの改善に役立てることができる．
図[REF_fig:system_overview]に本システムの構成を示す．
本システムでは，あらかじめ分類されたシラバスの情報をもとに，未分類のシラバスを（半）自動的に各カテゴリに分類することを目的とする．
以下に各コンポーネントの概要を述べる．
\textgt{・特徴抽出（自動用語認識）}
入力されたシラバスに対して，形態素解析および自動用語認識を行い，シラバス中から特徴を抽出する．
なお，本システムでは，シラバス中の「科目名」，「講義の目的」，「理解すべき事項」，「前提事項」，「応用先」，「事前履修」，「並行履修」，「事後履修」を対象として名詞および用語の抽出を行うこととした．
関連研究で取り上げた文献[CITE]で報告されているように，ユーザ支援を目的とした分類システムでは，分類の根拠となった用語を含めた形でユーザへ情報提示することが重要である．
本システムでも同様の理由により，分類の根拠をユーザに明確にする目的で，シラバス中に含まれる用語を次項で述べるC/NC-value用語認識を利用して抽出を行い，可視化の際に利用することで，可能な限りユーザに提示する．
\textgt{・C/NC-value用語抽出}
本システムでは，機械学習・分類のための素性の一部としてC/NC-value用語認識技術[CITE]を基にした用語の自動認識を利用している．
C/NC-value手法は，テキストを入力とし，言語的な知識と統計的な解析の両者を複合的に利用することで，複数の語からなる用語を自動抽出する手法である．
まず，C-value手法では，形態素のパターンと用語の対象ドメインにおける出現頻度，さらには，用語のネスティングに関する性質に注目し，スコア付けを行うことで用語の高精度な自動認識を行う．
ここで，ネスティングとは，「乱数系列」と「疑似乱数系列」の関係のような，ある用語がさらに長いまとまりの用語に含まれている状態（包含関係）を示す．
具体的な手順としては，まず，対象テキストを形態素解析し，以下のようなパターンによってフィルタリングを行う．
[Filter 1] Noun{2,}例：疑似乱数系列，仮想関数[Filter 2] (Prefix | Adv) (Noun | Adj | Suffix)+ Noun+例：全二重接続，非同期通信[Filter 3] Prefix Noun+ Suffix例：未定義型，再初期化
上記のフィルターによって対象テキスト中から文字列を切り出し，これを用語の候補とする．
次に，用語の候補それぞれの対象テキスト中における出現頻度を計算し，さらにこの出現頻度から，単語のネスティングに関する性質を利用して，以下の式によりC-valueを算出する．
ここで，
[MATH]は用語の候補
[MATH]は用語の候補[MATH]の長さ（形態素の個数）
[MATH]は対象テキスト中の出現頻度
[MATH]は[MATH]を含む抽出された用語の候補の集合
[MATH]は上記集合の要素数
である．
また，NC-value手法では，候補となる用語の実際の文章上でのコンテキスト（前後の文脈）中にある語彙との共起の情報を用いて，用語としての確からしさ(termhood)の指標を求め，求まった指標を基に候補となる用語の再順序づけを行う．
本手法は日英両言語のテキストに対して用語抽出の実験評価が行われており，両言語共に高い精度の認識が行える言語非依存性や，異なる分野に対しても同手法で比較的高精度な用語抽出が可能なドメイン非依存性を持つことを特徴とする．
この性質は，本稿で提案する，分野を越えて関連する講義を抽出するという目的には有効だと思われる．
実際に，AI分野の論文を用いた評価実験の結果，90%以上の用語認識精度が得られており，他の手法と比較して高いドメイン非依存性があると報告されている[CITE]．
なお，抽出した用語の例として，2006年度の東京大学工学部シラバスから抽出した用語のうちスコア上位5件は，「基礎知識」，「線形代数」，「統計力学」，「固体物理」，「ベクトル解析」であった．
\textgt{・サポートベクターマシン(SVM)}
SVMは，あらかじめ学習させたパターンに基づき，未知の入力パターンの分類を行う強力なパターンマッチング手法であり，機械学習理論の構造的リスク最小化原理に基づいている[CITE]．
本システムでは高精度のテキスト分類を実現するためにSVMを分類器として採用した．
なお，SVMによるテキスト分類についての研究は既に報告されており，決定木等の他の手法に比べてSVMが非常に高い分類能力を持つことが示されている[CITE]．
本システムでは，あらかじめいくつかのカテゴリに分類されたシラバス群をSVM分類器に学習させておき，未分類のシラバスを自動的に各カテゴリに分類するためにSVMを利用している．
なお，本コンポーネントでは，カテゴリ数と同数のSVM分類器を用意し，1つのシラバスを複数のカテゴリに分類することが可能である．
本システムでは，SVMソフトウェアのTinySVM 0.09 [CITE]を利用した．
また，SVMを利用したテキスト分類において，素性をどのように選択するかが重要であると報告されている[CITE]．
文献[CITE]では，n-gram，形態素，および複合名詞を含む種々の素性を用いたテキスト分類について議論されており，英語の新聞記事に対するSVMを用いた分類実験では，形態素に複合名詞を加えたものを素性として用いた際に，10個の分類カテゴリのうち8個のカテゴリにおいては若干の分類精度向上が見られることが示されている．
総合的に見た場合には，bag of words以外（フレーズ，語義情報等）の素性を利用しても精度向上は微々たるものであり，計算量とのトレードオフも含め，必ずしも質の向上に寄与するとは言えない面もあるとの報告もあるが，カテゴリの専門性の高さ（専門用語の特徴量としての尤もらしさ）に対する素性の最適化や素性の組み合わせ方式等，未だ議論の余地はある．
例えば，情報検索分野において，従来，素性の単位をn-gramか形態素にするかの議論が成されていたが，今日の検索システムにおいては，両者の融合による検索精度の向上が既に実現されている．
以上の観点より，システムの設計にあたり，事前に学習データのクロスバリデーションによる実験，及び日本語の新聞記事を使った予備実験を行い，名詞と用語を素性に採用した際の分類精度への影響を調査した．
まず，SVMによるテキスト分類の素性として，1)名詞のみ，2)用語のみ，3)名詞および用語，の3つを準備し，tf・idf [CITE]によりスコア付けを行い，それぞれの場合について新聞記事を対象とした分類実験を行った．
その結果，実験全体のF値（適合率と再現率の調和平均）は，1)名詞のみF=0.6390，2)用語のみF=0.5462，3)名詞および用語F=0.6560となり，3)の名詞および用語を素性とした場合に最も精度よく分類出来ることを確認した．
特に，新聞記事での軍事や国際関係等の専門性の高いと考えられるカテゴリにおいて，より多くの精度向上が見られた．
一般に，シラバスの記述内容は専門用語を多く含んでいるため，名詞および用語を素性とすることでより高精度の分類を行うことが期待できる．
以上の理由から本システムではSVM分類の素性として，名詞および用語を素性として採用した．
\textgt{・機械学習}
「特徴抽出」部によって抽出された素性（名詞および専門用語）を基に，tf・idfによりスコア付けを行い，訓練データとなるシラバスを正規化された多次元ベクトルに変換する．
さらに，訓練データをもとにSVM分類器を学習させ，分類知識を生成する．
\textgt{・自動分類}
「特徴抽出」部によって抽出された素性（名詞および専門用語）を基に，テストデータとなるシラバスを多次元ベクトルに変換し，SVM分類器により未分類のシラバスを分類する．
\textgt{・シラバス分類可視化エンジン}
「自動分類」部によって分類されたシラバスから，HTMLドキュメントを自動生成しブラウザに表示する（図[REF_fig:kadai_kankyou]参照）．
なお，実装についてはアプリケーションエンジンの一つであるApache Tomcat 4.1.32をベースに，Java言語によりHTMLを生成するServletを作成した．
また，シラバスデータを保存するためのデータベースエンジンとしてPostgreSQL 7.1.3を利用し，JDBCを介したデータベースコネクションによりモジュラリティの高い構成を採用している．
\textgt{・インタラクティブ修正インタフェース}
「自動分類」部によって生成されたシラバス分類結果を見ながら，インタラクティブに分類間違いを修正する．
まず，図[REF_fig:syllabus_list]に示した分類結果一覧画面を見ながら分類間違いを探し，「修正」ボタンを押すことによって個別シラバスの修正画面に移行し，図[REF_fig:syllabus_detail]に示した個別シラバス修正画面にてシラバス内の各項目を修正する．
実装については「シラバス分類可視化エンジン」部と同様にApache Tomcat 4.1.32上にJava言語によりServletを作成した．
なお，可視化システム，および上記インタラクティブ修正インタフェース等，本システムのすべてのユーザインタフェースをWebベースとすることで，一般のWebブラウザを介した操作のみで，シラバス閲覧等のすべての作業を行うことが可能となっている．
図[REF_fig:kadai_kankyou]は，環境分野に関連する科目について，課題志向型構造（ある課題に着目した場合の関係構造）を相対的な関係で描き出したものである．
「環境大事典」（工業調査会）のセクションあるいはテーマで全体の枠組みを作り，その中に工学部で履修できる環境関連科目を当てはめた．
図[REF_fig:kadai_kankyou]中において，亀甲状のタイルによりある課題の全体構造を示し，六角形の各領域がそれぞれの下位の課題に対応している．
下位の課題の部分をクリックすることにより，その下位の構造全体の可視化画面に遷移する．
色の濃淡は科目数に対応しており，科目ごとの相対的な関係が見えると同時に，工学部の講義の中では技術的なことはよく扱われている反面，法的枠組みのような社会科学的視点や，人文科学的枠組みである心理的問題などが，工学部の講義の中だけでは必ずしも履修できないことが見えてくる．
以上のように，分類結果を可視化することで，学生にとっては，学問分野を俯瞰しながら自分の興味のある講義を探し，さらにその講義に関連する講義を知り，履修しようとする講義の相対的位置付けや，キャリアパスに応じた履修計画の支援に役立てることがきる．
また，教員にとっては，可視化によって，講義の全体像を俯瞰し各講義間の関連性を知ることによって，講義内容の重複や講義の抜けを知ることができ，カリキュラムの改善に役立てることができる．
