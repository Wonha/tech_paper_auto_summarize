文法理論は，言語に関する最も体系的な知見として，人間の言語活動に対して見通しのよい説明を提供している．
本研究が立脚する主辞駆動句構造文法(Head-driven Phrase Structure Grammar---HPSG)[CITE]は，言語現象を情報という観点から形式的に捉えようとした文法理論である．
HPSGは，統語，意味，あるいは今日亨受できる豊かなデータの蓄積をもとにした音韻・形態情報などの系統的な関係を記述することができ，さらにはそれらの統合的な情報も単一化によって得ることを可能にしている．
また，開発の経緯において情報科学との交流が密であったため，構文解析などの言語処理の基礎技術を考える基本的な枠組みを提供するという目的においても導入に適した理論である．
以下に論じる文法システムは，文法理論の導入によるこのような利点が言語処理に反映されるように設計を試みたものである．
HPSGの体系[CITE]を解析システムとして実装する場合，特に考慮を要するのは次の三点である．
語順に関する原理・制約
音形を持たない(空の)語彙を仮定した``省略''(や``痕跡'')の説明
(無効な)構文木の生成・曖昧性の抑制
1は線形順序制約(Linear Precedence Constraint)によって規定され，直接支配スキーマ(Immediate Dominance Schema---IDスキーマ)は構成素が左右どちらの枝にあるかという区別はしない．
この制約は構成素間の局所的な順序のみを規定し，制約に違反しない任意の語順を文法的とするが，このような理論的枠組を実際の解析に反映させるためには，予め線形順序制約とIDスキーマから全ての句構造規則を派生させるといった工夫が別途必要となる．
2は下位範疇化(subcategorization)に関する素性の打ち消し(cancellation)を問題にする．
下位範疇化された要素が表層に現れていない場合，音形を持たない空の語彙を仮定することで素性は打ち消される．
しかしながら，日本語では文中のほとんどの要素が省略可能であるため，省略の分析を実装するには，実際には起きていない省略を検査してしまう冗長な解析を抑制する方法も組み込まなければならない．
3はシステムの処理対象と言語理論の説明対象の間の調整に関する問題である．
原理・スキーマなどの制約は，可能であれば解析のあらゆる段階でその適用が全て検査されるが，その数が多いほど評価を試みる(無効な)構文木が組み合わせ的に増大してしまう．
処理系への負担を減らすには，システムの持つ文法を調整し適用可能性を抑える必要があるが，それには言語現象の理論的な一般化を損わないような配慮が必要である．
これらは，言語理論が推し進めている抽象的な原理の体系をそのまま実装する上で問題となる．
しかしながら，我々の文法システムでは[REF_sec:intr]節で述べたような言語現象に対する理論の見通しの良さを活かすために，HPSGの形式化に対し独自の修正を加えることでその実装を可能にした．
以下では，上記の問題点を解消するために我々が行ったHPSGの精緻化・拡張について述べる．
まず，[REF_sec:jpsg:frml]節では日本語文法の形式化に関する全体的見通しを概観し，[REF_sec:jpsg:worder]節では``語順''の扱いを，次いで[REF_sec:jpsg:drop]節では``省略''の扱いについて述べる．
最後に，[REF_sec:jpsg:atree]節で構文木の生成・曖昧性の抑制に関して，頻出構文である複合述語に問題を限定して論じることにする．
本論文で提案する文法は当面の記述対象を日本語に限っているため，JPSGとよんでいる．
HPSGにもとづいた日本語文法としては，既にICOT JPSGが存在している．
ここで提案する文法も言語に関する基本的な洞察はICOTと同じである．
しかし，文法の理論的一貫性を保持しつつ実用的なシステムを開発することに，より関心を向けているため，理論の射程や実装面の特徴においては大きく異なっている．
ゆえに，ICOT JPSGとは区別して，我々が提案する文法をNAIST JPSGとよぶことにした．
HPSGにもとづくJPSGの理論的構成は，普遍原理([MATH])，日本語固有の原理([MATH])，スキーマ([MATH])，語彙([MATH])，の関係として図[REF_fig:jpn]のように形式化することができる．
このように連言的な原理と選言的なスキーマを仮定し，言語の性質を理論的に組み立てることによって，言語の普遍性と日本語の特徴の記述を両立させている．
言語的対象物(linguistic objects)は，実際の言語状況において，図[REF_fig:fstr]のような属性(attribute)と値(value)が対になった素性構造で表わされる音韻・形態情報，統語情報，そして意味情報が互いに制約し合って配置された部分情報構造(partial information structures)に則して分析される．
synsem_struc\/は語または句の持つ情報を記述するための型(type)の総称であるが，このように部分情報構造の型の名前をイタリック体で示す．
また，list([MATH])\/は[MATH]という型を持つ素性のリストを表す．
synsem_struc\/はphrase, word,\dots\/といった下位型(subtype)を持つ．
主辞素性(head feature---head素性)の値head\/は品詞，格素性(case feature---case素性)の値case\/は格に関する情報をそれぞれ表すが，各素性の詳細は以下の節で必要に応じて述べる．
上記のように，素性構造に対する基本的な構想，またこのような言語情報の統合が素性構造に対する単一化によってなされる点はHPSGの見解に従うものであるが，NAIST JPSGはさらに日本語の解析システムとして，日本語を指向した新しい型体系を導入している．
HPSGなどの言語理論と構文解析・文生成といった自然言語処理技術が最も密接に関連するのは，句構造の構築に関するスキーマであろう．
HPSGは文の構築に関する個別の句構造規則を仮定していない．
伝統的な統語論で仮定されていた句構造規則は，下位範疇化に関する情報と直接支配原理(Immediate Dominance Principle)に関する六つのスキーマ(1. Head-Subject, 2. Head-Complement, 3. Head-Subject-Complement, 4. Head-Marker, 5. Head-Adjunct, 6. Head-Filler)といった普遍的制約に置き換えられている．
NAIST JPSGも基本的にはこの考え方に従うものであるが，スキーマに関しては独自に図[REF_fig:schm]の四つを設定している．
(a)のcomplement-head schemaは1--3を包括し，(b)のadjunct-head schemaは5に相当する．
(c)の0-complement schemaおよび(d)のpseudo-lexical-rule schemaは新たに導入したものであるが，これらのスキーマの必然性は[REF_sec:jpsg:issue]節で提起した問題と関連しており，順次説明していくことにする．
6に関しては空所という言語学的な分析をどのように実装に反映するかを検討中ゆえに，現在のところ扱いが明確となっていない．
4に相当するスキーマがないのは，NAIST JPSGでは日本語の助詞(および補文標識)をマーカと分析しないためである．
助詞については[REF_sec:jl]節で詳しく論じる．
図[REF_fig:schm]のスキーマは，HPSGで仮定されているものとは一部異なっているものの，その選択が図[REF_fig:jpn]に示すように選言的であること，またcomplement-head schemaは下位範疇化，adjunct-head schemaは付加語に関する制約を担うスキーマとして，伝統的な句構造規則に代わり，構成素の階層関係に制約を課し，図[REF_fig:btree]のような構文木の生成を保証している点では変わりはない．
図[REF_fig:stree]に図[REF_fig:btree]の語順転換(かき混ぜ，scrambling)の一例を示す．
図[REF_fig:btree]と比較するとわかるように，どちらも下位範疇化素性(subcategorization feature---subcat素性)の打ち消しには違いがない．
HPSGでは，言語の階層性を規定するこのような句構造表示の制約によって，英語のように語順の制限が厳しい言語と日本語のように語順の制限がゆるい言語を区別していた．
NAIST JPSGの実装では次の2点により語順転換を説明する．
subcat素性の打ち消しに順序を設けないことにより，任意の順序での素性の打ち消しを可能とする．
構文木の構造は構成素の階層関係を直接的には反映しておらず，そのような情報はsem素性の埋め込みで記述する．
また，complement-head schema，adjunct-head schemaの意図するところは，日本語の基本的な文の統語構造を，語順の制約がゆるい非階層言語のような平坦な構文木として分析するのでもなく，また階層言語のような主語・目的語の非対称性も仮定しない，ということである．
1に関してはICOT JPSGでもsubcat素性の打ち消しに順序を設けないというアプローチがとられている．
しかし，その定式化は素性の値をリストではなく，集合とする別の方法によって実装されていた．
NAIST JPSGのsubcat素性は，arg-st素性から[CITE]で提案されている項顕在化原理(Argument Realization Principle)によって変換されたリストであり，統語情報と意味情報の関係に対する普遍的制約によって計算されている．
2に関しては[CITE]でも埋め込み分析が提案されているが，我々とは分析の対象とする言語事実やその説明の枠組，理論的帰結が異なっている．
また，近年の言語学では統語構造と音韻・形態構造の独立性が考えられており，例えば[CITE]では，順序連接(sequence union)という制約を用いることで，それらの関係を適切に捉えるような機構を提案している．
しかし，順序連接は解析システムとして実装するのが困難であり，また音韻・形態情報を反映して語順を規定する構文木にもとづく解析の方が，係り受け情報を利用することで不要な可能性の数を制限しやすいため，このような分析を採用している．
日本語では，いわゆるゼロ代名詞とよばれる，([REF_ex:omit])に示すような項の省略が頻繁に起こる．
\enumsentence{　\tabcolsep=0pt
}すなわち，([REF_ex:omit]a)に対し，動詞が要求する項が一部表出していないような([REF_ex:omit]b, c)や，極端な場合，([REF_ex:omit]d)のように項が全く表出していなくても，その動詞は句または文と成り得る．
一方，英語ではこのようなことはほとんど起こらず，語と句は厳格に区別される．
英語はさらに語順が固定的であることから，[CITE]では(主語以外の)全ての項を同時に打ち消すスキーマが標準的な機構となっている．
NAIST JPSGでは次の二点を考慮し，図[REF_fig:schm](a)のcomplement-head schemaの他に(c)の0-complement schemaを導入した．
日本語においては部分的に飽和した動詞句がごく自然に現れる．
仮に全ての項が表出しても，それらの間に任意の付加語が入り得る．
0-complement schemaに続けてcomplement-head schemaを再帰的に適用してゆけば，任意の個数の項を打ち消すことができる．
図[REF_fig:go]はこのスキーマによって解析を行なった([REF_ex:omit]d)の構文木である．
「食べた」のhead素性が主辞素性原理(Head Feature Principle)によってsのhead素性に受け継がれている．
また，「食べた」の意味的な項を表わすarg-st素性は項顕在化原理によってsのsubcat素性に変換されている．
日本語では([REF_ex:aux])のように動詞に対する助動詞の連接が生産的に行われている．
\enumsentence{
}図[REF_fig:schm](c)の0-complement schemaとともに新たに導入した(d)のpseudo-lexical-rule schemaは，このようないわゆる複合述語形成を扱うスキーマである．
例えば([REF_ex:aux]b)における複合動詞「読ませた」は図[REF_fig:lcaus]のように分析される．
pseudo-lexical-rule schemaを導入することの利点は，助動詞「せた」が左にくる姉妹をword\/に指定することで，解析における複合動詞句の曖昧性を抑制できる点にある．
その指定で用いられる隣接素性(adjacent feature---adjcnt素性)はICOT JPSGで採用されていた素性であり，下位範疇化されている要素の中でも特に隣接したものに関する制約を扱う．
図[REF_fig:val](左)に隣接素性原理(Adjacent Feature Principle)を示す．
adjcnt素性はsubcat素性を保存したまま語彙的に緊密な隣接要素を指定する．
助動詞や[REF_sec:jl]節で論じる助詞のように，日本語においては他の要素を下位範疇化するだけでなく，それらと隣接していることを要求する語が存在するため，制約を局所的に記述するにはこのような素性の導入が必要である．
adjcnt素性は言語類型的に膠着語(agglutinative language)とよばれる言語を特徴付ける素性であると考えられるが，そのような素性の普遍的位置付けを提案するには諸言語との比較対照研究が必要であり，現時点では日本語などに固有の素性として扱っている．
図[REF_fig:lcaus]の「せた」のadjcnt素性が指定する要素をword\/に制限しないと，図[REF_fig:schm](a)のcomplement-head schemaが適用され，([REF_ex:aux]b)は図[REF_fig:scaus]のようにも分析できる．
これは言語学的にしばしば論じられる補文分析であるが，この分析には次の二つの問題がある．
実装が困難な順序連接を導入しないと「奈緒美に」と「本を」の語順転換が説明できない．
「奈緒美に」と「本を」の間に付加語が挿入されるとVP[MATH]とVP[MATH]のどちらに付加されるかで曖昧性が組み合わせ的に増大してしまう．
2については，このような曖昧性が意味的な差をもたらすこともある．
例えば「健は奈緒美に大声で本を読ませた」は，「大声で読んだ」と「大声で指示した」という二つの読みがあるが，このような意味的解釈が可能かどうかは，一般には統語的な構造よりも語の意味的な共起関係や背景知識に依存する．
よって，統語解析の段階でこのような曖昧性を展開してしまうのは解析システムとして実装する上では得策ではない．
図[REF_fig:lcaus], [REF_fig:scaus]の分析にはそれぞれ利点・欠点はあるが，現在NAIST JPSGは次の二つの理由により([REF_ex:aux]b)の構造を図[REF_fig:lcaus]とするような分析を採用している．
``語順転換''や(ゼロ主語などの)``省略''が構文木の情報を反映した形で直接的に扱える．
構文木と意味素性の構造は必ずしも一致しないが，どちらの構造を採用しても，文全体の意味論としては全く同じsem素性を考えることが可能である．
つまり，句構造構築に関して，先に述べた「音韻・形態情報は構文木に，階層関係などの統語情報はsem素性にそれぞれ反映する」という一貫した立場をとっているのである．
[REF_sec:jpsg]節では，いくつかのHPSGの普遍原理に対し自然な拡張を行いつつ，NAIST JPSGの個別言語を指向したスキーマを導入した．
関連モデルとの比較によっても明らかだが，構文解析のようなモデルの実用面においては，本論文の文法はその射程と説明力において優位にあると言える．
もちろん，普遍的な体系を考慮せずに構文に特化したスキーマを仮定することによって諸構文を説明することは原理的に可能である．
しかし，言語の一般性を捉えるためにはより多くの構文が原理の相互作用によって説明されることが望ましい．
そこで[REF_sec:jl]節では，そのような分析の一例として，日本語に特徴的ないくつかの現象について論じることにする．
普遍的かつ計算機処理に適した文法記述体系の開発には対象言語の理論的な理解が欠かせないが，[REF_sec:jpsg]節では，いくつかの現象にもとづいて原理やスキーマを拡張した日本語句構造文法を導入した．
そのような枠組みに立脚することで，一般的な言語現象は諸現象に関与する頻度の高い一般的な原理によって説明されるが，特殊な言語現象もまた原理の相互作用の結果として説明されることが望ましい．
そこで[REF_sec:jl]節では，分析が進んでいる格助詞，取り立て助詞およびサ変動詞構文を取り上げ，NAIST JPSGが日本語に特有な現象をどのように扱っているかについて述べる．
また，この枠組における文法に内在した計算機構(computational system)および入力となる語彙項目(lexical item)に関する制約の記述法についても合わせて論じることにする．
日本語などの言語に特有な現象の一つは，名詞が助詞を伴う点にある．
格助詞については([REF_ex:case])にあげる四つの現象が特徴的である．
\enumsentence{
}
[REF_sec:jpsg:issue]節でその方針を述べたように，NAIST JPSGでは([REF_ex:case]b, c, d)に対して，空の助詞ガや形式名詞コトなどの語彙を辞書に仮定した解析はしない．
格助詞は名詞と動詞の両方を直接下位範疇化しているものとして分析する．
さらに，説明できなければならない現象として「([REF_ex:dcase])のように(名詞句でも動詞句でも)ガやヲ等の格助詞を二つ以上伴えない」ということも挙げられる．
\enumsentence{
}
([REF_ex:case]), ([REF_ex:dcase])のような個別言語特有の現象も，動詞・名詞・格助詞に対してそれぞれ図[REF_fig:lexicon]のような言語固有の語彙情報さえ適切に記述しておけば，原理には一切手を加えることなく説明できる．
図[REF_fig:lexicon]中の略記xp[[MATH]]は図[REF_fig:abbr](左)の素性構造である．
また，none\/およびga\/は[REF_sec:jpsg:frml]節で説明した型case\/の下位型であり，図[REF_fig:abbr](右)のような型階層を形成しているとする．
つまり，言語理論が捉えようとしている言語の普遍的性質を損うことなく，日本語の現象を説明することが可能な理論となっているのである．
NAIST JPSGがそのような仕組みを提案していることは，[REF_sec:jpsg]節の議論に加え，図[REF_fig:drop]に示す([REF_ex:case]a, b)に対する名詞句と格助詞の具体的な素性構造の記述からも明らかである．
図[REF_fig:drop]では，格助詞が明示される場合とされない場合の任意性が，名詞のcase素性を変数(すなわちnone\/やga\/の上位であるcase\/型)とすることで捉えられている．
実際，このような省略は会話文においては顕著に現れ得るので，実用的な文法はそのような現象にも対処できなければならない．
ICOT JPSGをはじめとして，従来の文法の実装ではこのような現象の扱いは例外として軽視されがちであったが，NAIST JPSGでは規範的でない文に対しても可能な限り特別視しないという方針をとっている．
([REF_ex:case]c)は図[REF_fig:drop](左)の「奈緒美」に相当する部分が「行く，足る」といった動詞となったものと考えるが，そのような素性構造も助詞のadjnt素性の指定がnone\/となっているので適切に記述することができる．
さらに，([REF_ex:case]d)のように動詞に後接する格助詞が省略されないということは，動詞のcase素性がnone\/であることで捉えられている．
また，この枠組では，格助詞を二つ以上伴うことにより排除されていた([REF_ex:dcase])のような現象は，すでに格の情報が指定されているものにさらに格の指定をするという点において排除される．
つまり，格助詞のadjcnt素性にはcase素性がnone\/である要素に隣接することが記述されているが，すでに格助詞を伴った助詞句PPのcase素性はnone\/ではないため，さらに格助詞が隣接することはできないのである．
現時点では全ての助詞の記述が済んだわけではない．
格助詞においてもそうであるが，現在のNAIST JPSGは当面の処理において必要となる助詞の機能の一部を記述したにすぎない．
格助詞以外で分析が進んでいるのは取り立て助詞などとよばれるものである．
サエ・スラなどの用例・用法は実に様々であるが，それらに共通する統語的特徴としては「それが選択(あるいは隣接)している語」の様々な情報に関して，「本来その語を選択している語」から参照することができるということが挙げられる．
\enumsentence{
}例えば，([REF_ex:sae]a)では動詞「誉める」の目的語「奈緒美を」は，ヲ格を伴うことによってそれ自身の文法機能を明示しているが，([REF_ex:sae]b)ではサエを伴うことによりヲ格を表出していない．
しかしながら，ヲ格を伴っていなくても依然「奈緒美」は「誉める」の目的語であるので，ヲ格を明示することで示していた文法機能は単に形態的に表出していないだけであることがわかる．
また，サエ自身はガ格などの代わりに用いることもできるので，動詞はサエに関係なく目的語の助詞句を下位範疇化していると考えられる．
図[REF_fig:drop](左)では格助詞ヲのhead素性の一部であるcase素性の値wo\/が，おなじくppのhead素性の一部であるcase素性に主辞素性原理によって受け継がれている．
この情報が，下位範疇化原理において，ppが動詞のsubcat素性の中のヲ格を持つ要素と単一化する際に制約として機能する．
図[REF_fig:sae](右)では，助詞サエのcase素性が変数Yになっており，pp全体としてもcase素性は変数のまま指定されない．
この状態で，下位範疇化原理に従って動詞のsubcat素性の中のヲ格を持つ要素とppが単一化すれば，Yの値がwo\/となり助詞句はヲ格句と同じ素性の指定を持つ句として解析される．
ただし，サエの記述は図[REF_fig:sae]で仮定しているほど単純ではない．
例えば，サエに動詞が前接する場合，特定の活用を要求することがコーパスからも伺えるので，サエの記述には格の指定の有無だけでなく品詞や活用も下位範疇化情報として記述しておくことが考えられる．
これに関してはさらに詳しく調査する必要がある．
もちろん，こういう原理的なアプローチだけで格助詞に関する全ての現象を説明できるわけではなく，その点に関しては[REF_sec:adn:crpsadj]節でもいくつかの事例を検討してみることにする．
ここで検討するサ変動詞構文とは，いわゆる項構造(argument structure)を持つ漢語名詞(サ変名詞，動名詞，verbal noun---VN)とサ変動詞スルを含む([REF_ex:suru])のような文のことである．
\enumsentence{
}例えば([REF_ex:suru]c)の[MATH], [MATH], [MATH]は，「伝授」という行為において，それぞれ伝授する人(initiator)，伝授される人(initiatee)，伝授される内容(initiated)を表わし，NAIST JPSGでは図[REF_fig:astr]のように記述する．
この構文は([REF_ex:suru])に示すように，VNを主辞とする名詞句と現れる項の数と種類が同じになっているという点に特徴がある．
京大コーパスversion2.0[CITE]を調べてみると，「動詞・助動詞・形容詞・形容動詞・副詞・終助詞」を含む全述語的文節の出現回数約19,000回に対して約10,000回と半分以上を占めており，日本語では頻出と考えられ，文法の被覆率を上げるためには無視できない構文である．
このサ変動詞構文の興味深い点は，いわゆる``局所性''に関するところにある．
制約が局所的な形式化で述べられるか否かは，自然言語の記述体系としての理論的関心もさることながら，実装においてはこと重要である．
([REF_ex:suru]c)を例に詳しく見てみると，VNを主辞とする名詞句では図[REF_fig:nonloc](左)に示すようにそれを主辞とした句の内部で``局所的に''意味的関係が成立している．
一方，同じVNを含むサ変動詞構文ではそのような``局所性''に従わず，図[REF_fig:nonloc](右)に示すように句の外側の要素との間で意味的関係が成立しているように見える．
このことから[CITE]などの研究では，概ね(i)項構造を持たない特殊な軽動詞(light verb---LV)という語彙項目と，(ii)VNが持つ意味的な主辞として機能をLVに転送する(transfer)といった操作，いわゆる項転送(Argument Transfer)を仮定することで，図[REF_fig:nonloc](右)における一見するところの局所性違反を説明しようとする．
これに対しNAIST JPSGでは，特殊な``操作''は導入せず，スルに対してこのような特性を反映した語彙項目を仮定するだけでサ変動詞構文の局所性に関する問題を説明する．
この場合，語彙項目は原理から導き得ない特性を述べているにすぎない．
単一化という，ここまでの諸現象の説明においても仮定してきた，NAIST JPSGでは当然の操作が，項転送を仮定するまでもなくサ変動詞構文の問題を局所的に説明する．
つまり，[CITE]のように特殊な操作を計算機構に組み込む必要はなく，ごく少数の単一化のような計算機構と，充実した語彙情報のみで個別言語の現象を説明するのである．
では，このような分析の入力となる語彙情報は，いかにして記述されるのか．
それは([REF_ex:vnomit])，([REF_ex:vnscr])のような個別言語(JPSGの場合は日本語)の言語事実の観察にもとづいて規定される．
\enumsentence{
} \enumsentence{
}もしVNがLVのsubcat素性の要素(ここでは目的語)ならば，省略や語順転換が可能だが，([REF_ex:vnomit])，([REF_ex:vnscr])はそれができないことを示している．
このことはVNとLVが``語彙的''に緊密であり，その構文木は[REF_sec:jpsg:atree]節で論じた図[REF_fig:schm](d)のpseudo-lexical-rule schemaによって生成されることを示唆する．
図[REF_fig:lvlex]にそのような特性を反映したスル(以下これをLVとよぶ)の素性構造を示す．
未確定のarg-st素性，項構造を含む範疇と単一化すべき要素がsubcat素性ではなくadjcnt素性となっていること，およびその値がword\/型に制限されているのは先の分析にもとづいている．
また，図[REF_fig:stlvc]には図[REF_fig:lvlex]の語彙記述を持つLVを入力として，一般的な計算機構によって構築された([REF_ex:suru]c)の構文木を示す．
未確定の部分
\@1
はadjcnt素性と単一化したVNが持つ項構造と構造共有(structure sharing)されている．
LVのもつadjcnt素性の要素は隣接素性原理に従って，VNによって打ち消され，VNの項は構造共有によって「VNスル」全体の項構造となる．
この項は一般的な句構造同様に下位範疇化素性原理に従って打ち消されるが，項転送相当の現象は捉えられているのである．
ところが，[CITE]などの研究にも言えることであるが，スルという語彙の記述は図[REF_fig:lvlex]に挙げたものだけでは充分でない．
([REF_ex:vnsae])のようにVNとスルの間に取り立て助詞が介在する文や，([REF_ex:sbjitv]b, c)のように主語が介在する文は，LVとはまた違った特性を持ったスルが必要であることを示している．
\enumsentence{
} \enumsentence{
} ([REF_ex:vnomit]), ([REF_ex:vnscr])の例では，VNとスルは隣接しなければならないと分析し，それに適ったスルの語彙記述を仮定した．
しかしながら，([REF_ex:vnsae]), ([REF_ex:sbjitv]b, c)は隣接していなくてもよい例と考えられる．
さらに，([REF_ex:sbjitv])は項との間で語順転換が可能なVNとそうでないものがあることを示している．
VNとスルの間に要素が介在するということは，図[REF_fig:lvlex]のようにadjnt素性でVNを指定すると説明できない．
そこで，新たに図[REF_fig:hvlex]のスル(これを重動詞，heavy verb---HVとよぶ)を導入する．
図[REF_fig:sthvc]は([REF_ex:sbjitv]b)の構文木であるが，図[REF_fig:hvlex]のHVが図[REF_fig:schm](c)の0-complement schemaで句となった場合，VNと単一化すべき要素と主語はsubcat素性の要素として顕在化するので，語順転換が可能となっている．
図[REF_fig:hvlex]においてarg-st素性の第二項のcase素性がwo\/であることに注意されたい．
これはVNが格助詞ヲを伴っている([REF_ex:double])の観察にもとづいている．
\enumsentence{
}ただし，([REF_ex:sbjitv]b, c)で「英語，秘伝」がヲ格を伴っていることを考えると，HV自体は([REF_ex:vnwo]b,c)のような文まで認可してしまう．
しかし，これらは日本語では一般的な，いわゆる二重ヲ格制約(Double-WO\/ Constraint)という別の制約によって排除されていると分析することができる．
\enumsentence{
} ([REF_ex:vnwo]b)を例にとれば，「英語」もVN「勉強」もどちらも潜在的にはヲ格を伴うことができるのであるが，そのような制約により，両方がヲ格を伴った文は排除されていると考えるのである．
また，([REF_ex:vnwo]a)が非文法的なのは，文中に一つもガ格名詞句が含まれていないなどの理由によると説明できる．
しかしながら，ガ格の生起についての制約は検討しなければならない現象が広範囲に及ぶため，具体的な制約の定式化は今後の課題である．
これまでの議論では，([REF_ex:double]a)の非文法性は捉えられない．
しかし，([REF_ex:double]a)に含まれる「沈没」のような名詞は，能格名詞(ergative nominal)とよばれるクラスを形成し，ヲ格を伴えないことが[CITE]などの研究により知られている．
\enumsentence{
}本論文は([REF_ex:ergn])のようなVNを含むサ変動詞構文については明確な分析を持たない．
それはすぐ後に述べる理由によるのであるが，もし能格名詞の型ergativeを導入して([REF_ex:vnsae]a)，([REF_ex:sbjitv]a)，([REF_ex:double]a)を説明するならば，図[REF_fig:lvlex]のLV,図[REF_fig:hvlex]のHVに加えて，さらに図[REF_fig:ergvn]のような語彙項目のスルを導入する必要があるだろう．
([REF_ex:double]a)などのスルが図[REF_fig:ergvn]のような語彙記述であるならば，その非文法性はcase素性が単一化できないことによると説明できる．
しかしながら，このような分析にも反例がある．
例えば([REF_ex:ergn]c)の「落下」は，主語が行為者と解釈できれば，([REF_ex:fall]a)のようにVNがヲ格を伴っていても我々の判断では容認できてしまう．
\enumsentence{
}この場合([REF_ex:fall])のスルはHVと考えられるが，([REF_ex:vnsae]a)と([REF_ex:sbjitv]a)のスルを同様にHVとするなど，これらの文が同じスルを含むと仮定していては文法性の差が説明できない．
([REF_ex:vnsae]a), ([REF_ex:sbjitv]a)の文法性はcase素性の単一化というよりは，むしろ主語の意味解釈の観点，つまり意味素性の制約から説明すべき問題と考えられるが，現時点ではデータの指摘にとどまっている．
[REF_sec:jl]節では格助詞，取り立て助詞およびサ変動詞構文という日本語特有の現象が，普遍的かつ計算機処理に適した文法体系において，どのように扱われるべきかを論じた．
いくつかの言語事実を取り上げ，一部の語彙項目に関してはその詳細な素性記述法についても論じてきたが，言及しなかった他の語彙に関してもここで示したような考察・分析の過程を経ることによってはじめて入力として認められる．
つまり，NAIST JPSGは原理からは導き得ない情報を語彙に記述し，単一化といった一般的な計算機構によって諸現象を説明するのである．
このことは，特殊な現象を処理するために特別な計算機構を導入する必要がなくなるということに外ならず，システムの見通しを良くし，設計を単純化するには不可欠な考え方と言える．
[REF_sec:jl]節ではNAIST JPSGで導入した図[REF_fig:schm]のスキーマの中で，おもに下位範疇化に関するものである(a) complement-head schema, (c) 0-complement schema, (d) pseudo-lexical-rule schemaについて述べた．
[REF_sec:adn]節では連体修飾に関する現象を中心に，(b) adjunct-head schemaについて論じることにする．
VNは([REF_ex:fasp]a)のようにLVとともに用られる以外にも，([REF_ex:fasp]b)のように相接辞(Aspecutual Morpheme---AM)とも共起できる．
実際，([REF_ex:fasp]b)のような連体修飾の用例はコーパスにおいてもかなりの割合を占めている．
京大コーパスversion 2.0を調べてみても「名詞性接尾辞」で終わる文節の頻度は約1,000回であり，「サ変名詞＋サ変動詞」という文節の約10,000回に比べると十分の一程度となっている．
\enumsentence{
}「中」などのAMは，([REF_ex:asp])に示すように様々な項構造を持つVNと隣接できることから，それ自体が項構造を持っているとは考え難い．
\enumsentence{
} AMの項構造もVNから伝わったものと考えるならば，AMを主辞として形成される句構造も「サセル，スル」を主辞とした場合と共通の構造を内包し，その生成には同様に図[REF_fig:schm](d)のpseudo-lexical-rule schemaの適用が考えられるだろう．
([REF_ex:asp]c)の「師匠が弟子に秘伝を伝授中」は，使役構文・サ変動詞構文と同じく，主辞はそれぞれ異なるものの，複合AM句は三項述語のように振舞っている．
特に，その三つの名詞句の表出には「ガ，ニ，ヲ」の格助詞が伴われていることに注目したい．
HPSG/NAIST JPSGにおける格は[REF_sec:jl:case]節で論じたように動詞の下位範疇化素性の一部として記述される．
その仮定に従うならば，VN「伝授」には図[REF_fig:conv]のような語彙記述がなされていることになる．
格に関する情報をそのように記述してしまうと，([REF_ex:asp]c)の「師匠の弟子への秘伝の伝授」のような連体修飾における修飾要素のノ格の説明が捉えられなくなってしまうと思われるかもしれない．
このような問題に対し，NAIST JPSGでは名詞句内において修飾語として機能しているノ格名詞句については付加語と分析している．
図[REF_fig:scaa]に([REF_ex:asp]c)のノ格名詞句を伴った場合の構文木を示す．
この場合，主辞「伝授」には項顕在化原理が適用されず，そのためarg-st素性はsubcat素性に変換されない．
よって，subcat素性の打ち消しも起こらず「伝授」のarg-st素性は投射内で母(mother)へ受け継がれてゆく．
一般に付加語と主辞の関係は統語的な情報だけでは決められないので，NAIST JPSGではこれらの間に付加語と主辞の関係があるということまでは規定するが，どのような関係であるかまでは規定しない．
また，通常ノ格名詞句の語順転換はできないと言われるが，上述のような分析をとれば，([REF_ex:ssca])の文法性も意味論の観点から説明できる．
\enumsentence{
}もし付加語間の語順，つまり階層関係がなんらかの素性に反映されるならば，そのような素性と受け継がれたarg-st素性を比較することで，どの名詞がどの項と対応すべきかが計算できる．
また，その場合([REF_ex:ssca])では，そのような対応が述語の意味の点から整合的でないことも予測できる．
つまり，「伝授」という語が意味する関係initiationにおいては，([REF_ex:ssca]a)のように弟子がinitiatorで師匠がinitiateeであったり，([REF_ex:ssca]b)のように弟子がinitiatorで秘伝がinitiateeであることはないと考えるのである．
付加語と主辞の関係を統語的制約として文法においては規定しないという立場は，計算機構の記述を簡潔にし，解析システム全体をモジュラーな構造にできるという利点がある半面，曖昧性を抑制する手段を制限してしまうという欠点もある．
従ってNAIST JPSGでは，ある句が付加語とも必須項とも分析できるならば，積極的に必須項として分析している．
[REF_sec:adn:amb]節では付加語が関与する解析において起こる問題と，その解決方法について述べる．
動詞に対する必須項となっていないような修飾句も，連体修飾と同様に図[REF_fig:schm](b)のadjunct-head schemaによって扱われ，図[REF_fig:modifier]のように分析される．
これらは次のような特徴を持つ．
被修飾句側ではどのような修飾句が認可されるかを制限する手立てがない．
修飾句側がどのような句を修飾するかは(比較的)固定されている．
2を定式化したものがHPSGでも導入されている被修飾素性(modified feature---mod素性)である．
これによれば「赤い花」のような形容詞による名詞の修飾や，「さんまを焼く匂い」のような連体修飾についても図[REF_fig:modifier]と同様の分析ができる．
なお，(a)のcomplement-head schemaとadjunct-head schemaの間にはsem素性に関して重要な違いがある．
すなわち，母のsem素性は，complement-head schemaにおいては主辞のsem素性と同一となり，adjunct-head schemaにおいては付加語のsem素性と同一となる．
このようにmod素性には「どのような句を修飾できるか」が記述されるが，NAIST JPSGでは助詞を主辞にしているので，この情報は助詞が元来持っているmod素性に記述しなければならない．
格助詞ガのmod素性は，([REF_ex:csadn])にあげる三通りの場合があり得る．
\enumsentence{
}
ところが，([REF_ex:csadn])に従うならば，「健が本を読む」のような単純な文でさえ，概ね[[MATH]健が[[MATH]本を読む]]の構造に対応した([REF_ex:csadn]a, b)の分析だけでなく，[[MATH] [[MATH]健が本]を読む]に対応した([REF_ex:csadn]c)の分析も可能となってしまう．
この問題に対してコーパスを予備的に調査した結果，NAIST JPSGでは現在のところ次のような立場をとるのが妥当であると考えている．
格助詞ガ・ヲ・ニ・トの四つについては([REF_ex:csadn]c)のような語彙は仮定しない．
サ変名詞以外にも項構造をもつような名詞のクラスをいくつか仮定する．
ニ・ノ・トについては繋辞(copula)のように機能する述語的な語彙も用意する．
上記を仮定し，([REF_ex:csadn]c)に対しては具体的に図[REF_fig:copula]のような構文木を与えている．
このような例について調査した結果は，[REF_sec:adn:crpsadj]節でさらに検討する．
また，以下では([REF_ex:csadn]c)における修飾先の「名詞句」をより厳密に「サ変名詞・動詞・助動詞・形容詞・形容動詞・判定詞・終助詞・副詞を全く含まない文節」すなわち「述語的でない文節」と解釈して分析する．
まず，格助詞句が「述語的でない文節」に係る場合の頻度を調べるために，京大コーパスversion 2.0中の全ての係り受けの中から次の二つの条件を満たすものを抽出した．
係り側の文節中，記号類以外で最も右の形態素が格助詞「ガ，ヲ，ニ，ト」である．
「通常の」係り関係である．
このような係り受けは表[REF_tbl:all]に示すように四つの格助詞に対してのべ約51,000回出現する．
次に，受け側の文節の品詞を細分類まで区別してまとめ，パターンの数を数えた．
例えば，
の二つはいずれも「ガ格が[動詞・形式名詞・副助詞・読点]という文節に係る」というパターンにまとめられる．
この結果，四つの格助詞の受け側の文節は約3,600パターンに分類できた．
この中から「述語的でない文節」だけを抽出し，約260パターンを得た．
文の数にすると約1,000文である．
本来はこれら全ての文を確認すべきであるが，ここでは各パターンについて最初の一文だけを詳細に分類した．
これをまとめたのが表[REF_tbl:detail]である．
すなわち，考慮したパターン258(もとは263)のうち約1/3がコーパスの誤りであり，正しくタグ付けされていれば「述語的な文節」に係ると分類されるはずのものであった．
残りの200パターン弱のうち半分以上は，いわゆる体言止めや動詞の省略もしくは並立関係の一方に係っているものであった．
例えば，「シンクタンクの多くが一％台，官公庁が一○％台であった．
」のような場合である．
文末の「であった」まで省略される場合もあるので，動詞の省略と並立は厳密には区別していない．
この結果から，確認したものだけでも約60例は(少なくとも表層上は)格助詞句が「述語的でない文節」に係っていたことがわかる．
なお，表[REF_tbl:all]の「述語的でない文節」に対して表[REF_tbl:detail]の「文数」がガ格で2パターン，ニ格で3パターン少ないのは，同じ文が二つ以上のパターンを含んでいたことによる．
以下，各々の助詞に関する特徴的な係り方のパターンについて論じる．
ガ格名詞では，時間・期間を表わす名詞に係る傾向が見られる．
\enumsentence{
}このような係り受け関係を許す例には「Aガ〜時間・期間(中に)」などがあり，その主辞の名詞「時間・期間」は一定の意味クラスを形成すると考えられる．
さらに，サ変動詞構文のLVと同じように，ニが前接する名詞から項構造を受け継ぐと考えると，図[REF_fig:interval]のような分析が可能となる．
また，係り先としてノが含まれる例も多かった．
\enumsentence{
} ([REF_ex:no:cop]b)はヲ格が，([REF_ex:no:cop]c)はト格がノ格名詞句に係っているが，このように係り側の格の間には，共通に見られるような修飾関係がいくつか存在している．
ガ格で見られた「ニ，ノ」の他に「スル，シテ」などが省略されたとみなせる例がヲ格には存在する．
前接する名詞もやはり「主体，先頭，中心」などを表わす名詞として一定の意味クラスを形成すると考えられ，これらについても統語的には図[REF_fig:interval]に示した分析と同様に扱うことができる．
\enumsentence{
}その他に，「割合」を表わすパターンがある．
\enumsentence{
}このような用法に関しては，次のニ格にも見られる．
ヲ格の例([REF_ex:wo:ratio])のように，ニ格にも「割合」を表わすパターンが多い．
\enumsentence{
} \enumsentence{
}ただし，([REF_ex:ni:gap])のような例は，「南に\dots離れた」のように述部の方に係ると考え，「南に三キロ，東に五キロ離れた」のように現れた場合は，「並立」として別の扱いをする．
ト格で着目すべき頻出の例は，本来の係り先の文節が省略されているために，さらに先の文節に係るような変更が生じているものである．
\enumsentence{
} ([REF_ex:to]a)は，本来「英語詞トいった初めての経験だった」であり，その解釈においては「英語詞ト」は「いった」に係る．
この「いった」が省略されたことにより，(コーパスでは誤って「初めての」に係るとされているが)「いった」の係り先である「経験だった」に係ると考えられる．
([REF_ex:to]b)も，本来「一・七五％トいった低水準に」のような表現であり，「一・七五％ト」は「いった」が省略されたことにより，「いった」の係り先である「低水準に」に係るとされている．
ただし，([REF_ex:to]b)は意味的には「一・七五％ト(いった)」は「低水準にある」という句に係ると考えた方が自然であり，「一・七五％ト」の係り先を「あり」という述語的な文節としている．
以上，ガ・ヲ・ニ・トの四つの格助詞が「述語的でない文節」を修飾する場合に関して，コーパスの調査結果を説明した．
多くの用例は，(場合によってはニやノを述語を形成する繋辞とみることによって)実際には述語的な文節を修飾しているとみなせる．
すなわち，([REF_ex:csadn]c)のようにmod素性がnoun\/であるような助詞を仮定する必要は今のところないといえる．
また，図[REF_fig:interval]中の，繋辞のように機能する語彙項目のadjcnt素性は前接するNPを選択するので，ニやノを繋辞とそうでないものに分けても曖昧性が生じることはない．
すなわち，([REF_ex:csadn]c)の解析を排除し図[REF_fig:interval]の分析をとれば，曖昧性の数を減少させることができる．
一方，([REF_ex:csadn]a,b)のような項か付加語かの曖昧性は依然として残るが，これについては項の組み合わせに対する優先度を統計的に求め[CITE]，統計的係り受け情報にもとづいた優先度に従って漸進的に解析を進めるアルゴリズム[CITE]を用いることで解決できると考えている．
文法理論は，言語に関する最も体系的な知見として，人間の言語活動に対して見通しのよい説明を提供している．
本研究が立脚する主辞駆動句構造文法(Head-driven Phrase Structure Grammar---HPSG)[CITE]は，言語現象を情報という観点から形式的に捉えようとした文法理論である．
HPSGは，統語，意味，あるいは今日亨受できる豊かなデータの蓄積をもとにした音韻・形態情報などの系統的な関係を記述することができ，さらにはそれらの統合的な情報も単一化によって得ることを可能にしている．
また，開発の経緯において情報科学との交流が密であったため，構文解析などの言語処理の基礎技術を考える基本的な枠組みを提供するという目的においても導入に適した理論である．
以下に論じる文法システムは，文法理論の導入によるこのような利点が言語処理に反映されるように設計を試みたものである．
HPSGの体系[CITE]を解析システムとして実装する場合，特に考慮を要するのは次の三点である．
語順に関する原理・制約
音形を持たない(空の)語彙を仮定した``省略''(や``痕跡'')の説明
(無効な)構文木の生成・曖昧性の抑制
1は線形順序制約(Linear Precedence Constraint)によって規定され，直接支配スキーマ(Immediate Dominance Schema---IDスキーマ)は構成素が左右どちらの枝にあるかという区別はしない．
この制約は構成素間の局所的な順序のみを規定し，制約に違反しない任意の語順を文法的とするが，このような理論的枠組を実際の解析に反映させるためには，予め線形順序制約とIDスキーマから全ての句構造規則を派生させるといった工夫が別途必要となる．
2は下位範疇化(subcategorization)に関する素性の打ち消し(cancellation)を問題にする．
下位範疇化された要素が表層に現れていない場合，音形を持たない空の語彙を仮定することで素性は打ち消される．
しかしながら，日本語では文中のほとんどの要素が省略可能であるため，省略の分析を実装するには，実際には起きていない省略を検査してしまう冗長な解析を抑制する方法も組み込まなければならない．
3はシステムの処理対象と言語理論の説明対象の間の調整に関する問題である．
原理・スキーマなどの制約は，可能であれば解析のあらゆる段階でその適用が全て検査されるが，その数が多いほど評価を試みる(無効な)構文木が組み合わせ的に増大してしまう．
処理系への負担を減らすには，システムの持つ文法を調整し適用可能性を抑える必要があるが，それには言語現象の理論的な一般化を損わないような配慮が必要である．
これらは，言語理論が推し進めている抽象的な原理の体系をそのまま実装する上で問題となる．
しかしながら，我々の文法システムでは[REF_sec:intr]節で述べたような言語現象に対する理論の見通しの良さを活かすために，HPSGの形式化に対し独自の修正を加えることでその実装を可能にした．
以下では，上記の問題点を解消するために我々が行ったHPSGの精緻化・拡張について述べる．
まず，[REF_sec:jpsg:frml]節では日本語文法の形式化に関する全体的見通しを概観し，[REF_sec:jpsg:worder]節では``語順''の扱いを，次いで[REF_sec:jpsg:drop]節では``省略''の扱いについて述べる．
最後に，[REF_sec:jpsg:atree]節で構文木の生成・曖昧性の抑制に関して，頻出構文である複合述語に問題を限定して論じることにする．
本論文で提案する文法は当面の記述対象を日本語に限っているため，JPSGとよんでいる．
HPSGにもとづいた日本語文法としては，既にICOT JPSGが存在している．
ここで提案する文法も言語に関する基本的な洞察はICOTと同じである．
しかし，文法の理論的一貫性を保持しつつ実用的なシステムを開発することに，より関心を向けているため，理論の射程や実装面の特徴においては大きく異なっている．
ゆえに，ICOT JPSGとは区別して，我々が提案する文法をNAIST JPSGとよぶことにした．
HPSGにもとづくJPSGの理論的構成は，普遍原理([MATH])，日本語固有の原理([MATH])，スキーマ([MATH])，語彙([MATH])，の関係として図[REF_fig:jpn]のように形式化することができる．
このように連言的な原理と選言的なスキーマを仮定し，言語の性質を理論的に組み立てることによって，言語の普遍性と日本語の特徴の記述を両立させている．
言語的対象物(linguistic objects)は，実際の言語状況において，図[REF_fig:fstr]のような属性(attribute)と値(value)が対になった素性構造で表わされる音韻・形態情報，統語情報，そして意味情報が互いに制約し合って配置された部分情報構造(partial information structures)に則して分析される．
synsem_struc\/は語または句の持つ情報を記述するための型(type)の総称であるが，このように部分情報構造の型の名前をイタリック体で示す．
また，list([MATH])\/は[MATH]という型を持つ素性のリストを表す．
synsem_struc\/はphrase, word,\dots\/といった下位型(subtype)を持つ．
主辞素性(head feature---head素性)の値head\/は品詞，格素性(case feature---case素性)の値case\/は格に関する情報をそれぞれ表すが，各素性の詳細は以下の節で必要に応じて述べる．
上記のように，素性構造に対する基本的な構想，またこのような言語情報の統合が素性構造に対する単一化によってなされる点はHPSGの見解に従うものであるが，NAIST JPSGはさらに日本語の解析システムとして，日本語を指向した新しい型体系を導入している．
HPSGなどの言語理論と構文解析・文生成といった自然言語処理技術が最も密接に関連するのは，句構造の構築に関するスキーマであろう．
HPSGは文の構築に関する個別の句構造規則を仮定していない．
伝統的な統語論で仮定されていた句構造規則は，下位範疇化に関する情報と直接支配原理(Immediate Dominance Principle)に関する六つのスキーマ(1. Head-Subject, 2. Head-Complement, 3. Head-Subject-Complement, 4. Head-Marker, 5. Head-Adjunct, 6. Head-Filler)といった普遍的制約に置き換えられている．
NAIST JPSGも基本的にはこの考え方に従うものであるが，スキーマに関しては独自に図[REF_fig:schm]の四つを設定している．
(a)のcomplement-head schemaは1--3を包括し，(b)のadjunct-head schemaは5に相当する．
(c)の0-complement schemaおよび(d)のpseudo-lexical-rule schemaは新たに導入したものであるが，これらのスキーマの必然性は[REF_sec:jpsg:issue]節で提起した問題と関連しており，順次説明していくことにする．
6に関しては空所という言語学的な分析をどのように実装に反映するかを検討中ゆえに，現在のところ扱いが明確となっていない．
4に相当するスキーマがないのは，NAIST JPSGでは日本語の助詞(および補文標識)をマーカと分析しないためである．
助詞については[REF_sec:jl]節で詳しく論じる．
図[REF_fig:schm]のスキーマは，HPSGで仮定されているものとは一部異なっているものの，その選択が図[REF_fig:jpn]に示すように選言的であること，またcomplement-head schemaは下位範疇化，adjunct-head schemaは付加語に関する制約を担うスキーマとして，伝統的な句構造規則に代わり，構成素の階層関係に制約を課し，図[REF_fig:btree]のような構文木の生成を保証している点では変わりはない．
図[REF_fig:stree]に図[REF_fig:btree]の語順転換(かき混ぜ，scrambling)の一例を示す．
図[REF_fig:btree]と比較するとわかるように，どちらも下位範疇化素性(subcategorization feature---subcat素性)の打ち消しには違いがない．
HPSGでは，言語の階層性を規定するこのような句構造表示の制約によって，英語のように語順の制限が厳しい言語と日本語のように語順の制限がゆるい言語を区別していた．
NAIST JPSGの実装では次の2点により語順転換を説明する．
subcat素性の打ち消しに順序を設けないことにより，任意の順序での素性の打ち消しを可能とする．
構文木の構造は構成素の階層関係を直接的には反映しておらず，そのような情報はsem素性の埋め込みで記述する．
また，complement-head schema，adjunct-head schemaの意図するところは，日本語の基本的な文の統語構造を，語順の制約がゆるい非階層言語のような平坦な構文木として分析するのでもなく，また階層言語のような主語・目的語の非対称性も仮定しない，ということである．
1に関してはICOT JPSGでもsubcat素性の打ち消しに順序を設けないというアプローチがとられている．
しかし，その定式化は素性の値をリストではなく，集合とする別の方法によって実装されていた．
NAIST JPSGのsubcat素性は，arg-st素性から[CITE]で提案されている項顕在化原理(Argument Realization Principle)によって変換されたリストであり，統語情報と意味情報の関係に対する普遍的制約によって計算されている．
2に関しては[CITE]でも埋め込み分析が提案されているが，我々とは分析の対象とする言語事実やその説明の枠組，理論的帰結が異なっている．
また，近年の言語学では統語構造と音韻・形態構造の独立性が考えられており，例えば[CITE]では，順序連接(sequence union)という制約を用いることで，それらの関係を適切に捉えるような機構を提案している．
しかし，順序連接は解析システムとして実装するのが困難であり，また音韻・形態情報を反映して語順を規定する構文木にもとづく解析の方が，係り受け情報を利用することで不要な可能性の数を制限しやすいため，このような分析を採用している．
日本語では，いわゆるゼロ代名詞とよばれる，([REF_ex:omit])に示すような項の省略が頻繁に起こる．
\enumsentence{　\tabcolsep=0pt
}すなわち，([REF_ex:omit]a)に対し，動詞が要求する項が一部表出していないような([REF_ex:omit]b, c)や，極端な場合，([REF_ex:omit]d)のように項が全く表出していなくても，その動詞は句または文と成り得る．
一方，英語ではこのようなことはほとんど起こらず，語と句は厳格に区別される．
英語はさらに語順が固定的であることから，[CITE]では(主語以外の)全ての項を同時に打ち消すスキーマが標準的な機構となっている．
NAIST JPSGでは次の二点を考慮し，図[REF_fig:schm](a)のcomplement-head schemaの他に(c)の0-complement schemaを導入した．
日本語においては部分的に飽和した動詞句がごく自然に現れる．
仮に全ての項が表出しても，それらの間に任意の付加語が入り得る．
0-complement schemaに続けてcomplement-head schemaを再帰的に適用してゆけば，任意の個数の項を打ち消すことができる．
図[REF_fig:go]はこのスキーマによって解析を行なった([REF_ex:omit]d)の構文木である．
「食べた」のhead素性が主辞素性原理(Head Feature Principle)によってsのhead素性に受け継がれている．
また，「食べた」の意味的な項を表わすarg-st素性は項顕在化原理によってsのsubcat素性に変換されている．
日本語では([REF_ex:aux])のように動詞に対する助動詞の連接が生産的に行われている．
\enumsentence{
}図[REF_fig:schm](c)の0-complement schemaとともに新たに導入した(d)のpseudo-lexical-rule schemaは，このようないわゆる複合述語形成を扱うスキーマである．
例えば([REF_ex:aux]b)における複合動詞「読ませた」は図[REF_fig:lcaus]のように分析される．
pseudo-lexical-rule schemaを導入することの利点は，助動詞「せた」が左にくる姉妹をword\/に指定することで，解析における複合動詞句の曖昧性を抑制できる点にある．
その指定で用いられる隣接素性(adjacent feature---adjcnt素性)はICOT JPSGで採用されていた素性であり，下位範疇化されている要素の中でも特に隣接したものに関する制約を扱う．
図[REF_fig:val](左)に隣接素性原理(Adjacent Feature Principle)を示す．
adjcnt素性はsubcat素性を保存したまま語彙的に緊密な隣接要素を指定する．
助動詞や[REF_sec:jl]節で論じる助詞のように，日本語においては他の要素を下位範疇化するだけでなく，それらと隣接していることを要求する語が存在するため，制約を局所的に記述するにはこのような素性の導入が必要である．
adjcnt素性は言語類型的に膠着語(agglutinative language)とよばれる言語を特徴付ける素性であると考えられるが，そのような素性の普遍的位置付けを提案するには諸言語との比較対照研究が必要であり，現時点では日本語などに固有の素性として扱っている．
図[REF_fig:lcaus]の「せた」のadjcnt素性が指定する要素をword\/に制限しないと，図[REF_fig:schm](a)のcomplement-head schemaが適用され，([REF_ex:aux]b)は図[REF_fig:scaus]のようにも分析できる．
これは言語学的にしばしば論じられる補文分析であるが，この分析には次の二つの問題がある．
実装が困難な順序連接を導入しないと「奈緒美に」と「本を」の語順転換が説明できない．
「奈緒美に」と「本を」の間に付加語が挿入されるとVP[MATH]とVP[MATH]のどちらに付加されるかで曖昧性が組み合わせ的に増大してしまう．
2については，このような曖昧性が意味的な差をもたらすこともある．
例えば「健は奈緒美に大声で本を読ませた」は，「大声で読んだ」と「大声で指示した」という二つの読みがあるが，このような意味的解釈が可能かどうかは，一般には統語的な構造よりも語の意味的な共起関係や背景知識に依存する．
よって，統語解析の段階でこのような曖昧性を展開してしまうのは解析システムとして実装する上では得策ではない．
図[REF_fig:lcaus], [REF_fig:scaus]の分析にはそれぞれ利点・欠点はあるが，現在NAIST JPSGは次の二つの理由により([REF_ex:aux]b)の構造を図[REF_fig:lcaus]とするような分析を採用している．
``語順転換''や(ゼロ主語などの)``省略''が構文木の情報を反映した形で直接的に扱える．
構文木と意味素性の構造は必ずしも一致しないが，どちらの構造を採用しても，文全体の意味論としては全く同じsem素性を考えることが可能である．
つまり，句構造構築に関して，先に述べた「音韻・形態情報は構文木に，階層関係などの統語情報はsem素性にそれぞれ反映する」という一貫した立場をとっているのである．
[REF_sec:jpsg]節では，いくつかのHPSGの普遍原理に対し自然な拡張を行いつつ，NAIST JPSGの個別言語を指向したスキーマを導入した．
関連モデルとの比較によっても明らかだが，構文解析のようなモデルの実用面においては，本論文の文法はその射程と説明力において優位にあると言える．
もちろん，普遍的な体系を考慮せずに構文に特化したスキーマを仮定することによって諸構文を説明することは原理的に可能である．
しかし，言語の一般性を捉えるためにはより多くの構文が原理の相互作用によって説明されることが望ましい．
そこで[REF_sec:jl]節では，そのような分析の一例として，日本語に特徴的ないくつかの現象について論じることにする．
普遍的かつ計算機処理に適した文法記述体系の開発には対象言語の理論的な理解が欠かせないが，[REF_sec:jpsg]節では，いくつかの現象にもとづいて原理やスキーマを拡張した日本語句構造文法を導入した．
そのような枠組みに立脚することで，一般的な言語現象は諸現象に関与する頻度の高い一般的な原理によって説明されるが，特殊な言語現象もまた原理の相互作用の結果として説明されることが望ましい．
そこで[REF_sec:jl]節では，分析が進んでいる格助詞，取り立て助詞およびサ変動詞構文を取り上げ，NAIST JPSGが日本語に特有な現象をどのように扱っているかについて述べる．
また，この枠組における文法に内在した計算機構(computational system)および入力となる語彙項目(lexical item)に関する制約の記述法についても合わせて論じることにする．
日本語などの言語に特有な現象の一つは，名詞が助詞を伴う点にある．
格助詞については([REF_ex:case])にあげる四つの現象が特徴的である．
\enumsentence{
}
[REF_sec:jpsg:issue]節でその方針を述べたように，NAIST JPSGでは([REF_ex:case]b, c, d)に対して，空の助詞ガや形式名詞コトなどの語彙を辞書に仮定した解析はしない．
格助詞は名詞と動詞の両方を直接下位範疇化しているものとして分析する．
さらに，説明できなければならない現象として「([REF_ex:dcase])のように(名詞句でも動詞句でも)ガやヲ等の格助詞を二つ以上伴えない」ということも挙げられる．
\enumsentence{
}
([REF_ex:case]), ([REF_ex:dcase])のような個別言語特有の現象も，動詞・名詞・格助詞に対してそれぞれ図[REF_fig:lexicon]のような言語固有の語彙情報さえ適切に記述しておけば，原理には一切手を加えることなく説明できる．
図[REF_fig:lexicon]中の略記xp[[MATH]]は図[REF_fig:abbr](左)の素性構造である．
また，none\/およびga\/は[REF_sec:jpsg:frml]節で説明した型case\/の下位型であり，図[REF_fig:abbr](右)のような型階層を形成しているとする．
つまり，言語理論が捉えようとしている言語の普遍的性質を損うことなく，日本語の現象を説明することが可能な理論となっているのである．
NAIST JPSGがそのような仕組みを提案していることは，[REF_sec:jpsg]節の議論に加え，図[REF_fig:drop]に示す([REF_ex:case]a, b)に対する名詞句と格助詞の具体的な素性構造の記述からも明らかである．
図[REF_fig:drop]では，格助詞が明示される場合とされない場合の任意性が，名詞のcase素性を変数(すなわちnone\/やga\/の上位であるcase\/型)とすることで捉えられている．
実際，このような省略は会話文においては顕著に現れ得るので，実用的な文法はそのような現象にも対処できなければならない．
ICOT JPSGをはじめとして，従来の文法の実装ではこのような現象の扱いは例外として軽視されがちであったが，NAIST JPSGでは規範的でない文に対しても可能な限り特別視しないという方針をとっている．
([REF_ex:case]c)は図[REF_fig:drop](左)の「奈緒美」に相当する部分が「行く，足る」といった動詞となったものと考えるが，そのような素性構造も助詞のadjnt素性の指定がnone\/となっているので適切に記述することができる．
さらに，([REF_ex:case]d)のように動詞に後接する格助詞が省略されないということは，動詞のcase素性がnone\/であることで捉えられている．
また，この枠組では，格助詞を二つ以上伴うことにより排除されていた([REF_ex:dcase])のような現象は，すでに格の情報が指定されているものにさらに格の指定をするという点において排除される．
つまり，格助詞のadjcnt素性にはcase素性がnone\/である要素に隣接することが記述されているが，すでに格助詞を伴った助詞句PPのcase素性はnone\/ではないため，さらに格助詞が隣接することはできないのである．
現時点では全ての助詞の記述が済んだわけではない．
格助詞においてもそうであるが，現在のNAIST JPSGは当面の処理において必要となる助詞の機能の一部を記述したにすぎない．
格助詞以外で分析が進んでいるのは取り立て助詞などとよばれるものである．
サエ・スラなどの用例・用法は実に様々であるが，それらに共通する統語的特徴としては「それが選択(あるいは隣接)している語」の様々な情報に関して，「本来その語を選択している語」から参照することができるということが挙げられる．
\enumsentence{
}例えば，([REF_ex:sae]a)では動詞「誉める」の目的語「奈緒美を」は，ヲ格を伴うことによってそれ自身の文法機能を明示しているが，([REF_ex:sae]b)ではサエを伴うことによりヲ格を表出していない．
しかしながら，ヲ格を伴っていなくても依然「奈緒美」は「誉める」の目的語であるので，ヲ格を明示することで示していた文法機能は単に形態的に表出していないだけであることがわかる．
また，サエ自身はガ格などの代わりに用いることもできるので，動詞はサエに関係なく目的語の助詞句を下位範疇化していると考えられる．
図[REF_fig:drop](左)では格助詞ヲのhead素性の一部であるcase素性の値wo\/が，おなじくppのhead素性の一部であるcase素性に主辞素性原理によって受け継がれている．
この情報が，下位範疇化原理において，ppが動詞のsubcat素性の中のヲ格を持つ要素と単一化する際に制約として機能する．
図[REF_fig:sae](右)では，助詞サエのcase素性が変数Yになっており，pp全体としてもcase素性は変数のまま指定されない．
この状態で，下位範疇化原理に従って動詞のsubcat素性の中のヲ格を持つ要素とppが単一化すれば，Yの値がwo\/となり助詞句はヲ格句と同じ素性の指定を持つ句として解析される．
ただし，サエの記述は図[REF_fig:sae]で仮定しているほど単純ではない．
例えば，サエに動詞が前接する場合，特定の活用を要求することがコーパスからも伺えるので，サエの記述には格の指定の有無だけでなく品詞や活用も下位範疇化情報として記述しておくことが考えられる．
これに関してはさらに詳しく調査する必要がある．
もちろん，こういう原理的なアプローチだけで格助詞に関する全ての現象を説明できるわけではなく，その点に関しては[REF_sec:adn:crpsadj]節でもいくつかの事例を検討してみることにする．
ここで検討するサ変動詞構文とは，いわゆる項構造(argument structure)を持つ漢語名詞(サ変名詞，動名詞，verbal noun---VN)とサ変動詞スルを含む([REF_ex:suru])のような文のことである．
\enumsentence{
}例えば([REF_ex:suru]c)の[MATH], [MATH], [MATH]は，「伝授」という行為において，それぞれ伝授する人(initiator)，伝授される人(initiatee)，伝授される内容(initiated)を表わし，NAIST JPSGでは図[REF_fig:astr]のように記述する．
この構文は([REF_ex:suru])に示すように，VNを主辞とする名詞句と現れる項の数と種類が同じになっているという点に特徴がある．
京大コーパスversion2.0[CITE]を調べてみると，「動詞・助動詞・形容詞・形容動詞・副詞・終助詞」を含む全述語的文節の出現回数約19,000回に対して約10,000回と半分以上を占めており，日本語では頻出と考えられ，文法の被覆率を上げるためには無視できない構文である．
このサ変動詞構文の興味深い点は，いわゆる``局所性''に関するところにある．
制約が局所的な形式化で述べられるか否かは，自然言語の記述体系としての理論的関心もさることながら，実装においてはこと重要である．
([REF_ex:suru]c)を例に詳しく見てみると，VNを主辞とする名詞句では図[REF_fig:nonloc](左)に示すようにそれを主辞とした句の内部で``局所的に''意味的関係が成立している．
一方，同じVNを含むサ変動詞構文ではそのような``局所性''に従わず，図[REF_fig:nonloc](右)に示すように句の外側の要素との間で意味的関係が成立しているように見える．
このことから[CITE]などの研究では，概ね(i)項構造を持たない特殊な軽動詞(light verb---LV)という語彙項目と，(ii)VNが持つ意味的な主辞として機能をLVに転送する(transfer)といった操作，いわゆる項転送(Argument Transfer)を仮定することで，図[REF_fig:nonloc](右)における一見するところの局所性違反を説明しようとする．
これに対しNAIST JPSGでは，特殊な``操作''は導入せず，スルに対してこのような特性を反映した語彙項目を仮定するだけでサ変動詞構文の局所性に関する問題を説明する．
この場合，語彙項目は原理から導き得ない特性を述べているにすぎない．
単一化という，ここまでの諸現象の説明においても仮定してきた，NAIST JPSGでは当然の操作が，項転送を仮定するまでもなくサ変動詞構文の問題を局所的に説明する．
つまり，[CITE]のように特殊な操作を計算機構に組み込む必要はなく，ごく少数の単一化のような計算機構と，充実した語彙情報のみで個別言語の現象を説明するのである．
では，このような分析の入力となる語彙情報は，いかにして記述されるのか．
それは([REF_ex:vnomit])，([REF_ex:vnscr])のような個別言語(JPSGの場合は日本語)の言語事実の観察にもとづいて規定される．
\enumsentence{
} \enumsentence{
}もしVNがLVのsubcat素性の要素(ここでは目的語)ならば，省略や語順転換が可能だが，([REF_ex:vnomit])，([REF_ex:vnscr])はそれができないことを示している．
このことはVNとLVが``語彙的''に緊密であり，その構文木は[REF_sec:jpsg:atree]節で論じた図[REF_fig:schm](d)のpseudo-lexical-rule schemaによって生成されることを示唆する．
図[REF_fig:lvlex]にそのような特性を反映したスル(以下これをLVとよぶ)の素性構造を示す．
未確定のarg-st素性，項構造を含む範疇と単一化すべき要素がsubcat素性ではなくadjcnt素性となっていること，およびその値がword\/型に制限されているのは先の分析にもとづいている．
また，図[REF_fig:stlvc]には図[REF_fig:lvlex]の語彙記述を持つLVを入力として，一般的な計算機構によって構築された([REF_ex:suru]c)の構文木を示す．
未確定の部分
\@1
はadjcnt素性と単一化したVNが持つ項構造と構造共有(structure sharing)されている．
LVのもつadjcnt素性の要素は隣接素性原理に従って，VNによって打ち消され，VNの項は構造共有によって「VNスル」全体の項構造となる．
この項は一般的な句構造同様に下位範疇化素性原理に従って打ち消されるが，項転送相当の現象は捉えられているのである．
ところが，[CITE]などの研究にも言えることであるが，スルという語彙の記述は図[REF_fig:lvlex]に挙げたものだけでは充分でない．
([REF_ex:vnsae])のようにVNとスルの間に取り立て助詞が介在する文や，([REF_ex:sbjitv]b, c)のように主語が介在する文は，LVとはまた違った特性を持ったスルが必要であることを示している．
\enumsentence{
} \enumsentence{
} ([REF_ex:vnomit]), ([REF_ex:vnscr])の例では，VNとスルは隣接しなければならないと分析し，それに適ったスルの語彙記述を仮定した．
しかしながら，([REF_ex:vnsae]), ([REF_ex:sbjitv]b, c)は隣接していなくてもよい例と考えられる．
さらに，([REF_ex:sbjitv])は項との間で語順転換が可能なVNとそうでないものがあることを示している．
VNとスルの間に要素が介在するということは，図[REF_fig:lvlex]のようにadjnt素性でVNを指定すると説明できない．
そこで，新たに図[REF_fig:hvlex]のスル(これを重動詞，heavy verb---HVとよぶ)を導入する．
図[REF_fig:sthvc]は([REF_ex:sbjitv]b)の構文木であるが，図[REF_fig:hvlex]のHVが図[REF_fig:schm](c)の0-complement schemaで句となった場合，VNと単一化すべき要素と主語はsubcat素性の要素として顕在化するので，語順転換が可能となっている．
図[REF_fig:hvlex]においてarg-st素性の第二項のcase素性がwo\/であることに注意されたい．
これはVNが格助詞ヲを伴っている([REF_ex:double])の観察にもとづいている．
\enumsentence{
}ただし，([REF_ex:sbjitv]b, c)で「英語，秘伝」がヲ格を伴っていることを考えると，HV自体は([REF_ex:vnwo]b,c)のような文まで認可してしまう．
しかし，これらは日本語では一般的な，いわゆる二重ヲ格制約(Double-WO\/ Constraint)という別の制約によって排除されていると分析することができる．
\enumsentence{
} ([REF_ex:vnwo]b)を例にとれば，「英語」もVN「勉強」もどちらも潜在的にはヲ格を伴うことができるのであるが，そのような制約により，両方がヲ格を伴った文は排除されていると考えるのである．
また，([REF_ex:vnwo]a)が非文法的なのは，文中に一つもガ格名詞句が含まれていないなどの理由によると説明できる．
しかしながら，ガ格の生起についての制約は検討しなければならない現象が広範囲に及ぶため，具体的な制約の定式化は今後の課題である．
これまでの議論では，([REF_ex:double]a)の非文法性は捉えられない．
しかし，([REF_ex:double]a)に含まれる「沈没」のような名詞は，能格名詞(ergative nominal)とよばれるクラスを形成し，ヲ格を伴えないことが[CITE]などの研究により知られている．
\enumsentence{
}本論文は([REF_ex:ergn])のようなVNを含むサ変動詞構文については明確な分析を持たない．
それはすぐ後に述べる理由によるのであるが，もし能格名詞の型ergativeを導入して([REF_ex:vnsae]a)，([REF_ex:sbjitv]a)，([REF_ex:double]a)を説明するならば，図[REF_fig:lvlex]のLV,図[REF_fig:hvlex]のHVに加えて，さらに図[REF_fig:ergvn]のような語彙項目のスルを導入する必要があるだろう．
([REF_ex:double]a)などのスルが図[REF_fig:ergvn]のような語彙記述であるならば，その非文法性はcase素性が単一化できないことによると説明できる．
しかしながら，このような分析にも反例がある．
例えば([REF_ex:ergn]c)の「落下」は，主語が行為者と解釈できれば，([REF_ex:fall]a)のようにVNがヲ格を伴っていても我々の判断では容認できてしまう．
\enumsentence{
}この場合([REF_ex:fall])のスルはHVと考えられるが，([REF_ex:vnsae]a)と([REF_ex:sbjitv]a)のスルを同様にHVとするなど，これらの文が同じスルを含むと仮定していては文法性の差が説明できない．
([REF_ex:vnsae]a), ([REF_ex:sbjitv]a)の文法性はcase素性の単一化というよりは，むしろ主語の意味解釈の観点，つまり意味素性の制約から説明すべき問題と考えられるが，現時点ではデータの指摘にとどまっている．
[REF_sec:jl]節では格助詞，取り立て助詞およびサ変動詞構文という日本語特有の現象が，普遍的かつ計算機処理に適した文法体系において，どのように扱われるべきかを論じた．
いくつかの言語事実を取り上げ，一部の語彙項目に関してはその詳細な素性記述法についても論じてきたが，言及しなかった他の語彙に関してもここで示したような考察・分析の過程を経ることによってはじめて入力として認められる．
つまり，NAIST JPSGは原理からは導き得ない情報を語彙に記述し，単一化といった一般的な計算機構によって諸現象を説明するのである．
このことは，特殊な現象を処理するために特別な計算機構を導入する必要がなくなるということに外ならず，システムの見通しを良くし，設計を単純化するには不可欠な考え方と言える．
[REF_sec:jl]節ではNAIST JPSGで導入した図[REF_fig:schm]のスキーマの中で，おもに下位範疇化に関するものである(a) complement-head schema, (c) 0-complement schema, (d) pseudo-lexical-rule schemaについて述べた．
[REF_sec:adn]節では連体修飾に関する現象を中心に，(b) adjunct-head schemaについて論じることにする．
VNは([REF_ex:fasp]a)のようにLVとともに用られる以外にも，([REF_ex:fasp]b)のように相接辞(Aspecutual Morpheme---AM)とも共起できる．
実際，([REF_ex:fasp]b)のような連体修飾の用例はコーパスにおいてもかなりの割合を占めている．
京大コーパスversion 2.0を調べてみても「名詞性接尾辞」で終わる文節の頻度は約1,000回であり，「サ変名詞＋サ変動詞」という文節の約10,000回に比べると十分の一程度となっている．
\enumsentence{
}「中」などのAMは，([REF_ex:asp])に示すように様々な項構造を持つVNと隣接できることから，それ自体が項構造を持っているとは考え難い．
\enumsentence{
} AMの項構造もVNから伝わったものと考えるならば，AMを主辞として形成される句構造も「サセル，スル」を主辞とした場合と共通の構造を内包し，その生成には同様に図[REF_fig:schm](d)のpseudo-lexical-rule schemaの適用が考えられるだろう．
([REF_ex:asp]c)の「師匠が弟子に秘伝を伝授中」は，使役構文・サ変動詞構文と同じく，主辞はそれぞれ異なるものの，複合AM句は三項述語のように振舞っている．
特に，その三つの名詞句の表出には「ガ，ニ，ヲ」の格助詞が伴われていることに注目したい．
HPSG/NAIST JPSGにおける格は[REF_sec:jl:case]節で論じたように動詞の下位範疇化素性の一部として記述される．
その仮定に従うならば，VN「伝授」には図[REF_fig:conv]のような語彙記述がなされていることになる．
格に関する情報をそのように記述してしまうと，([REF_ex:asp]c)の「師匠の弟子への秘伝の伝授」のような連体修飾における修飾要素のノ格の説明が捉えられなくなってしまうと思われるかもしれない．
このような問題に対し，NAIST JPSGでは名詞句内において修飾語として機能しているノ格名詞句については付加語と分析している．
図[REF_fig:scaa]に([REF_ex:asp]c)のノ格名詞句を伴った場合の構文木を示す．
この場合，主辞「伝授」には項顕在化原理が適用されず，そのためarg-st素性はsubcat素性に変換されない．
よって，subcat素性の打ち消しも起こらず「伝授」のarg-st素性は投射内で母(mother)へ受け継がれてゆく．
一般に付加語と主辞の関係は統語的な情報だけでは決められないので，NAIST JPSGではこれらの間に付加語と主辞の関係があるということまでは規定するが，どのような関係であるかまでは規定しない．
また，通常ノ格名詞句の語順転換はできないと言われるが，上述のような分析をとれば，([REF_ex:ssca])の文法性も意味論の観点から説明できる．
\enumsentence{
}もし付加語間の語順，つまり階層関係がなんらかの素性に反映されるならば，そのような素性と受け継がれたarg-st素性を比較することで，どの名詞がどの項と対応すべきかが計算できる．
また，その場合([REF_ex:ssca])では，そのような対応が述語の意味の点から整合的でないことも予測できる．
つまり，「伝授」という語が意味する関係initiationにおいては，([REF_ex:ssca]a)のように弟子がinitiatorで師匠がinitiateeであったり，([REF_ex:ssca]b)のように弟子がinitiatorで秘伝がinitiateeであることはないと考えるのである．
付加語と主辞の関係を統語的制約として文法においては規定しないという立場は，計算機構の記述を簡潔にし，解析システム全体をモジュラーな構造にできるという利点がある半面，曖昧性を抑制する手段を制限してしまうという欠点もある．
従ってNAIST JPSGでは，ある句が付加語とも必須項とも分析できるならば，積極的に必須項として分析している．
[REF_sec:adn:amb]節では付加語が関与する解析において起こる問題と，その解決方法について述べる．
動詞に対する必須項となっていないような修飾句も，連体修飾と同様に図[REF_fig:schm](b)のadjunct-head schemaによって扱われ，図[REF_fig:modifier]のように分析される．
これらは次のような特徴を持つ．
被修飾句側ではどのような修飾句が認可されるかを制限する手立てがない．
修飾句側がどのような句を修飾するかは(比較的)固定されている．
2を定式化したものがHPSGでも導入されている被修飾素性(modified feature---mod素性)である．
これによれば「赤い花」のような形容詞による名詞の修飾や，「さんまを焼く匂い」のような連体修飾についても図[REF_fig:modifier]と同様の分析ができる．
なお，(a)のcomplement-head schemaとadjunct-head schemaの間にはsem素性に関して重要な違いがある．
すなわち，母のsem素性は，complement-head schemaにおいては主辞のsem素性と同一となり，adjunct-head schemaにおいては付加語のsem素性と同一となる．
このようにmod素性には「どのような句を修飾できるか」が記述されるが，NAIST JPSGでは助詞を主辞にしているので，この情報は助詞が元来持っているmod素性に記述しなければならない．
格助詞ガのmod素性は，([REF_ex:csadn])にあげる三通りの場合があり得る．
\enumsentence{
}
ところが，([REF_ex:csadn])に従うならば，「健が本を読む」のような単純な文でさえ，概ね[[MATH]健が[[MATH]本を読む]]の構造に対応した([REF_ex:csadn]a, b)の分析だけでなく，[[MATH] [[MATH]健が本]を読む]に対応した([REF_ex:csadn]c)の分析も可能となってしまう．
この問題に対してコーパスを予備的に調査した結果，NAIST JPSGでは現在のところ次のような立場をとるのが妥当であると考えている．
格助詞ガ・ヲ・ニ・トの四つについては([REF_ex:csadn]c)のような語彙は仮定しない．
サ変名詞以外にも項構造をもつような名詞のクラスをいくつか仮定する．
ニ・ノ・トについては繋辞(copula)のように機能する述語的な語彙も用意する．
上記を仮定し，([REF_ex:csadn]c)に対しては具体的に図[REF_fig:copula]のような構文木を与えている．
このような例について調査した結果は，[REF_sec:adn:crpsadj]節でさらに検討する．
また，以下では([REF_ex:csadn]c)における修飾先の「名詞句」をより厳密に「サ変名詞・動詞・助動詞・形容詞・形容動詞・判定詞・終助詞・副詞を全く含まない文節」すなわち「述語的でない文節」と解釈して分析する．
まず，格助詞句が「述語的でない文節」に係る場合の頻度を調べるために，京大コーパスversion 2.0中の全ての係り受けの中から次の二つの条件を満たすものを抽出した．
係り側の文節中，記号類以外で最も右の形態素が格助詞「ガ，ヲ，ニ，ト」である．
「通常の」係り関係である．
このような係り受けは表[REF_tbl:all]に示すように四つの格助詞に対してのべ約51,000回出現する．
次に，受け側の文節の品詞を細分類まで区別してまとめ，パターンの数を数えた．
例えば，
の二つはいずれも「ガ格が[動詞・形式名詞・副助詞・読点]という文節に係る」というパターンにまとめられる．
この結果，四つの格助詞の受け側の文節は約3,600パターンに分類できた．
この中から「述語的でない文節」だけを抽出し，約260パターンを得た．
文の数にすると約1,000文である．
本来はこれら全ての文を確認すべきであるが，ここでは各パターンについて最初の一文だけを詳細に分類した．
これをまとめたのが表[REF_tbl:detail]である．
すなわち，考慮したパターン258(もとは263)のうち約1/3がコーパスの誤りであり，正しくタグ付けされていれば「述語的な文節」に係ると分類されるはずのものであった．
残りの200パターン弱のうち半分以上は，いわゆる体言止めや動詞の省略もしくは並立関係の一方に係っているものであった．
例えば，「シンクタンクの多くが一％台，官公庁が一○％台であった．
」のような場合である．
文末の「であった」まで省略される場合もあるので，動詞の省略と並立は厳密には区別していない．
この結果から，確認したものだけでも約60例は(少なくとも表層上は)格助詞句が「述語的でない文節」に係っていたことがわかる．
なお，表[REF_tbl:all]の「述語的でない文節」に対して表[REF_tbl:detail]の「文数」がガ格で2パターン，ニ格で3パターン少ないのは，同じ文が二つ以上のパターンを含んでいたことによる．
以下，各々の助詞に関する特徴的な係り方のパターンについて論じる．
ガ格名詞では，時間・期間を表わす名詞に係る傾向が見られる．
\enumsentence{
}このような係り受け関係を許す例には「Aガ〜時間・期間(中に)」などがあり，その主辞の名詞「時間・期間」は一定の意味クラスを形成すると考えられる．
さらに，サ変動詞構文のLVと同じように，ニが前接する名詞から項構造を受け継ぐと考えると，図[REF_fig:interval]のような分析が可能となる．
また，係り先としてノが含まれる例も多かった．
\enumsentence{
} ([REF_ex:no:cop]b)はヲ格が，([REF_ex:no:cop]c)はト格がノ格名詞句に係っているが，このように係り側の格の間には，共通に見られるような修飾関係がいくつか存在している．
ガ格で見られた「ニ，ノ」の他に「スル，シテ」などが省略されたとみなせる例がヲ格には存在する．
前接する名詞もやはり「主体，先頭，中心」などを表わす名詞として一定の意味クラスを形成すると考えられ，これらについても統語的には図[REF_fig:interval]に示した分析と同様に扱うことができる．
\enumsentence{
}その他に，「割合」を表わすパターンがある．
\enumsentence{
}このような用法に関しては，次のニ格にも見られる．
ヲ格の例([REF_ex:wo:ratio])のように，ニ格にも「割合」を表わすパターンが多い．
\enumsentence{
} \enumsentence{
}ただし，([REF_ex:ni:gap])のような例は，「南に\dots離れた」のように述部の方に係ると考え，「南に三キロ，東に五キロ離れた」のように現れた場合は，「並立」として別の扱いをする．
ト格で着目すべき頻出の例は，本来の係り先の文節が省略されているために，さらに先の文節に係るような変更が生じているものである．
\enumsentence{
} ([REF_ex:to]a)は，本来「英語詞トいった初めての経験だった」であり，その解釈においては「英語詞ト」は「いった」に係る．
この「いった」が省略されたことにより，(コーパスでは誤って「初めての」に係るとされているが)「いった」の係り先である「経験だった」に係ると考えられる．
([REF_ex:to]b)も，本来「一・七五％トいった低水準に」のような表現であり，「一・七五％ト」は「いった」が省略されたことにより，「いった」の係り先である「低水準に」に係るとされている．
ただし，([REF_ex:to]b)は意味的には「一・七五％ト(いった)」は「低水準にある」という句に係ると考えた方が自然であり，「一・七五％ト」の係り先を「あり」という述語的な文節としている．
以上，ガ・ヲ・ニ・トの四つの格助詞が「述語的でない文節」を修飾する場合に関して，コーパスの調査結果を説明した．
多くの用例は，(場合によってはニやノを述語を形成する繋辞とみることによって)実際には述語的な文節を修飾しているとみなせる．
すなわち，([REF_ex:csadn]c)のようにmod素性がnoun\/であるような助詞を仮定する必要は今のところないといえる．
また，図[REF_fig:interval]中の，繋辞のように機能する語彙項目のadjcnt素性は前接するNPを選択するので，ニやノを繋辞とそうでないものに分けても曖昧性が生じることはない．
すなわち，([REF_ex:csadn]c)の解析を排除し図[REF_fig:interval]の分析をとれば，曖昧性の数を減少させることができる．
一方，([REF_ex:csadn]a,b)のような項か付加語かの曖昧性は依然として残るが，これについては項の組み合わせに対する優先度を統計的に求め[CITE]，統計的係り受け情報にもとづいた優先度に従って漸進的に解析を進めるアルゴリズム[CITE]を用いることで解決できると考えている．
