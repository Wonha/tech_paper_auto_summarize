================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.35682] 文章に付与されたキーワード集合のような内容語（ターム）の並びを「タームリスト」と呼ぶ．
[i:1, score:0.32163] 本論文では，翻訳先言語のコーパスのみを用いて，各タームに対する訳語候補のなかから最適なものを選択する「翻訳多義解消」の新たな方法を提案する．
[i:2, score:0.22755] 本手法では，各タームに対する訳語候補を一つずつ集めてできる組み合わせのうち，含まれる訳語同士の意味的関連性が最も高い組を選択する．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:7, score:0.51464] 本論文ではタームリストの自動翻訳処理のうち，各タームに対して辞書等から与えられた訳語候補の中から最も妥当なものを選択する「翻訳多義解消」に焦点を当てる．
[i:13, score:0.40632] これらのうち，統語的解析を(明示的には)行わず，翻訳対象語と同一文内，あるいは，近傍で共起する他の単語を手がかりに多義解消を行う手法はタームリストの翻訳にも適用可能であり，すでにいくつかの研究も行われている．
[i:15, score:0.39556] １つめはパラレルコーパスと呼ばれる対訳関係にあるコーパスを用いるもので，T. Brownらによる文翻訳のための訳語選択手法[CITE]，R. Brownらのタームリスト翻訳手法[CITE]がある．

================================================================
[section type  : proposed_method]
[section title : タームリスト翻訳における多義解消タスク]
================================================================
[i:28, score:0.39499] [MATH]個の要素からなる翻訳元言語のタームリストを[MATH]は一つのターム，[MATH]は[MATH]までの並びを表す)と記す．
[i:33, score:0.47114] 入力の各タームに対してその訳語候補を一つずつ選んで並べたものを翻訳タームリスト候補と呼び，[MATH]で表す．
[i:34, score:0.43874] たとえば，入力がsuitとprosecuteとから成っていて，これらに対する訳語候補がそれぞれ「スーツ」と「裁判」，「遂行」と「起訴」である場合，以下の４つの翻訳タームリスト候補が存在する．

================================================================
[section type  : proposed_method]
[section title : 翻訳多義解消モデル]
================================================================
[i:37, score:0.40828] 本論文で提案する手法は「翻訳タームリスト候補の中でターム同士の意味的関連性が高い方がそうでないものより妥当である」という仮定に基づいている．
[i:39, score:0.35229] たとえば，2章で挙げたsuitとprosecuteの場合，翻訳タームリスト候補内の意味的関連性が最も高いのは(裁判，起訴)であるからこれを選択する．
[i:40, score:0.39973] 形式的には，[MATH]個のタームから成る入力タームリスト[MATH]に対する最適な翻訳タームリスト[MATH]は次の式で与えられる
-----------------------------------------------------
  [subsection title : 共起頻度による \ikd の定義]
-----------------------------------------------------
  [i:lead, score:0.24948] 単語空間を使った\ikdの定義を行なう準備として，コーパス中のタームの共起頻度をそのまま使った\ikdを定義する．
.....
  [i:43, score:0.24948] 単語空間を使った\ikdの定義を行なう準備として，コーパス中のタームの共起頻度をそのまま使った\ikdを定義する．
  [i:54, score:0.40843] この「近さ」の概念を[MATH]タームに拡張したものが[MATH]要素から成るタームリストの\ikdの定義である．
  [i:56, score:0.30922] すなわち，n個のターム[MATH]に対応するn個のベクトルの重心[MATH]をまず計算し，この重心からそれぞれのベクトルまでの「近さ(式([REF_f.prox]))の平均」を共起行列における\ikdとする．
-----------------------------------------------------
  [subsection title : 単語空間における\ikd ]
-----------------------------------------------------
  [i:lead, score:0.21515] 上記で定義した\kdはコーパス中のターム間の共起頻度をそのまま使っているためデータスパースネスの問題がある．
.....
  [i:57, score:0.21515] 上記で定義した\kdはコーパス中のターム間の共起頻度をそのまま使っているためデータスパースネスの問題がある．
  [i:59, score:0.16850] これらの問題を解決するために共起行列に固有値分解(Singular Value Decomposition:SVD)を適用し行列（の階数）を縮退させる(なおSVDによる行列の縮退については付録参照)．
  [i:61, score:0.23865] 縮退共起行列には元の共起行列では陽に現れていないターム間の間接的な共起関係が表れることが知られている(higher order co-occurence)．

================================================================
[section type  : proposed_method]
[section title : アルゴリズム]
================================================================
[i:66, score:0.07921] ３章で述べた\kdの定義には重心（平均）を求める操作が含まれているため，動的計画法などのような部分問題への分割を前提とした効率的なアルゴリズムが適用できない．
[i:67, score:0.34692] 従って，基本的には各翻訳タームリスト候補に対して総当たり的に\kdを計算する方法によらざるを得ない．
[i:68, score:0.05407] この問題に対して本研究では以下に示すような枝刈りを適用して計算量の削減を図った．
-----------------------------------------------------
  [subsection title : 総当たり法（基本アルゴリズム）]
-----------------------------------------------------
  [i:lead, score:0.25879] 根接点を1段目として[MATH]段目の節点から出るリンクが[MATH]番目のタームに対する訳語候補に対応するような探索木を考える(図[REF_FigTermList]に例を示す)．
.....
  [i:69, score:0.25879] 根接点を1段目として[MATH]段目の節点から出るリンクが[MATH]番目のタームに対する訳語候補に対応するような探索木を考える(図[REF_FigTermList]に例を示す)．
  [i:70, score:0.32511] この木の各葉接点(図の右端の節点)が一つの翻訳タームリスト候補に対応する．
  [i:71, score:0.20472] 枝刈りの前提となる総当たり法とはこの探索木を深さ優先で辿り，葉節点に到達するたびに\kdを計算することによって\ikdが最大の候補を決定する方法である．
-----------------------------------------------------
  [subsection title : 枝刈り]
-----------------------------------------------------
  [i:lead, score:0.26092] 入力タームリスト[MATH]を先頭の[MATH]個[MATH]からなる[MATH]の部分と残りの[MATH]の部分に分ける．
.....
  [i:75, score:0.43982] 従って，式([REF_bound])の右辺は，[MATH]に対する\kdの値と[MATH]の部分のみを考えた場合の最適な翻訳タームリスト([MATH])の\kdの値をそれぞれのタームの個数で重みを付けて平均したものとなる．
  [i:76, score:0.46771] この不等式は，[MATH]の部分に対する訳語を[MATH]に固定したとき，[MATH]以降のタームに対する訳語をどのように選んでもタームリスト全体の\kdの値が右辺を越えないこと（上限）を表している．
  [i:84, score:0.45613] 根節点からXまでの経路に対応する(先頭から[MATH]個分の)訳語の列を[MATH]とし，既に生成された翻訳タームリスト(すでに辿った葉節点)の\ikdの値のうち最大のものをmaxとする(図[REF_FigStree]のmax)．

================================================================
[section type  : experiment_result]
[section title : 評価実験]
================================================================
[i:88, score:0.31517] 新聞記事から抽出したタームリストに対して本手法を適用し，多義解消精度，処理効率に関する評価実験を行った．
[i:90, score:0.26673] 英語の新聞記事から単語を抽出して入力タームリストを作成する
[i:91, score:0.35099] 作成されたタームリストに対して英和辞書引きを行い訳語候補を得る
-----------------------------------------------------
  [subsection title : 実験条件]
-----------------------------------------------------
  [i:lead, score:0.04682] 英語コーパスとして1994年下半期のNew York Times(420MB)，日本語コーパスとして1994年の毎日新聞(140MB)を利用した．
.....
  [i:108, score:0.49746] 翻訳実験用前述の英語タームリストのうちさらにランダムに70個を選び，英和辞書を使って各タームに対する訳語候補を生成した．
  [i:112, score:0.42900] 表[REF_Tab.Tdata]に各タームリストの先頭[MATH]単語(ターム)を取り出した場合の総語数，平均訳語数，多義語数，平均多義数を示す．
  [i:120, score:0.50550] 再翻訳実験用再翻訳実験用の訳語候補は前述の400個のタームリスト全てを使い，各タームに対して，まず，英和辞書を引き，次に，得られた訳語の各々に対して和英辞書を引いて，それらの集合和を取り訳語候補とした．
-----------------------------------------------------
  [subsection title : 精度比較用アルゴリズム]
-----------------------------------------------------
  [i:lead, score:0.06487] 比較のため二つの多義解消アルゴリズムを用いた．
.....
  [i:133, score:0.22251] 一つ目の手法は「あるタームが複数の訳語を持つ場合，目的言語における出現確率(ユニグラム確率)が最大のものを選ぶ」という方式である．
  [i:137, score:0.35149] この手法では，各翻訳タームリスト候補について「共起スコア」を計算しこの値が最大のものを選ぶ．
  [i:138, score:0.38561] ある翻訳タームリスト候補に対する共起スコアはその翻訳タームリスト内の単語を2つ取り出してできる全ての組み合わせについて，目的言語コーパスから得られる2語共起のスコア（文献[CITE]では相互情報量を利用）を計算し，その総和を取ったものと同等である．
-----------------------------------------------------
  [subsection title : 実験結果]
-----------------------------------------------------
  [i:lead, score:0.35623] 翻訳実験では各タームリストの先頭から[MATH]個([MATH]は2から10)取り出してできるタームリストに対して，4つの手法で多義解消を行ない精度の比較を行った．
.....
  [i:140, score:0.35623] 翻訳実験では各タームリストの先頭から[MATH]個([MATH]は2から10)取り出してできるタームリストに対して，4つの手法で多義解消を行ない精度の比較を行った．
  [i:157, score:0.39630] 翻訳実験と同様にタームリスト長を変えて多義解消を行いProposed, Non-SVD, Unigramに対して翻訳精度を求めた．
  [i:163, score:0.42505] 縦軸にタームリスト一つあたりの処理時間(秒)，横軸に枝刈り判定ターム数(4.2章の「前処理」における[MATH]の値)を取ったグラフを図[REF_Fig.Pruning]に示す．

================================================================
[section type  : conclusion]
[section title : 考察]
================================================================
[i:167, score:0.00000] 
-----------------------------------------------------
  [subsection title : 失敗例の分析]
-----------------------------------------------------
  [i:lead, score:0.01479] 失敗例のうち我々の手法に関係するものは次の２種類である．
.....
  [i:171, score:0.29181] 文翻訳であれば[CITE]のような統語的依存関係を用いてより精密な識別が可能であるが，タームリストの場合は難しい．
  [i:173, score:0.19960] ある訳語候補が多義性を持ち，その意味の一つが非常に一般的である（様々な単語と共起する）場合，この一般的な単語が訳語として選択されやすくなる．
  [i:176, score:0.15150] これらに加えて，共起関係を学習する前にあらかじめ単言語の意味多義解消手法によってコーパス中の単語の意味多義を解消しておくことが考えられる．
-----------------------------------------------------
  [subsection title : 関連研究]
-----------------------------------------------------
  [i:lead, score:0.15337] Daganら[CITE]はテキスト中で統語的な依存関係(例えば，動詞-目的語,名詞-形容詞など)にある２つの単語を対象に，これらの単語に対する訳語候補の最適な組み合わせを決定する方法を提案した．
.....
  [i:177, score:0.15337] Daganら[CITE]はテキスト中で統語的な依存関係(例えば，動詞-目的語,名詞-形容詞など)にある２つの単語を対象に，これらの単語に対する訳語候補の最適な組み合わせを決定する方法を提案した．
  [i:179, score:0.17258] また，田中[CITE]らは同一文に出現する任意個の単語を対象としてやはり目的言語側での共起頻度をもとに最適な訳語の組み合わせを求める手法を提案している．
  [i:180, score:0.18330] はじめに述べた通り，第一の相違点は彼らの方法がコーパス中の共起情報のうち訳語候補間に関する共起頻度しか利用していないのに対して，我々の方法はコーパス全体の共起情報から計算された高次の情報を使っていることである．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:183, score:0.35546] 本論文ではタームリスト中の各単語の\ikanrenに着目した翻訳多義解消方式を提案した．
[i:184, score:0.34452] 本手法は多義語に対して平均77.4%の正解率を持ち，デフォールトのタームリスト翻訳結果として有用であると考えられる．
[i:186, score:0.14425] 今後の課題として学習コーパスから共起情報を取り出す際の最適な共起の範囲を自動的に決定すること，また，学習コーパス中の単語に対してあらかじめ多義解消をした場合の効果を評価することがあげられる．

