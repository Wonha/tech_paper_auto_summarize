本研究は，Project Next NLPの対話タスク[CITE]の活動の一部として行われた．
そのため，データ収集も対話タスクの参加者を中心に行った．
本タスクに参加したのは，表[REF_members]に示す大学・企業を含む15の拠点からの総勢32名である．
これは，対話システムに関する国内のプロジェクトとして最大級の規模である．
雑談対話の収集は，本研究のために新たに設けた専用のWebサイトで行った．
このWebサイトでは，NTTドコモが一般公開している雑談対話API[CITE] を用いた雑談対話システムが稼動しており，Webブラウザでアクセスすることで，テキストでの雑談を行える．
このサイトでは，ユーザが10発話を入力すると対話が終了し，対話ログが出力されるようになっている．
サイト側ではユーザ管理を行っておらず，ユーザが自己の対話を纏めて後日提出することによって，ユーザと対話ログの対応が取れるようになっている．
図[REF_screen]に雑談対話収集サイトのスクリーンショットを示す．
各拠点の参加者および参加者の知人にこの雑談対話システムと対話をしてもらい，全部で1,146対話を収集した．
\mod{収集は2014年8月2日から31日の間に行った．
}対話をする際には，図[REF_10commandments]に示す「対話ガイドライン（10箇条）」に沿うように教示をした．
これは，現状の雑談対話システム技術が成熟していないこともあって，破綻だらけの対話ばかり収集されてしまわないためである．
ユーザ毎の対話数は1から40までばらつきがあるが，全体のユーザ数は100名を超えている．
表[REF_stats]は収集された雑談対話データの統計情報である．
収集した雑談対話の一例を以下に示す．
Sはシステム発話，Uはユーザ発話を表す．
\itemsep=-1mm
こんにちは！声かけてくれるのを待ってたんだ。
今日は最高気温36度だって。
暑いねえ
最高気温は１７度が予想されます？？
いやいや猛暑ですよ
猛暑に備えてますか？
うん、日傘さしたり、水飲んだり、クーラー入れたりしてる
クーラーは快適ですね
うん、会社だと朝はつけられないから死にそう
会社は冷房が効きますよねえ
昼間は効くね。
ここはパソコンがいっぱいあるからないと大変
動きが悪いです
そうなの？こっちは快適だよ
パソコンは使い勝手が悪いです
収集した雑談対話データ全体に対して対話破綻をアノテーションする前に，その一部について初期アノテーションを行った．
具体的には，1,146対話からランダムに100対話を抽出し，タスク参加者の中で全100対話のアノテーションを行える24人によってアノテーションを行った．
\mod{作業期間は2014年10月7日から17日の間である．
}このアノテーションの目的は，残りの1,046対話に対して，1対話あたり何人のアノテータを割り当てるのが妥当かを検討することである．
ここで作成したデータセットのことを以後init100と呼ぶ．
アノテーションについては，どのようなエラーがあるのかを網羅的に分析したいという目的に鑑み，トップダウンな破綻の分類は示さず，直感に従って\maru・\sankaku・\batsuの3分類でアノテーションするように指示した．
それぞれの意味は以下の通りである．
当該システム発話のあと対話を問題無く継続できる．
\samepage
当該システム発話のあと対話をスムーズに継続することが困難．
\samepage
当該システム発話のあと対話を継続することが困難．
\samepage
多人数でアノテーションする場合には，\maru\batsuの判断の分布によりそれらの中間状態を表現できるため，必ずしも\sankakuのような中間レベルを表すカテゴリを用意する必要はないが，アノテータが\maruか\batsuかを迷うケースで判断に時間がかからないようにする目的で\sankakuを導入した．
アノテーションには，図[REF_tool]に示す専用のツールを使用した．
ツールでは，非文のチェックの他に，各発話に対してコメントを記入できるようになっている．
また，先行する文脈のみに基づいて対話破綻のアノテーションが出来るように，1発話アノテーションする毎に，次のユーザ発話とシステム発話が表示されるようになっている．
なお，破綻（\sankakuあるいは\batsu）とタグをつけた後の発話をどうアノテーションするかについては，対話の先頭から，破綻とタグ付けされた発話を含むこれまでの文脈を「ありき（与えられたもの）」として，アノテーションするように教示した．
すなわちアノテータは，破綻があったところで対話がリセットされたとはせず，破綻も含めて先行文脈として作業を行った．
非文の定義は，「文法エラーなどにより日本語としての意味をなさない文」とし，会話体で許容される程度の「助詞落ち」や「ら抜き」は非文に該当しないとした．
また，全く意味が通らない発話であれば当然\batsuを付けることになるが，非文であっても発話意図が汲み取れるのであれば，\maruや\sankakuを付けてもよいとした．
使用した対話システム[CITE]の応答生成は，人がすべて確認したテンプレートによるものではないので，非文の発生を完全に無くすことはできない．
そこで，アノテーション時の非文のチェックの結果に基づき，文法レベルでの対話コーパスの品質を確認しておく．
最初のプロンプトを除くシステム発話全1,000発話において非文のチェックが付けられた発話の分布を表[REF_nonsentence]に示す．
表[REF_nonsentence]の1行目は，ある発話に対して非文と判断したアノテータの数を表す．
2行目は各人数のアノテータに非文と判断された発話の数を表す．
1人でも非文と付けた発話は1,000発話中127あったが，過半数（13人以上）が非文と付けたものはわずか7発話しかなかった．
実際のデータを見ると，非文と判定したのが数名である発話はどれもアノテーション指示者からみて非文と判断するようなものではなかった．
（「ルールは多いです」「価値観は欲しいです」「話し相手に飢えます」など，不自然ではあるが『日本語としての意味をなさない文』とまでいえない発話であった）．
仮に過半数以上が非文としたものを真の非文とし，それ以外をアノテーションの誤りとすれば，init100での非文の発生率は1%未満である．
今回の初期アノテーションでは，24人全員が100対話を同じ順序でアノテーションしている．
その中で最も非文であると判定したアノテータが多いシステム発話は「熱中症に気をつけか？？」というものであった．
この発話は100対話中で4回発生しており，4発話に対して非文とチェックした人数は，出現順で19人，17人，13人，9人であった．
つまり過半数が破綻と付与した7発話のうち3発話は同一の発話であった．
同一内容の発話に対して「非文」とアノテーションした人数が大きくばらついているのは，既に非文と付けた発話に対する非文のチェックをアノテータが省略したことが原因と思われる．
非文のチェックは，任意とも指示していないが，厳守するようにも指示しなかった．
また，非文のチェックボックスは任意入力のフィールドであったコメント欄の直前に置かれていた（図[REF_tool]参照）．
このため，非文のチェックがアノテーションの主たる目的ではなく補助的な作業であったことから，後の方になるほどチェックを省略されてしまった可能性が高い．
その事を考慮して，仮に四半（7人）以上が非文と判定したものを「真の非文」と考えても，非文の発生率はおよそ2%である．
このことから，今回のデータ中のシステム発話の品質は，個々の発話の日本語文法のレベルでは，当面の研究に必要なレベルが担保されていると考える．
init100に対して，24人のアノテータが付与したラベル\maru，\sankaku，\batsuの割合を表[REF_distribution]に示す．
24人のアノテータ間の一致の程度を測るためにFleissの[MATH]を算出すると，[MATH]であった．
[CITE]も参考にすると，この値の解釈は「ランダムではないが，よく一致しているともいえない」とするのが妥当である．
\sankakuを\batsuに含めて，2値のアノテーションとして計算すると，[MATH]とやや一致の具合が高まる．
\sankakuを\maruに含めると[MATH]は0.277にしか改善されないため，\sankakuは\batsuにより近いことが分かる．
24人のアノテータをCohenの[MATH]値をもとにWard法で階層クラスタリングを行うと，図[REF_cluster]のようになった．
距離の定義やクラスタリングの手法を変えると，2つのクラスタの中でのまとまり方は細かく変わるものの，大きな2つのクラスタ間での移動はほとんど見られなかった．
図[REF_wariai_distribution2]に示す24人のアノテータの分布を見ると，\maruをつける傾向の大小で，前述の2クラスタが分かれていることが見て取れる．
2つのクラスタの中でのFleissの[MATH]を求めると，それぞれ[MATH]（11人）と[MATH]（13人）であり，これらの値は「適度に一致している」と解釈できる．
前者，図[REF_cluster]の左側のクラスタ，をC1と呼ぶ．
このクラスタは\maruを多く付けるアノテータのクラスタである．
後者，同右側のクラスタ，をC2と呼ぶ．
このクラスタは\maruを少なく付ける破綻に厳しいアノテータのクラスタである．
表[REF_annotators_attributes]に，24人のアノテータの属性（性別，年齢層，職業，関係性）の分布を示す．
職業の「学生」は大学生および大学院生，教員は大学教員を指す．
関係性の「当事者」は，対話タスクに参加している研究者（会社員，教員，学生）のことで，関係者は，対話タスクには直接参加していないが，前述の当事者と同じグループで対話システムに普段から関わりのある仕事をしていることを意味する．
無関係は，当事者と知己であるが，対話システムの研究開発とは普段関わりがないことを指す．
性別・年齢層には，C1とC2の間に目立った違いは見て取れない．
職業・関係性をみると，教員・当事者がC1側にやや多い印象を受けるが，Fisherの正確確率検定ではC1, C2間に統計的に優位な差はない（いずれも[MATH]）．
従って，表[REF_annotators_attributes]に示した属性だけでは，新規のアノテータがどちらのグループに属するかを予測することは難しく，実際にアノテーションを行ってもらって傾向を把握するしかない．
24人のアノテータからランダムに[MATH]人を選び出したとき，ラベルの分布がどれだけ全体の分布から離れているのかを表したグラフを図[REF_plot]に示す．
横軸は[MATH]の数で，縦軸はKullback-Leibler divergenceの対称平均の値である．
黒丸が1,000回サンプリングした際の平均値を示す．
下向き三角は1,000回中の最大値，上向き三角は1,000回中の最小値を表す．
アノテータが1人から2人になる段階で，平均値からの乖離は半分近く縮まり，あとは，なだらかに24人の分布に近寄っていくことが分かる．
図[REF_hist]に，\maru\sankaku\batsuの各ラベルを付与された数毎の発話数のグラフを示す．
左側のグラフは集計結果をそのまま示したもので，横軸が，ある発話について付与された特定のラベルの数（0から24）を表し，縦軸が，そのような発話の度数を表す．
右側のグラフは，解り易さのため，左側のグラフを加工したものである．
0から24までのラベルの数を5区間に区切り，各区間の積算値をプロットしてある．
このグラフから，破綻ラベル\batsuが過半数以上に付与されてる発話の数は少なく，人により揺れが大きいことが読み取れる．
また過半数以上が\sankakuを付与している発話はほとんどないことも分かる．
\maruについては一致し易いが，\sankaku\batsuについて一致しにくいということを表している．
\sankakuと\batsuを併せて計数した場合のグラフは，図中の\maruのグラフを左右反転させたものに等しくなる．
\maruの数と，\sankakuと\batsuを併せた数とが12対12で半分に割れた発話の分析も行った．
すると，表面的には間違ってるとは言えないけれども，違和感がありそうな応答が多かった．
「こういうことは普通ここでは言わない」という印象は持つものの，なぜそれを言わないかの説明が難しいものが多い．
また，発言の意図が読みにくそうな発話，ユーザの話を聞いていないと感じられる発話，社会的に問題がある発話，ふざけているようにも見える発話なども判断が割れていた．
これらの判定を分析することは，対話における認知の研究として学術的に面白い課題となり得る．
以下は，評価が半分に割れた発話（下線部）を含む対話の例である．
\itemsep=-1mm
他に好きな楽器はありますか？
サックスがいいですね
サックスは木管楽器なんですよね
相性がいいですね
台風は大丈夫でしたか
台風は必要です
雨は必要ですよね
朝から雨が降るのです
これは発話の意図が読みにくいため，「それがどうしたのか」という印象を受ける発話である．
\itemsep=-1mm
夏って感じがします\samepage
海は騒がしいですよねえ\samepage
海に行くと盛り上がりますもんね\samepage
海は静かなんですよねー\samepage
騒がしいのか静かなのかどっちですか\samepage
海はサイコーですよねえ\samepage
サイコーですねえ\samepage
これは人によっては，質問に答えずにごまかしているように感じられるだろう発話である．
init100中の一部の対話について，アノテータによって対話破綻箇所に付与されたコメントを人手で分類したところ，大きく「同じ内容の繰り返し」「矛盾した内容」「発話として唐突」「ユーザ発言内容の無視」「質問に答えていない」に分類できることが分かった．
{表層としては少し異なっていたとしても内容として同じものを繰り返す場合，破綻とアノテーションされることが多かった．
たとえば，「美味しいですね」「いいですね」などと同じような発話を繰り返す場合である．
}
{システム発話間で矛盾が見られる場合は破綻とされることが多かった．
たとえば，「イチゴが好き」という発言の直後に「リンゴが好き」と発言するなど，一貫性を欠く発話は問題視された．
}
{「おはようございます」に対して「明けましておめでとうございます」のように，文脈とは関係のない発言を突然行うことがあり，このような発話は破綻とされていた．
}
{対話はお互いが協調して進めていくものであるので，ユーザ発話を全く受けずにシステムが発話を行った場合には対話の破綻とみなされることが多かった．
たとえば，旅行の話をしていて「車で行きましょう」とユーザが話しかけたのに「車はかっこいいですね」と車そのものについて言及したりする場合である．
}
{ユーザ発言内容の無視に近いが，特に質問に答えていないものが破綻とされていた．
たとえば，「チワワは欲しいですね」とシステムが話し，それに応じてユーザが「飼う予定はあるの？」と質問したが，システムは「チワワはいいらしいですよ」と答えたような場合である．
}
上記以外にも口調の唐突な変化などが，問題のある現象として観察された．
さらに詳しい分類については[REF_sec:categorization]節で述べる．
init100に対するアノテーション結果について，タスク参加者で議論を行った結果，残りの1,046対話（以後，rest1046と呼ぶ）のアノテーションについては，1対話につき2人で実施するという結論に至った．
2名とした理由は以下の通りである．
人的・経済的コストの面から，アノテーションにかかる作業量は最小限が望ましい．
アノテーションのコストを最小化できるのは1名でアノテーションを行う場合であるが，この場合，アノテータ間の揺れのために，破綻とされるべき発話が見逃されてしまう可能性がある．
よって，複数名が望ましい．
前述の分析でアノテータは大きく2つのクラスタに分かれることが分かっている．
これらの2つのクラスタから1名ずつ割り当てることで，見逃しを最も効率的に減らせる可能性がある．
実際に，init100にアノテーションをした24人からランダムに[MATH]人をランダムに選んだ場合と，C1とC2の両クラスタから[MATH]人ずつ選び出した場合とで，図[REF_plot]と同じ方法でラベル分布の距離を比較すると，図[REF_cluster_vs_random]に示す結果になる．
C1，C2のクラスタから1人ずつ，計2名選んだ場合の結果は，全体からランダムに3人選んだ場合と4人選んだ場合の中間程度になっており，より少ない人数で全体での分布に近い結果を得られることが分かる．
1,046対話をランダムに11個のサブセット(a--k)に分割した．
a--jの10個のサブセットはそれぞれ100対話を含み，最後のサブセットkだけが46対話を含む．
アノテーションには，22名のアノテータの協力が得られることになった．
22名のうち19名が，init100に対するアノテーションに参加していたアノテータである．
まずこの19名について，図[REF_cluster]のクラスタに基づき，2つの大クラスタC1およびC2からなるべく1名ずつのアノテータが割り当てられるように，サブセットkを除く10サブセットに割り当てた．
その後残りの3名を同10サブセットに割り当てた．
1名当りの分担量を2サブセットと固定して22名を10サブセットに割り当てたので，i, jの2つのサブセットだけ3名のアノテータを割り当てた．
サブセットkについては，余力のある2名に割り当てた．
アノテータが各対話にアノテーションを行う方法は，init100の場合（[REF_sec:annotation1]節）と同じである．
アノテーションの結果の分布を表[REF_distribution2]に示す．
init100よりも，\sankakuの割合が増えているが，\sankakuと\batsuを併せて見た場合には，init100のときとほぼ同じ分布と考えられる．
また，各サブセット毎のFleissの[MATH]値を表[REF_11kappa]に示す．
\mod{2名のアノテータが同じ判断傾向を持つかどうかによって，サブセット間で[MATH]値にばらつきが生じているが，全体平均としてはinit100とほぼ同じ値になっている．
}
rest1046全体について，2名のアノテータが付けたラベルの組み合わせ毎の頻度と割合を\mod{図[REF_confusion]に示す}（計算にあたりサブセットi, jの3人目のアノテーションは利用していない）．
先に述べたように，アノテータは\maruを多く付ける傾向のクラスタC1と，そうでないクラスタC2とに大きく分かれており，各サブセットに割り当てるアノテータは，なるべく2つのクラスタから1名ずつ選ぶようにした．
\mod{図[REF_confusion]}では，整合した判定である(\batsu,\batsu)の組よりも，矛盾した判定である(\maru,\batsu)の方が数が多くなってしまっているが，これは上記の割当の結果を反映しているもので想定内の結果であると同時に，破綻の捉え方が人によって異なることを改めて示している．
rest1046のアノテーションに際しては，担当する対話の最初の5対話と最後の5対話，計10対話だけ，\sankaku，\batsuをつけた箇所には，必ずその判断理由をコメントとして書くことを求めた．
これにより，総数で3,748個，異なりで2,468個のコメントを得た．
\mod{アノテーション作業は2014年12月2日から20日の間に行った．
}
本節では，収集したデータを基に策定を進めている対話破綻の分類体系の，現時点での案と課題について議論する．
[REF_sec:annotation1]節ではinit100に対して付与された\sankaku，\batsuの破綻アノテーションに付随するコメントを大まかに分類した結果を示したが，ここではそれを土台としつつ，rest1046に対して付与されたコメントを分析し，雑談対話における対話破綻の類型化を行った結果を示す．
対話が，ある発話によって破綻するとき，原因はその発話だけにあるとは限らない．
もちろん，その発話が文法的におかしなものであったり，意味がわからなかったりする場合もある．
しかし，その発話が文として正しいものであったとしても，「相手の発話に対して，このように応答するのはおかしい」場合や，「前に言ったことと矛盾している」という場合においても，対話の継続が困難となる．
このように，対話の破綻を分析するに当たっては，当該発話そのものに原因があるのか，または広い意味での文脈（直前の発話，対話履歴，状況なども含む）に原因があるのかを特定する必要がある．
また，破綻が生じた原因が存在する範囲が同じであっても，その内容は様々である．
必要な情報の欠落や曖昧性のために意味が特定出来ない場合や，意味が特定できても文脈と矛盾する場合，矛盾はしなくても冗長な場合などがある．
そこでまず，破綻の根拠となっている情報に基づき大分類を決定し，その後，破綻の種類を表す小分類を決定した．
大分類は，破綻を認定する際にどの範囲に関連した破綻であるかという基準で，以下の4つに決定した（図[REF_wg2]参照）．
発話
当該システム発話のみから破綻が認定できるケース．
典型的には非文が該当する．
「意味不明」というコメントの場合でも，この発話単独で意味がわからないのではなく，前の発話や文脈との関係で意味が取れない，というケースがあるので注意した．
応答
直前のユーザ発話と当該システム発話から破綻が認定できるケース．
典型的には，発話対制約違反や，前発話の話題を無視した応答などが該当する．
あくまでもそれまでの対話の流れは無視して，1つ前の発話との関係だけで判断した．
文脈
対話開始時点から当該システム発話までの情報から破綻が認定できるケース．
典型的には，対話の流れから判断できる不適切な発話・矛盾する情報の提供・不要な繰り返しなどが該当する．
環境
破綻原因が，「環境」すなわち「外部要因」にあり，上記の3分類には当てはまらないケース．
典型的には，一般常識に反するシステム発話が該当する．
表[REF_wg4]に示す対話破綻の分類体系案を考案した．
「発話」・「環境」の大分類については，検討の段階で多数を占めた「誤り」と分類される発話に対して，より分解能が高まるようにそれぞれ小分類を設定した．
一方，「応答」・「文脈」の大分類においては，[CITE]に倣い，対話における協調の原則であるGriceの公準[CITE]に基づき小分類を設定した．
\mod{Griceの公準は，量・質・関係・様態の各公準からなるもので，対話において参与者が遵守するように期待されている原則である．
つまり，ユーザの直前の発話あるいはこれまでの対話履歴を受けてなされるシステム発話が守ると期待されている原則であるので，一般的にはこの原則が守られていないと，ユーザはシステムの発話意図を推測することができずに，対話が破綻すると考えられる．
} [CITE]は，課題指向対話のエラー分析にGriceの公準を用いて，一定の成果を得ている．
アノテータのコメントに「答えていない」「無視しすぎ」「唐突すぎる」といった「違反」を示唆するものが多かったことも，対話の「規範」であるGriceの公準を用いた理由の1つである．
破綻を分類することの一義的な目的は，ユーザが破綻であると考えた箇所で，システム内部のどこに問題（エラー）があったのかを探ることであり，それを知ることによって，システムの改善が可能になる．
しかしながら，一般にシステム内部でおきたエラーを対話の表面から直接特定することは難しい．
\mod{そこで，システムが何をしてしまったのか（どういう問題行動をしたか）をGriceの公準に基づいて分類することを基本とした．
ただし，問題行動の原因が比較的解り易いエラーについては，「応答」大分類中の「誤解」および「文脈」大分類中の「不追随」として追加した．
}
以下で，大分類毎に，小分類について事例を基に説明する．
基本的に，システム発話の生成過程に問題がある場合が該当する．
「非文」の概念に近い．
構文制約違反（構文制約違反）
必須格の欠如や助詞の誤りなどが原因で，発話内容が理解できないもの．
例）「S:熱中症に気をつけか？？」
意味制約違反（意味制約違反）
意味素性の異なる語の組合せなどが原因で，発話内容が理解できないもの．
例）「S:便乗に重ねますよねえ」
不適切発話（不適切発話）
発話として機能を果たさないもの．
例）「S:ちゅっちゅ」
前発話との関係において協調の原則が守られていない破綻を，Griceの公準に基づいて分類する．
誤解は内部的なエラーであり，対話行動自体の問題ではないが，比較的解り易いので小分類として加えた．
量の公準違反（情報過不足）
前発話に対して，応答に含むべき内容が欠落している，あるいは，不要な内容が含まれており，これが会話の進行を阻害する場合．
例）「U:ラーメンが好きです」→「S:豚骨で有名ですね」
質の公準違反（不理解）
前発話と矛盾する内容の発話．
前発話の話題に追随しながらも，前発話で示された命題内容と矛盾する命題内容を含む場合．
なお，意味理解の失敗などによって生じる「ずれ」を含む発話は，関係の公準違反とする．
例）「U:最近，山登りを始めました」→「S:山登りが出来ないのですか？」
関係の公準違反（無関係）
発話対として不自然な発話で，これによって会話の継続ができなくなっている状況．
あるいは，前発話の意味内容と関係しない内容の発話を行った場合．
相手の発話を無視している状況を含む．
例）「U:それでは，趣味はなんですか？」→「S:最後に旅行されたのはいつですか？」
様態の公準違反（意図不明）
発話意図の曖昧性のため，会話の継続ができなくなっている状況．
例）「U:退屈は嫌いですか？」→「S:退屈は心ですね」
誤解（誤解）
内容の解釈エラーによって，不適当な発話になっている状況．
多義語の意味の取り違いなどが該当する．
例）「U:スイカを食べたらお腹を壊します」→「S:スイカで買い物できてるのですか？」
基本的には，「応答」の小分類と同様の考え方で，協調の原則に対する違反で分類する．
量の公準違反（不要情報）
与える情報が何もない無情報発話，あるいは，これまでの文脈に出現した発話の不要な繰り返し．
例）海に行っていないという文脈において：「S:海に行かないなあ」
質の公準違反（矛盾）
これまでの文脈と矛盾する内容の発話．
また，これまでの話題に対する態度（Positive/Negativeの極性）が急に転換する発話．
例）人間関係が薄いという文脈において：「S:人間関係は深いです」
関係の公準違反（無関係話題）
これまでの文脈における話題から逸脱する発話．
話の主たる話題ではなく，直前のユーザ発話中の話題語でない単語から話を展開させてしまうような場合が典型例．
例）定期券を無くすという文脈において：「U:首からかけておくとか？」→「S:左右に振りますよねえ」
様態の公準違反（関連性不明）
話題は継続しており，直前発話との関係だけで見ると意味が通るように見えるが，それ以前の文脈を踏まえると，その発話の意図が理解できない状況．
例）薬の話題において：「S:薬は大丈夫ですね」
話題展開への不追随（不追随）
ユーザからの話題の展開が起こっているにも関わらず，それに追随できていない状況．
例）ドイツの話題の後：「U:あなたは海外経験ありますか？」→「S:ドイツは小売価格が高いです」
会話の文脈以外の原因で生じた破綻を分類する．
無根拠（共通基盤欠如）
根拠のない，一方的な主張．
例）「S:マグロは鮮度が悪いですよねえ」
矛盾（一般常識欠如）
一般的に正しいと信じられている常識と矛盾する発話．
例）「S:熱中症はいいですね」
非常識（社会性欠如）
罵詈雑言など，対話相手との社会的関係を破壊する発話．
あるいは口調（人格や社会的属性）が突然変化する発話．
例）「S:プールはいいですね」→「U:探しとくね」→「S:知らんのかい」
考案した分類体系は一見よく纏まっており，それなりの一致度で分類を行えることが期待できた．
そこで，破綻アノテータが付けたコメントを参考にしながら，タスク参加者で予備的に破綻の分類を行ってみた．
しかしながら，予想以上にアノテータ間で一致しないことがわかった（[MATH]値で0.1から0.3程度の範囲）．
個々人の主観に任せた破綻アノテーションでは低めの一致度でもよいが，破綻の分類についてはなるべく客観性の高い分類ができることが望ましい．
破綻の分類においてアノテータ間の不一致が大きい原因が，主にアノテーションの手順や教示，アノテータの訓練不足などにあるのか，それとも分類体系自体にあるのか，まだはっきりしていないが，少なくとも以下のような課題が分かっている．
検討に際しての分類作業は排他的に一発話・一分類で行ったが，複数の大分類に渡ると思われる破綻がいくつか見られた．
例えば，非文・発話対制約違反・話題からの逸脱のように，複数の大分類に渡る破綻が同時に起こることがあり得る．
発話の意味制約違反については，典型的な例は「発話」レベルのものと判断しやすいが，解釈次第であることも多い．
例えば，「仕事は真面目ですね」という発話は，「仕事」を一般的な概念として捉えれば意味制約違反と判断できるが，ある個人の「業績・仕事ぶり」を意味すると解釈すれば，発話のレベルでは問題がないことになる．
「文脈という概念を持ち込むと，文の意味と発話（話し手）の意味を区別することはもはやできない[CITE]」という見方に立てば，そもそも意味制約違反の小分類を「発話」のレベルに設けることが不適切かもしれない．
誤解は，直前の発話に対するものという定義から「応答」の大分類に含めていたが，実際には文脈まで見ないと誤解とは言えない場合も見つかった．
これも「応答」でなく「文脈」に含めるか，あるいは「応答」「文脈」の両方に設ける必要があると思われる．
分類の問題というよりは，多分に破綻の認定自体の問題であるが，読み手側の知識不足や，表現に対する不慣れによって解釈できなかったため，破綻とされていることもある．
例えば，「みんっ」という発話は，意味のある表現に解釈できない人と，「見ない」という意味に解釈できる人がいる．
この場合，結果的に，破綻の分類も人により異なってくる．
「応答」「文脈」のレベルに導入したGriceの公準に基づく分類は，特に一致率が低かった．
これは現状のシステムが出力する発話が，自分のことなのに伝聞で話すなどの不自然な様態や，対話相手のキャラクタが突然変わるなど，通常の人同士の対話で見られないようなものであるために，解釈が難しいことも一因であると考えている．
Griceの公準に基づく類型化は，典型例の整理・説明には有用であっても，あまり典型的ではない破綻の分類には適していない可能性がある．
そうだとすれば，小分類のレベルで，各公準違反を事例別にさらに細分化するか，あるいは別の視点での分類を用意する必要がある．
