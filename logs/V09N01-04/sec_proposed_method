固有表現抽出は，情報検索・抽出，機械翻訳，自然言語理解など自然言語処理の応用的局面における基礎技術として重要な技術の一つである．
英語においては，特に米国において，MUC(Message Understanding Conference，例えば，MUC-7 [CITE])コンテストにおける課題の一つとして固有表現抽出がとりあげられ，集中的に研究が行なわれてきた．
また，最近では，日本語においても，MET (Multilingual Entity Task,例えば，MET-1 [CITE]，MET-2 [CITE])やIREXワークショップ[CITE]などのコンテストにおいて，固有表現抽出が課題の一つに取り上げられている．
IREXワークショップの固有表現抽出タスクでは，表[REF_tab:irex_tag]に示す八種類の固有表現の抽出が課題とされた
[CITE]．
表[REF_tab:irex_tag]には，主催者側から提供された訓練データの主要部分を占めるCRL(郵政省通信総合研究所---現，独立行政法人通信総合研究所)固有表現データ(毎日新聞1,174記事の固有表現をタグ付け)，および本試験データのうちの一般ドメインのもの(毎日新聞71記事の固有表現をタグ付け)について，八種類の固有表現数を調査した結果を示す．
次に，上記のIREXワークショップの固有表現抽出タスクの訓練データを形態素解析システムbreakfast[CITE] で形態素解析し，その結果の形態素と固有表現の対応パターンを調査した結果を表[REF_tab:MnNE]に示す．
これからわかるように，半分近くの固有表現については，形態素と固有表現が一対一に対応しないことがわかる．
また，そのうち，一つの固有表現が複数の形態素から構成されている場合は90%近く(7175/ (7175+1022) = 87.5%)を占めており，これらの固有表現については，各固有表現の区切り位置はいずれかの形態素の区切り位置と一致している，すなわち，固有表現の開始位置は，先頭の構成要素となる形態素の開始位置と，また，固有表現の終了位置は，末尾の構成要素となる形態素の終了位置と，それぞれ一致する．
図[REF_fig:egMtoNE]にこのような場合の例を示す．
また，表[REF_tab:MnNE]の「その他」の場合の多くは，一つ以上の固有表現が一つの形態素の一部となる場合である．
例えば，「訪米」という形態素に対して，その一部である「米」のみがLOCATION(地名)であるという例がこれに相当する．
この「その他」の場合の固有表現については，その割合が少なく，また，先行研究[CITE]において，ある程度の割合で抽出できることがわかっているので，本論文における考慮の対象には含めない．
本節では，まず，ベースモデルとなる，最大エントロピー法を用いた日本語固有表現抽出の手法[CITE]を定式化する．
ここでの固有表現抽出の問題は，固有表現まとめ上げおよび固有表現タイプ分類の問題ととらえることができる．
いま，以下に示すような形態素列が与えられているとする．
ここで，現在の位置が形態素[MATH]のところであるとすると，日本語固有表現まとめ上げおよび固有表現タイプ分類の問題とは，この現在位置の形態素[MATH]に，まとめ上げ状態および固有表現タイプ(詳細は[REF_subsec:tagck]節で述べる)を付与することである．
本論文の統計的固有表現抽出においては，訓練データからの教師あり学習により固有表現抽出モデルを学習する．
その際には，各固有表現がどの形態素から構成されているかという情報が利用可能で，そのような情報を用いて固有表現抽出モデルを学習する．
例えば，以下の例では，現在の位置に相当する形態素[MATH]が[MATH]個の形態素からなる固有表現の一部であるという情報が利用可能である．
{
}
また，次節で述べる最大エントロピー法を用いて固有表現抽出モデルを学習する際には，現在位置および周囲の形態素の素性([REF_subsec:ftr]節)を条件として，現在位置の形態素に固有表現まとめ上げ状態およびタイプ([REF_subsec:tagck]節)をクラスとして付与するための条件付確率モデルを最大エントロピー法により学習する．
なお，通常，学習された確率モデルを適用して，形態素に固有表現まとめ上げ状態および固有表現タイプを付与することにより，固有表現の抽出を行なう場合は，一文全体で，固有表現まとめ上げ状態および固有表現タイプの確率を最大とする固有表現の組合わせを求める必要がある．
本論文では，この最適解探索の方法としては，[CITE]のものをそのまま用いている．
最大エントロピー法は，文脈を規定する制約を素性として与え，与えられた素性のもとでエントロピーを最大化するという条件によって求められる確率モデルである．
確率モデルの学習においてエントロピーを最大化することにより，与えられた制約を満たす最も一様なモデルが学習されるため，データの過疎性に強いという特徴を持つ．
ここでは，与えられた訓練集合から，文脈[MATH]においてクラス[MATH]を出力するプロセスの確率的振舞い，すなわち条件付確率分布[MATH]を最大エントロピー法に基づいて推定する方法の概略を説明する．
まず，訓練集合中の事象[MATH]の観測値を大量に集め，[MATH]を事象[MATH]の訓練集合中での生起頻度として，訓練集合中の経験的確率分布[MATH]を以下のように推定する．
次に，訓練集合中のどのような現象に注目して確率分布を推定するのかを表す二値の関数[MATH]を導入し，これを素性関数と呼ぶ．
具体的には，各素性関数[MATH]について，この関数が真となる事象[MATH]および[MATH]の集合[MATH]および[MATH]が規定されていると考え，この集合にしたがって素性関数[MATH]が以下のように定義される．
また，一般に確率モデル学習の際には，大量の素性からなる素性の候補集合[MATH]から，活性化された素性の部分集合[MATH]が選択され，これらによって事象[MATH]および確率分布[MATH]が記述される．
次に，実際に確率モデル学習を行う際には，活性化された素性集合[MATH]中の各素性[MATH]について，学習すべき確率分布[MATH]による素性[MATH]の期待値(左辺)と経験的確率分布[MATH]による素性[MATH]の期待値(右辺)が等しいとする以下の制約等式を課す．
そして，これらの制約等式を満たす確率分布[MATH]のうちで，以下の条件付エントロピー[MATH]を最大にする最も「一様な」モデルが，求めるべきモデル[MATH]であるとする．
([REF_eqn:me])式を満たす確率分布は必ず存在し，それは以下の確率分布[MATH]で記述される．
ただし，[MATH]は各素性[MATH]のパラメータである．
また，実際にエントロピーを最大にする最適なパラメータ[MATH]を推定するには，Improved Iterative Scaling(IIS)アルゴリズム[CITE]と呼ばれるアルゴリズムが用いられる．
本論文では，固有表現まとめ上げの際のまとめ上げ状態の表現法として，日本語固有表現抽出の既存の手法[CITE]において用いられた\sekine_encoding法を採用する．
この方法では，各固有表現タイプについて，以下の四種類のまとめ上げ状態を設定する．
--現在位置の形態素は，二つ以上の形態素から構成される固有表現の先頭の形態素である．
--現在位置の形態素は，三つ以上の形態素から構成される固有表現の先頭・末尾以外の中間の形態素である．
--現在位置の形態素は，二つ以上の形態素から構成される固有表現の末尾の形態素である．
--現在位置の形態素は単独で一つの固有表現を構成する．
また，固有表現を構成しない形態素のための状態として以下の状態を設定する．
--現在位置の形態素はどの固有表現にも含まれない．
結果として，この表現法では，固有表現まとめ上げ状態として，[MATH]の状態を設定する．
この方法により日本語固有表現のまとめ上げを行なう様子を表[REF_tab:NEcode]に示す．
各形態素の素性としては，以下の三種類のものを用いる．
語彙---訓練コーパス中で，固有表現の位置および周囲二形態素以内に5回以上出現した2,052語彙．
品詞---形態素解析システムbreakfastの約300種類の品詞．
文字種---平仮名・片仮名・漢字・数字・英語アルファベット・記号，およびそれらの組合わせ．
次に，本論文では，現在位置の形態素に対して固有表現のまとめ上げ状態を付与する際に，周囲のどれだけの形態素を考慮するか，つまり周囲の形態素をどのようにモデル化するかについて，以下の二種類のモデルを用いる．
一つ目のモデルは，現在位置の形態素がどれだけの長さの固有表現を構成するのかを全く考慮せずに，固有表現まとめ上げ状態を付与するモデルである．
これは，学習時においても，現在の形態素が，いくつの形態素からなる固有表現の一部であるか([REF_subsec:setting]節，式([REF_eqn:NE-len])参照)といった情報を全く考慮せず学習を行なうモデルである．
このモデルにおいては，以下に示すように，現在位置の形態素[MATH]の左側および右側の文脈中の形態素については，学習時においても適用時においても，常に固定された数の形態素だけを考慮する．
本論文ではこのモデルのことを，固定長モデルと呼ぶ．
本論文では特に，現在位置の形態素[MATH]の左側および右側の文脈中の形態素をいくつ考慮するかに応じて，左右二形態素ずつを考慮する5グラムモデル
左右三形態素ずつを考慮する7グラムモデル
左右四形態素ずつを考慮する9グラムモデル
を用いる．
一方，もう一つのモデルは，学習時において，現在位置の形態素が，いくつの形態素から構成される固有表現の一部であるか(式([REF_eqn:NE-len])参照)を考慮して学習を行なうモデルで，これを可変長モデルと呼ぶことにする[CITE]．
学習時には，現在位置の形態素が固有表現を構成しない場合には，5グラムモデルと同じく，現在位置およびその左右の二個ずつの形態素を考慮して学習を行なう．
一方，現在位置の形態素[MATH]が[MATH]個の形態素からなる固有表現の一部であるときには，固有表現を構成する形態素およびその左右の二個ずつの形態素を考慮して学習を行なう．
つまり，現在注目している固有表現の長さ[MATH]に応じて，考慮する周囲の形態素の総数が可変となる．
また，現在位置の形態素[MATH]が4個以上の形態素から構成される固有表現の一部であるときには，本論文では，以下の手順で，固有表現を構成するとみなす形態素数を3に限定するという近似を行なう．
現在位置の形態素が固有表現の先頭である場合は，先頭から三形態素のみが固有表現を構成するとみなし，四番目以降の形態素については右側文脈であるとみなす．
現在位置の形態素が固有表現の末尾である場合は，末尾の三形態素のみが固有表現を構成するとみなし，末尾の三形態素以外については左側文脈であるとみなす．
その他の場合は，現在位置の形態素およびその前後一形態素ずつのみが固有表現を構成するとみなし，それ以外の形態素については左側もしくは右側文脈であるとみなす．
例えば，以下のように，現在位置の形態素[MATH]が4個の形態素から構成される固有表現の一部である場合を考える．
この場合，固有表現を構成する末尾の形態素[MATH]が，あたかも固有表現の直後の右側文脈に存在する形態素であるかのようにみなされ，以下のように近似されてモデル化される．
モデルの適用時には，現在位置の形態素がどのような固有表現を構成するかという情報が利用できないので，固定長の9グラムモデルの場合と同様に，現在位置の形態素，および，左右四形態素ずつの素性を考慮してモデルの適用を行なう．
前節までで述べた固定長モデルおよび可変長モデルにおいて，特に現在位置の周囲の形態素の素性について，[REF_subsec:ftr]節で述べた素性のうちの全部または一部のみを用いるモデルとして，以下の三種類のモデルを設定し，これらについて実験的評価を行なう．
全素性を用いるモデル．
周囲の形態素[MATH]および[MATH]については，語彙素性および品詞素性のみを考慮するモデル．
周囲の形態素[MATH]および[MATH]については，語彙素性のみを考慮するモデル．
なお，[CITE]と同様に，周囲の複数の形態素の素性を結合した結合素性は用いていない．
本論文の複数システム出力の混合法では，以下の三種類の訓練・評価データセットを用いる．
[MATH]:個々の固有表現抽出モデルを学習するための訓練データセット．
[MATH]:複数システムの出力の正誤判別規則を学習するための訓練データセット．
[MATH]:複数システムの出力の正誤判別規則を評価するための評価データセット．
まず，以下に，訓練データセット[MATH]および[MATH]を用いて，複数システムの出力の正誤判別規則を学習するため手続きの概要を示す．
訓練データセット[MATH]を用いて，個々の固有表現抽出モデル[MATH] [MATH]を学習する．
個々の固有表現抽出モデル[MATH] [MATH]を，それぞれ，訓練データセット[MATH]に適用し，各固有表現抽出モデル[MATH]につき，抽出結果の固有表現リスト[MATH]をそれぞれ一つずつ得る．
訓練データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を，複数システム間[MATH]で整列し，訓練データセット[MATH]の事象表現[MATH]を作成する．
訓練データセット[MATH]の事象表現[MATH]を教師あり訓練データとして，複数システムの出力の正誤判別規則[MATH]を学習する．
次に，評価データセット[MATH]に，学習された正誤判別規則[MATH]を適用する手順の概要を示す．
個々の固有表現抽出モデル[MATH] [MATH]を，それぞれ，評価データセット[MATH]に適用し，各固有表現抽出モデル[MATH]につき，抽出結果の固有表現リスト[MATH]をそれぞれ一つずつ得る．
評価データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を，複数システム間[MATH]で整列し，評価データセット[MATH]の事象表現[MATH]を作成する．
複数システムの出力の正誤判別規則[MATH]を評価データセット[MATH]の事象表現[MATH]に適用し，性能を測定する．
本節では，訓練データセット[MATH]の事象表現[MATH]，あるいは，評価データセット[MATH]の事象表現[MATH]のデータ構造を説明し，複数システムの出力の正誤判別規則を学習する際の素性・クラスについて述べる．
以下では，訓練データセット[MATH]の事象表現[MATH]を例にして説明する．
訓練データセット[MATH]の事象表現[MATH]は，訓練データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を複数システム間[MATH]で整列することにより作成される．
ここで，整列結果の事象表現[MATH]は，セグメントの列[MATH]で表現され，各セグメント[MATH]は，整列された固有表現の集合[MATH]によって表現される．
ただし，この整列の際には，少なくとも一つの形態素を共有する複数の固有表現は，同じセグメントに含まれなければならない，という制約が課せられる．
次に，各セグメント[MATH]中の固有表現の集合[MATH]は，固有表現の事象表現の集合[MATH]に変換され，これにより，各セグメント[MATH]は事象表現[MATH]に変換される．
ここで，各事象表現[MATH]は，以下の二種類のうちのどちらかに対応し，それぞれ異なったデータ構造を持つ．
そのセグメント中で少なくとも一つのシステムにより出力された固有表現の事象表現．
そのセグメント中で一つも固有表現を出力しなかった一つのシステムに関する情報を表す事象表現．
i)のタイプの事象表現[MATH]は以下のようなデータ構造を持つ．
ここで，``[MATH]''はこの固有表現を出力したシステムの指標のリストを，``[MATH]''はこの固有表現を構成する形態素の数を，``[MATH]''はこの固有表現のタイプを，``[MATH]''はこの固有表現を構成する形態素の数の品詞のリストを，それぞれ表す．
また，``[MATH]''は，正解データと比較して，この固有表現が正解であるか(``[MATH]'')，それとも，システムによる誤出力であるか(``[MATH]'')を示す．
一方，ii)のタイプの事象表現[MATH]は，このセグメント中で，指標[MATH]を持つシステムが固有表現を出力しなかったことを示す，以下のようなデータ構造を持つ．
複数システムの出力の正誤判別を行なう規則は，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]を一つの事象単位として，学習および適用が行なわれる．
ここで，正誤判別規則の学習および適用の際には，セグメント[MATH]中の固有表現を各システムごとにまとめて，システム単位で正誤のクラスを参照する．
そこで，式([REF_eqn:segev])で定義される一つのセグメントの事象表現[MATH]に対して，各システム[MATH]ごとにまとめた以下のクラス表現を設定し，正誤判別規則の学習および適用を行なう．
ここで，一般に，一つのセグメント中で，各システムは一つも固有表現を出力しない場合もあれば，複数の固有表現を出力する場合もありえるので，各システム[MATH]のクラス[MATH]は上記のような表現になる．
次に，前節の事象のデータ構造を用いて，複数システムの出力の正誤判別を行なう規則について説明する．
複数システムの出力の正誤判別を行なう規則は，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]を一つの事象単位として，各システム[MATH]ごとに，式([REF_eqn:segcl])で示すクラス[MATH]を判別するという形式をとる．
この正誤判別規則の学習の際には，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から，次節で説明する素性を抽出し，この素性を用いて各システム[MATH]ごとのクラス[MATH]を判別する規則を学習する([REF_subsec:DL]節)．
この正誤判別規則の適用の際にも，事象表現[MATH]から抽出される素性を用いて各システム[MATH]ごとにクラス[MATH]を判別する([REF_subsec:apl]節)．
式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から抽出される一つの素性[MATH]は，システムの指標のリスト[MATH]，および，固有表現の素性表現[MATH]の組[MATH]の集合によって表現される．
このうち，一つの組[MATH]は，指標[MATH]に相当する(複数の)システムによって出力された一つの固有表現が，素性表現[MATH]を持つことを表している．
固有表現の素性表現[MATH]は，集合[MATH]の巾集合の任意の要素，あるいは，そのセグメント中で指標[MATH]に相当する(複数の)システムが固有表現を出力しなかったことを表す集合の形式，のいずれかで表現される．
F & = & \left{
{l} \Bigl{ mlength\!=\!\cdots, NEtag\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots, NEtag\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ NEtag\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots\Bigr}\nonumber
\Bigl{ NEtag\!=\!\cdots\Bigr}\nonumber
\Bigl{ POS\!=\!\cdots\Bigr}\nonumber
\emptyset\nonumber
\Bigl{ class_{sys}\!=\! ``no outputs'' \Bigr}\nonumber
\right.
正誤判別規則の学習時には，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から，式([REF_eqn:ftr])の形式のあらゆる可能な素性[MATH]のうち，以下の制約を含むいくつかの制約を満たすものだけが抽出される．
詳細については，次節の例を参照．
システムの指標のリスト[MATH]については，その固有表現を出力した全てのシステムの指標を記すこととし，部分リストの形式は許さない．
一つのシステムが，一つのセグメント中で複数個の固有表現を出力した場合は，一つの素性[MATH]中で，それらの複数の固有表現のうちの一部のものだけの情報を記述することは許さない．
それらの全ての固有表現について何らかの情報を記述するか，どの固有表現についての情報も記述しないかのどちらかである．
[REF_subsubsec:event]節の手続きにしたがって，二つのシステムの固有表現抽出結果を整列し，その整列結果を事象表現に変換する例を表[REF_tab:ev-eg]に示す．
また，[REF_subsubsec:class]節および[REF_subsubsec:ftr]節の手続きにしたがって，それらの事象表現からクラスおよび素性を抽出する例を表[REF_tab:ftr-eg]に示す．
表[REF_tab:ev-eg]では，形態素解析の結果の形態素列に対して，システム0およびシステム1の二つのシステムがそれぞれ単独で出力した固有表現を，「単独システムの固有表現出力」の欄に示す．
それらの単独システムの固有表現出力を整列した結果は，[MATH]の四つのセグメントに分割されており，これらのセグメントを事象表現に変換した結果が「事象表現」の欄に示されている．
各セグメントの特徴を簡単にまとめると以下のようになる．
[MATH] :システム0が連続する二つの固有表現を出力したのに対して，システム1はそれらをまとめて一つの固有表現として出力している．
正解データとの比較では，システム1の出力結果の方が正解である．
このセグメントの事象表現は，いずれかの単独システムから出力された三つの固有表現の事象表現から構成されている．
[MATH] :システム1のみが固有表現を出力したが，この固有表現は誤出力である．
このセグメントの事象表現は，システム0からの出力がなかったことを表す事象表現と，システム1が出力した一つの固有表現の事象表現から構成されている．
[MATH] :システム0が一形態素から構成される一つの固有表現を出力したのに対して，システム1はその形態素を含む三形態素から構成される一つの固有表現を出力した．
正解データとの比較では，システム1の出力結果の方が正解である．
このセグメントの事象表現は，各々の単独システムから出力された二つの固有表現の事象表現から構成されている．
[MATH] :システム0，システム1ともに二形態素から構成される同一の固有表現を出力した．
正解データとの比較では，この固有表現は正解である．
このセグメントの事象表現は，この一つ固有表現の事象表現から構成されている．
次に，表[REF_tab:ftr-eg]においては，まずクラスについては，これらの各セグメントの事象表現において，各システムが出力した固有表現のクラス(もしくは出力がなかったことを表す事象表現のクラス)をシステムごとにまとめたものになっている．
一方，素性の方は，各セグメントについて，以下の制約を満たす可能な素性の一覧を表現したものになっている．
[MATH] :システム0は，このセグメント中で二つの固有表現を出力しているが，この二つの固有表現のうちの一つだけの情報を記述した素性は許容しない．
[MATH] :ある単独システムからの出力がなかったことだけを記述した素性は許容しない．
例えば，[MATH]という素性は許容しない．
[MATH] :システムの指標のリストにおいては，このセグメントの固有表現を出力した二つのシステムの指標0および1の両方を必ず記述する．
教師あり学習法としては，決定リスト学習を用いる．
決定リスト[CITE]は，ある素性のもとでクラスを決定するという規則を優先度の高い順にリスト形式で並べたもので，適用時には優先度の高い規則から順に適用を試みていく．
本論文では，各規則の優先度として，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の条件付確率[MATH]を用い，この条件付確率順に決定リストを構成する．
ただし，決定リストを構成する際には，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の頻度[MATH]に下限[MATH]を設け，
の条件を満たす規則だけを用いて決定リストを構築する．
頻度の下限[MATH]は，各規則の条件付確率[MATH]を推定する際に使用したデータセット以外のデータセットに対して，正誤判別規則の性能を最大にする値を用いる．
学習された正誤判別規則を適用することにより複数システムの出力の混合を行なう場合は，式([REF_eqn:segev])と同じ形式のセグメントの事象表現
に対して，決定リストの形式の正誤判別規則が参照され，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の条件付確率[MATH]の推定値を得る．
そして，
複数のシステムによって出力された単一の固有表現は，同一の正誤クラスを持つ．
少なくとも一つの形態素を共有する複数の固有表現が，正のクラス(``[MATH]'')を持ってはならない．
という二つの制約のもとで，全システムについての条件付確率[MATH]の積を最大化するクラス割当ての組合わせが求められ，これが，セグメント中で各システム[MATH] [MATH]が出力した固有表現への正誤クラスの判別結果[MATH]となる．
固有表現抽出は，情報検索・抽出，機械翻訳，自然言語理解など自然言語処理の応用的局面における基礎技術として重要な技術の一つである．
英語においては，特に米国において，MUC(Message Understanding Conference，例えば，MUC-7 [CITE])コンテストにおける課題の一つとして固有表現抽出がとりあげられ，集中的に研究が行なわれてきた．
また，最近では，日本語においても，MET (Multilingual Entity Task,例えば，MET-1 [CITE]，MET-2 [CITE])やIREXワークショップ[CITE]などのコンテストにおいて，固有表現抽出が課題の一つに取り上げられている．
IREXワークショップの固有表現抽出タスクでは，表[REF_tab:irex_tag]に示す八種類の固有表現の抽出が課題とされた
[CITE]．
表[REF_tab:irex_tag]には，主催者側から提供された訓練データの主要部分を占めるCRL(郵政省通信総合研究所---現，独立行政法人通信総合研究所)固有表現データ(毎日新聞1,174記事の固有表現をタグ付け)，および本試験データのうちの一般ドメインのもの(毎日新聞71記事の固有表現をタグ付け)について，八種類の固有表現数を調査した結果を示す．
次に，上記のIREXワークショップの固有表現抽出タスクの訓練データを形態素解析システムbreakfast[CITE] で形態素解析し，その結果の形態素と固有表現の対応パターンを調査した結果を表[REF_tab:MnNE]に示す．
これからわかるように，半分近くの固有表現については，形態素と固有表現が一対一に対応しないことがわかる．
また，そのうち，一つの固有表現が複数の形態素から構成されている場合は90%近く(7175/ (7175+1022) = 87.5%)を占めており，これらの固有表現については，各固有表現の区切り位置はいずれかの形態素の区切り位置と一致している，すなわち，固有表現の開始位置は，先頭の構成要素となる形態素の開始位置と，また，固有表現の終了位置は，末尾の構成要素となる形態素の終了位置と，それぞれ一致する．
図[REF_fig:egMtoNE]にこのような場合の例を示す．
また，表[REF_tab:MnNE]の「その他」の場合の多くは，一つ以上の固有表現が一つの形態素の一部となる場合である．
例えば，「訪米」という形態素に対して，その一部である「米」のみがLOCATION(地名)であるという例がこれに相当する．
この「その他」の場合の固有表現については，その割合が少なく，また，先行研究[CITE]において，ある程度の割合で抽出できることがわかっているので，本論文における考慮の対象には含めない．
本節では，まず，ベースモデルとなる，最大エントロピー法を用いた日本語固有表現抽出の手法[CITE]を定式化する．
ここでの固有表現抽出の問題は，固有表現まとめ上げおよび固有表現タイプ分類の問題ととらえることができる．
いま，以下に示すような形態素列が与えられているとする．
ここで，現在の位置が形態素[MATH]のところであるとすると，日本語固有表現まとめ上げおよび固有表現タイプ分類の問題とは，この現在位置の形態素[MATH]に，まとめ上げ状態および固有表現タイプ(詳細は[REF_subsec:tagck]節で述べる)を付与することである．
本論文の統計的固有表現抽出においては，訓練データからの教師あり学習により固有表現抽出モデルを学習する．
その際には，各固有表現がどの形態素から構成されているかという情報が利用可能で，そのような情報を用いて固有表現抽出モデルを学習する．
例えば，以下の例では，現在の位置に相当する形態素[MATH]が[MATH]個の形態素からなる固有表現の一部であるという情報が利用可能である．
{
}
また，次節で述べる最大エントロピー法を用いて固有表現抽出モデルを学習する際には，現在位置および周囲の形態素の素性([REF_subsec:ftr]節)を条件として，現在位置の形態素に固有表現まとめ上げ状態およびタイプ([REF_subsec:tagck]節)をクラスとして付与するための条件付確率モデルを最大エントロピー法により学習する．
なお，通常，学習された確率モデルを適用して，形態素に固有表現まとめ上げ状態および固有表現タイプを付与することにより，固有表現の抽出を行なう場合は，一文全体で，固有表現まとめ上げ状態および固有表現タイプの確率を最大とする固有表現の組合わせを求める必要がある．
本論文では，この最適解探索の方法としては，[CITE]のものをそのまま用いている．
最大エントロピー法は，文脈を規定する制約を素性として与え，与えられた素性のもとでエントロピーを最大化するという条件によって求められる確率モデルである．
確率モデルの学習においてエントロピーを最大化することにより，与えられた制約を満たす最も一様なモデルが学習されるため，データの過疎性に強いという特徴を持つ．
ここでは，与えられた訓練集合から，文脈[MATH]においてクラス[MATH]を出力するプロセスの確率的振舞い，すなわち条件付確率分布[MATH]を最大エントロピー法に基づいて推定する方法の概略を説明する．
まず，訓練集合中の事象[MATH]の観測値を大量に集め，[MATH]を事象[MATH]の訓練集合中での生起頻度として，訓練集合中の経験的確率分布[MATH]を以下のように推定する．
次に，訓練集合中のどのような現象に注目して確率分布を推定するのかを表す二値の関数[MATH]を導入し，これを素性関数と呼ぶ．
具体的には，各素性関数[MATH]について，この関数が真となる事象[MATH]および[MATH]の集合[MATH]および[MATH]が規定されていると考え，この集合にしたがって素性関数[MATH]が以下のように定義される．
また，一般に確率モデル学習の際には，大量の素性からなる素性の候補集合[MATH]から，活性化された素性の部分集合[MATH]が選択され，これらによって事象[MATH]および確率分布[MATH]が記述される．
次に，実際に確率モデル学習を行う際には，活性化された素性集合[MATH]中の各素性[MATH]について，学習すべき確率分布[MATH]による素性[MATH]の期待値(左辺)と経験的確率分布[MATH]による素性[MATH]の期待値(右辺)が等しいとする以下の制約等式を課す．
そして，これらの制約等式を満たす確率分布[MATH]のうちで，以下の条件付エントロピー[MATH]を最大にする最も「一様な」モデルが，求めるべきモデル[MATH]であるとする．
([REF_eqn:me])式を満たす確率分布は必ず存在し，それは以下の確率分布[MATH]で記述される．
ただし，[MATH]は各素性[MATH]のパラメータである．
また，実際にエントロピーを最大にする最適なパラメータ[MATH]を推定するには，Improved Iterative Scaling(IIS)アルゴリズム[CITE]と呼ばれるアルゴリズムが用いられる．
本論文では，固有表現まとめ上げの際のまとめ上げ状態の表現法として，日本語固有表現抽出の既存の手法[CITE]において用いられた\sekine_encoding法を採用する．
この方法では，各固有表現タイプについて，以下の四種類のまとめ上げ状態を設定する．
--現在位置の形態素は，二つ以上の形態素から構成される固有表現の先頭の形態素である．
--現在位置の形態素は，三つ以上の形態素から構成される固有表現の先頭・末尾以外の中間の形態素である．
--現在位置の形態素は，二つ以上の形態素から構成される固有表現の末尾の形態素である．
--現在位置の形態素は単独で一つの固有表現を構成する．
また，固有表現を構成しない形態素のための状態として以下の状態を設定する．
--現在位置の形態素はどの固有表現にも含まれない．
結果として，この表現法では，固有表現まとめ上げ状態として，[MATH]の状態を設定する．
この方法により日本語固有表現のまとめ上げを行なう様子を表[REF_tab:NEcode]に示す．
各形態素の素性としては，以下の三種類のものを用いる．
語彙---訓練コーパス中で，固有表現の位置および周囲二形態素以内に5回以上出現した2,052語彙．
品詞---形態素解析システムbreakfastの約300種類の品詞．
文字種---平仮名・片仮名・漢字・数字・英語アルファベット・記号，およびそれらの組合わせ．
次に，本論文では，現在位置の形態素に対して固有表現のまとめ上げ状態を付与する際に，周囲のどれだけの形態素を考慮するか，つまり周囲の形態素をどのようにモデル化するかについて，以下の二種類のモデルを用いる．
一つ目のモデルは，現在位置の形態素がどれだけの長さの固有表現を構成するのかを全く考慮せずに，固有表現まとめ上げ状態を付与するモデルである．
これは，学習時においても，現在の形態素が，いくつの形態素からなる固有表現の一部であるか([REF_subsec:setting]節，式([REF_eqn:NE-len])参照)といった情報を全く考慮せず学習を行なうモデルである．
このモデルにおいては，以下に示すように，現在位置の形態素[MATH]の左側および右側の文脈中の形態素については，学習時においても適用時においても，常に固定された数の形態素だけを考慮する．
本論文ではこのモデルのことを，固定長モデルと呼ぶ．
本論文では特に，現在位置の形態素[MATH]の左側および右側の文脈中の形態素をいくつ考慮するかに応じて，左右二形態素ずつを考慮する5グラムモデル
左右三形態素ずつを考慮する7グラムモデル
左右四形態素ずつを考慮する9グラムモデル
を用いる．
一方，もう一つのモデルは，学習時において，現在位置の形態素が，いくつの形態素から構成される固有表現の一部であるか(式([REF_eqn:NE-len])参照)を考慮して学習を行なうモデルで，これを可変長モデルと呼ぶことにする[CITE]．
学習時には，現在位置の形態素が固有表現を構成しない場合には，5グラムモデルと同じく，現在位置およびその左右の二個ずつの形態素を考慮して学習を行なう．
一方，現在位置の形態素[MATH]が[MATH]個の形態素からなる固有表現の一部であるときには，固有表現を構成する形態素およびその左右の二個ずつの形態素を考慮して学習を行なう．
つまり，現在注目している固有表現の長さ[MATH]に応じて，考慮する周囲の形態素の総数が可変となる．
また，現在位置の形態素[MATH]が4個以上の形態素から構成される固有表現の一部であるときには，本論文では，以下の手順で，固有表現を構成するとみなす形態素数を3に限定するという近似を行なう．
現在位置の形態素が固有表現の先頭である場合は，先頭から三形態素のみが固有表現を構成するとみなし，四番目以降の形態素については右側文脈であるとみなす．
現在位置の形態素が固有表現の末尾である場合は，末尾の三形態素のみが固有表現を構成するとみなし，末尾の三形態素以外については左側文脈であるとみなす．
その他の場合は，現在位置の形態素およびその前後一形態素ずつのみが固有表現を構成するとみなし，それ以外の形態素については左側もしくは右側文脈であるとみなす．
例えば，以下のように，現在位置の形態素[MATH]が4個の形態素から構成される固有表現の一部である場合を考える．
この場合，固有表現を構成する末尾の形態素[MATH]が，あたかも固有表現の直後の右側文脈に存在する形態素であるかのようにみなされ，以下のように近似されてモデル化される．
モデルの適用時には，現在位置の形態素がどのような固有表現を構成するかという情報が利用できないので，固定長の9グラムモデルの場合と同様に，現在位置の形態素，および，左右四形態素ずつの素性を考慮してモデルの適用を行なう．
前節までで述べた固定長モデルおよび可変長モデルにおいて，特に現在位置の周囲の形態素の素性について，[REF_subsec:ftr]節で述べた素性のうちの全部または一部のみを用いるモデルとして，以下の三種類のモデルを設定し，これらについて実験的評価を行なう．
全素性を用いるモデル．
周囲の形態素[MATH]および[MATH]については，語彙素性および品詞素性のみを考慮するモデル．
周囲の形態素[MATH]および[MATH]については，語彙素性のみを考慮するモデル．
なお，[CITE]と同様に，周囲の複数の形態素の素性を結合した結合素性は用いていない．
本論文の複数システム出力の混合法では，以下の三種類の訓練・評価データセットを用いる．
[MATH]:個々の固有表現抽出モデルを学習するための訓練データセット．
[MATH]:複数システムの出力の正誤判別規則を学習するための訓練データセット．
[MATH]:複数システムの出力の正誤判別規則を評価するための評価データセット．
まず，以下に，訓練データセット[MATH]および[MATH]を用いて，複数システムの出力の正誤判別規則を学習するため手続きの概要を示す．
訓練データセット[MATH]を用いて，個々の固有表現抽出モデル[MATH] [MATH]を学習する．
個々の固有表現抽出モデル[MATH] [MATH]を，それぞれ，訓練データセット[MATH]に適用し，各固有表現抽出モデル[MATH]につき，抽出結果の固有表現リスト[MATH]をそれぞれ一つずつ得る．
訓練データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を，複数システム間[MATH]で整列し，訓練データセット[MATH]の事象表現[MATH]を作成する．
訓練データセット[MATH]の事象表現[MATH]を教師あり訓練データとして，複数システムの出力の正誤判別規則[MATH]を学習する．
次に，評価データセット[MATH]に，学習された正誤判別規則[MATH]を適用する手順の概要を示す．
個々の固有表現抽出モデル[MATH] [MATH]を，それぞれ，評価データセット[MATH]に適用し，各固有表現抽出モデル[MATH]につき，抽出結果の固有表現リスト[MATH]をそれぞれ一つずつ得る．
評価データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を，複数システム間[MATH]で整列し，評価データセット[MATH]の事象表現[MATH]を作成する．
複数システムの出力の正誤判別規則[MATH]を評価データセット[MATH]の事象表現[MATH]に適用し，性能を測定する．
本節では，訓練データセット[MATH]の事象表現[MATH]，あるいは，評価データセット[MATH]の事象表現[MATH]のデータ構造を説明し，複数システムの出力の正誤判別規則を学習する際の素性・クラスについて述べる．
以下では，訓練データセット[MATH]の事象表現[MATH]を例にして説明する．
訓練データセット[MATH]の事象表現[MATH]は，訓練データセット(テキスト)[MATH]中での各固有表現の出現位置の情報を用いて，抽出結果の固有表現リスト[MATH] [MATH]を複数システム間[MATH]で整列することにより作成される．
ここで，整列結果の事象表現[MATH]は，セグメントの列[MATH]で表現され，各セグメント[MATH]は，整列された固有表現の集合[MATH]によって表現される．
ただし，この整列の際には，少なくとも一つの形態素を共有する複数の固有表現は，同じセグメントに含まれなければならない，という制約が課せられる．
次に，各セグメント[MATH]中の固有表現の集合[MATH]は，固有表現の事象表現の集合[MATH]に変換され，これにより，各セグメント[MATH]は事象表現[MATH]に変換される．
ここで，各事象表現[MATH]は，以下の二種類のうちのどちらかに対応し，それぞれ異なったデータ構造を持つ．
そのセグメント中で少なくとも一つのシステムにより出力された固有表現の事象表現．
そのセグメント中で一つも固有表現を出力しなかった一つのシステムに関する情報を表す事象表現．
i)のタイプの事象表現[MATH]は以下のようなデータ構造を持つ．
ここで，``[MATH]''はこの固有表現を出力したシステムの指標のリストを，``[MATH]''はこの固有表現を構成する形態素の数を，``[MATH]''はこの固有表現のタイプを，``[MATH]''はこの固有表現を構成する形態素の数の品詞のリストを，それぞれ表す．
また，``[MATH]''は，正解データと比較して，この固有表現が正解であるか(``[MATH]'')，それとも，システムによる誤出力であるか(``[MATH]'')を示す．
一方，ii)のタイプの事象表現[MATH]は，このセグメント中で，指標[MATH]を持つシステムが固有表現を出力しなかったことを示す，以下のようなデータ構造を持つ．
複数システムの出力の正誤判別を行なう規則は，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]を一つの事象単位として，学習および適用が行なわれる．
ここで，正誤判別規則の学習および適用の際には，セグメント[MATH]中の固有表現を各システムごとにまとめて，システム単位で正誤のクラスを参照する．
そこで，式([REF_eqn:segev])で定義される一つのセグメントの事象表現[MATH]に対して，各システム[MATH]ごとにまとめた以下のクラス表現を設定し，正誤判別規則の学習および適用を行なう．
ここで，一般に，一つのセグメント中で，各システムは一つも固有表現を出力しない場合もあれば，複数の固有表現を出力する場合もありえるので，各システム[MATH]のクラス[MATH]は上記のような表現になる．
次に，前節の事象のデータ構造を用いて，複数システムの出力の正誤判別を行なう規則について説明する．
複数システムの出力の正誤判別を行なう規則は，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]を一つの事象単位として，各システム[MATH]ごとに，式([REF_eqn:segcl])で示すクラス[MATH]を判別するという形式をとる．
この正誤判別規則の学習の際には，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から，次節で説明する素性を抽出し，この素性を用いて各システム[MATH]ごとのクラス[MATH]を判別する規則を学習する([REF_subsec:DL]節)．
この正誤判別規則の適用の際にも，事象表現[MATH]から抽出される素性を用いて各システム[MATH]ごとにクラス[MATH]を判別する([REF_subsec:apl]節)．
式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から抽出される一つの素性[MATH]は，システムの指標のリスト[MATH]，および，固有表現の素性表現[MATH]の組[MATH]の集合によって表現される．
このうち，一つの組[MATH]は，指標[MATH]に相当する(複数の)システムによって出力された一つの固有表現が，素性表現[MATH]を持つことを表している．
固有表現の素性表現[MATH]は，集合[MATH]の巾集合の任意の要素，あるいは，そのセグメント中で指標[MATH]に相当する(複数の)システムが固有表現を出力しなかったことを表す集合の形式，のいずれかで表現される．
F & = & \left{
{l} \Bigl{ mlength\!=\!\cdots, NEtag\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots, NEtag\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ NEtag\!=\!\cdots, POS\!=\!\cdots\Bigr}\nonumber
\Bigl{ mlength\!=\!\cdots\Bigr}\nonumber
\Bigl{ NEtag\!=\!\cdots\Bigr}\nonumber
\Bigl{ POS\!=\!\cdots\Bigr}\nonumber
\emptyset\nonumber
\Bigl{ class_{sys}\!=\! ``no outputs'' \Bigr}\nonumber
\right.
正誤判別規則の学習時には，式([REF_eqn:segev])で定義されるセグメントの事象表現[MATH]から，式([REF_eqn:ftr])の形式のあらゆる可能な素性[MATH]のうち，以下の制約を含むいくつかの制約を満たすものだけが抽出される．
詳細については，次節の例を参照．
システムの指標のリスト[MATH]については，その固有表現を出力した全てのシステムの指標を記すこととし，部分リストの形式は許さない．
一つのシステムが，一つのセグメント中で複数個の固有表現を出力した場合は，一つの素性[MATH]中で，それらの複数の固有表現のうちの一部のものだけの情報を記述することは許さない．
それらの全ての固有表現について何らかの情報を記述するか，どの固有表現についての情報も記述しないかのどちらかである．
[REF_subsubsec:event]節の手続きにしたがって，二つのシステムの固有表現抽出結果を整列し，その整列結果を事象表現に変換する例を表[REF_tab:ev-eg]に示す．
また，[REF_subsubsec:class]節および[REF_subsubsec:ftr]節の手続きにしたがって，それらの事象表現からクラスおよび素性を抽出する例を表[REF_tab:ftr-eg]に示す．
表[REF_tab:ev-eg]では，形態素解析の結果の形態素列に対して，システム0およびシステム1の二つのシステムがそれぞれ単独で出力した固有表現を，「単独システムの固有表現出力」の欄に示す．
それらの単独システムの固有表現出力を整列した結果は，[MATH]の四つのセグメントに分割されており，これらのセグメントを事象表現に変換した結果が「事象表現」の欄に示されている．
各セグメントの特徴を簡単にまとめると以下のようになる．
[MATH] :システム0が連続する二つの固有表現を出力したのに対して，システム1はそれらをまとめて一つの固有表現として出力している．
正解データとの比較では，システム1の出力結果の方が正解である．
このセグメントの事象表現は，いずれかの単独システムから出力された三つの固有表現の事象表現から構成されている．
[MATH] :システム1のみが固有表現を出力したが，この固有表現は誤出力である．
このセグメントの事象表現は，システム0からの出力がなかったことを表す事象表現と，システム1が出力した一つの固有表現の事象表現から構成されている．
[MATH] :システム0が一形態素から構成される一つの固有表現を出力したのに対して，システム1はその形態素を含む三形態素から構成される一つの固有表現を出力した．
正解データとの比較では，システム1の出力結果の方が正解である．
このセグメントの事象表現は，各々の単独システムから出力された二つの固有表現の事象表現から構成されている．
[MATH] :システム0，システム1ともに二形態素から構成される同一の固有表現を出力した．
正解データとの比較では，この固有表現は正解である．
このセグメントの事象表現は，この一つ固有表現の事象表現から構成されている．
次に，表[REF_tab:ftr-eg]においては，まずクラスについては，これらの各セグメントの事象表現において，各システムが出力した固有表現のクラス(もしくは出力がなかったことを表す事象表現のクラス)をシステムごとにまとめたものになっている．
一方，素性の方は，各セグメントについて，以下の制約を満たす可能な素性の一覧を表現したものになっている．
[MATH] :システム0は，このセグメント中で二つの固有表現を出力しているが，この二つの固有表現のうちの一つだけの情報を記述した素性は許容しない．
[MATH] :ある単独システムからの出力がなかったことだけを記述した素性は許容しない．
例えば，[MATH]という素性は許容しない．
[MATH] :システムの指標のリストにおいては，このセグメントの固有表現を出力した二つのシステムの指標0および1の両方を必ず記述する．
教師あり学習法としては，決定リスト学習を用いる．
決定リスト[CITE]は，ある素性のもとでクラスを決定するという規則を優先度の高い順にリスト形式で並べたもので，適用時には優先度の高い規則から順に適用を試みていく．
本論文では，各規則の優先度として，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の条件付確率[MATH]を用い，この条件付確率順に決定リストを構成する．
ただし，決定リストを構成する際には，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の頻度[MATH]に下限[MATH]を設け，
の条件を満たす規則だけを用いて決定リストを構築する．
頻度の下限[MATH]は，各規則の条件付確率[MATH]を推定する際に使用したデータセット以外のデータセットに対して，正誤判別規則の性能を最大にする値を用いる．
学習された正誤判別規則を適用することにより複数システムの出力の混合を行なう場合は，式([REF_eqn:segev])と同じ形式のセグメントの事象表現
に対して，決定リストの形式の正誤判別規則が参照され，素性[MATH]の条件のもとでの，システム[MATH]のクラス[MATH]の条件付確率[MATH]の推定値を得る．
そして，
複数のシステムによって出力された単一の固有表現は，同一の正誤クラスを持つ．
少なくとも一つの形態素を共有する複数の固有表現が，正のクラス(``[MATH]'')を持ってはならない．
という二つの制約のもとで，全システムについての条件付確率[MATH]の積を最大化するクラス割当ての組合わせが求められ，これが，セグメント中で各システム[MATH] [MATH]が出力した固有表現への正誤クラスの判別結果[MATH]となる．
