今，図[REF_zu1](a)のように例文と構文木が与えられていると仮定する．
この場合，文脈自由文法における終端記号の集合は[MATH]と書ける．
非終端記号の集合を[MATH]，初期記号を[MATH]として，この構文木を同図(b)のように変形し，各節点に非終端記号を割り当てたとする．
すると，各節点の上下関係から次のshift-reduceパーザの規則を得ることができる[CITE]．
この規則の中には[MATH]，[MATH]，[MATH]のように左辺が等しく右辺が異なるものが存在する．
このような規則は，shift-reduceパーザの探索空間を広げ，処理速度を低下させる．
先の規則において左辺が[MATH]の時，右辺が[MATH]となる条件つき確率を[MATH]，右辺がshiftとなる条件つき確率を[MATH]とする．
同様に，左辺が終端記号[MATH]の時，右辺が[MATH]となる条件つき確率を[MATH]で表す．
更に規則[MATH]の出現確率を[MATH]，規則[MATH] shiftの出現確率を[MATH]とする．
また規則[MATH]の出現確率を[MATH]とする．
すると，上記のshift-reduceパーザの規則はこれらの確率を用いて次のように書き直すことができる．
[MATH]において左辺が等しく右辺が異なるような規則を減らすということは，上記の条件つき確率のすべてを1または0に近づけるということに対応する．
これは更に次の([REF_eq5])式で定義されるエントロピー[MATH]を減少させることに等しい[CITE]．
従って，構文木の各節点に対する非終端記号の割当てを，[MATH]が最小となるように変更すれば，shift-reduceパーザの動作に最適な規則を得ることができる．
この最小化は組合わせ最適化問題に対応する．
この場合，組合せ空間にはいくつもの極小値が存在する．
よって，この方法ではシミュレーテッド・アニーリング法を用いて[MATH]の最小化を行う[CITE]．
こうして獲得したshift-reduceパーザの動作規則からは，容易に文脈自由文法を作り出すことができる．
すなわちこの方法は，文法を獲得する方法であるとみなせる．
また，[MATH]を用いてperplexity [MATH]を次のように計算できる．
[MATH]は物理的には，一つの左辺に対して平均いくつの右辺が存在するかを示す値となる．
新聞記事7500文を対象として，この方法により解析を行った結果，左辺が形態素である規則の条件つき生起確率[MATH]は，左辺が非終端記号2個の規則の条件つき生起確率[MATH]と比べて，値が小さくなることが示された[CITE]．
これは，一つの形態素が多数の用法を持っていることを示している．
従って複数の形態素を組合わせたより長い文字列を，この解析の単位として用いることにより，shift-reduceパーザの解析効率をより高めることができると予想される．

2節で述べた獲得法により獲得した文法を用いるshift-reduceパーザは，認知単位の内部まで係受けを調べるため，探索空間は膨大なものとなる．
しかし，前節の考察から，人間においては，認知単位の内部については，通常解析は行っていないと考えられる．
よって，2節の解析方法の単位として，3節で述べた認知単位を用いれば，探索空間は大きく狭まり検索効率は向上すると考えられる．
本研究では，図{[REF_zu3a]}のように，認知単位を用いた構文木を作り文法を獲得するものとした．
この文法獲得を行うにあたり，NHKの気象通報の始めに放送される天気概況文1000文を，構文木情報を含めて手入力し，コーパスとして用いた．
使用した天気概況文の例を図[REF_zu3]に示す．
人間の認知単位は知覚実験により得られるもので，人間における認知単位をすべて明らかにして辞書を作成するためには膨大な知覚実験が必要となる．
従って，本研究では簡単のため，人間同様と思われる単位を新たに定義し，機械処理用の認知単位として解析に利用することとした．
以下，本論文ではこの機械処理用の認知単位を，単に認知単位と呼ぶ．
本論文では，天気概況文における機械処理用の認知単位を次のように定義する．
ただし，複合語は1つの自立語として扱う．
また，活用する語については活用語尾も含めて1つの自立語とする．
補助的な語は，以下の形態素もしくはその組み合わせとする．
「が」，「は」，「です」，「ます」のような付属語列
継続，状態を示す「いる」，「おる」
状態を示す「なる」
前節に示したコーパスを用いて実際に文法の自動獲得を行なった．
非終端記号数[MATH]における，シミュレーテッド・アニーリング法による文法獲得の様子を図[REF_zu4]に示す．
[MATH]は温度パラメータであり，初期値を経験的に定め，項比0.98の等比数列に従い減少させた．
各[MATH]について，各節点とも[MATH]回の非終端記号の更新を行った．
この結果得られた[MATH]の最終値を表[REF_hyo1]に示す．
獲得の結果は，すべて[MATH]が[MATH]以下になった．
これは動作規則の左辺1つに対して，右辺が[MATH]以下となる規則が得られたことを示している．
前節に述べた方法により，認知単位を基本とした文法を獲得することができる．
従って，コーパスに出現した認知単位のすべてを辞書に納めておけば，前節で獲得した動作規則に基づいて構文解析を行うことができる．
しかし，認知単位は形態素を複数組合わせたものであるため，認知単位の中には極めて出現率が低いものがいくつも存在し，これらの認知単位は限られたコーパス中においては，一度も出現しない可能性がある．
従って収録文数が限られたコーパスでは，形態素を単位とした解析法よりも，認知単位を単位とした解析法の方が未知語の比率が高くなる．
このようなコーパスの場合，2節の方法の単位として単に認知単位を用いただけでは，未知の認知単位を含む文が解析不能となり，結果的に解析効率が低下する．
この現象を抑えるためには，未知の認知単位に関する知識を，既知の認知単位に関する知識から推定する必要がある．
本研究ではこの推定を行うため，認知単位を，形態素を基本とする状態遷移図で表現できると仮定する．
すると，例えば「東日本では」という認知単位が「東」，「日本」，「では」という3つの形態素からなり，shift-reduceパーザの動作規則または文脈自由文法の生成規則によって，非終端記号[MATH]に置き換え可能であるとすると，この認知単位を図[REF_zu5]のように，隠れ状態[MATH]を持つ状態遷移図モデルで表現し，取り扱うことができる．
同図における各状態に対して更に，[MATH]を初期状態，[MATH]，[MATH]を中間状態，[MATH]を受理状態と呼ぶ
ことにし，この受理状態[MATH]が非終端記号[MATH]に対応しているものと考える．
コーパスに出現するすべての認知単位に対しこのモデルを適用し，各認知単位についてすべて異なる隠れ状態[MATH]を生成すると，おびただしい数の隠れ状態が必要となる．
このため，隠れ状態の総数[MATH]より小さい[MATH]を考え，[MATH]のような初期状態を初期状態記号[MATH]に写像し，[MATH]，[MATH]のような中間状態を中間状態記号[MATH]のいずれかに写像する写像[MATH]を考え，状
態を統一化する．
写像[MATH]を決めると，コーパスより，状態[MATH]から単語[MATH]を通って[MATH]に移る確率[MATH]と条件つき確率[MATH]を調べることができる．
同様に状態[MATH]から単語[MATH]を通って[MATH]に移る確率[MATH]と条件つき確率[MATH]も調べることができる．
これらの確率を用いて，状態遷移図のエントロピーは次のように表現される．
このエントロピー[MATH]を用いて，状態遷移図における平均分岐数は次のように求まる．
[MATH]は物理的には，一つの状態から平均いくつの枝が出ているかを示している．
この方法で得られた状態遷移図を用いて，有限オートマトンで認知単位を検出するとすれば，この分岐数[MATH]が小さい程オートマトンの決定性が高まり，動作が効率的になる．
[MATH]が最小となるよう[MATH]を求める問題は，組合わせ最適化問題となる．
この組合わせ空間に
はやはり多数の極小値が存在するため，本研究ではシミュレーテッド・アニーリング法により[MATH]を最小化する．
[MATH]による状態の統一化により，ある認知単位に関する状態遷移図と，その認知単位に近い用法を持つ別の認知単位に関する状態遷移図は交差する．
この交差により，認知単位に関する知識は統一化され，未知の認知単位も受理できるようになる．
従って，こうして得た状態遷移図は未知の認知単位を含めた状態遷移図となる．
[MATH]の最適化は，エントロピー[MATH]を基準としてこの交差を最適化することになる．
本研究では，この最適化により未知の認知単位に関する状態遷移図も最適化されると仮定し，最適化により得た状態遷移図に基づき認知単位を受理する．
このように形態素を基本とした状態遷移図を用いる方法では，最終的には辞書としては形態素の辞書を持つことになる．
しかし，有限オートマトンによる解析は，shift-reduceパーザのようなより高次の解析方法に比べて動作が直線的であるため一般に高速である．
従って，認知単位内の解析に状態遷移図と有限オートマトンを用いる方法は，文全体をshift-reduceパーザで処理する方法に比べ高速となる利点がある．
以上の議論に基づき，(A)形態素を基本として文法を獲得する方法，(B)認知単位を基本として文法を獲得し，認知単位をそのまま辞書に登録する方法，(C)認知単位を基本として文法を獲得し，認知単位を受理する状態遷移図を獲得する方法の3つの評価を行った．
評価は，獲得した文法に基づき，別に用意した100文を構文解析することによって行った．
計算はSUNのSPARC Station 20モデル612を用いた．
この結果を表[REF_hyo4]に示す．
表中において正解率はこの結果，最も確からしいと判断された構文木が，コーパスに与えられている構文木と等しい確率を示す．
探索はbest-first search法を用いているため，既存の知識では最終的に構文木が生成できない文があると，その文の処理に極端に時間がかかる．
その一方で，解に容易に到達できる場合もあり，文によって処理時間のばらつきが大きい．
非終端記号20では，このように探索に時間がかかる文が多く，(A)(B)(C)ともに長い時間を要している．
特に認知単位を用いた(B)および(C)では，表[REF_hyo1]における[MATH]が，他に比べて大きく，この結果長い時間がかかっているものと思われる．
従って，認知単位を用いた方法では，非終端記号20では十分に整理された文法が得られないものと考えられる．
しかし，非終端記号数が[MATH]以上になると(B)(C)，特に(B)は，処理速度が著しく高速になる．
これは，認知単位を用いる方が，構文木を構成する葉の候補の数が少ないため，構文解析での探索経路が少なくなることに起因する．
正解率でみると，(C)が最も良く，ついで(A)(B)の順となっている．
(B)が(A)に比べて劣るのは未知認知単位があるためであると考えられる．
(C)において未知認知単位の自動獲得が有効に機能しているのが分かる．
