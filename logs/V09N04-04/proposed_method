句表現要約の概念 \label{gainen}
At-a-glance要約でひとつの具体的な目標にしたのが，電車の中吊り広告として見られる雑誌広告である．ここで示される記事の見出しは，その記事本体を読むか否かを判断するための情報で，まさにindicative要約になっている．

これらの見出しは次のような性質をもっている．
\begin{itemize}
 \item 構造が単純
 \item 文は短く
\end{itemize}

\noindent
我々は，この単純さ，短さを「句」という言葉を用いて表す\footnote{日本語では「句」と「節」の明確な区別はない．ここでは，「句」を言語学的なものとは異なり，「短さ」，「単純さ」を強調するための概念的なものとして用いる．}．句表現要約は，重要概念(単語)を含んだ短い句の並びで文書の概要を表現することによって，「読む」負荷を読者に与えずに，重要概念間の関係が把握できることを目指すものである．

短い句を生成するために，単語と単語の係り受け関係を基本単位として，ふるいわけに必要な重要な概念を含み，意味にまとまりをもたせるのに必要な最低限の関係だけを選択して組み立てる方法をとる．


アルゴリズム
\subsection{アルゴリズム概要}

まず図\ref{algo}を用いてアルゴリズムの概要を示す．句表現要約手法には，大きくは次の4つのステップがある．

\begin{figure}[htbp]
  \begin{center}
   \epsfile{file=eps/algorithm.eps,width=10cm}
    \caption{アルゴリズム概略}
    \label{algo}
  \end{center}
\end{figure}

\begin{description}
 \item[1) 係り受け関係の解析：]
 文書中の文を一文ごとに解析し，それぞれDAG (Directed Acyclic Graph)を得る．ここでは，アークとその両端のノード(単語列：名詞連続も含む)をまとめたものを関係の単位(以降では{\bf 関係単位}と呼ぶ)とする．アークは係り側単語列と受け側単語列の係り受け関係を示しており，関係名がラベルとして付与される．図\ref{algo}では説明のため意味的な役割を付記しているが，表層格を関係名として用いている．

 \item[2) コア関係の選択：]
 文書中の全関係単位から重要な関係単位をひとつ選択する．これを{\bf コア関係}と呼ぶ．図中では薄墨をつけたノードと太線のアークで示している．

 \item[3) 関係の補完：]
 コア関係だけでは意味が特定されずふるいわけの情報としては不十分であるので，意味を限定し，意味的なまとまりを持たせるために必要な関係単位を補完する．図\ref{algo}ではこれらを二重線で囲んだ要素で示している．

 \item[4) 表層句の生成：]
 DAG中で選択されたサブツリーから，次に示すような短い句を生成する．
 \begin{center}
 「ライフサイクル全体を視野に入れたリサイクルモデル」
 \end{center}
\end{description}

このアルゴリズムの基本構造を図\ref{frame}に示す．上記のステップを，最初に設定した条件(句の数や要約全体の長さなど)を満たすまで繰り返すことで，短い句を複数個得る．繰り返しの際に，用いた単語のスコアを一定の割合で落とすことにより，同じ単語ばかりが繰り返し出現することを避ける．

\begin{figure}[htbp]
  \begin{center}
   \epsfile{file=eps/frame.eps,width=8cm}
    \caption{アルゴリズム基本構造}
    \label{frame}
  \end{center}
\end{figure}


次節以降に，個々のステップを検討する．

\subsection{係り受け解析}
文書中の各文に対して係り受け解析を行い，単語(列)をノード，係り受け関係をアークとするDAGを得る．

係り受け解析は，形態素解析結果の単語列に対して，パターンマッチにより係り受け関係を抽出する方法~\cite{miyauchi95}を用いている．この方法ではバックトラックを行わないため，解析誤りも含まれる．例えば，「N1のN2のN3」は基本的にあいまいな構造であるが，名詞$+$「の」は直後の名詞に係るようにしており，解析誤りが生じる可能性がある．このような解析誤りの一部は，関係補完のステップで``ambiguity packing''という方法で隠蔽される．

\subsection{関係スコアリングとコア関係選択}
すべての関係単位に重要度スコアを付与する．

まず，すべての単語にスコアを付与する．スコア付けの方法としては，一般的な方法であるtf*IDF積~\cite{salton89}をベースとして採用しているが\footnote{IDFを決めるためには，文書の全体集合を規定する必要があるが，ここではある時点でWWWから集めた100万文書を文書集合として用いている．また，これとは別に新聞記事からDFをカウントしたものも用意している (CD-毎日新聞95年版を利用させていただいた)．}，tf*IDF積ではtfの影響が強すぎる傾向が見られるので，tfの平方根をとることでtfによるスコアの伸びを抑える．

関係スコアの計算式は次式で与える．
\begin{equation}
 {\rm Score} = {\rm Srel} \ast ({\rm S1} + {\rm S2}) \label{eq-score}
\end{equation}

S1，S2は関係アークでつながれる係り側と受け側の語ノードそれぞれのスコアである\footnote{なお，検索におけるクエリー中の語のスコアを高くすることで，それらの語が要約に含まれやすくし，ふるいわけにより適した要約を生成することが可能になる．この方法は次のテーマとして検討を進めている．}．複合語のスコアは，構成要素の単語スコアから計算する．長い複合語は意味を特定する目的には効果があるのだが，短い句を出す目的には不利になるので，両者のバランスをとり，構成要素の単語スコアの和を，それを構成する単語数に応じて減少させている．

Srelは関係の種類に与える重要度である．動詞の格のように概念の中心的な役割を果たすものは大きく，名詞の並列のように関係が周辺的と考えられるものは低く設定している~\cite{oka99}．また，副詞のように修飾的な意味が強いものは，関係そのものを選択しないよう，${\rm Srel} = 0$としている．付録\ref{app1}に関係の種類を列挙する．
このようにしてスコア付けしたすべての関係単位の中から，スコアの最も大きいものを選択し，コア関係とする．

\subsection{関係補完}
コア関係だけでは提示される情報が不足し，ふるいわけの目的には十分ではない．情報をより特定する付加的な要素を補完し，読者が元文書の内容を推測することを助ける．ここではその補完規則から一部を示す(付録\ref{app2}に存在する規則を列挙する)．

\begin{itemize}
 \item {\bf 必須格にあたる関係 [H1]} \\
係り側，受け側のいずれかが用言の場合，必須格に当たる関係を追加する．一部の動詞に対してはそれぞれに必須格にあたる関係を規定しているが，それ以外の動詞に対しては一律に「が」関係，「を」関係，「に」関係を必須格関係として扱っている．また，係助詞「は」，「も」，格助詞「の」，無形格もこれらを置き換え得るものとして同じ扱いとする．

\begin{tabular}{ll}
 例) & フーバー社が発売する → フーバー社が\underline{PDAを}発売する \\
 & 美しい女性 → \underline{髪の}美しい女性 \\
\end{tabular}
 \item {\bf 用言に修飾される名詞 [E1]} \\
用言によって修飾される名詞がある場合，この用言部分は埋め込み構造を形成する．受け側の名詞は，埋め込み文中の格を占める場合と，格を占めない場合(同格など)がある．いずれの場合も，句のまとまりを形成する上で必要であるため，用言から名詞への修飾関係を付加している．

\begin{tabular}{ll}
 例) & PDAを発売する → PDAを発売する\underline{フーバー社} \\
 & PDAを発売する → PDAを発売する\underline{計画} \\
\end{tabular}
 \item {\bf 抽象度の高い名詞への修飾 [H5]} \\
「こと」，「もの」などの形式名詞や，「場合」，「時代」などそれ自身では独立して存在することが少なく，なんらかの限定的な修飾句を伴わなければ意味が通じないことが多い名詞を抽象度の高い名詞として定義し，これらの名詞を受け側とする関係を付加することにより，より適切な情報を提供する．

\begin{tabular}{ll}
例）&  時代に活躍した → \underline{激動の}時代に活躍した \\
\end{tabular}
 \item {\bf Ambiguity Packing\footnote{構文解析で用いられている場合とは異なった意味で用いている．} [E3]} \\
既に述べたように，パターンマッチによる解析ではあいまいさを解消する能力までもたないため，解析誤りが含まれることが多い．例えば，
\begin{center}
 アーチ型の屋根の庇
\end{center}
では，「アーチ型→屋根」，「屋根→庇」の2つの関係しかとっておらず，正しい「アーチ型→庇」がとれない．「アーチ型→屋根」の関係がすでに選択されている場合，「屋根→庇」の関係を補完し，結果的に「アーチ型の屋根の庇」として要約に含まれるようにする．より性能の高い解析器を用いた場合でも，あいまいさの完璧な解消はできないため，この方法は有効である\footnote{このように補完規則で解決できる解析誤りは一部である．誤った例として，元文書の「広東式月餅は日本で一年中売っているお菓子の月餅のような皮， 潮州式月餅はパイ生地の皮という違いがあります．」という文から，「広東式月餅は...一年中売っている...」という句が生成されている例があった．「広東式月餅は」から「売っている」という係り受けが誤って抽出されていることがわかる．後述する実験の結果では，このような誤った係り受けが含まれている要約を用いながら，他の要約より良好な結果を得ている．Indicative目的にのみ用いていることが，誤りの悪影響の少ない要因と考えられる．}．
\end{itemize}

\subsection{終了条件の判定と繰り返し}
終了条件は，句の数または要約全体の長さのいずれかで指定する．終了条件が満たされない場合，次の句を選択するため図\ref{frame}のコア選択以降を繰り返す．

要約中の手がかりとなる語の種類を増やすため，このループで得られた句の中の語がなるべく繰り返し使われないようにする．このために今回使われた語 (補完された単語も含む)のスコアを減らす．これを行う関係再スコアリングというステップを図\ref{frame}のコア選択に入る前に入れる．

関係再スコアリングで行っている処理は以下のとおり．

\begin{enumerate}
 \item 今回使われた語 (補完された単語も含む)のスコアに一定の逓減率R ($0 < {\rm R} < 1$)を積算する
 \item 新しい単語スコアを用いて，式(\ref{eq-score})に従い，文書中のすべての関係単位のスコアを計算する．
\end{enumerate}

逓減率Rは0.5を標準としている．Rの値の設定に関する考察は付録\ref{app3}を参照されたい．

なお，2回目以降のコア選択においては，それまでに用いられた関係単位は除外する．この除外規定では1文中から複数のコア関係が選択されることはありうるので，1文から複数の句が生成される場合もある．またそれらがお互いの一部を共有する場合もある\footnote{一部を共有する句の場合，一つの句に結合しても予め設定した句長制限よりも短い場合には，結合した句を出力するようにしている．}．

\subsection{表層句の生成}
このようにして，コア関係にいくつかの関係が付加された複数のDAGが得られる．このステップにおいては，ノードおよびアークにそれぞれ対応付けられている表層表現を出現順に取り出して結合することで，それぞれのDAGごとに表層表現を得る．得られた表層表現を，元文書における出現順に列挙する．


実現と応用
このアルゴリズムに基づいて，要約システムを開発した．開発言語はJava で，Windows NT~/~2000 およびSolaris 2.6上で稼動している\footnote{Java および Solaris は Sun Microsystems社の，Windows はMicrosoft 社，Celeron は Intel社の商標である．}．

要約に要する時間はテキスト長に比例し，4KB (2000文字，A4文書1ページ相当)の文書の場合，Celeron 500 MHzのPCで約700\,msecである．95\,\% 以上が解析(形態素解析と係り受け解析)で消費されている． 

\begin{figure}[htbp]
\vspace{-1em}
  \begin{center}
   \epsfile{file=eps/applyex.eps,width=10cm}
    \caption{適用例}
    \label{applyex}
  \end{center}
\end{figure}

文書管理システムとの統合例を図\ref{applyex}に示す．検索結果として得られた文書に，句表現要約(ここでは「キーフレーズ」という名前で示されている)を付加して列挙している．


関係の種類 \label{app1}
係り受け関係は個別には100種類以上あるので，タイプ別にまとめ図\ref{kankei}に示す．

\begin{figure}[htbp]
\begin{center}
  \epsfile{file=eps/kankei.eps,width=12cm}
  \caption{関係の種類別リスト}
  \label{kankei}
\end{center}
\end{figure}

補完規則 \label{app2}
ここでは補完規則のうちコア関係に対する補完規則を示す．補完された関係にさらに補完を行う規則が存在するが，この規則のサブセットであるため省略する．コア関係が図\ref{complement}のノードA，BとアークRcoreで形成されているとき，付加可能な関係は，係り側Aにかかる関係(ノードCとアークRc) ，受け側Bに係る関係(ノードDとアークRd)，受け側Bからかかる関係(アークReとノードE)の3種である．表\ref{comprule}に補完規則をまとめる．

\begin{figure}[htbp]
\begin{center}
  \epsfile{file=eps/complement.eps,width=10cm}
  \caption{補完される場所}
  \label{complement}
\end{center}
\end{figure}

\vspace{-2em}
\begin{table}[htbp]
\begin{center}
  \caption{補完規則}
  \epsfile{file=eps/comprule.eps,width=14cm}
  \label{comprule}
\end{center}
\end{table}


低減率の効果 \label{app3}
低減率を変え，本論文の第\ref{hajimeni}章および第\ref{gainen}章に対して句表現要約を作成した結果を示す．

\bigskip

{\bf
\begin{tabular}{l}
${\rm R} = 0.9$ \\
...indicativeな目的に用いられる要約の目標... \\
句表現要約手法は，...開発した． \\
句表現要約は，...「読む」負荷を読者に与えず... \\
句表現要約は，...句の並びで文書の概要を表現する... \\
...単語と単語の係り受け関係を...ふるいわけ... \\
\end{tabular}
}

\bigskip
{\bf
\begin{tabular}{l}
${\rm R} = 0.6$ \\
...文をピックアップする方法を採用している． \\
句表現要約手法は，...開発した．\\
...要約のふるいわけ効果の評価実験について述べる．\\
句表現要約は，...「読む」負荷を読者に与えず... \\
...単語と単語の係り受け関係を...ふるいわけ... \\
\end{tabular}
}

\bigskip
{\bf
\begin{tabular}{l}
 ${\rm R} = 0.3$ \\
 ...文をピックアップする方法を採用している．\\
 ...要約のふるいわけ効果の評価実験について述べる．\\
 At-a-glance要約で...具体的な目標にした... \\
 句表現要約は，...「読む」負荷を読者に与えず... \\
 ...単語と単語の係り受け関係を...ふるいわけ...
\end{tabular}
}

\vspace{2zw}

このように低減率を1に近くすると初期スコアの高い単語列(この場合は「句表現要約」)が複数回出現し，0に近づけると異なった部分が採用されやすくなる．どの要約が最もよいかという評価基準は存在せず，目的に合わせて選択することになる．現状では，要約を予め作成しておくため，より広い検索要求に応えられるよう異なった重要語が含まれるように(低減率は小さく)，一方特に重要な語はそれに応じて複数回出すこともできるように (低減率は大きく)という目的にあわせて0.5に設定している．検索要求に適した要約を検索時に作成する場合には検索要求に現れる語がどのようなコンテキストで現れているかがなるべく多く現れるようにするため低減率を1に近く設定しておいたほうがよいと考えられる．

\vspace{.5zw}

\begin{biography}
\biotitle{略歴}
\bioauthor{上田 良寛}{1980年京都大学工学部卒業．1982年同大学大学院工学研究科修士課程修了．同年富士ゼロックスに入社．機械翻訳，推敲支援，情報検索，要約などの研究・開発に従事．
1988年から1991年までATR自動翻訳電話研究所に在籍．言語処理学会，情報処理学
会，人工知能学会，ACL各会員．}

\bioauthor{岡 満美子}{1988年早稲田大学理工学部卒業．1990年同大学大学院理工学研究科修士課程修了．同年富士ゼロックスに入社．情報検索，テキスト要約などの研究・開発に従事．言語処理学会，情報処理学会，日本認知科学会各会員．}

\bioauthor{小山 剛弘}{1983年九州大学工学部卒業．1985年同大学大学院工学研究科修士課程修了．同年日本
電気
に入社．機械翻訳の研究・開発に従事．1991年富士ゼロックスに入社．情報検索，要
約，
分類などの研究・開発に従事．}

\bioauthor{宮内 忠信}{1987年東京農工大学工学部数理情報工学科卒業．同年富士ゼロックス入社．自然言語
処理，情報検索等の研究開発に従事．情報処理学会会員．}

\bioreceived{受付}
\biorevised{再受付}
\bioaccepted{採録}
\end{biography}

