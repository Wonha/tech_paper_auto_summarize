================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:121] 検索結果のふるいわけに適した要約生成手法を開発した．
[i:2, score:122] 我々が開発した句表現要約手法は，短い句を列挙することで，そのような長い文を読む際に生じる負荷を軽減する．
[i:7, score:140] この方法で評価したところ，句表現要約が情報検索結果のふるいわけに最も適していることがわかった．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:9, score:114] 情報検索の結果から検索意図に適合する文書をふるいわけるのに，文書内容に対する手がかりとして要約が用いられる．
[i:14, score:121] 我々は，この負荷を軽減するため，「読む」のではなく「一目でわかる」要約，すなわち，``At-a-glance''要約を研究の目標として設定した．
[i:15, score:122] 句表現要約手法は，``At-a-glance''要約のひとつの実現方法として開発した．

================================================================
[section type  : proposed_method]
[section title : 句表現要約の概念]
================================================================
[i:18, score:113] At-a-glance要約でひとつの具体的な目標にしたのが，電車の中吊り広告として見られる雑誌広告である．
[i:24, score:135] 句表現要約は，重要概念(単語)を含んだ短い句の並びで文書の概要を表現することによって，「読む」負荷を読者に与えずに，重要概念間の関係が把握できることを目指すものである．
[i:25, score:100] 短い句を生成するために，単語と単語の係り受け関係を基本単位として，ふるいわけに必要な重要な概念を含み，意味にまとまりをもたせるのに必要な最低限の関係だけを選択して組み立てる方法をとる．

================================================================
[section type  : proposed_method]
[section title : アルゴリズム]
================================================================
[i:26, score:0] 
-----------------------------------------------------
  [subsection title : アルゴリズム概要]
-----------------------------------------------------
  [i:lead, 12] まず図[REF_algo]を用いてアルゴリズムの概要を示す．
.....
  [i:28, score:91] 句表現要約手法には，大きくは次の4つのステップがある．
  [i:36, score:72] コア関係だけでは意味が特定されずふるいわけの情報としては不十分であるので，意味を限定し，意味的なまとまりを持たせるために必要な関係単位を補完する．
  [i:41, score:104] 上記のステップを，最初に設定した条件(句の数や要約全体の長さなど)を満たすまで繰り返すことで，短い句を複数個得る．
-----------------------------------------------------
  [subsection title : 係り受け解析]
-----------------------------------------------------
  [i:lead, 56] 文書中の各文に対して係り受け解析を行い，単語(列)をノード，係り受け関係をアークとするDAGを得る．
.....
  [i:44, score:56] 文書中の各文に対して係り受け解析を行い，単語(列)をノード，係り受け関係をアークとするDAGを得る．
  [i:45, score:23] 係り受け解析は，形態素解析結果の単語列に対して，パターンマッチにより係り受け関係を抽出する方法[CITE]を用いている．
  [i:48, score:22] このような解析誤りの一部は，関係補完のステップで``ambiguity packing''という方法で隠蔽される．
-----------------------------------------------------
  [subsection title : 関係スコアリングとコア関係選択]
-----------------------------------------------------
  [i:lead, 26] すべての関係単位に重要度スコアを付与する．
.....
  [i:53, score:54] S1，S2は関係アークでつながれる係り側と受け側の語ノードそれぞれのスコアである．
  [i:55, score:64] 長い複合語は意味を特定する目的には効果があるのだが，短い句を出す目的には不利になるので，両者のバランスをとり，構成要素の単語スコアの和を，それを構成する単語数に応じて減少させている．
  [i:60, score:44] このようにしてスコア付けしたすべての関係単位の中から，スコアの最も大きいものを選択し，コア関係とする．
-----------------------------------------------------
  [subsection title : 関係補完]
-----------------------------------------------------
  [i:lead, 59] コア関係だけでは提示される情報が不足し，ふるいわけの目的には十分ではない．
.....
  [i:61, score:59] コア関係だけでは提示される情報が不足し，ふるいわけの目的には十分ではない．
  [i:73, score:54] 「こと」，「もの」などの形式名詞や，「場合」，「時代」などそれ自身では独立して存在することが少なく，なんらかの限定的な修飾句を伴わなければ意味が通じないことが多い名詞を抽象度の高い名詞として定義し，これらの名詞を受け側とする関係を付加することにより，より適切な情報を提供する．
  [i:79, score:118] 「アーチ型→屋根」の関係がすでに選択されている場合，「屋根→庇」の関係を補完し，結果的に「アーチ型の屋根の庇」として要約に含まれるようにする．
-----------------------------------------------------
  [subsection title : 終了条件の判定と繰り返し]
-----------------------------------------------------
  [i:lead, 90] 終了条件は，句の数または要約全体の長さのいずれかで指定する．
.....
  [i:81, score:90] 終了条件は，句の数または要約全体の長さのいずれかで指定する．
  [i:83, score:96] 要約中の手がかりとなる語の種類を増やすため，このループで得られた句の中の語がなるべく繰り返し使われないようにする．
  [i:85, score:57] これを行う関係再スコアリングというステップを図[REF_frame]のコア選択に入る前に入れる．
-----------------------------------------------------
  [subsection title : 表層句の生成]
-----------------------------------------------------
  [i:lead, 33] このようにして，コア関係にいくつかの関係が付加された複数のDAGが得られる．
.....
  [i:94, score:33] このようにして，コア関係にいくつかの関係が付加された複数のDAGが得られる．
  [i:95, score:40] このステップにおいては，ノードおよびアークにそれぞれ対応付けられている表層表現を出現順に取り出して結合することで，それぞれのDAGごとに表層表現を得る．
  [i:96, score:22] 得られた表層表現を，元文書における出現順に列挙する．

================================================================
[section type  : proposed_method]
[section title : 実現と応用]
================================================================
[i:97, score:71] このアルゴリズムに基づいて，要約システムを開発した．
[i:99, score:104] 要約に要する時間はテキスト長に比例し，4KB (2000文字，A4文書1ページ相当)の文書の場合，Celeron 500 MHzのPCで約700 msecである．
[i:102, score:115] 検索結果として得られた文書に，句表現要約(ここでは「キーフレーズ」という名前で示されている)を付加して列挙している．

================================================================
[section type  : experiment_result]
[section title : 評価]
================================================================
[i:103, score:132] 句表現要約の目的は，検索結果のふるいわけを速く的確に行えるようにすることである．
[i:104, score:16] これを評価するために，タスクベースの評価実験を設計し，実施した[CITE]．
[i:106, score:39] また，国立情報学研究所主催のNTCIR-2ワークショップのサブタスクであるTSC (Text Summarization Challenge)での評価結果[CITE]を述べる．
-----------------------------------------------------
  [subsection title : タスクベース実験の設計と実施]
-----------------------------------------------------
  [i:lead, 24] タスクベースの評価実験[CITE]は，ある課題・場面を設定して，人間がその道具を用いてどれだけ問題を解決できたかという達成度から，道具を評価するものである．
.....
  [i:125, score:141] 被験者にはクエリーごとの評価基準は与えておらず，通常検索を行う際と同様に要約を手がかりとして情報要求に適合するかどうかを判断してもらった(ただし質問があれば答えている)．
  [i:146, score:135] 適合性重視，再現性重視のいずれの場合も，句表現要約(C)のスコアが高いことがわかる．
  [i:177, score:132] 不適合を含め4レベルの適合性評価を行ったことで，3種類の適合文書セットを得られるため，適合率重視の場合/再現率重視の場合を想定することができ，それぞれの要約の目的に合わせた評価を可能にする．
-----------------------------------------------------
  [subsection title : TSC評価実験]
-----------------------------------------------------
  [i:lead, 168] 句表現要約は検索のふるいわけに適した要約を目指しているため，TSC (Text Summarization Challenge) [CITE]でも，タスクベース実験に参加した．
.....
  [i:181, score:168] 句表現要約は検索のふるいわけに適した要約を目指しているため，TSC (Text Summarization Challenge) [CITE]でも，タスクベース実験に参加した．
  [i:185, score:125] また，今回はクエリーに含まれる語のスコアを高くする方法を採用し，「検索要求に適した要約」の予備評価を行うことにした．
  [i:187, score:168] 我々は，要約があることで本文を読むことなく本文の適合性を判断するという目的を考え，本文約800文字に対して，100文字以内と150文字以内の2つの句表現要約をエントリーした(以降では，それぞれSystem 3，System 4としてリファーされている)が，図[REF_charfme]でわかるように他の参加システムに比べ，要約長はかなり短いものであった．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[i:195, score:118] 我々は，重要文選択では長い文が選択されがちで，読む負荷が大きいことを問題にし，関係を組み合わせて句を合成することによる要約の生成手法を提案した．
[i:203, score:153] 方法としては，単語で表したトピック(``topic stamp'')から句を作っていくもので，ひとつのトピックから複数の句を構成するため，検索結果のふるいわけに適した要約にはなっていない．
[i:210, score:148] 必須格などの重要な関係を追加していく点などで手法に類似性があるが，At-a-glanceを目的とした短い句を出すものではなく，文の形式を保持しながら長さを柔軟に変更できる要約を目指したものになっている．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:212, score:121] 本論文では，At-a-glance要約の概念を提示し，この概念の具体化である句表現要約手法のアルゴリズムを示した．
[i:214, score:112] さらに，新しく考案したタスクベース評価の方法を示し，句表現要約手法によって作られた要約がふるいわけに有効であることを示した．
[i:220, score:88] [CITE]では，英語での句表現要約生成方法について検討している．

