\section{はじめに}

近年，構文解析は高い精度で行うことができるようになった．構文解析手法は，
ルールベースのもの(e.g., \cite{Kurohashi1994})，統計ベースのもの
(e.g., \cite{Kudo2002})に大別することができるが，どちらの手法も基本的には，
形態素の品詞・活用，読点や機能語の情報に基づいて高精度を実現している．例
えば，

\begin{lingexample}
\single{弁当を食べて出発した}{Example::Simple}
\end{lingexample}

\noindent
という文は，「弁当を$\rightarrow$食べて」のように正しく解析できる．これ
は，「〜を」はほとんどの場合もっとも近い用言に係るという傾向を考慮してい
るからである．このような品詞や機能語などの情報に基づく係り受け制約・選好
を，ルールベースの手法は人手で記述し，統計ベースの手法はタグ付きコーパス
から学習している．しかし，どちらの手法も語彙的な選好に関してはほとんど扱
うことができない．

\begin{lingexample} \label{Example::Undoable1}
 \head{弁当を出発する前に食べた}
 \sent{弁当は食べて出発した}
\end{lingexample}

(2a)では，「弁当を」が\ref{Example::Simple}と同じように扱われ，「弁当を
$\rightarrow$出発する」のように誤って解析される．(2b)においては，「〜は」
が文末など遠くの文節に係りやすいという傾向に影響されて，やはり「弁当は
$\rightarrow$出発した」のように誤って解析されてしまう．これらの場合，
「弁当を　食べる」のような語彙的選好が学習されていれば正しく解析できると
思われる．統計的構文解析器においては多くの場合，語彙情報が素性として考慮
されているが，それらが用いている数万文程度の学習コーパスからでは，データ
スパースネスの影響を顕著に受け，語彙的選好をほとんど学習することができな
い．

さらに，2項関係の語彙的選好が十分に学習されたとしても，次のような例を解
析することは難しい．

\begin{lingexample}
 \single{太郎が食べた花子の弁当}{Example::1}
\end{lingexample}

\noindent
「弁当を　食べる」「花子が　食べる」という語彙的選好を両方とも学習している
とすると，「食べた」の係り先はこれらの情報からでは決定することができない．
この例文を正しく解析するには，「食べた」は「太郎が」というガ格をもってお
り，ヲ格の格要素は被連体修飾詞「弁当」であると認識する必要がある．このよ
うに，語彙的選好を述語項構造としてきちんと考慮できれば構文解析のさらな
る精度向上が期待できる．

述語項構造を明らかにする格解析を実用的に行うためには，語と語の関係を記述
した格フレームが不可欠であり，それもカバレージの大きいものが要求される．
そのような格フレームとして，大規模ウェブテキストから自動的に構築したもの
を利用することができる\cite{Kawahara2006}．本稿では，この大規模格フレー
ムに基づく構文・格解析の統合的確率モデルを提案する．本モデルは，格解析を
生成的確率モデルで行い，格解析の確率値の高い構文構造を選択するということ
を行う．

構文解析手法として，語彙的選好を明示的に扱うものはこれまでにいくつか提案
されてきた．白井らと藤尾らは，数十〜数百万文のコーパスから語の共起確率を
推定し利用している\cite{Shirai1998,Fujio1999}．本研究にもっとも関連してい
る研究として，阿辺川らによる構文解析手法がある\cite{Abekawa2006}．阿辺川
らは，同じ用言を係り先とする格要素間の従属関係と，格要素・用言間の共起関
係を利用した構文解析手法を提案している．これら2つの関係を新聞記事30年分か
ら収集し，PLSIを用いて確率推定を行っている．既存の構文解析器の出力する
n-bestの構文木候補に対して，確率モデルに基づくリランキングを適用し，もっ
とも確率値の高い構文木を選択している．この手法は，PLSIを用いることによっ
て潜在的な意味クラスを導入し，確率を中規模のコーパスから推定している．

本研究は，これらの研究に対して次の点で異なる．
\begin{itemize}
 \item 明示的に意味，用法が分類された格フレームを用いている．解析時に格フ
       レームを選択することにより，用言の意味的曖昧性を解消し，その意
       味，用法下において正確な格解析を行うことができる．
 \item 非常に大規模なコーパスから構築された格フレームを用いることによっ
       て，用例の出現を汎化せずに用いている．
 \item 阿辺川らの手法のようにn-best解をリランキングするのではなく，構文，
       格構造を生成する生成モデルを定義している．
\end{itemize}


