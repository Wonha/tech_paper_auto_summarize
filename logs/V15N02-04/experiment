評価
\label{sec:evaluate}

実装した機能表現言い換えシステムを評価する観点として，
次の4点が考えられる\footnote{
	システムへの入力として文を想定する場合は，
	「システムの解析モジュールは，
	正しく文節認定，および，
	内容語であるか機能表現であるかの曖昧性解消を行なうことができるか」
	という評価観点も必要である．
	しかしながら，
	本システムでは，
	入力として
	\ref{subsec:unit}節の式(\ref{eq:phrase})で定義される
	文節を採用しているので，
	この評価を行なう必要はない．
}．
\begin{enumerate}
\item 出力された表現は入力文節と意味的に等価であるか
\item 出力された表現は文体指定を満たすか
\item 出力された表現は難易度指定を満たすか
\item 機能表現$f$を異なる機能表現$f^\prime$に言い換える場合，
      $f^\prime$のすべての異形を生成することができるか
\end{enumerate}
本システムの言い換え能力は，
\ref{subsec:enumerate}節に示した，出現形の列挙能力によって
規定されている．
この列挙手続きは，
辞書に記述されている情報に基づいているため，
最終的に，上記の4点の可否は，
辞書に記述されている情報の正しさに依存する．
すなわち，上記の(1)から(4)は，それぞれ，
\begin{enumerate}
\item \ref{subsec:semantic}節で述べた意味的等価クラスは妥当か，
\item 機能表現の出現形に付与されている文体情報は正しいか，
\item $L^2$の機能表現に付与されている難易度情報は正しいか，
\item 形態階層構造はすべての異形を網羅しているか，
\end{enumerate}
という問題に帰着される．

機能表現の出現形が4つの文体のうちいずれをとるかは，
日本語の文体についての知識があれば，容易に判断できる．
また，$L^2$の機能表現に付与されている難易度は，
「日本語能力試験出題基準」\shortcite{nouryoku}の級（難易度）に
基づいている．
異形の網羅性については，
すでに，松吉らの研究\shortcite{Matsuyoshi2007}によって
定量的に評価されている．
これらの理由により，
辞書に記述されている(2)から(4)の情報の信頼性は
高いと考えられるため，
実験的に評価する必要はないと判断した．

一方，
\ref{subsec:semantic}節で述べた意味的等価クラスは，
これまでの文献と著者らの直観に基づくものであり，
その言い換えにおける妥当性は検証されていない．
そこで，本章では，
言い換えシステムが生成する代替表現の評価を行ない，
意味的等価クラスの妥当性を検証する．


\subsection{評価方法}

言い換えシステムの出力の評価にあたっては，
実際の応用として文章作成支援を想定した．
文章作成支援においては，
システムは，入力表現に対して，
少数の良い代替表現を出力することが期待される．
なぜならば，
代替表現が順位付けされずに数百も出力された場合，
システムの利用者は困惑してしまうからである．
本論文では，
言い換えシステムの出力の上位5位までに，
適切な代替表現が含まれているかどうかという観点から，
評価を行なった．

言い換えシステムが生成した表現の評価は，次の3段階で行なった．
\begin{quote}
\begin{description}
\item[〇] 入力文節に対する適切な代替表現である

           （入力文節と言い換えシステムが生成した表現は，
           ある文脈において置換可能である）
\item[△] 適切な代替表現であるかどうかの判断が難しい

           （入力文節と言い換えシステムが生成した表現が
           置換可能である文脈を想像することはできるが，
           その文脈はかなり不自然である）

\item[×] 代替表現として相応しくない
           
           （入力文節と言い換えシステムが生成した表現が
           置換可能である文脈を想像することができない）
\end{description}
\end{quote}
一般に，
ある表現が別の表現と置換可能であるかどうかを
客観的に判定することは難しい．
なぜならば，
それらが置換可能である文脈を想像することができるかどうかは，
判定者の言語経験によるところが大きいからである．
特に，機能表現の言い換えにおいては，
機能表現の用法についての知識が不十分であるために，
入力文節と言い換えシステムが生成した表現が
置換可能である文脈を想像することができず，
後者を適切な代替表現ではないと判定してしまうことが少なくない．
それゆえに，
機能表現の置換可能性の評価にあたっては，
機能表現を解説した文献に基づくことが望ましい．
このような理由により，本評価においては，
1人の判定者が，
複数の機能表現に関する
文献\shortcite{Morita1989,Jamasi1998,dosj}を参照しながら，
本システムが生成した表現の評価を行なった．

\ref{subsec:enumerate}節で述べた方法をそのまま用いた場合，
機能語部の機能表現が，すべて，
入力文節における機能表現と同じ，
もしくはその異形であるという代替表現も出力される．
例えば，入力文節「決定せ／ざるをえない／ので」に対して，
「ざるをえない」を
その表記に関する異形である「ざるを得ない」に置換しただけの
表現「決定せ／ざるを得ない／ので」も，
1つの代替表現として出力される．
しかしながら，
文章作成支援の観点からは，これは望ましくない．
なぜならば，
システムの利用者が求めるものは，
このような，表記を少し変えただけの表現ではなく，
入力文節に使われている機能表現とは異なる機能表現を用いた
代替表現であると思われるからである．
このような理由により，
本評価では，
言い換えシステムが出力する代替表現は，
その機能語部の少なくとも1つの機能表現が，
入力文節における対応する機能表現と全く異なる
機能表現でなくてはならないという条件を設定した．
すなわち，
式(\ref{eq:alt})によって定式化される代替表現において，
$f_j^\prime$が$f_j$と異なる$L^1$-$L^2$IDを持つような$j$が，
必ず1つは存在する．

本評価では，
クローズドテストの入力文節リストとして，
\ref{subsec:closedlist}節で予備調査に使用した文節リストを用いた．
この文節リストは，
\ref{subsec:semantic}節で述べた意味的等価クラスの
調整にも用いた．

オープンテストにおいては，入力文節リストとして，
「どんな時どう使う日本語表現文型500」\shortcite{Tomomatsu1996}
の用例を用いた．
この文献においては，
各機能表現に対して平均4つの用例が記載されている．
例として，「について」に対する用例を表~\ref{tab:donna}に示す．
この文献には，
機能表現と，呼応などの表現文型が，491項目収録されている．
本評価では，これらのうち，
日本語機能表現辞書\shortcite{Matsuyoshi2007}にも
収録されている機能表現 184項目を対象とした．
本論文における言い換え元の入力表現の単位は文節であるので，
文単位の用例からは，文節単位の用例を人手で抽出した．
機能表現 184項目に対する用例のうち，
日本語機能表現辞書に収録されている機能表現の用例であると
われわれが判断した628の用例を，
入力の文節リストとして用いた．

\begin{table}[b]
    \caption{文献 (友松他 1996) における「について」に対する用例}
\label{tab:donna}
\input{04table11.txt}
\end{table}

本論文の言い換えシステムは，
代替表現を順位付けする際にコーパスを利用する．
このコーパスとしては，
毎日新聞コーパス 1991--2005年版
（15年分，約2,100万文，約1.5ギガバイト）を用いた．


\begin{table}[b]
\caption{言い換えシステムの出力の評価}
\label{tab:evaluation}
\input{04table12.txt}
\end{table}

\subsection{結果}

評価結果として，
言い換えシステムの出力の上位$n$位までに，
少なくとも1つの適切な代替表現（「○」と判定された表現）
が含まれていた入力文節の数を
表~\ref{tab:evaluation}に示す\footnote{
	本システムが生成した表現は，
	すべて文法的には正しいものであった．
}．表の「人手解析」の欄に，
入力文節を人手で解析したとき，
すなわち，
入力文節が正しく分割され，
すべての機能表現の意味的曖昧性が解消されたとき
の評価結果を示す．
表のすべての行において，値は，「1位--3位」でほぼ飽和している．
よって，以下では，「1位--3位」における結果について議論する．

表~\ref{tab:evaluation}から，
本論文の言い換えシステムは，
クローズドテストにおいて入力文節の88\% (210/238)，
オープンテストにおいて入力文節の79\% (496/628)に対して，
適切な代替表現を生成することができたことが分かる．
言い換えシステムが生成した適切な代替表現の例を，
その順位とともに表~\ref{tab:good}に示す．
この表の「入力文節」と「代替表現」の欄において，
機能表現の言い換えが行なわれた箇所に下線を引いた．
これらの結果から，
われわれは，
本システムの性能は，
文章作成支援という観点からみて十分に高いと考える．

\begin{table}[b]
\caption{言い換えシステムが生成した適切な代替表現の例}
\label{tab:good}
\input{04table13.txt}
\end{table}

以下，言い換えシステムの誤り分析を行なう．
言い換えシステムの出力を詳細に分析した結果を
表~\ref{tab:top1to3}に示す．

クローズドテストにおける入力文節の7\% (16/238)と
オープンテストにおける入力文節の7\% (41/628)に対しては，
``1$\rightarrow$1''と少数の語の挿入のみでは
代替表現を生成できないことが分かった．
これらの入力文節を適切に言い換えるためには，
``1$\rightarrow$N''，
``N$\rightarrow$1''，
``M$\rightarrow$N''が必要である．
これらの入力文節と
それらに対して期待される代替表現の例を
表~\ref{tab:not1to1}に示す．
上記の7\%という値は，
``1$\rightarrow$1''と少数の語の挿入に基づいて言い換えを行なう
本システムの性能の上限を規定する．

\begin{table}[t]
\caption{言い換えシステムの出力の詳細分析
（表~\ref{tab:evaluation}の「1位--3位」に対応）}
\label{tab:top1to3}
\input{04table14.txt}
\end{table}
\begin{table}[t]
\caption{``1$\rightarrow$1''と少数の語の挿入のみでは
代替表現を生成できない文節の例}
\label{tab:not1to1}
\input{04table15.txt}
\end{table}

入力文節の解析誤りは，
クローズドテストにおいて3\% (8/238)，
オープンテストにおいて3\% (21/628)であった．
解析誤りの例を以下に示す．
\begin{itemize}
\item 進ん／だ／こと\underline{に／より} 
      （「により」が正しく認識されなかった）
\item 邪魔さ／\underline{れ}／た／おかげで 
      （受身を表す接尾辞「れ」が，
      〈可能〉の意味を持つ機能表現「れ」と解析された）
\item ひら／がな／さえ 
      （通常のMeCabによって，「ひらがな」が誤って分割された）
\end{itemize}
一方，
入力文節の1\%（2/238，クローズドテスト）と
4\%（23/628，オープンテスト）に対して，
その機能語部に意味的に曖昧な機能表現が含まれていたため，
適切な代替表現が上位に出力されなかった．
例えば，
「こと」は，
〈当為〉，〈感嘆〉，〈名詞化〉という3つの意味を持つ．
「提出する／\underline{こと}」の「こと」は，
〈当為〉の意味を持つ機能表現であるが，
この文節に対して，
〈名詞化〉の意味を持つ「の」を含む「提出する／の」や，
〈感嘆〉の意味を持つ「わ」を含む「提出する／わ」などの表現が
上位に出力された．
「人／\underline{によって}／は」や
「賛成する／\underline{にしても}」に対しても，
同様の現象が観察された．
表~\ref{tab:top1to3}の「適切な代替表現」の欄における，
システムが解析を行なった時の値と人手解析時の値の差から，
人手で入力文節を解析した場合，
上記のような入力文節に対しても，
適切な代替表現を上位に出力することができたことが分かる．
したがって，
解析誤りおよび意味的曖昧性に起因する性能の低下は，
本システムの文節解析モジュールの改善とともに
減少することが期待される．

オープンテストにおいて，
意味的等価クラスの不備により，
適切な代替表現が生成されなかった入力文節は，
全体の3\% (19/628)であった．
例えば，「悲しみ／の／あまり」に対して，
適切な代替表現が生成されなかった．
「悲しみ／の／あまり」に対する適切な代替表現として，
「悲しみ／の／せいで」が考えられるが，
意味階層構造のどの階層においても，
「あまり」と「せいで」が
同じ意味的等価クラスに属することがなかったため，
この言い換えは実現されなかった．
意味的等価クラスの不備に起因する問題は少数であったので，
\ref{subsec:semantic}節で述べた
意味的等価クラスは妥当なものであったと言える．

接続条件が厳しすぎたため，
オープンテストにおける入力文節の2\% (16/628)に対して，
適切な代替表現が生成されなかった．
例えば，
「は」と「とくれば」の接続は可能であると辞書に記述されていなかったため，
「地域／は／というと」に対して，
「地域／は／とくれば」が生成されなかった．
今後，接続条件を見直す必要がある．

残りの誤りは，
コーパスにおいて，
適切な代替表現に存在する機能表現の構成文字列の出現回数が
相対的に少ないことに起因するものである．
この問題を解決するためには，
現在使用しているスコア関数の見直しや，
機能表現のすべての出現形に対してタグ付けを行なった
コーパスの整備が必要であると思われる．



