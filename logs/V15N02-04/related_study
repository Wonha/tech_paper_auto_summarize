関連研究

乾らは，
語彙・構文的言い換えを，次の6つに分類した\shortcite{Inui2004}．
\begin{enumerate}
\item 節間の言い換え
\item 節内の言い換え
\item 内容語の複合表現の言い換え
\item 機能語／モダリティの言い換え
\item 内容語句の言い換え
\item 慣用表現の言い換え
\end{enumerate}
本研究は，機能表現の言い換えに焦点をあてているので，
上記の(4) 機能語／モダリティの言い換えと，
(1) 節間の言い換えの一部である「接続表現の言い換え」に
分類される．

自然言語処理において，
日本語機能表現の言い換えに関する研究は少ない．
飯田ら\shortcite{Iida2001}は，
機能表現の解説文や例文から，
279個の言い換え規則を人手で作成している．
土屋ら\shortcite{Tsuchiya2004}は，
機能表現を含む文とその機能表現を言い換えた文の対のデータを作成し，
そこから642個の言い換え規則を半自動的に生成している．
これらの研究で作成された言い換え規則は，
ある機能表現と別の機能表現が言い換え可能であることを示す
個別的なものである．
このような個別的な規則の集合を用いる手法では，
数多く存在する機能表現の異形を言い換えるために，
膨大な量の言い換え規則を作成しなければならない．

Tanabeら\shortcite{Tanabe2001}，
Shudoら\shortcite{Shudo2004}，
本田ら\shortcite{Honda2007}は，
「なければならない」や「てもよい」など，
助動詞型機能表現に対して約150の意味的等価クラスを定義し，
意味的等価クラス間における
論理的類似性規則と語用論的類似性規則に基いて
機能表現を言い換える手法を提案している．
彼らの研究が対象としている機能表現は，
助動詞型機能表現のみであり，
「にあたって」や「からすると」のような格助詞型機能表現や，
「にもかかわらず」や「や否や」のような接続助詞型機能表現などは
扱っていない．

これらの研究において提案されている機能表現言い換えシステムは，
言い換え先の機能表現の文体や難易度を制御できる機構を持っていない．
くわえて，
これらのシステムは，
体系的に機能表現の異形を扱っていないため，
機能表現$f$を異なる機能表現$f^\prime$に言い換える場合，
潜在的には$f^\prime$のすべての異形を
生成することができることは保証されていない．
一方，
われわれが提案する機能表現言い換えシステムは，
形態階層構造と意味階層構造を持つ機能表現辞書を用いることにより，
文体と難易度を制御しつつ，
機能表現を言い換えることができる．
そして，このシステムは，
与えられた機能表現の出現形に対して，
意味的に等価な機能表現のすべての出現形を列挙することができる．
このシステムの言い換え対象は，
表~\ref{tab:good}に示されるように，
助動詞型機能表現だけでなく，
すべての型の機能表現である．

伊佐治ら\shortcite{Isaji2005}は，
解析後に
機能表現を標準的な表現（代表表記）に言い換えることができる
日本語の文節構造解析システムibukiCを提案している．
例えば，
このシステムは，
「でしょう」を「だろう」に，
「からすると」を「からすれば」に，
「に違いない」を「にちがいない」に言い換える．
しかしながら，
この機構は十分であるとは言えず，
「にたいしまして」を「にたいして」に，
「なければならない」の異形である
「なけりゃならない」，「ねばならない」を
「なければならない」に言い換えない．
一方，われわれの言い換えシステムは，
形態階層構造と文体などの情報を利用することにより，
体系的に機能表現を代表表記に言い換えることができる．



