一般に，誤りといえば，本来得られるべき何らかの正しい結果があるものの，それとは異なる，すなわち正しくない別の結果が得られた際にそれを指していうものである．
文書分類であれば与えられた文書を正しい分類先に分類できなかった際にそれを誤りということができる．
そのため，何らかの正しい結果，すなわち正解が定まらなければ誤りも定めることができない．
自動要約においては，この正解，すなわち参照要約をいささか一意に定めづらい．
自動要約課題において，複数の作業者に参照要約の作成を依頼したとき，作業者に与える指示にもよるものの，まったく同一の参照要約が作成されるということはまずない．
そのため，ある参照要約を基準とした際には誤りとなる要約が，別の要約を基準とした際には誤りとならないことがある．
本稿では，この問題は脇に置く．
すなわち，ある1つの参照要約が存在するとき，それと要約システムが作成した要約（以下，便宜的にこれをシステム要約と呼ぶ）とを比較し，その差分を誤りとする．
すなわち，何か差分があれば誤りを含むし，そうでなければ誤りを含まない．
誤りについては次節にて述べる．
この単純化は以下の理由に基づく：
単一の参照要約の誤り分析の枠組みが存在しない状況において，複数の参照要約の誤り分析の枠組みを設定するのは困難であること．
単一の参照要約の誤り分析の枠組みを設定できれば，それに基づいて複数の参照要約が存在する場合を検討することができること．
これらの点から，本稿でのこの単純化は，問題の過度な単純化ではなく，合理的な問題の分割であると考える．
また，自動要約課題には，入力文書が単一である場合と複数である場合，要約システムが特に焦点を当てて出力するべき情報がクエリなどを通じて与えられる場合と与えられない場合などの下位分類が存在する．
また，テキスト以外にも映像などの自動要約を考えることもできる．
本稿では，対象はテキストに限定することとし，また自動要約課題の最も単純な形態である，単一文書が入力として与えられ，特にクエリなどは別途与えられない状況を仮定することとする．
さらに，要約の対象となるテキストの種類についても新聞記事[CITE]，技術文献[CITE]，メール[CITE]，マイクロブログ[CITE]など様々なテキストを考えることができるが，本稿ではこれまで単一文書要約課題において広く研究されてきた新聞記事を特に分析の対象として扱う．
参照要約に関する仮定とそれに伴う単純化と同様に，本稿では，まず自動要約課題の最も単純な形態の誤り分析を扱うことによって，自動要約の基本的な誤り分析の枠組みを検討する．
より複雑な自動要約課題の誤り分析については将来の課題とする．
これらの点を踏まえて，本稿が示す自動要約の誤り分析の枠組みの限界を述べておく．
上で述べたように，本稿が提案する自動要約の誤り分析の枠組みは多くの仮定に基づいており，それらの仮定が成り立たない状況においては必ずしも有効に働くものではない．
また，提案する誤り分析の枠組みに基づいて，本稿において行われる分析は，ある単一の要約システムを利用し，またある単一の入力文書を用いて行われるため，その結果が一般的なものであるとは必ずしもいうことはできない．
本稿で示す分析の枠組みに基づいて行われた分析は，枠組みを提案した著者による分析であり，そのため複数の異なる分析者間での結果の一致については議論されていない．
上に示すように，本稿で示す自動要約の誤り分析の枠組みは完全なものでは決してない．
本稿の目的は，あくまで，自動要約の基本的な誤り分析の枠組みを提案することにあり，より広範な自動要約課題への適用や，異なる複数の分析者による分析結果の一致に関する議論などは将来の課題である．
ここではまず，自動要約が最低限満たすべき原則を3つ述べ，それが満たされないときに誤りが生じることを説明する．
次に，誤りの原因を5つ取り上げる．
最後に，これらの組み合わせから要約の誤りが15種類に分類されることをみる．
本稿で扱う自動要約課題は入力および出力がいずれもテキストである．
また，少なくとも人間がそのテキストを読解することを想定している．
そのため，要約システムが出力するテキスト，すなわち要約は，まず何よりも人間が読解可能である必要があろう．
すなわち，想定される読者が読み取れるような言語で記述されていることや，非文法的な文などが含まれていないことが必要であろう．
次に，要約は，入力されたテキストから読み取れる情報のうちのいずれかのみを選択して出力するものである．
そのため，当然のこととして，要約システムは入力されたテキストから読み取れることのみが含まれる要約を出力する必要がある．
すなわち，入力されたテキストと矛盾する内容や，入力されたテキストが含意しない内容を含む要約を出力することは許されないであろう．
最後に，要約は，字義通り，入力されたテキストから読み取れる情報のうち，重要だと思われる情報のみを含んでいる必要がある．
これらの点をまとめると，要約システムによって生成される要約は，以下の3つの原則を満たすべきと考えられる：
出力から情報を読み取れること．
情報を読み取れないような文章が出力されていないこと．
情報を読み取れないような文が出力された場合には，以下の3つのケースが考えられる．
要約がユーザの要求とは異なる言語で出力されている場合や，要約システムがその内部処理において利用している制御記号などが出力されており，要約から文意を読み取れない場合．
何らかの理由により要約が出力されない場合も含む．
文法的でない文（非文）が要約を構成しており，要約の文意が取れない場合．
個別の文は文法的であるが，要約を構成する文同士の論理関係などが明らかでなく，全体として文意が取れない文章が要約となっている場合．
本稿ではこれら3点をまとめて，内容を適切に読み取ることのできない要約を便宜的に「非文章」と呼ぶ．
読み取れる情報が，入力と矛盾せず，入力が出力を含意すること．
読み手が入力を読んだ際と出力を読んだ際に異なる結論に至らないこと．
出力から読み取れる情報が，入力および読み手の希望を鑑みて，重要であると思われること．
重要でない，枝葉末節の情報が出力に含まれないこと．
これらの原則が満たされない場合を誤りとして，自動要約の誤りの分析における3つの観点が導出できる：
非文章の出力：要約システムが出力した文章から文意が読み取れない場合，それは誤りとなる．
この観点は自動要約の言語的品質の評価[CITE]と概ね対応する．
この観点の誤りはシステム要約のみで検出することができる．
文意の歪曲：要約から読み取れる情報が，入力文書に記載されている情報と矛盾する場合，それは誤りとなる．
この観点を評価するためには入力文書とシステム要約が必要となる．
この観点はこれまで自動要約において大きく取り上げられてこなかった．
これには2つの理由が考えられる．
第1に，現時点では，この観点に関してシステム要約を評価するためには人手での丁寧な読解が不可欠であり，そのため非常に費用がかかり実施しづらいということが挙げられる．
上で述べた(1)については出力されたシステム要約のみを人手で確認すればよく，また次に述べる(3)については参照要約とシステム要約の機械的な比較によって人手をかけずに一定の評価が可能である．
これらに対して，(2)を評価するためには入力文書とシステム要約の両方を評価者が読解した上で，内容の無矛盾を確認しなければならず，その費用は多大なものとなる．
第2に，文の書き換えなどを行わずに単に重要文を選択するだけの手法などで要約を作成した場合，文意の歪曲はさほど頻繁には生じず，そのため誤りとしてこれまで重要視されてこなかったということも考えられる．
文意の歪曲の例を表[REF_tb:文書番号981225042のシステム要約]および表[REF_tb:文書番号981225042のテキスト]に示す．
表[REF_tb:文書番号981225042のシステム要約]はTSC-2のデータに含まれる文書番号981225042のテキストから要約システムによって作成されたシステム要約であり，表[REF_tb:文書番号981225042のテキスト]は元のテキストである．
表[REF_tb:文書番号981225042のシステム要約]に示すシステム要約の4文めの冒頭には，「このため」とあり，「輸出に過度に依存しない国内生産体制が急務」である原因が前の文で述べられていることが示唆されている．
システム要約を読むと，「トヨタ自動車が検討し始めた生産能力の削減」およびそれに伴う「雇用や地域経済への影響」がこの原因であるように読解できる．
一方，表[REF_tb:文書番号981225042のテキスト]に示す元の入力文書を読むと，11文めの「輸出に過度に依存しない国内生産体制が急務」の原因は，「国内販売は、保有期間の長期化もあり新車需要の大きな伸びは期待できない」であることがわかる．
この例では，システム要約と入力文書とで，読解した際に別の読みが可能になっており，そのためシステム要約が，入力文書で述べられている本来の文意を歪曲している．
重要部同定の失敗：要約から読み取れる情報の中に入力文書および読み手の希望を鑑みて重要でないものが混ざっているとき，それは誤りとなる．
同様に，入力文書および読み手の希望を鑑みて重要であると思われる情報が要約に含まれていない場合もそれは誤りとなる．
この観点は内容性の評価に概ね対応する[CITE]．
この観点を評価するためには参照要約とシステム要約が必要となる．
この3つの観点が，要約システムの誤りを考える際に，最初の分類としてあらわれるものと思われる．
近年の要約システムの多くはMulti-Candidate Reduction Framework [CITE]に従っているとみなせる．
これは，入力された文書を，文分割などによって文に分割する機構[CITE]，得られた文を文短縮[CITE]などによって別の表現に書き換え元の入力のある種の亜種を生成する機構，そののちにそれらの中から要約長などの要件を満たすものを選択し要約を生成する機構からなる[CITE]．
最後の要約を生成する機構はさらに，文の組み合わせの中から要約として適切なものに高いスコアを与える機構と高いスコアを持つものを探索する機構に分割できる．
さらに，文の組み合わせの中から要約として適切なものに高いスコアを与える際には，典型的には機械学習が用いられるため，学習が正しくなされているか否かと，適切な特徴量が設定されているかの2点を考慮する必要がある．
これらのことから，文分割に関する問題は要約以前の前処理の問題として脇に置くと，近年の要約システムは以下の構成要素からなる．
入力された文などの言語単位を別の表現に書き換える機構．
要約としてふさわしい文などの単位に高いスコアを与えるための機械学習に関する機構．
文などの単位に特徴量を与える機構．
要約としてふさわしい文などを探索する機構．
典型的な要約システムを構成する上述の要素を踏まえると，要約システムが前節の原則を満たせず，誤りを生じさせる原因には以下の観点が考えられる：
操作の不足：要約システムが，人間の作業者がテキストに対して施す操作と同等の機構を保持してないことに伴って生じる誤り．
言い換えなどの操作ができないために入力された文を短縮することができず，人間と同等の情報量を要約に含めることができない場合や，要約システムが入力された文において省略されているゼロ代名詞を復元できず，要約の文意を損なう場合が含まれる．
特徴量の不足：特徴量が不足している場合．
この場合は2つにわけることができる．
特徴量の設定不足：要約システムにおいて設定されていない特徴量が要約の作成において重要な役割を果たすと思われる場合．
段落に関する情報を入力文書から得ることができ，かつその情報が要約の作成において重要な役割を果たすと目されるのにもかかわらず，要約システムはそれを特徴量として認識できない場合など．
言語解析の失敗：解析器が誤り，特徴量として設定されている情報が正しく取得できなかった場合．
固有表現認識器が固有表現を認識し損ね，要約システムがそれを特徴量として利用できなかった場合など．
パラメタの誤り：訓練事例の不足，不適切な学習手法の利用などによって，推定されたパラメタが精度よく推定されていない場合．
探索の誤り：探索誤りのために誤った要約を生成した場合．
重要文集合の選択において，本来はより良好な文の組み合わせがあるにもかかわらず，探索誤りによって不適切な文の集合を出力として選択した場合など．
情報の不足：そもそも要約システムに対して入力された情報だけでは参照要約まで到達できない場合．
人間の要約作成者が入力以外の情報源を利用して要約を作成した場合など．
[REF_sc:関連研究]節で述べるが，これらの誤りの原因はより詳細化することが可能である．
一方，自動要約には単一文書要約と複数文書要約といういささか風合いの異なる2つの下位課題が存在し，また文短縮なども独立した課題として扱いうる．
そのため，個々の要約システムの設計の詳細は様々であり，誤りの原因の詳細は分析の対象とする要約システムの設計の詳細に依存する．
このことを鑑み，本稿ではより詳細な誤りの原因には踏み込まず，多くの要約システムにおいて共通する機構に基づき，誤りの原因として上の5種類の原因を定義する．
[REF_sc:自動要約の誤りの種類]節で述べた3種類の誤りの種類と，[REF_要約システムの誤りの原因]節で述べた5種類の誤りの原因から，自動要約における誤りは15種類のいずれかに分類できると期待できる．
これをまとめたものを表[REF_tb:error_framework]に示す．
なお，これらとは別に，参照要約作成者の読みが誤っていると思われる場合など，そもそも参照要約が信頼できないと思われる場合がありうるが，ここではそれは除外し，あくまで参照要約が正しく，機械はそれを模倣することのみを考えればよいという場合を想定した．
次に，分析の枠組みを自動要約の結果に適用する際の具体的な方法を表[REF_tb:error_analysis_implementation]に示す．
表[REF_tb:error_analysis_implementation]は，ある誤りの種類がある誤りの原因によって生じる際に，どのようにそれを同定できるかをまとめたものである．
本稿で提案する枠組みに基づく誤りの分析は，一例として，以下の手続きで行うことができる．
非文章の出力：まず，要約システムが出力したシステム要約を読解し，非文章が出力されていないか確認する．
主語や述語などが存在しない非文が存在しないか，また談話構造が不明瞭で文章全体から意味が取れなくなっていないかを確認する．
非文章が生じていた場合は，その原因を特定する．
例えば，主語が存在しない文が存在し，文脈からもその主語を読み取ることができず，そのためその文の文意を正しくとることができない場合，そのような文が生じた原因を特定する．
このとき，入力文書とシステム要約でその文が異なる場合，すなわちその文をシステムが書き換えたか否かを確認する必要がある．
仮に書き換えたのであれば，なぜその書き換えが発生したかを特定する．
文意の歪曲：次に，入力文書の文意がシステム要約において歪曲されていないかを確認する．
この作業には，入力文書の読解と，システム要約の読解の両方が必要である．
システム要約から，入力文書に含まれていない情報や，あるいは入力文書と矛盾する情報が読み取れる場合は，要約システムによって入力文書の文意が歪曲されていることになる．
文意が歪曲されている場合は，なぜ歪曲が生じたのか確認する．
抽出型の要約システムにおいてこの誤りが生じる状況の1つは，主語が省略されている文がシステム要約において誤った文脈におかれることで，読者が，入力文書での本来の主語とは異なる主語を文にあてはめてしまい，その結果として誤った解釈に至る状況である．
他にも，談話標識が入力文書と異なる文脈におかれることで，前後の文から異なる解釈を得ることできる場合もある．
[REF_sc:自動要約の誤りの種類]節で示した例はこの場合である．
書き換えまで行う要約システムであれば，入力文書と異なる表現が用いられることで文意が変化していないか確認する．
このような文意の歪曲が生じている場合は，どのような修正をシステム要約に加えることで，正しい文意を得ることができるか確認する．
上の例では，省略された主語を復元する機構の追加，談話標識を除去，あるいは修正する機構の追加などが考えられ，これらを要約システムが備えていないために誤りが生じたと考えられる場合は「操作の不足」が原因となろう．
一方，これらの機構が存在しているにもかかわらず文意の歪曲が生じた場合は，パラメタの誤りや特徴量の不足を調査する必要がある．
重要部同定の失敗：最後に，参照要約とシステム要約を比較し，参照要約に含まれているがシステム要約には含まれていない情報がないか確認する．
この確認にはROUGE [CITE]，Basic Element [CITE]などを援用することが可能であろう．
参照要約に含まれている重要な情報がシステム要約に含まれていない場合には，その情報がシステム要約に含まれなかった理由を調査する．
特に，パラメタが正しく学習されているか，またそのような情報を重要な情報であると特定するための特徴量が設定されているかを確認する必要があろう．
本節では前節で提示した分析の枠組みを，本稿で分析の対象とした文書に対して適用する．
まず，分析の枠組みを適用するシステム要約を作成する．
次に，それらに対して人手による分析を行い，その後分析の結果を提案した分析の枠組みに基づいて整理する．
実験には，自動要約の評価型プロジェクトであるTSC-2のデータを用いた．
TSC-2のデータは60記事からなり，各文書に対して3人の作業者が参照要約を付与している．
また，各文書に対して長い参照要約と短い参照要約の2種類が付与されている．
今回は特に分析の対象として文書番号990305053のテキストを用いた．
参照要約には，作成者1による長い参照要約を用いた．
文書番号990305053のテキストの長い参照要約の長さは495文字であり，要約システムを動作させる際には495文字以内の要約を作成するようにした．
要約システムについては，西川らによる単一文書要約システム[CITE]を利用した．
西川らの要約システムは，入力として単一文書を想定しており，特に単一の新聞記事を入力として想定している．
また，クエリの入力は想定していない．
要約の手法はMulti-Candidate Reduction Framework [CITE]に基づいており，まず入力された各文の亜種を文短縮を利用して生成し，その後に元の文とそれらの文の亜種からなる文の集合の中で，文の重要度と文間の結束性が最も高くなる文の系列のうち，要約長の制限を満たすものを選び出すものである．
文短縮を利用することもできるものの，西川らの要約システムは文短縮が行われた文が要約に選択されることがあまり多くないため，今回は文短縮を用いずに要約を出力させた．
表[REF_tb:input_document]に入力文書（文書番号990305053）を示す．
太字は入力文書と参照要約とで文アライメントを取り，対応づけが取れた文同士において共通の単語である．
下線は要約システムによって重要文と認定された文である．
表[REF_tb:reference]に参照要約を示す．
分析の対象となると思われる点については下線を加え，どのような現象が生じているか下線の後に上付き文字で示した．
表[REF_tb:summary]にシステム要約を示す．
太字は参照要約とシステム要約とで文アライメントを取り，対応づけが取れた文同士において共通の単語である．
表[REF_tb:reference]と同様に分析の対象となると思われる点について下線を加え，どのような現象が生じているか下線で示された部分の後に加筆した．
表[REF_tb:statistics]に入力文書および参照要約，システム要約の統計量を示しておく．
まず，ROUGE-1 [CITE]の値は0.385であった．
文単位でみると，システム要約に含まれる文のうち，完全に参照要約に含まれない文は2文めと11文のみであり，11文中2文にとどまっている．
このことから，要約システムの精度（適合率）は[MATH]に達しており，要約システムは高精度に重要文を同定していることがわかる．
一方，再現率の観点から見ると，参照要約は入力文書33文のうち15文を要約として採用しており，再現率は[MATH]に留まっている．
再現率はまだ大きく改善の余地が残されているため，文と単語という差異はあるが，同様に再現率を評価するROUGE-1の値についても改善の余地があると思われる．
次に，重要部同定の失敗の原因を探る．
表[REF_tb:input_document]を見ると，要約システムは特に後半の文を選択できていない．
これは，要約システムが入力文書における話題の遷移を捕捉できていないためであると思われる．
入力文書において，どのように話題が遷移しているかを表[REF_tb:入力文書に含まれる話題の遷移]に示す．
全人代が開催されるということ（話題1）と中国の改革とその行く末が危ぶまれるということ（話題2--4）と，その具体的な例（話題5--6）が並び，最後の文は入力文書のまとめとなっている．
参照要約を見ると，参照要約の作成者はできる限りこれらの情報を網羅的に要約に含めることを狙っていることが読み取れる．
要約システムが後半の文を選択できなかったのはこのような話題の構造を理解することができなかったためで，この構造を要約システムに理解させることは重要部の同定に決定的に重要である．
表[REF_tb:input_document]の例において頻繁に行われている操作の1つは括弧の除去である．
括弧を通じて提供されている補足的な情報は全て要約から除去されていることがわかる．
これによって文を短くし文字数を減らすことができるため，要約システムもこの操作を実行できるようにする必要がある．
表[REF_tb:input_document]を見ると，文書全体にわたって文の書き換えが行われていることがわかる．
不要な修飾節などを除去し文を短く書き換える操作は文短縮あるいは文圧縮と呼ばれており[CITE]，この表[REF_tb:input_document]の例でも文1，文10などで典型的に行われている．
文短縮は，典型的には係り受け木の枝刈りを通じて行われるが，参照要約に含まれる文のうち係り受け木の枝刈りによって実現できるものは少数であり，参照要約作成者はより洗練された，言い換えなどの操作を通じて参照要約を作成していることがわかる．
異なる複数の文から1つの文を作成することは文融合と呼ばれている[CITE]．
参照要約を見ると，この文融合が行われていることがわかる．
表[REF_tb:文融合の例1]から[REF_tb:文融合の例4]にその例を示す．
参照要約の中では4回この操作が行われており，入力文書における表現と比べ情報量を維持したまま文字数の削減が行われている．
これらの操作によって削減された文字数を利用して参照要約作成者はさらに情報を要約に詰め込んでおり，この操作を行う機構を持たない要約システムは再現率において劣後せざるを得ない．
便宜的に「省略」としたが，「この」や「など」の表現を用いて，入力文書における情報を除去している箇所がある．
表[REF_tb:省略の例1]に示す参照要約の文3では，朱首相の「三つの実行」のうち金融機構改革が失われており，これが「など」として表現されている．
また表[REF_tb:省略の例2]に示す参照要約の文6では，「改革と安定追求のジレンマ」を「この」で表現しており，同様に文字数を節約している．
一方，参照要約の品質が疑われる部分もある．
入力文書の文14と文15とは並列の関係にはないと思われるため，参照要約の文9先頭の接続詞「また」は要約作成者の読みの誤りを示唆している．
ここまでの分析を，本稿で提案した誤り分析の枠組みに適用した結果を表[REF_tb:自動要約の誤り分析の一例]に示す．
表[REF_tb:自動要約の誤り分析の一例]に示されているように，今回は文短縮などの書き換え機構を利用していないため，非文が出力されることはなかった．
一方で，文を短く書き換える操作を行えないため，情報の被覆において参照要約に大きく劣後しており，これが低い再現率の直接の原因となっている．
本節では，[REF_sc:分析の実践]節で述べた分析に基づいて実際に要約システムを改良した結果について述べる．
[REF_sc:文の書き換え操作の追加]節では要約システムに文の書き換え操作を追加する．
[REF_sc:特徴量の追加]節では要約システムに特徴量を追加する．
[REF_sc:パラメタの調整]節ではパラメタの調整を行う．
[REF_sc:結果と考察]節ではこれらの改良によってなされた要約の改善について議論する．
[REF_sc:他の文書に対する適用]節では，改良したシステムを文書番号990305053以外のテキストに適用し，本節で行った改良の効果をみる．
なお，本節での改良が要約システムを真に改良としたと言うことは難しい．
要約システムが真に改良されたと言うためには，少なくとも，ある特定の分野における複数の異なる入力文書を用意し，これらから生成される要約の品質が，改良前の要約システムのそれと比べて改善されていることを検証する必要がある．
この点を踏まえ，本稿における本節の意義は以下の2点にある：
[REF_sc:分析の実践]節で述べた分析に基づいて行うことができる要約システムの改良方法について具体的に述べること．
本稿で提案している分析が，少なくとも，ある入力文書の要約システムによる要約結果を人手で分析し，それに基づいて要約システムの改良を行うことによって，その入力文書を要約する限りにおいては，よりよい要約を出力するために役立つということを示すこと．
表[REF_tb:自動要約の誤り分析の一例]に示したように，今回の事例において操作の不足は深刻な問題である．
そのため，参照要約において行われている書き換え操作の一部を要約システムも行えるようにした．
西川らの要約システムは括弧を除去する機能を持つため，この機能を動作させるようにした．
同様に，文短縮機能も動作させるようにした．
西川らの要約システムは文融合の機能を持たないため，表[REF_tb:文融合の例1]から[REF_tb:文融合の例4]に示した文融合が行われた文を人手で作成し，要約システムが選択可能な文集合に加えた．
文融合と同様に，省略が行われている文についても人手で参照要約と同様の文を作成し，それを要約システムが選択可能な文集合に加えた．
具体的には，表[REF_tb:省略の例1]および[REF_tb:省略の例2]の参照要約の文を入力文書の文の書き換え後の文として要約システムに追加した．
表[REF_tb:自動要約の誤り分析の一例]に示したように，一部の特徴量を要約システムが認識できないことは要約の作成に悪影響を与えている．
そのため，分析の結果として重要と思われた特徴量を追加した．
[REF_sc:重要部の同定の失敗]節で述べたように，重要文の同定に失敗した主因の1つは入力文書の話題の遷移を捉えることができないためであった．
西川らの要約システムは段落に関する情報を特徴量として利用することができるため，入力文書に表[REF_tb:入力文書に含まれる話題の遷移]に基づいて段落情報を付与した．
具体的には，同一の話題番号に属する文は同一の段落に属するものとした．
西川らの要約システムは段落の先頭の文を重要文として選択する傾向があるため，これによって各話題の先頭の文を重要文として選択できると期待できる．
表[REF_tb:reference]の参照要約を見ると，入力文書の最後の文を入力文書におけるある種のまとめとして重要文とみなしていることがわかる．
この点を鑑み，最後の文にはその文が最後の文であるとわかる特徴量を追加した．
最後に，パラメタの調整を人手で行った．
パラメタの調整は，調整後に要約システムが生成する要約が参照要約に近づくように人手で各特徴量の重みを調整することで行った．
具体的に行ったのは以下の調整である：
括弧が含まれる文の重要度を下げるようにした．
参照要約においては入力文書に含まれる括弧は全て除去されているため，これが除去されるようにした．
冒頭の段落に含まれる文の重要度を下げるようにした．
通常，新聞記事は逆三角形と呼ばれる構造をなしており[CITE]，冒頭の段落がほぼ当該記事の要約をなしている．
そのため，西川らの要約システムは冒頭の段落に含まれる文に大きな重みを与えている．
しかし，今回分析の対象とした入力文書はいささか散文的であり，その点を鑑みてか参照要約の作成者は記事の冒頭以外からも多く文を選択している．
このことから，冒頭の段落に含まれる文の重みを小さくし，文書全体から文が選ばれるようにした．
長い文が選ばれづらくなるようにした．
参照要約は長い文をあまり含んでおらず，文短縮や文融合，省略が施された短い文を含んでいる．
そのため，それらの文が選ばれやすくなるように文の長さに対して負の重みを与えた．
百分率の固有表現を含む文が選ばれやすくした．
参照要約には中国の経済成長に関する具体的な百分率が含まれており，これらの情報が要約に含まれるように百分率の固有表現の重みを大きくした．
類似する文が選ばれづらくした．
西川らの要約システムは文同士の類似度を特徴量として設定しており，類似した文が要約に選択されやすくなっている．
しかし，今回分析の対象とした入力文書の参照要約を見る限り，参照要約の作成者はできるだけ幅広い話題を入力文書において網羅しようとしているように観察される．
そのため，むしろ類似する文は要約に含まれないようにした方がよいと思われたため，類似する文が選ばれづらくなるようにした．
段落の先頭の文の重みを大きくした．
[REF_段落情報に関する特徴量]節で述べたように，参照要約の作成者は入力文書に含まれる様々な話題を網羅するように要約を作成したように思われる．
特に，各話題に関する段落の先頭の文を参照要約の作成者は参照要約に含ませているように観察されるため，これらが要約に含まれやすくなるようにした．
最後の文の重みに大きな値を与えた．
[REF_最後の文に関する特徴量]節で述べた特徴量は新しく追加したものであるため，当該特徴量に対する重みがパラメタ集合内には存在しない．
そのため，最後の文が選ばれるように最後の文であることを示す特徴量に大きな重みを与えた．
書き換え操作を追加したのちのシステム要約を表[REF_tb:書き換え操作を追加したのちの文書番号990305053のシステム要約]に示す．
書き換え操作および特徴量を追加したのちのシステム要約を表[REF_tb:書き換え操作および特徴量を追加したのちの文書番号990305053のシステム要約]に示す．
書き換え操作，特徴量およびパラメタ調整を追加したのちのシステム要約を表[REF_tb:書き換え操作，特徴量およびパラメタ調整を追加したのちの文書番号990305053のシステム要約]に示す．
これらの要約システムの改良によるROUGEの変化を表[REF_tb:要約システムの改良によるROUGEの変化]に示す．
Rwは書き換え操作が追加された要約の評価，[MATH]は書き換え操作および特徴量が追加された要約の評価，[MATH]は書き換え操作，特徴量，およびパラメタ調整が追加された要約の評価である．
[MATH]で示した数値はある改良によってどの程度ROUGE-1の値が改善したかを示す．
なお，本節の目的は，書き換え操作の追加，特徴量の追加，パラメタ調整それぞれのROUGEへの影響を見ることそのものにはなく，各改良によってどのような変化がシステム要約に生じるかを見ることにある．
また，これらの改良は，後で述べるように3つ全てを合わせたときにこそ大きく要約に影響を及ぼすものであるため，個別の改良の影響に必ずしも注目するものではないことに注意されたい．
書き換え操作の追加によっていくらかROUGEが改善されたものの，表[REF_tb:書き換え操作を追加したのちの文書番号990305053のシステム要約]が示すように，書き換え後の文の一部は要約システムによって選択されておらず，その効果が十分に発揮されていない．
そのため，ROUGEの改善も必ずしも大きなものではない．
このことから，単に書き換え操作を追加するだけではなく，書き換え後の文が重要文として選択されるように特徴量およびパラメタを調整しないといけないことがわかる．
次に，特徴量の追加による影響についてみる．
表[REF_tb:要約システムの改良によるROUGEの変化]が示すように，特徴量の追加により，大きくROUGEが改善されていることがわかる．
これは全て段落情報に関する特徴量の影響である．
最後の文に関する特徴量は新しく追加したものであるため，この時点では生成される要約に対して影響を与えない．
参照要約の作成者は入力文書に含まれる各話題からそれらに対応する文を選択しているため，段落情報を通じてこの情報を要約システムが利用できるようになった影響は大きい．
最後に，パラメタの調整による影響をみる．
表[REF_tb:要約システムの改良によるROUGEの変化]が示すように，パラメタの調整によりROUGEが劇的に改善されていることがわかる．
表[REF_tb:書き換え操作，特徴量およびパラメタ調整を追加したのちの文書番号990305053のシステム要約]に示す要約には参照要約に含まれていない文が1つだけ含まれているものの（文12），参照要約にかなり類似した要約を生成することに成功している．
このことから，適切な書き換え操作と特徴量を追加した上で適切なパラメタを得ることができれば，参照要約に近い要約を生成できることがわかる．
ROUGEとは別に，表[REF_tb:システム要約から読み取ることができる参照要約中の言明]に各システム要約から読み取れる参照要約中に含まれる言明を示す．
参照要約は20の言明からなる．
パラメタの調整まで加えた最良のものでも16個の言明を含むに留まっており，4個の言明を取りこぼしている．
特に13番目の言明についてはいずれのシステム要約も選択することができておらず，これを選択するためにはより詳細な特徴量を設定するなどの工夫が必要であろう．
最後に，改良前の要約システムによるシステム要約と，改良を加えた要約システムによるシステム要約を比較した．
TSC-2のデータに含まれる残りの59文書を入力とし，改良前後の要約システムで要約を作成した．
[REF_sc:分析の実践]節と同様に，長い方の参照要約を参照要約とし，要約システムが各文書の要約を作成する際には参照要約の長さ以内の要約を作成するようにした．
ROUGE-1で評価を行った結果を表[REF_tb:文書番号990305053以外の文書を入力とした場合のROUGEによる評価結果]に示す．
有意水準[MATH]は0.05としてウィルコクソンの符号順位検定[CITE]を用いて検定を行ったところ，改良前後でのROUGE-1の変化は有意であった．
要約システムに加えた改良はあくまで文書番号990305053に特化したものとなっているため，改善は大きくないものの，文書番号990305053に基づいて行った改良が他の文書に対しても有効に働いたことがわかる．
ある特定の文書ではなく，あるコーパスを構成する全ての文書に対するシステム要約の品質を全体的に向上させようとする際には，例えば，そのコーパスを構成する文書の中から代表性を持つ文書を特定し，そのような文書を集中的に分析し要約システムを改良するといった手段が考えられる．
