    \documentclass[japanese]{jnlp_1.4}
\usepackage{jnlpbbl_1.3}
\usepackage[dvipdfm]{graphicx}
\usepackage{amsmath}
\usepackage{array}
\usepackage{bm}

\def\BT{}                                 
\def\UW{}                                 
\def\Dder{}                            
\def\Ider{}              
\def\Nsum#1{}                      
    \def\Bdma#1{}                
\def\Stri#1#2{} 
\def\Conc#1#2{}        
\def\argmax{}           
\def\argmin{}           
\def\MLE{}    
\def\QED{}             
\def\because{}
\def\MC#1#2#3{}
\def\lineB#1#2{}
\def\lineC#1#2#3{}
\def\ecaption#1{}
\def\tabref#1{}
\def\figref#1{}
\def\equref#1{}
\def\secref#1{}
\def\subref#1{}
\def\appref#1{}
\def\KKC#1{}
\def\Cite#1{}
\def\UU{}
\def\pair#1#2{}


\Volume{22}
\Number{2}
\Month{June}
\Year{2015}

\received{2014}{11}{3}
\revised{2015}{2}{6}
\accepted{2015}{4}{7}

\setcounter{page}{107}

\jtitle{レシピ用語の定義とその自動認識のための\\タグ付与コーパスの構築}
\jauthor{笹田　鉄郎\affiref{ACCMS} \and 森　　信介\affiref{ACCMS} \and 山肩　洋子\affiref{KU} \and 前田　浩邦\affiref{CY} \and 河原　達也\affiref{ACCMS}}
\jabstract{
自然言語処理において，単語認識（形態素解析や品詞推定など）の次に実用化可
能な課題は，ある課題において重要な用語の認識であろう．この際の重要な用
語は，一般に単語列であり，多くの応用においてそれらに種別がある．一般的
な例は，新聞記事における情報抽出を主たる目的とした固有表現であり，人名や組
織名，金額などの7つか8つの種別（固有表現クラス）が定義されている．この
重要な用語の定義は，自然言語処理の課題に大きく依存する．
我々は
この課題をレシピ（調理手順の文章）に対する用語抽出として，
レシピ中に出現する
重要な用語を定義し，実際にコーパスに対してアノ
テーションし，実用的な精度の自動認識器を構築する過程について述べる．
その応用として，
単純なキーワード照合を超える知的な検索や，映像と言語表現のマッチ
ングによるシンボルグラウンディングを想定している．
このような背景の下，
本論文では，レシピ用語タグセットの定義と，実際に行ったアノテーショ
ンについて議論する．
また，レシピ用語の自動認識の結果を提示し，必要
となるアノテーション量の見通しを示す．}

\jkeywords{固有表現認識，用語抽出，レシピ，コーパス，アノテーション}

\etitle{Definition of Recipe Terms and Corpus Annotation for their Automatic Recognition}
\eauthor{Tetsuro Sasada\affiref{ACCMS} \and Shinsuke Mori\affiref{ACCMS} \and Yoko Yamakata\affiref{KU} \and Hirokuni Maeta\affiref{CY} \and Tatsuya Kawahara\affiref{ACCMS}}
\eabstract{
In natural language processing (NLP), recognizing important terms after word recognition (word segmentation, part-of-speech tagging, etc.) is practical.
In general, terms are word sequences and are classified into different types in many applications.
A famous example is the named entity that aims to extract information from newspaper articles.
This has seven or eight types (named entity classes) such as person name, organization name and amount of money.
The definition of important terms depends heavily on the NLP task.
We chose term extraction from recipes (cooking procedure texts) as our task.
We discuss a process to define terms and types, annotate corpus, and construct a practically accurate automatic recognizer of recipe terms.
The recognizer can potentially be applied to search functions that are more intelligent than simple keyword match and symbol grounding researches, 
wherein we can match videos and language expressions.
Based on these backgrounds, in this study, we discuss the definition of a tag set for recipe terms and real annotation work.
Furthermore, we present the experimental results of automatic recognition of recipe terms and provide an insight into the number of annotations required for realizing a certain degree of accuracy.}
\ekeywords{Named Entity Recognition, Term Extraction,  Recipe, Corpus, Annotation}

\headauthor{笹田，森，山肩，前田，河原}
\headtitle{レシピ用語の定義とその自動認識のためのタグ付与コーパスの構築}

\affilabel{ACCMS}{京都大学学術情報メディアセンター}{Kyoto University, Academic Center for Computing and Media Studies}
\affilabel{KU}{京都大学大学院情報学研究科}{Kyoto University, Graduate School of Informatics}
\affilabel{CY}{サイボウズ株式会社}{Cybozu, Inc.}



\begin{document}
\maketitle


\section{レシピ用語タグセットの定義}
\label{nestd}

\ref{rw_ner}節で述べたとおり，
レシピテキストのように，新聞とは異なる利用目的をもつ言語資源を取り扱う場合，
一般的な固有表現の定義は有用ではない．
そこで
我々はレシピを用いて調理を行う際に必要となるレシピ用語を分類，定義した．
本節で述べるレシピ用語の一部は先行研究
\cite{Structural.Analysis.of.Cooking.Preparation.Steps.in.Japanese}
で用いられていた表現分類を踏襲しているが，
コーパス構築を行う過程で，先行研究における分類だけではカバーできないと判断した
レシピ中の重要表現を新しく定義し，追加した．
レシピ用語タグの一覧を表\ref{tab_NEtag}に示す．
実際のコーパス構築においては各単語にIOB2タグ（\ref{rw_ner}節参照）を
付与するという形でCOOKPAD\footnote{http://cookpad.com}が公開しているレシピの中
から
無作為抽出で選択した
436レシピにアノテーションを行った．
構築したコーパスの詳細を表\ref{table_corpus}に示す．
なお，後述する評価実験では
コーパスを学習・テストに分割して実験を行うため，
表~\ref{table_corpus}には分割後の詳細を示している．
また，アノテーションを行ったコーパス中の
レシピ用語タグ付与数の分布，ならびにタグごとの平均単語長と最大単語長を
表\ref{tab_dist}に示す．
以下では，8種類のレシピ用語タグについて個別に例を挙げながら述べる．
なお，本節以降では簡単の為IOB2タグ形式を用いた表記ではなく，「例） /パイ 生地/F を /焼/Ac く」のように，
「/単語列/レシピ用語タグ名」の形式でレシピ用語タグの範囲を示し，例文を記述する．

\begin{table}[t]
\caption{レシピ用語タグ一覧}
\label{tab_NEtag}
\input{02table01.txt}
\end{table}
\begin{table}[t]
  \caption{レシピ用語タグ付与コーパス}
  \label{table_corpus}
\input{02table02.txt}
\end{table}
\begin{table}[t]
\caption{付与したレシピ用語タグの統計}
\label{tab_dist}
\input{02table03.txt}
\end{table}


\subsection{F: 食材}

レシピテキストにおいては調理対象である食材，ならびに調理を行うための道具が主な人工物
として記述される．中でも食材
は調理における動作の目的語，食材の変化や状態の遷移の主語となるため，レシピに記述さ 
れた手続きの要素として過不足無く抽出されることが望ましい．
また，レシピにおいては，中間食材や食材の集合を番号や記号・代名詞によって表現する事例が
多い．以上を踏まえ，以下に挙げる単語列を『F: 食材』と定義した．
\begin{description}
 \item [食材]\mbox{}\\
	     例） {\bf /チーズ/F}\\
	     例） {\bf /ごま 油/F}
 \item [中間食材]\mbox{}\\
	     例） {\bf /生地/F}\\
	     例） {\bf /サルサ ソース/F}
 \item [食材の一部]\mbox{}\\
	     例） {\bf /じゃがいも/F} の {\bf /皮/F}\\
	     例） {\bf /水分/F} を /切/Ac る
 \item [調理の完成品]\mbox{}\\
	     例） {\bf /卵焼き/F}\\
	     例） {\bf /チーズ ケーキ/F}
 \item [記号・代名詞]\mbox{}\\
	     例） {\bf /1/F} を /フライパン/T に /流し入れ/Ac る\\
	     例） お /鍋/T の {\bf /中身/F} が /ぐつぐつ/Af し て き た ら
 \item [商品名]\mbox{}\\
	     例） {\bf /とろけ る チーズ/F}\\
	     例） {\bf /薄切り ベーコン/F}
\end{description}


\subsection{T: 道具}

鍋，蓋，包丁，コンロなど，調理道具や器等を道具表現とする．
手や指などの体の一部も道具表現になる場合がある．
食せない，量が変化しない点以外は『F: 食材』のルールを踏襲する．

\quad \noindent 例） /3 分/D {\bf /レンジ/T} を /し/Ac て から

ただし，「『T: 道具』（する）」という表現は，後述する『Ac: 調理者の動作』となりうる．
この場合には，『Ac: 調理者の動作』のアノテーションを優先する．

\quad \noindent 例） /3 分/D /レンジ/Ac する

以下に示す「弱火」の例では
「コンロ」「鍋」といった調理に必要な道具が明示されていないが，
実際の調理ではそのような道具を用いて
調理する意味を含んでいるため，道具とする．

\quad \noindent 例） {\bf /弱火/T} で /煮/Ac る

以下の「水」や「手」も道具とする．

\quad \noindent 例） {\bf /水/T} で /洗/Ac って

\quad \noindent 例） {\bf /手/T} で /洗/Ac って


\subsection{Ac: 調理者の動作 / Af: 食材の変化}

『Ac: 調理者の動作』は調理者を主語にとって調理者が行う動作を示す用言であり，
『Af: 食材の変化』は『F: 食材』を主語として食材の変化を示す用言である．
『Ac: 調理者の動作』と『Af: 食材の変化』は異なるレシピ用語として定義されるが，
アノテーションの際には両者を混同しやすい事例が頻出するため，本項でまとめて例を述べる．
いずれも，同一性判定を容易にするために，活用語尾を含めない．
動作を修飾する，「よく」「ざっくり」などの副詞表現も，同様の理由により
レシピ用語
としない．

調理者が行う動作を示す用言を『Ac: 調理者の動作』とする．

\quad \noindent 例） /フライパン/T を {\bf /温め/Ac} る

『F: 食材』を主語としてその変化を示す用言を『Af: 食材の変化』とする．

\quad \noindent 例） {\bf /沸騰/Af} し 始め た ら

使役・否定の助動詞を伴う場合のみ，これらの助動詞語幹までを含めて
『Ac: 調理者の動作』とする．
受動の助動詞を伴う場合，主語が『F: 食材』であれば実際には調理者を主語として
『F: 食材』を対象とした調理行動を行っているとし，『使役，否定』の場合と同様に
助動詞語幹までを含め『Ac: 調理者の動作』とする．
なお，本論文でタグ付与の対象としたレシピテキストにおいて『F: 食材』を主語とした受動態の
事例は確認されなかったため，以下では使役・否定の事例のみを挙げる．

\quad \noindent 例） {\bf /沸騰 さ せ/Ac} た ら

\quad \noindent 例） {\bf /沸騰 し な/Af} い よう に

目的語など格助詞で示される「項」を含めない．

\quad \noindent 例） /皮/F を {\bf /む/Ac} い て

複合動詞は全体を調理動作とする．

\quad \noindent 例） {\bf /ふる/Ac} っ て お い た /薄力 粉/F  を {\bf /振る い いれ/Ac}

開始や完了などをあらわす補助的な動詞は含まない．

\quad \noindent 例） {\bf /煮込/Ac} ん で い く

\quad \noindent 例） {\bf /煮た/Af} っ て く る

動詞派生名詞やサ変名詞などの事態性名詞も動作とする．

\quad \noindent 例） /ねぎ/F を {\bf /みじん切り/Ac} する．

\quad \noindent 例） /ねぎ/F を /みじん切り/Sf に {\bf /する/Ac} ．

『F: 食材』で述べたように，商品名など，実際に行わない用言は『F: 食材』に含める．

\quad \noindent 例） /とろけ る チーズ/F

\quad \noindent 例） {\bf /水溶き/Ac} /片栗粉/F


\subsection{Sf: 食材の様態}

レシピテキストでは，調理の進行度合いや食材の変化を伝えるために個々の時点
における食材の様態が記述される．
『Ac: 調理者の動作』や『Af: 食材の変化』の影響によって食材が変化する（した）状態を表す
表現を『Sf: 食材の様態』とする．

\quad \noindent 例） {\bf /柔らか/Sf} く /な/Af る まで /煮/Ac る

\quad \noindent 例） {\bf /色/Sf} が /変わ/Af る

以下の例に示すように，『Sf: 食材の様態』は，見た目，大きさ，分量などの様々な単語を含ん
でおり，一つのレシピ用語を構成する単語数が多くなりやすい．このため，
\begin{itemize}
 \item アノテーションを行う際に作業内容の一貫性を担保しにくい
 \item 未知の『Sf: 食材の様態』が多く出現する
\end{itemize}
という問題が発生する．
この問題の詳細については3.8節で後述する．

\quad \noindent 例） {\bf /やっと 手 を 入れ られ る くらい/Sf} の お /湯/F

\quad \noindent 例） /にんじん/F を {\bf /だいたい 薄さ ５ ｍｍ/Sf} に /切/Ac る


\subsection{St: 道具の様態}

用意された道具様態の初期状態を表す表現，並びにAcやAfの影響で遷移する（した）状態を表す表
現をStとする．

\quad \noindent 例） {\bf /弱火/St} の /フライパン/T で /炒め/Ac る

\quad \noindent 例） /オーブン/T を {\bf /150 度/St} に /予熱/Ac する

『St: 道具の様態』は，『T: 道具』の例

\quad \noindent 例） {\bf /弱火/T} で /煮/Ac る

と混同しやすいが，文中で調理過程における道具が明示され，
その道具の状態を示している表現を『St: 道具の様態』と定義する．


\subsection{D: 継続時間}

加熱時間や冷却時間など，加工の継続時間を示す．
数字と単位のほか，それらに対する修飾語句も含める．

\quad \noindent 例） {\bf /12 〜 15 分 間/D} /煮込/Ac みます

\quad \noindent 例） {\bf /5 分 くらい/D} 

\quad \noindent 例） {\bf /2 日 後 くらい/D} が /食べ時/Af で す !


\subsection{Q: 分量}

食材の一部を用いた調理動作を行う場合，その一部が量として表される場合にその表現を『Q: 分
量』とする．
数字と単位のほか，それらに対する修飾語句も含める．

\quad \noindent 例） /人参/F  {\bf /３ 〜 ４ ｃｍ くらい/Q} を /鍋/T に /入れ/Ac

\quad \noindent 例） /酒/F  {\bf /大さじ ２/Q} を /加え/Ac


\subsection{レシピ用語タグの付与が困難な事例}
\label{dfne}

1節で述べたように，本論文においてアノテーションの対象とするレシピテキストは推敲が乏しく，
レシピとは関係のない内容も多く含まれる．このため，
本節で述べた
レシピ用語
の定義を用いて実際にアノテーションを行うと，
レシピ用語タグ
を付与するべきか否かの判断に迷う部分が出現する．
とくに，タグ付与数
の多いレシピ用語タグほど，レシピ用語となる表現のバリエーションも多く，
その分アノテーション作業に時間を要すると考えられる（タグ付与数の分布は表\ref{tab_dist}
を参照）．
以下では，レシピ用語タグを付与する際にアノテーションの困難であった事例を列挙し，
現状でのアノテーション処理を述べる．

\begin{itemize}
 \item 入れ子：
表\ref{tab_dist}の平均単語数と最大単語数からわかるとおり，
『Sf: 食材の様態』，『D: 継続時間』，『St: 道具の様態』，『Q: 分量』
は他のレシピ用語タグと比較して
長い単語列となりやすく，以下の例のように入れ子構造が発生することがある．

\quad \noindent 例） /やっと /手/T を 入れ られ る くらい/Sf の お /湯/F

このような場合は，より長い単語列の
レシピ用語タグ
（上述した例では『Sf: 食材の様態』）
       を優先し，アノテーションを行う．
 \item 調理と関係のない記述：食事の感想など，調理とは直接関係の無い記述に調理に関連する
       表現が出現することがある．
       例えば，レシピ中に出現する用言のほとんどは『Ac: 調理者の動作』
       もしくは『Af: 食材の変化』であるが，上述した理由によりそれ以外の用言も存在する．
       これらの表現にはレシピの検索や構造の把握といった応用に
       おいては優先度が低く，また作業者への負担が大きくなるため，すべてOタグを付与する．
       また人名や地域名といった，調理とは直接関係のない固有名詞に
       関しては，本節で述べた各レシピ用語タグの付与対象となる単語列の一部となって
       いない限りOタグを付与する．
 \item 他のレシピIDの参照：まれに他のレシピIDを参照して調理手順や材料を示す事例が見られ
       るが，これらのレシピIDにはOタグを付与し，1つのレシピのみでアノテーション作業を完結させる．
 \item 記述内容の一部だけが実際の調理に対応付けられる：
       「〜ならば，〜する」，「〜する（または〜する）」といった仮定表現や括弧表現など
       には，実際に行われない調理行動を含めた表現が複数レシピに記述されることがある．
       この場合は，実際に行われる調理行動は不明であり，また，一般的な固有表現認識の手
       法ではそれらを区別することはできない．このような事例では，すべての表現に
レシピ用語タグ
を付与する．

\quad \noindent 例） /フライパン/T に /グレープ シードル/F （ また は /オリーブ オイル
       /F ） を ひ い て
\end{itemize}



\section{レシピ用語の自動認識}

固有表現認識タスクは，各単語に対してIOB2タグを推定する，系列ラベリング問題として解く
ことが一般的であり，SVMや点予測などを用いた手法が提案されている\cite{Support.Vector.Machineを用いた日本語固有表現抽出,A.Machine.Learning.Approach.to.Recipe.Text.Processing}．

本節では，
点予測によるIOB2タグ推定と動的計画法による経路探索による手法
\cite{A.Machine.Learning.Approach.to.Recipe.Text.Processing}
を用いて
レシピ用語の自動認識実験
を行い，作成したコーパスの精度を評価する．
また，学習コーパスに現れない未知のレシピ用語の推定事例についての事例を示し，
議論する．
本実験のための学習コーパスならびにテストコーパスとして，
\ref{nestd}節で述べたレシピ用語タグ付与コーパスを用いる（表\ref{table_corpus}参照）．


\subsection{レシピ用語の自動認識と精度評価}
\label{neexp}

本節では点予測によるレシピ用語の自動認識手法
\cite{A.Machine.Learning.Approach.to.Recipe.Text.Processing}
について概説し，自動認識実験の結果と考察を述べる．
まず，
IOB2タグの付与された学習コーパスを用いて
ロジスティック回帰に基づく識別器
\cite{LIBLINEAR:.A.Library.for.Large.Linear.Classification}を構築
し，
テストコーパスの各単語
$w_i$
に対応するIOB2タグ
$t_{j}$
ごとの確率
$s_{i,j}$
を以下の式により推定する．
\[
  s_{i,j} = P_{LR}(t_{j}|\Bdma{x}^{-},w_i,\Bdma{x}^{+}).
\]
$\Bdma{x}^{-} = \cdots x^{-2}x^{-1}, \Bdma{x}^{+} = x^{+1}x^{+2}\cdots$はそれぞれ単語$w_i$の前後の文字列を示す．
本論文で用いるロジスティック回帰識別器の素性の一覧を\tabref{feat_lr}に示す．
表中の$c(x)$は$x$に対応する文字種（漢字，平仮名，片仮名，数字，アルファベット，記号）を得る関数である．

次に，IOB2タグを用いた固有表現はIタグから始まらない
等のタグ制約を適用しながら，各単語までの経路の中で
確率最大となるようにIOB2タグを順に選んでいくことで最適経路を決定し，
自動認識器の最終的な出力とする
（図\ref{figure:NE}参照）．

\begin{table}[b]
\caption{ロジスティック回帰に基づく識別器の素性一覧}
\label{feat_lr}
\input{02table04.txt}
\end{table}

\begin{figure}[b]
  \begin{center}
\includegraphics{22-2ia2f2.eps}
  \end{center}
  \caption{ロジスティック回帰によるタグ確率付与と最適経路（太字部分）の探索図}
  \label{figure:NE}
\end{figure}

\begin{table}[b]
  \caption{IOB2タグ推定精度とレシピ用語タグの自動認識精度とカバレージ}
  \label{table_exp_result}
\input{02table05.txt}
\end{table}

\begin{figure}[t]
  \begin{center}
\includegraphics{22-2ia2f3.eps}
  \end{center}
  \caption{レシピ用語タグごとのカバレージ}
  \label{graph_exp_cov}
\end{figure}

学習コーパスの量を5段階に調節して自動認識実験を
行った結果を表\ref{table_exp_result}に示す．
また，レシピ用語タグ別の評価として，
各タグごとのカバレージを図\ref{graph_exp_cov}に，
自動認識精度（F値）を図\ref{graph_exp_all}
に示す．
ここで，表\ref{table_exp_result}，図\ref{graph_exp_cov}，図\ref{graph_exp_all}
におけるカバレージは，
テストコーパスに出現するIOB2タグあるいはレシピ用語タグのうち，
学習コーパスにも出現したタグの割合（頻度を加味する．）である．
また，表\ref{table_exp_result}におけるIOB2タグ推定精度は，
テストコーパス中のIOB2タグに対する，
自動認識システムが出力したIOB2タグの一致率を示し，
レシピ用語タグの自動認識精度はF値を示している．

表\ref{table_exp_result}から，一般分野の固有表現認識と同様に，
学習コーパスの増加に伴い自動認識精度が向上していることが分かる．
また，学習コーパスの分量が少量の状態で，学習コーパスのテストセットカバレージが
50\%程度の場合であっても，自動認識精度は70\%以上の水準を達成しており，
レシピ用語タグ付与コーパスを用いた
固有表現認識手法が有効に機能していることがわかる．
特に，『D: 継続時間』に関しては，図\ref{graph_exp_cov}と図\ref{graph_exp_all}の該当
タグ部分より，10\%程度の低いカバー率しか達成できていない学習コーパスを利用した場合
においても70\%以上の自動認識精度を達成可能であることがわかる．
この要因として，
『D: 継続時間』が数詞と単位からなる単語列に付与されるレシピ用語タグであるために，
文字並びに文字種を素性とした固有表現認識が効果的に機能しているこ
とが考えられる．

\begin{figure}[t]
  \begin{center}
\includegraphics{22-2ia2f4.eps}
  \end{center}
  \caption{レシピ用語タグごとの自動認識精度}
  \label{graph_exp_all}
\end{figure}

次に，
図\ref{graph_exp_all}から，
『F: 食材』，『T: 道具』，『Ac: 調理者の動作』，『Af: 食材の変化』，の4種類
のタグについては，
一般分野の固有表現認識精度（1万文程度の学習コーパスで80\%〜90\%）と同程度
であり，すでに比較的高い精度が達成
されていることがわかる．
『Sf: 食材の様態』に関しては，『T: 道具』と同程度のアノテーション数があるにも関わらず
精度は70\%程度にとどまっている．
この要因として，『Sf: 食材の様態』には
機能語や別のレシピ用語タグの一部がしばしば含まれており，長い単語列となっている
（\ref{dfne}節を参照）
ことが自動認識を困難にしているということが考えられる．
『St: 道具の様態』，『D: 継続時間』，『Q: 分量』については，『D: 継続時間』のみ
90\%を超えているが，他の2種類に関しては60\%〜70\%の精度である． 
また，表\ref{tab_NEtag}から，上述した3種類のタグは他のタグに比較して
学習コーパス中のアノテーション数が不十分であることがわかる．
今後は，これらのタグに対するアノテーションを増加させること
で容易に精度を向上させることが可能であろう．
また，レシピ以外の分野における固有表現認識タスクにおいても，
本実験で示したようにタグごとの検討を行って
優先的にアノテーションするべきタグを選択し，
効率的に固有表現認識器を構築することが可能である．


\subsection{未知のレシピ用語タグの推定事例}
\label{est_unk}

本節では，
上述のレシピ用語の自動認識
実験において，
テストセットにおける未知の
レシピ用語
に対し，正しくタグが推定されているか
どうかについて，その事例を示し，議論する．以下に示す自動推定結果の例では，
学習セットに現れなかった未知の
レシピ用語
を太字で示す．

\begin{itemize}
 \item 未知の『Sf: 食材の様態』が出現する場合，ニ格を伴う場合や食材の切り方を示す場合に
       は，識別器によって適切にタグ推定が行われている．

\quad \noindent 例） {\bf /サイコロ 切り/Sf} に する/Ac ．

       その一方で，
\ref{dfne}節で述べた
       『Sf: 食材の様態』のような長い単語列となるレシピ用語タグ
の自動推定精度は下がる
       傾向にある．以下の例において，正しい『Sf: 食材の様態』の範囲は「１ 〜 ２ ｍｍ 位」
       であるが，自動推定では「１ 〜 ２」と誤って推定されている．

\quad \noindent 例） {\bf /１ 〜 ２/Sf} ｍｍ 位 で ．

       テストセットでは現れなかったが，
\ref{dfne}
節
に示したようにさらに長い単語列を『Sf: 食材の様態』とする場合
       もあるため，『Sf: 食材の様態』の自動推定は他の
レシピ用語タグ
に比較して困難に
       なると考えられる．

 \item 『Ac: 調理者の動作』に関しては，以下の例のように1文中において複数の単語が連続で
       Acと推定される事例（「所々」
       はAcではないため，誤り）が見られた．

\quad \noindent 例） 皮/F を {\bf /所々/Ac} /剥/Ac き

レシピテキストにおいては，「『F: 食材』を
       『Ac: 調理者の動作』」という表現が多く出現することが原因であると考えられるが，レ
       シピの構造を把握するなどの応用を考えると，誤った『Ac: 調理者の動作』が増加するこ
       とは応用全体の精度低下につながるため，品詞情報を識別器の素性に加えるなどの対策
       が必要になると考えられる．
\end{itemize}


\section{実際のアノテーション作業とその考察}
\label{section_annotation}

本節では，実際にコーパスを作成した過程で得られた知見として，まずコーパスのアノテー
ション手順について述べる．
次に，レシピ用語の自動認識器の精度を効率的に向上させる
ためのアノテーション戦略のシミュレーションについて述べる．


\subsection{アノテーション手順}
\label{annotation_proc}

大量のレシピテキストに対して研究者がレシピ用語タグを付与することは事実上不可能で
あるため，まずアノテーション基準を決めた上で作業者にアノテーションを行ってもらうこ
とが一般的である．
しかしながら，
\ref{dfne}節で述べた通り，レシピ用語タグによっては付与が困難な事例が存在するた
め，適切な手順を用いて効率的に作業を行う必要がある．
本節では，\ref{nestd}節で述べたレシピ用語タグの基準に従い，作業
者を含めた全体として効率的なアノテーションを行うための手順を述べる．
また，管理者と作業者の作業一致率を測ることによりその有効性を評価する．

本研究におけるレシピ用語アノテーションの作業にあたっては，図\ref{figure_0002}のよ
うな固有表現アノテーションツール
\footnote{http://plata.ar.media.kyoto-u.ac.jp/mori/research/topics/PNAT/ にて公
開している．} 
を利用し，各単語にIOB2タグの付与を行った
\footnote{なお，図\ref{figure_0002}に示したツールは，品詞・係り受け情報を付与す
る機能も備えているが，本論文におけるコーパス作成では用いておらず，図
\ref{figure_0002}中の品詞・係り受け情報は自動推定による結果をそのまま表示してい
る．}．図\ref{figure_0002}では，「鍋を熱して…」の「熱」という動詞に，『Ac: 調理者の
動作』の開始タグである「Ac-B」を割り当てている．

\begin{figure}[b]
  \begin{center}
\includegraphics{22-2ia2f5.eps}
  \end{center}
  \caption{固有表現アノテーションツール}
  \label{figure_0002}
\end{figure}

アノテーション作業の管理手順は以下のとおりである．
\begin{enumerate}
\item 管理者がレシピ用語の定義（\ref{nestd}節参照）を作成する．
      本研究においては，管理者1名（筆者）と研究者3人を合わせた4人で議論を行い，
      レシピ用語の定義を作成した．
\item 管理者が実際にレシピ用語の定義に従ってアノテーションを行い，サンプルデータを作成
  する．
\item 作業者にレシピ用語の定義とサンプルを渡し，一定時間
   \footnote{具体的な期間は管理者ならびに作業者の都合に準ずるが，
      本手順では一日分の作業を一単位とした．}のアノテーション作業を行ってもらう．
\item 管理者は作業者のアノテーション結果に対するチェックを行う．この際，作業者の作
  業結果と管理者がさらに修正を加えたアノテーション結果の間で作業一致率を測る．管理者
  は必要に応じて作業者にアノテーション基準に関するコメントを返し，
      レシピ用語の定義並びにサンプルの修正・更新を行う．
\item (3), (4)を繰り返す．
\end{enumerate}

本論文を執筆するにあたり，作業者にアノテーションを依頼したコーパスの一部（\ref{nestd}
節の表~\ref{table_corpus}で示した436レシピのうち，初めにアノテーションを行った40レシ
ピ）を対象として，上述した手順に従って4日間（1回$\times$ 4日）のアノテーション作業管理を
行い，管理者
1名（筆者）と作業者1名
との作業一致率を測った．
この際，作業者は管理者と同様に，全ての種類のタグに関するアノテーションを担当した．
作業一致率[\%]は，
\[
\frac{\mbox{作業者と管理者の付与したIOB2タグの一致数}}{単語数} \times 100
\]
で求められる．

\begin{table}[b]
  \caption{IOB2タグ付与の作業一致率}
  \label{table_conc}
\input{02table06.txt}
\vspace{-0.5\Cvs}
\end{table}

結果を表\ref{table_conc}に示す．
また，表\ref{table_conc}のうち，4日目の作業におけるIOB2タグごとの作業一致率を
表\ref{tab_conc_tag}に示す．
表\ref{table_conc}より，上述した手順に従うことで管理者・作業者間の
作業一致率が向上し，最終的にIOB2タグの自動認識精度
（表\ref{table_exp_result}参照）を有意に上回ることがわかる．
また，表\ref{tab_conc_tag}より，4日目には
事例の少ないSt-B，St-Iを除く全てのIOB2タグにおいて作業一致率が91\%以上となっていること
がわかる．以上の結果より，
作業者にアノテーションを任せることで自動認識の精度向上を図ることが可能であることを確認
した．

\begin{table}[t]
\caption{IOB2タグごとの作業一致率（4日目）}
\label{tab_conc_tag}
\input{02table07.txt}
\end{table}


\subsection{効率的な精度向上を目的としたアノテーション作業のシミュレーション}

前項で述べたアノテーション基準の確定の過程の結果，少量ながらレシピ用語のアノテー
ションがなされたコーパスが得られる．
\ref{section_intro}節で述べたような応用を考えると，短期間での自動認識
精度の向上が重要である．一般分野の固有表現の自動認識においては，
人名・組織名・地名のような
固有表現のカバレージを上げることで高い精度を達成することが可能である
\cite{Japanese.Named.Entity.Extraction.Evaluation.-.Analysis.of.Results.-}
．
これは，レシピ用語の自動認識においても同様であろうと推測される．
本節では，カバレージを重視した簡単なアノテーション戦略につい
て，シミュレーションの結果とともに議論する．
なお，レシピテキストを対象とした実際の
アノテーションでは，単語分割境界ならびにレシピ用語となる単語列の範囲
を決定してからタグを付与する必要があるが，
本節で述べるシミュレーションには上述の2種類の情報があらかじめ付与されている状態のコーパ
スを用いているため，実際のアノテーション作業にそのまま適用できるものではない．

カバレージを重視すると，新しいレシピ用語に集中的にアノテーションすることになる．
結果として，文中の一部のレシピ用語にのみアノテーションされた部分的アノテーション
コーパス\cite{Word-based.Partial.Annotation.for.Efficient.Corpus.Construction}が得ら
れる．逆に，アノテーション基準の確定の過程で得られるコーパスは，文中の全てのレシピ
用語にアノテーションされたフルアノテーションコーパスである．

カバレージを重視した簡単なアノテーション戦略と通常のアノテーション方法を比較するため
に，次のようなシミュレーションを行った．まず，我々の作成したレシピ用語タグ付与
コーパス（表\ref{table_corpus}参照）のうち，学習コーパスを$C_f$と$C_a$に2等分し，$C_f$を既に作成済みのフルアノ
テーションコーパス，$C_a$をこれからアノテーションを行う単語分割済みコーパスとみな
す．ここで，$C_f$はレシピ用語タグの定義を確定する際に得られる少量のフルアノテー
ションコーパスを，$C_a$はカバレージを優先してアノテーションを行う追加用コーパスを想定
している．
本実験では$C_a$に対して，以下に示す2種類の方法でコーパス
アノテーションのシミュレーションを行う．
$C_f$と$C_a$の一部を合わせたものを学習コーパスとしてレシピ用語の自動認識精度を
測った．
\begin{description}

\item [Full:] $C_a$に対して先頭から順に全ての単語に対してIOB2タグのアノテーションを行
  うと想定する．具体的には，$C_a$を10分割し，$C_f$に$C_a$の$k/10$ $(k = 0, 1,
  \cdots, 10)$を追加したものを学習コーパスとする．

\item [Part:] カバレージを重視したアノテーション戦略として，各レシピ用語が$C_f$と
  $C_a$の合計において$A_{max} \in \{0,1,2,5,10,20,50,\infty\}$回アノテーションされる
  ように$C_a$を先頭から部分的にアノテーションする
．ただし出現頻度が$A_{max}$未満のレ
  シピ用語に対しては，すべての出現箇所に対してアノテーションする．この結果得られ
  る$C_a$を$C_f$に追加したものを学習コーパスとする．$A_{max} = 1$であれば，最少のア
  ノテーション数で，手法{\bf Full}で$C_a$をすべてアノテーションした場合($k=10$)とレシ
  ピ用語のカバレージが等しくなる．
\end{description}
なお，手法{\bf Part}における$A_{max}=0$と手法{\bf Full}の追加コーパスが0/10の状態は同
じものであり，どちらも追加コーパスの無い状態である（つまり$C_f$のみ）．
また，手法{\bf Part}におけ
る$A_{max} = \infty$のときは手法{\bf Full}において追加コーパスが10/10の状態と同じであ
り，どちらも$C_a$の全ての単語にアノテーションを行ったものを追加コーパスとする状
態である．ここでのシミュレーションでは，$C_a$が人手によりフルアノテーションされているの
で非常に少量であるが，実際にアノテーションを行う状況では$C_a$は利用可能な全ての生
のレシピテキストであり，非常に大きい．つまり，手法{\bf Full}における10/10の追加コーパ
スを作成することは現実的ではないことに留意されたい．

本実験の結果を図\ref{figure_partgraph}に示す．
図\ref{figure_partgraph}における横軸は各手法におけるIOB2タグの
アノテーション回数を示しており，これはアノテーションにおける作業時間を
想定したものである．しかしながら
，実際のアノテーションにおいては，アノテーション箇所ごとの判断の難しさの違い，
\ref{annotation_proc}節で示した各アノテーション手順ごとの所要時間，などの要因
により，
必ずしも正確な作業時間を反映しているものではないことに留意されたい．
図\ref{figure_partgraph}から，手法{\bf
Full}の1/10と2/10は不安定（1/10から2/10に増量すると精度が低下している）ではあるが，全体
の傾向からカバレージを最重要に考えて，各レシピ用語について1回のアノテーションを行
う場合は，{\bf Part}の$A_{max} = 1$と大差はない．しかし，手法{\bf Part}において
$A_{max} \geq 2$とした場合に，手法{\bf Full}において同じ単語数のアノテーションをする
場合に比較してより高い精度が得られることがわかる．つまり，数回の出現に対してアノテー
ションすることで多様な出現文脈が学習できるようにしつつ，高いカバレージを確保するアノ
テーション戦略が自動認識の精度向上には有効であると期待される．

\begin{figure}[t]
  \begin{center}
\includegraphics{22-2ia2f6.eps}
  \end{center}
  \caption{カバレージを重視したアノテーションのシミュレーション}
  \label{figure_partgraph}
\end{figure}

実際のアノテーションにおいては，上述の通り$C_a$のサイズは非常に大きいため，この差はよ
り顕著になるであろう．さらに，上述の「簡単な戦略」はアノテーション戦略のシミュレーショ
ンに過ぎな
い．本論文でのスコープ外ではあるが，能動学習等に基づくより効率的なアノテーション戦略
が存在すると考えられる．基準が確定した後の精度向上においては，アノテーション作業を考
慮に入れた効率的なアノテーション戦略の研究が重要である．


\end{document}
