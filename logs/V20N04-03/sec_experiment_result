本節では提案した手法の性能を評価した結果について報告する．
本節では，[REF_methods]で述べる手法を用いて，[REF_corpora]で述べる文書集合を要約し，生成された要約を[REF_measures]で述べる評価手法で評価する．
[REF_methods]で述べる手法が必要とするパラメータの設定については[REF_parameters]で述べる．
結果とその考察については[REF_results]で述べる．
以下の手法を比較した．
RCKM提案手法．
冗長性制約付きナップサックモデルを整数計画ソルバーを用いてデコードしたもの．
冗長性制約付きナップサックモデルの最適解における性能を示す．
ソルバーはlp_solveを用いた．
RCLM-LH提案手法．
冗長性制約付きナップサックモデルを本論文で提案するラグランジュヒューリスティックを用いてデコードしたもの．
提案するデコーディングアルゴリズムによって得られる近似解の性能を示す．
MCMベースライン．
最大被覆モデルをソルバーを用いてデコードしたもの．
MCM-GRベースライン．
最大被覆モデルを貪欲法を用いてデコードしたもの．
KMベースライン．
ナップサックモデルを動的計画ナップサックアルゴリズムでデコードしたもの．
HUMAN達成しうる性能の上限を調べるため，複数の参照要約を用いて，性能の上限を求める．
[REF_corpora]節で述べるコーパスのうち，レビューコーパスは1つの評価セットに対して4つの参照要約が付与されているため，参照要約同士を比較することで性能の上限を示すことが可能である．
4つの参照要約があるため，それらの6つの組み合わせのうち，[REF_measures]節で述べる評価尺度ROUGEの値が最も高いものを性能の上限として採用する．
なお，[REF_corpora]節で述べるコーパスのうち，TSC-3は1つの評価セットに対して1つの参照要約しか付与されていないため，これを計算できるのはレビューのみである．
RCKM-LH，MCM-GRおよびKMのデコーダはPerlで実装した．
全てのプログラムはIntel Xeon X5560 (Quad Core) 2.8 GHz CPUを2つ，64 Gバイトのメモリを搭載した計算機上で動作させた．
上の手法を以下の2種類のコーパスによって評価した．
TSC-3 TSC-3コーパス[CITE]は自動要約のシェアード・タスクText Summarization Challenge 3で用いられたコーパスで，複数文書要約の評価セットを含む．
要約の対象となる文書は新聞記事であり，記事は毎日新聞および読売新聞から収集されている．
それぞれの評価セットは企業買収やテロなど特定のトピックに関する新聞記事から構成されている．
評価セットは30セットからなる．
1セットは新聞記事10記事前後からなり，1つの評価セットに含まれる記事の文字数の和は平均して約6,564文字である．
評価セット全体では352記事3,587文が含まれる．
それぞれの評価セットに対しては人間の作業者が短い要約と長い要約の2種類の参照要約を付与している．
Hiraoらによれば，参照要約の付与に際し，作業者は要約の対象となる記事を全て読んだのち，当該記事集合にふさわしい要約を作成した[CITE]．
短い要約は平均して約413文字であり，要約率にして約6%，長い要約は平均して約801文字であり，要約率にして約12%である．
本実験では短いものを用いて評価を行った．
評価セットごとに参照要約の長さが異なるため，要約を生成する際には参照要約と同じ長さを要約長として与え要約を生成した．
すなわち，本コーパスを用いた際には，平均として，約12記事からなる約6,564文字の記事集合を入力とし，約413文字の要約を生成する，要約率約6%の要約タスクとなる．
レビュー新聞記事とは異なるドメインで提案する要約モデルを評価するため，レビュー記事を用いて評価を行った．
インターネット上のレビューサイトから飲食店30店舗に関するレビュー記事を収集し，これを30セットの複数文書要約の評価セットとした．
1セットはレビュー記事15記事前後からなり，1つの評価セットに含まれる記事の文字数の和は平均して約2,472文字である．
評価セット全体では468記事2,275文が含まれる．
それぞれの評価セットに対しては4人の作業者が参照要約を付与しており，作業者は要約の対象となる記事を全て読んだのち，当該記事集合にふさわしい要約を作成した．
要約長はすべて200文字を上限とした．
そのため，実験において要約を生成する際には一律200文字を要約長として要約を生成した．
従って，要約率は平均して8%である．
本コーパスを用いた際には，平均として，約16記事からなる約2,472文字の記事集合を入力とし，200文字の要約を生成する，要約率約8%の要約タスクとなる．
表[REF_tb:statistics]にコーパスに関する統計量をまとめておく．
我々の提案する手法を評価するため，以下の2つの尺度を用いた．
要約品質要約の品質の評価には要約の自動評価尺度であるROUGE [CITE]を用いた．
ROUGEの亜種のうち，ROUGE-1およびROUGE-2を評価に利用した．
なお，平尾らは，参照要約のROUGE値を計算する際には，文を構成するすべての単語ではなくて，内容語のみを用いて計算を行った方が人間による評価と相関が高い結果が得られると報告している[CITE]．
そのため，本論文でもROUGE値を計算する際には内容語のみを用いた．
生成された要約を単語に分割し品詞を付与する際にはFuchiらによる形態素解析器[CITE]を利用した．
ROUGE値を算出するプログラムはLinの文献[CITE]に従い独自に実装した．
なお，レビューコーパスについては1セットに対して複数の参照要約が付与されているため，評価の際には，当該セットに付与されているすべての参照要約に対してROUGE値を求め，最も高いROUGE値をその要約のROUGE値とした．
このROUGE値の計算方針はLinの提案によるものである[CITE]．
これは，ある入力文書集合に対して妥当な要約は複数存在し得ると考えられることから，参照要約の中で機械による要約にとって最も近いものとのROUGE値をもってその要約の評価とするためである．
要約速度要約の生成までの速度を計測した．
いずれのコーパスでも，30セットすべてを要約するまでの時間を計測した．
なお，要約品質の検定にはウィルコクソンの符号順位検定[CITE]を用いた．
多重比較となるため，全体の有意水準は0.05とした上で，[MATH]値の大きさに従って検定それぞれにおいて有意水準をホルム法[CITE]で調整した．
本節では要約に際して必要なパラメータの設定について述べる．
以下に述べるパラメータのうち，概念重要度は全ての手法が利用する．
概念冗長性はRCKMおよびRCKM-LHが利用する．
ステップサイズおよびイテレーションはRCKM-LHのみが利用する．
概念[MATH]およびその重要度[MATH]はコーパスに合わせそれぞれ以下のように設定した．
TSC-3概念[MATH]は内容語とし，その重み[MATH]はtf-idf [CITE]に基づき，[MATH]とした．
ここで，[MATH]は要約の対象となる入力文書集合中での内容語[MATH]の出現頻度，[MATH]は新聞記事コーパス中で内容語[MATH]を含む記事の数，[MATH]は新聞記事コーパスに含まれる記事の総数である．
新聞記事コーパスとして，2003年と2004年の毎日新聞コーパスを利用した．
文を単語に分割し品詞を付与する際にはFuchiらによる形態素解析器[CITE]を利用した．
レビューレビューを要約の対象としたため，概念[MATH]として評価情報を利用した．
評価情報の定義とその抽出方法は西川らによるもの[CITE]に従った．
概念[MATH]の重み[MATH]は当該評価情報の入力文書集合中での出現頻度を利用した．
評価情報を文中から抽出する際，形態素解析にはFuchiらによる形態素解析器[CITE]を，係り受け解析にはImamuraらによる係り受け解析器[CITE]を，評価表現辞書は浅野らによる評価表現辞書[CITE]をそれぞれ利用した．
なお，本論文では内容語を概念としてレビューを対象に要約を実施する実験は行わない．
西川らは，内容語を概念としてレビューを対象に要約を実施した場合，評価情報を用いた場合と比べ良好な結果を得ることができなかったと報告している[CITE]．
彼らはこの結果について，レビューの要約においては焦点となる情報が評価情報であるため，それを被覆の対象としなければ良好な結果が得られないと結論づけており，これは妥当な解釈であると考えられる．
同様に，評価情報を概念として新聞記事を対象に要約を実施する実験も行わない．
これは，予備実験として，新聞記事に付録記載の評価情報抽出を行ったところ，ほとんど評価情報が抽出されず，従って評価情報を概念として新聞記事を対象に要約を行っても意味のある結果は期待できないと考えられるためである．
新聞記事においては「〜はよかった」「〜は悪かった」というような何らかの評価に関する記述があまり存在しない．
そのため評価情報は新聞記事を対象として要約を実施する際に有効な概念であるとは言えない．
冗長性パラメータ[MATH]は以下の4種類を設定した．
ON概念冗長性を1とする．
これは，同じ概念が2回以上要約に出現することを禁じる．
すなわち[MATH]である．
この制約を用いた場合，同一の概念は一度しか要約中に出現することができず，そのため最大被覆問題と同様に冗長性が削減されることが期待される．
最大被覆問題とこの制約を用いた冗長性制約付きナップサックモデルの差異は，前者は目的関数を利用して冗長性を削減するのに対し，後者は制約を用いて冗長性を削減することにある．
KL概念[MATH]の入力文書集合中の出現頻度に，要約長[MATH]と入力文書集合のサイズ[MATH]の比をかけたものとする．
ただし，値が小数となることが多いため，その場合は値を切り上げることとした．
すなわち[MATH]である．
この制約を用いた場合，入力文書集合中での概念の出現頻度の分布が，要約長を加味した上で要約にも同程度再現されることが期待される．
SR概念冗長性を，各単語の入力文書集合中での出現回数の平方根とする．
KLと同様，値が小数となることが多いが，その場合は値を切り下げることとした．
これはKLでは[MATH]の値が1未満になることがあるのに対し，平方根を取る場合はその恐れがないためである．
すなわち[MATH]である．
この制約はKLと異なり要約長の影響を受けない．
また，KLに比べ冗長性に寛容である．
RF概念冗長性を，参照要約に含まれる概念の数とした．
これは，概念冗長性が理想的に設定された場合の性能を示している．
なお，レビューコーパスについては複数の参照要約が存在するため，同一の概念については複数の参照要約の平均を取り，小数となった場合は値を切り上げることとした．
これらは2つのコーパスで共通である．
[MATH]は最初は1とし，以降，ラグランジュ乗数がアップデートされた回数の逆数とした．
すなわち，最初のアップデートの際は[MATH]は1であり，次のアップデートの際は[MATH]，さらに次のアップデートの際には[MATH]となる．
ラグランジュヒューリスティックによるデコーディングの際にはイテレーションの回数[MATH]を調整することができる．
イテレーションの回数は10回と100回とし，それぞれRCKM-LH(10)とRCKM-LH(100)として示す．
要約品質の評価を表[REF_tb:quality]に，要約時間の評価を表[REF_tb:speed]に示す．
TSC-3コーパスにおける評価の結果から述べる．
まず，RCKMとMCM，KMの差異に目を向ける．
RCKMの中ではRFが最も高いROUGE値を得ており，次いでSRという結果となった．
RFおよびSRはその最適解においてMCMを有意に上回っていた．
提案するラグランジュヒューリスティックによるデコーディングを用いた場合RCKM-LHでは，イテレーション回数が10回の場合でも100回の場でも，RFはMCMを有意に上回っている一方，SRはMCMと有意な差がなかった．
表[REF_tb:speed]に示すように，提案するデコーディング法はソルバーによるデコーディングと比べ高速に要約を生成できており，MCMと同水準以上の要約を高速に生成できることがわかる．
MCMとMCM-GRを比べると，貪欲法はソルバーに比べ高速にデコーディングを行うことができるものの，MCM-GRの方が有意にROUGE値が低く，探索誤りが生じていることがわかる．
KMとMCMの間に有意差はなかったものの，全体としてMCMがより高いROUGE値を示した．
提案する要約モデルRCKMは，冗長性パラメータをRFあるいはSRとした際にMCMに比べ優れている．
この理由は，参照要約は単語のレベルにおいてある程度の冗長性を持っているためである．
図[REF_fg:exref]は，TSC-3コーパスに含まれる参照要約の1つである．
同一の内容語はゴシック体として示してある．
図[REF_fg:exref]から，明らかに参照要約は単語のレベルにおいて冗長性を持つことがわかる．
図[REF_fg:dist_news]はTSC-3コーパスを用いた実験における冗長性の分布である．
縦軸に内容語の種類，横軸に同一の参照要約中での出現頻度をとりプロットした．
点は，参照要約，[REF_parameters]節で述べた方法によって設定された冗長性パラメータ，および各手法によって実際に生成された要約における冗長性の分布を示している．
例えば，TSC-3コーパスに含まれる2093種類の内容語は同一の参照要約に一度しか出現しない．
一方，10種類の内容語は，同一の参照要約に10回以上出現することがある．
図[REF_fg:exref]および図[REF_fg:dist_news]が示すように，ある1つの参照要約において，同一の単語が複数回出現することは何ら珍しいことではない．
提案する冗長性制約付きナップサックモデルRCKMは，冗長性パラメータを通じ，生成する要約に一定の冗長性を許容することができる．
一方，最大被覆モデルMCMは冗長性を忌避する．
実際に図[REF_fg:dist_news]が示すように，MCMが生成する要約は参照要約に比べ冗長性が低い．
そのため，図[REF_fg:exref]のように1つの参照要約において同一の単語が複数回出現するという現象を十分に捉えることができない．
それに対し，ナップサックモデルKMが生成する要約は高い冗長性を持つ．
図[REF_fg:dist_news]が示すように，要約中に4回以上出現する単語の種類が参照要約に比べて多く，特に10回以上出現する単語が42種類存在している．
このように過度に冗長な要約を生成する性質は複数文書要約にとっては好ましいものではない．
図[REF_fg:dist_news]を見ると，冗長性パラメータSRは参照要約の冗長性に近い冗長性を有する要約を実現できている．
全体的な傾向として，ナップサックモデルでは，要約中にある回数だけ出現する単語の種類は左から右に向かってなだらかに減少していく．
これは，要約中に1度しか出現しない概念の種類と，何度も出現する概念の種類にあまり差がないことを示しており，すなわち，何度も出現する概念の種類が相対的に多いことを示している．
一方，最大被覆モデルは左から右に向かって急峻な勾配で種類が減少していく．
これは，要約中に1度しか出現しない概念の種類が相対的に多いことを示している．
参照要約の冗長性は，これらナップサックモデルと最大被覆モデルの中間を取るように推移しており，冗長性パラメータSRによって生成された要約の冗長性も，参照要約の冗長性に近い位置で推移している．
このように参照要約に近い冗長性を再現できたため，SRは良好な性能を示すことができたものと考えられる．
ナップサックモデルのような過度の冗長性は複数文書要約において問題となる一方，同一の単語，あるいは関連する単語が前後の文に出現する性質は，自動要約の分野においてLexical chainと呼ばれており，重要文抽出の際の重要な手がかりとして利用されている[CITE]．
RCKMはこの性質を捉えることができたということもできよう．
テキスト一貫性に関する研究においても，人手によって書かれたテキストにおいて同一の単語が同一のテキストに複数回出現するという性質は利用されている．
テキストの一貫性を評価する手法の1つであるEntity gridは，連続する2つの文における，単語の意味役割の変化を特徴量として用いており[CITE]，同一の単語が同一のテキストに複数回出現するという仮定を置いている．
参照要約は人手によって書かれたものであるため，テキスト一貫性の観点からこの性質を持っていると考えることができる．
このことから，冗長性パラメータ[MATH]はテキスト一貫性の観点から設定することもできよう．
次に，冗長性パラメータについて述べる．
RCKMの中ではRFが最も良好な性能を示し，ついでSR，KL，ONとなった．
参照要約の冗長性を模倣した場合が最良の結果を得たことから，冗長性の設定はRCKMにとって重要であると言える．
冗長性パラメータ[MATH]を正確に設定するためには，入力文書集合と参照要約の組から回帰モデルを構築し，各単語の参照要約における適切な出現頻度を予測することも考えられよう．
ONに目を向けると，ONの生成した要約の品質はSRやKLに比べて著しく悪い．
これは，上に述べたように，テキスト一貫性の観点から説明できる．
同一の単語は一度しか要約に出現できないというONの制約は，上に述べた性質を持ったテキストを生成することを許さない．
このため一貫性を欠いたテキストを生成してしまい，これは人間による要約を模倣するという観点からは大きな問題がある．
SRとKLを比較すると，有意にSRのROUGE値が高かった．
図[REF_fg:dist_news]のConst-KLが示すように，KLによる冗長性の制約は参照要約の冗長性をうまく模倣しているものの，2回以上の出現を許す単語の種類が参照要約に比べて少ない．
TSC-3コーパスの評価セットの要約率は平均して6%前後であるため，KLは要約長に影響され冗長性について厳しい制約を要約に課す．
このため，Summ-KLが示すように，要約に十分な冗長性を許すことができず，SRに比べてROUGE値において劣後したものと考えられる．
一方，Const-SRは全体的に高い冗長性を許すものとなっているが，実際に生成された要約の冗長性Summ-SRは参照要約の冗長性に近い．
SRによって生成された要約を確認すると，高い冗長性の原因となり要約の品質の低下を招く概念の冗長性を抑制しつつ，概念重要度に従って他の概念を要約に組み込んでおり，これが良好なROUGE値を得た理由と考えられる．
次にレビューにおける評価の結果について述べる．
RCKMとMCM，KMの差異について目を向けると，KMはMCMと比べ有意にROUGE値が低かった．
TSC-3での評価と異なり，MCMとMCM-GRの間に有意な差はなかった．
また，MCMとRCKMの全ての手法の間にも有意な差はなかった．
RCKMの中でも，冗長性パラメータによる有意な差はなかった．
一方，TSC-3での評価と同様に，表[REF_tb:speed]が示すように提案するデコーディング法はソルバーと比べ高速に要約を生成できており，MCMと同水準の要約を高速に生成できることがわかる．
HUMANに対してはいずれの手法も及ばなかった．
これには2つの理由があると考えられる．
1つは概念重要度の設定である．
今回は要約対象の文書集合中での評価情報の頻度を概念重要度として用いたが，参照要約を用いて概念重要度を学習することでより良好なROUGE値を得られる可能性がある．
もう1つは文の選択のみで要約を作成することの限界である．
前述したように，レビューコーパスの参照要約は人間によって自由に記述されているため，文の選択だけでは参照要約と同水準の要約に到達することは難しいと考えられる．
この点の解決のためには，文短縮[CITE]など，文を書き換える処理を要約の過程に加える必要があろう．
TSC-3とレビューを比較すると，前者においてはRCKMがMCMを上回る性能を持つものの，後者においてはそれらの間に差がない．
これらは新聞記事の要約とレビュー記事の要約の差異を端的に表している．
前者は単語を被覆の対象としているため，上に示したように，1つの要約に複数の単語が含まれることを許すことによって，より高いROUGE値を得ることができる．
一方，後者が被覆の対象とするものは評価情報であり，ある特定の評価情報は1つの要約に1つだけ入っていれば十分である．
これは，TSC-3においては劣った要約品質を示したONが，レビューにおいては他の手法と同水準の要約品質を示していることからもわかる．
図[REF_fg:dist_review]は，レビューコーパスに含まれる評価情報を，縦軸に評価情報の種類，横軸に同一の参照要約中での出現頻度をとりプロットしたものである．
図[REF_fg:dist_news]と比較するとその差は明らかであり，レビューでは参照要約においてある特定の評価情報は1度しか出現しないことがほとんどである．
最後に，提案したラグランジュヒューリスティックによる近似解法の近似精度についても述べておく．
近似精度を表[REF_tb:approximation]に示す．
数値は，ソルバーによって得られた最適解の目的関数値を100としたときの，近似解法による解の目的関数値を百分率で示したものである．
計算にあたっては，いずれも冗長性パラメータはSRとし，30セットそれぞれの近似精度の平均を取った．
表[REF_tb:approximation]が示すように，提案する近似解法は良好な近似精度を持つことがわかる．
