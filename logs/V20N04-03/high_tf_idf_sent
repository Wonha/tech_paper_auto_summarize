================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0.52744] 本論文では，複数文書要約を冗長性制約付きナップサック問題として捉える．
[i:3, score:0.52343] ROUGEに基づく評価によれば，我々の提案する要約モデルは，モデルの最適解において，最大被覆問題に基づく要約モデルを上回る性能を持つ．
[i:4, score:0.57027] 要約の速度に関しても評価を行い，我々の提案するデコーディングアルゴリズムは最大被覆問題に基づく要約モデルの最適解と同水準の近似解を，整数計画ソルバーと比べ100倍以上高速に発見できることがわかった．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:22, score:0.62865] 本論文の提案する要約モデルは，動的計画法によって擬多項式時間で最適解を得られるナップサック問題の性質を活かしつつ，要約の冗長性を制限する制約を陽に加えたものである．
[i:24, score:0.70845] 冗長性を制限する制約をナップサックモデルに加えることで冗長性の少ない要約を得ることができるが，再び最適解の求解は困難となるため，本論文では，ラグランジュヒューリスティック[CITE]を用いて冗長性制約付きナップサックモデルの近似解を得る方法を提案する．
[i:26, score:0.69438] 本論文の貢献は，新しい要約モデル（冗長性制約付きナップサックモデル）の開発，および当該モデルに対する最適化手法の提案（ラグランジュヒューリスティックによるデコーディング）の両者にある．

================================================================
[section type  : related_study]
[section title : 関連研究]
================================================================
[i:37, score:0.49550] この冗長性に対する対処として，Filatovaらによって最大被覆問題による要約モデルが提案された[CITE]．
[i:42, score:0.51399] 最大被覆問題の最適解は，合計の長さが要約長を超えない文の集合のうち，集合中の文が持っている概念の重要度の和が最大となるものである．
[i:65, score:0.50074] ナップサック問題の最適解は，合計の長さが要約長を超えない文の集合のうち，集合を構成する文の重要度の和が最大となるものである．

================================================================
[section type  : proposed_method]
[section title : 最大被覆モデルとナップサックモデル]
================================================================
[i:73, score:0.58713] ここでは最大被覆問題に基づいた要約モデル，最大被覆モデルと，ナップサック問題に基づいた要約モデル，ナップサックモデルを比較する．
-----------------------------------------------------
  [subsection title : 最大被覆モデル]
-----------------------------------------------------
  [i:lead, score:0.06802] [MATH]文の入力および，それらに含まれる[MATH]個の概念を考える．
.....
  [i:77, score:0.34635] [MATH]を概念[MATH]が要約に含まれる際に[MATH]となる決定変数を要素とするベクトルとする．
  [i:90, score:0.35300] もし概念[MATH]が要約に含まれれば，[MATH]となり，その重要度[MATH]は目的関数に加算される．
  [i:97, score:0.49841] これらのことから，最大被覆モデルの最適解は，要約長を満たす文の組み合わせを全て試し，全ての組み合わせに対して[MATH]を計算し，[MATH]とかけあわせ，かけあわせた値が最大となる文の組み合わせを探し出せば見つけられるとわかる．
-----------------------------------------------------
  [subsection title : ナップサックモデル]
-----------------------------------------------------
  [i:lead, score:0.13113] 次に，ナップサック問題に目を向けることにする．
.....
  [i:110, score:0.47346] 目的関数である式(6)，1つの文は一度しか要約に含めないとする制約である式(8)，要約の長さに関する制約である式(10)は最大被覆モデルと変わらないものの，式(2)と式(7)，式(4)と式(9)がそれぞれ異なる．
  [i:113, score:0.47747] それに対してナップサックモデルでは要約に同じ概念が複数含まれていた場合その数だけ重要度を目的関数において加算する．
  [i:114, score:0.54005] この性質のため，ナップサックモデルを用いて複数文書要約を行った場合には冗長な要約ができる可能性が高く，したがって，ナップサックモデルの複数文書要約における性能は芳しいものではない．

================================================================
[section type  : proposed_method]
[section title : 冗長性制約付きナップサックモデル]
================================================================
-----------------------------------------------------
  [subsection title : ナップサックモデルへの冗長性制約の付与]
-----------------------------------------------------
  [i:lead, score:0.38098] 前節で述べたように，最大被覆問題が冗長性に強い理由は式(4)にあり，ナップサックモデルが冗長性に弱い理由は式(9)であった．
.....
  [i:130, score:0.55764] 本論文では式(11)から式(15)で記述される要約モデルを冗長性制約付きナップサックモデルと呼ぶ．
  [i:134, score:0.56796] それに対し，冗長性制約付きナップサックモデルは，ある概念が要約に含まれる数を直接制限する．
  [i:141, score:0.60907] 冗長性制約付きナップサックモデルを動的計画法で解くことは可能だが，冗長性制約を考慮するためには，探索の過程において，ある時点での要約に含まれる概念の数を記録しておかなければならない．
-----------------------------------------------------
  [subsection title : 冗長性制約のラグランジュ緩和]
-----------------------------------------------------
  [i:lead, score:0.31021] この冗長性制約付きナップサックモデルから冗長性制約を除去すれば，元のナップサックモデルが得られる．
.....
  [i:154, score:0.50547] このラグランジュ緩和問題は，要約に含まれる概念[MATH]の個数[MATH]が[MATH]を超えた際に，非負のラグランジュ乗数[MATH]を通じて目的関数に罰を与える．
  [i:155, score:0.35855] 例えば，あるとき，概念5が要約に3つ含まれている([MATH])が，ベクトル[MATH]によって要約に2つまでしか含めてはならないと制限されている([MATH])とする．
  [i:159, score:0.68609] このように，[MATH]を適切に調整し，冗長性の原因となりやすい概念の重要度を低下させることで，動的計画ナップサックアルゴリズムによって元のナップサックモデルを解いた際でも複数文書要約として良好な解を得ようとするのが本論文の提案である．

================================================================
[section type  : proposed_method]
[section title : デコーディング]
================================================================
[i:164, score:0.33702] このラグランジュ双対問題は最小化の中に最大化が入れ子になっており，最適化が困難であるものの，劣勾配法[CITE]を用いると良好な近似解が高速に得られることが知られている[CITE]．
[i:172, score:0.42453] 冗長性制約が緩和されているため，冗長性制約付きナップサックモデルの緩和問題の最適解の目的関数値は，明らかに緩和されていない元問題の最適解の目的関数値より高い．
[i:173, score:0.37842] 劣勾配法によってラグランジュ乗数を更新していく過程で，ラグランジュ緩和問題の解は，制約に違反している解，すなわち実行不能解から，徐々に目的関数値を低下させながら実行可能解に近づいていく．
-----------------------------------------------------
  [subsection title : 貪欲法による実行可能解の復元]
-----------------------------------------------------
  [i:lead, score:0.23773] ラグランジュヒューリスティックは，実行不能解から実行可能解を何らかのヒューリスティックを用いて復元するものである．
.....
  [i:204, score:0.36117] 制約に違反している概念を含む文のうち，最も重要度が低いものを要約から除去する．
  [i:206, score:0.37799] 要約が制約を満たした場合は，要約に含まれていない文と，要約長[MATH]と制約を満たした要約の長さの差から，部分問題を生成し，これを貪欲法で解く．
  [i:209, score:0.39165] そこで，まだ要約に含まれていない文を，100文字分，貪欲法[CITE]を用いて要約に含めることで，実行可能解を求める．
-----------------------------------------------------
  [subsection title : 動的計画ナップサックアルゴリズム]
-----------------------------------------------------
  [i:lead, score:0.27493] ナップサックモデルのデコーディングは動的計画ナップサックアルゴリズムを用いて行う．
.....
  [i:215, score:0.53825] 表[MATH]の要素[MATH]は，文1から文[MATH]までが与えられており，最大要約長が[MATH]であったときのナップサックモデルの最適解の目的関数値を格納している．
  [i:216, score:0.32745] 表[MATH]の要素[MATH]は，[MATH]の値を計算する際に，すなわちその時点での最適値を計算する際に文[MATH]を要約に利用している場合は1，そうでない場合は0を格納している．
  [i:217, score:0.33184] すなわち，[MATH]まで計算し終わった時点で，最大要約長が[MATH]で文1から文[MATH]までが使われた場合にどの文が要約に含まれるか表[MATH]に格納されている．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[i:219, score:0.02202] 本節では提案した手法の性能を評価した結果について報告する．
[i:220, score:0.34181] 本節では，[REF_methods]で述べる手法を用いて，[REF_corpora]で述べる文書集合を要約し，生成された要約を[REF_measures]で述べる評価手法で評価する．
[i:221, score:0.03809] [REF_methods]で述べる手法が必要とするパラメータの設定については[REF_parameters]で述べる．
-----------------------------------------------------
  [subsection title : 比較手法]
-----------------------------------------------------
  [i:lead, score:0.00309] 以下の手法を比較した．
.....
  [i:229, score:0.45894] 冗長性制約付きナップサックモデルを本論文で提案するラグランジュヒューリスティックを用いてデコードしたもの．
  [i:239, score:0.39270] 4つの参照要約があるため，それらの6つの組み合わせのうち，[REF_measures]節で述べる評価尺度ROUGEの値が最も高いものを性能の上限として採用する．
  [i:240, score:0.40789] なお，[REF_corpora]節で述べるコーパスのうち，TSC-3は1つの評価セットに対して1つの参照要約しか付与されていないため，これを計算できるのはレビューのみである．
-----------------------------------------------------
  [subsection title : コーパス]
-----------------------------------------------------
  [i:lead, score:0.01773] 上の手法を以下の2種類のコーパスによって評価した．
.....
  [i:244, score:0.36225] TSC-3 TSC-3コーパス[CITE]は自動要約のシェアード・タスクText Summarization Challenge 3で用いられたコーパスで，複数文書要約の評価セットを含む．
  [i:257, score:0.38590] インターネット上のレビューサイトから飲食店30店舗に関するレビュー記事を収集し，これを30セットの複数文書要約の評価セットとした．
  [i:260, score:0.36014] それぞれの評価セットに対しては4人の作業者が参照要約を付与しており，作業者は要約の対象となる記事を全て読んだのち，当該記事集合にふさわしい要約を作成した．
-----------------------------------------------------
  [subsection title : 評価尺度]
-----------------------------------------------------
  [i:lead, score:0.02003] 我々の提案する手法を評価するため，以下の2つの尺度を用いた．
.....
  [i:269, score:0.38682] なお，平尾らは，参照要約のROUGE値を計算する際には，文を構成するすべての単語ではなくて，内容語のみを用いて計算を行った方が人間による評価と相関が高い結果が得られると報告している[CITE]．
  [i:273, score:0.42671] なお，レビューコーパスについては1セットに対して複数の参照要約が付与されているため，評価の際には，当該セットに付与されているすべての参照要約に対してROUGE値を求め，最も高いROUGE値をその要約のROUGE値とした．
  [i:275, score:0.39938] これは，ある入力文書集合に対して妥当な要約は複数存在し得ると考えられることから，参照要約の中で機械による要約にとって最も近いものとのROUGE値をもってその要約の評価とするためである．
-----------------------------------------------------
  [subsection title : パラメータ]
-----------------------------------------------------
  [i:lead, score:0.28941] 本節では要約に際して必要なパラメータの設定について述べる．
.....
  [i:304, score:0.54238] この制約を用いた場合，同一の概念は一度しか要約中に出現することができず，そのため最大被覆問題と同様に冗長性が削減されることが期待される．
  [i:305, score:0.43220] 最大被覆問題とこの制約を用いた冗長性制約付きナップサックモデルの差異は，前者は目的関数を利用して冗長性を削減するのに対し，後者は制約を用いて冗長性を削減することにある．
  [i:316, score:0.44249] RF概念冗長性を，参照要約に含まれる概念の数とした．
-----------------------------------------------------
  [subsection title : 結果と考察]
-----------------------------------------------------
  [i:lead, score:0.31754] 要約品質の評価を表[REF_tb:quality]に，要約時間の評価を表[REF_tb:speed]に示す．
.....
  [i:333, score:0.58736] 提案する要約モデルRCKMは，冗長性パラメータをRFあるいはSRとした際にMCMに比べ優れている．
  [i:344, score:0.60146] 提案する冗長性制約付きナップサックモデルRCKMは，冗長性パラメータを通じ，生成する要約に一定の冗長性を許容することができる．
  [i:356, score:0.64754] 参照要約の冗長性は，これらナップサックモデルと最大被覆モデルの中間を取るように推移しており，冗長性パラメータSRによって生成された要約の冗長性も，参照要約の冗長性に近い位置で推移している．

================================================================
[section type  : conclusion]
[section title : まとめ]
================================================================
[i:403, score:0.66436] 本論文では，複数文書要約において重要なモデルである最大被覆モデルのデコーディングを高速化することを企図し，要約に含めるべき単語数を直接制御する冗長性制約付きナップサック問題に基づく要約モデルを提案した．
[i:405, score:0.68671] 冗長性制約付きナップサック問題に基づく要約モデルは，その最適解において，最大被覆問題を用いた要約モデルに対して，ROUGE [CITE]において同等以上の性能を持つことを示した．
[i:409, score:0.43400] また，冗長性パラメータを入力文書集合と参照要約の組から推定することも検討している．

