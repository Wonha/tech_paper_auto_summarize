================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:121] 音声対話システムが話し言葉に対応するためには，言い直し，助詞落ち，倒置などの不適格性とよばれる現象に対処する必要がある．
[i:1, score:281] これらの不適格性の中で特に問題となるのは，言い直しあるいは自己修復と呼ばれている現象である．
[i:2, score:240] しかし，自己修復に関する既存の手法は，自己修復を捉えるモデルと，その修正処理に問題点がある．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:8, score:281] これらの不適格性の中で特に問題となるのは，言い直しあるいは自己修復と呼ばれている現象である．
[i:11, score:286] しかしながらこれらの論文で提案されている手法では，自己修復を捉えるモデルに不十分な点があり，ソフトウェアロボットとの疑似対話コーパス[CITE]に見られるような表現をカバーできない．
[i:16, score:268] まず，[REF_sec:ILL_FORMEDNESS]節では不適格性とその中での自己修復の位置づけについて述べる．

================================================================
[section type  : proposed_method]
[section title : 不適格性]
================================================================
[i:25, score:250] [REF_sec:INTRO]節で言及した自己修復は同一話者による冗長表現の一種となる．
[i:26, score:273] 自己修復はさらに，繰り返し，言い足し，言い直しに分ける．
[i:29, score:260] 自己修復は，[CITE]と同様に，パーザに処理機構を埋め込むことで対処する．

================================================================
[section type  : proposed_method]
[section title : パーザ]
================================================================
[i:37, score:82] 不適格性を解消するための処理は全て，構文解析と平行してパーザの上で行う．
[i:38, score:97] 本論文では，音声認識の結果が直接パーザに与えられ，パーザは入力された単語列を不適格性を解消しながら解析し，意味構造に変換して談話処理部に出力することを想定する．
[i:41, score:40] 以下，本論文で用いるパーザとパーザの使用する辞書について説明する．
-----------------------------------------------------
  [subsection title : 係り受け解析を用いた漸進的な構文解析]
-----------------------------------------------------
  [i:lead, 21] 構文解析の手法として，文節ベースの係り受け解析を採用した．
.....
  [i:45, score:89] 本論文では詳細は省くが，このパーザの使用は，将来，提案手法を組み込む予定の音声対話システムに，漸進的な処理を行わせることを目的としている．
  [i:46, score:94] パーザは，解析の途中に生成される複数の構文仮説を，別々のスタックに保持する．
  [i:65, score:98] このパーザは，[REF_sec:ILL_FORMEDNESS]節に述べたように言い淀みを処理するために読み飛ばしも平行して行うが，本論文では詳細は述べない．
-----------------------------------------------------
  [subsection title : 文法表現と辞書]
-----------------------------------------------------
  [i:lead, 15] 本手法では，文節構造以外の文法に相当するものは，全て単語辞書の中に単語毎に用意する．
.....
  [i:68, score:80] 「赤い玉」という名詞句であれば，「赤い」は「玉」に対してその色に関する情報を与える役割を持っていると見なす．
  [i:90, score:93] このパーザにより，不適格性の内，助詞落ち，倒置は解決できる．
  [i:92, score:256] またこのように係り受け解析の段階で，語の意味役割を特定することで，後述する自己修復の意味的な修正処理が可能になる．

================================================================
[section type  : proposed_method]
[section title : 自己修復の処理]
================================================================
[i:93, score:0] 
-----------------------------------------------------
  [subsection title : 過去の研究の問題点]
-----------------------------------------------------
  [i:lead, 261] 我々の疑似対話コーパスの中に現れる自己修復に過去の研究で提案されていた手法を適用したところ，対処できない例が見られた．
.....
  [i:112, score:444] パターンマッチングや統計的言語モデルによる自己修復の検出[CITE]は，人間が`self-monitoring'によって即座にエラーを訂正する[CITE]ため，自己修復が局所的であり，かつRPDの始端からRPの終端までが3,4語程度の短いものが大多数であると仮定している．
  [i:118, score:435] [CITE]は，自己修復をRPDからRPへの係り受け関係として扱うため，([REF_EQ:EXAMPLE1])に類する自己修復は原理的に扱えない．
  [i:129, score:398] [CITE]では，動詞句の自己修復の場合に，RPDには含まれるがRPに含まれていない格情報を保存することの必要性について言及しているが，具体的な方法は述べていない．
-----------------------------------------------------
  [subsection title : 自己修復の再分類]
-----------------------------------------------------
  [i:lead, 272] 図[REF_fig:RD_CLASS]の内，自己修復に関する部分を，実際の処理に合わせて図[REF_fig:SC_CLASS]のように再分類する．
.....
  [i:131, score:272] 図[REF_fig:RD_CLASS]の内，自己修復に関する部分を，実際の処理に合わせて図[REF_fig:SC_CLASS]のように再分類する．
  [i:138, score:186] この言い足しのRPDとRPの間には次のような制限がある．
  [i:143, score:140] おそらく，「赤い玉を押して青い玉を」などと指示された場合には，通常の人間であれば発話者に真意を問い質すだろう．
-----------------------------------------------------
  [subsection title : 自己修復の処理]
-----------------------------------------------------
  [i:lead, 261] 本手法では[CITE]と同様に，自己修復個所の検出と修正を，構文解析と平行して行う．
.....
  [i:152, score:261] 本手法では[CITE]と同様に，自己修復個所の検出と修正を，構文解析と平行して行う．
  [i:161, score:323] 新しい単語が仮説スタックにプッシュされて係り受け解析が行われると，係り受け解析が終わった仮説から順に自己修復の検出・修正処理を受ける．
  [i:162, score:294] 自己修復の検出と修正の処理は，係り受け解析と同様にスタックの上2つの要素を処理することで行う．

================================================================
[section type  : experiment_result]
[section title : 提案手法の評価と考察]
================================================================
[i:254, score:7] その結果に基づいて，定性的な考察を行う．
-----------------------------------------------------
  [subsection title : 疑似対話コーパスへの提案手法の適用]
-----------------------------------------------------
  [i:lead, 69] 「ソフトウェアロボットとの疑似対話コーパス」は，全15対話，532発話を含む．
.....
  [i:272, score:276] この内，単純な倒置15個を除いた84個所が冗長表現で，14個所の言い淀みを除く70個所が，単語断片ではないはっきりとした単語で構成される自己修復であった．
  [i:273, score:258] 70個の自己修復を図[REF_fig:SC_CLASS]の分類に従って分類した結果は以下の通りである．
  [i:276, score:228] 提案手法をこれらの自己修復に適用した場合，提案手法で解決できるものが53個，解決できないものが17個であった．
-----------------------------------------------------
  [subsection title : 考察]
-----------------------------------------------------
  [i:lead, 57] 図[REF_fig:successful]に，今回使用した疑似対話コーパス中のデータで，提案手法が有効に動作する例を示す．
.....
  [i:281, score:302] 今回使用した疑似対話コーパスに現れた自己修復を含む発話には，図[REF_fig:successful]の例(I)のような単純なものから，例(VI)，(VII)のような複数の自己修復を含むものまであった．
  [i:289, score:246] \paragraph*{[MATH]挿入表現}このタイプの自己修復は[CITE]では分類Aの(II) に分類され，[CITE]では挿入と呼ばれている．
  [i:303, score:341] 本手法では，RPDの単純な削除は情報の損失を招くとして，付け替えによる情報の保存を考えた自己修復の処理手法を提案した．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:336, score:423] そして，RPDとRPの間で単語間の対応関係を取ることにより，従来の手法では単純に削除されてしまった情報を，自己修復の冗長性を修正した後にも適切に残すことができる手法を提案した．
[i:338, score:289] そして，自己修復の修正処理は，パーザによって構文木に付与される単語の役割を利用することで，適切かつ効率的に行なうことができる．
[i:347, score:259] 従って，自己修復の可能性を検出することはできても，そこに自己修復の存在を認めない仮説の方が優先されてしまうことがある．

