はじめに \label{sec:introduction}

検索エンジンの主な目的は，ユーザの情報要求に適合する文書をランキング形式
でユーザに提供することである．しかし，情報要求に見合うランキングを実現す
るのは容易ではない．これは，ユーザが入力するクエリが一般的に，短く，曖昧
であり \cite{Jansen2000}，ユーザの情報要求を推定するのが困難であることに
起因する．例えば「マック \textvisiblespace \hspace{0.1zw} 価格」というク
エリは，「Mac（コンピュータ）」の価格とも，「マクドナルド」の価格とも，も
しくは他の「マック」の価格とも解釈できる．そのため，どの「マック」に関す
る文書が求められているのか分からなければ，ユーザの情報要求に見合うランキ
ングを実現するのは難しい．

このような問題を解決する方法の一つとして，適合性フィードバック
\cite{Rocchio1971} がある．適合性フィードバックでは，ユーザから明示的（も
しくは擬似的）に得られるフィードバックを利用することで，検索結果のランキ
ングを修正する．具体的には，次のような手続きに従ってランキングの修正を行
う．
\begin{enumerate}
 \item クエリに対する初期検索結果をユーザに提示する．
 \item 初期検索結果中から，情報要求に適合する文書をユーザに選択させる．
 \item 選択された文書（フィードバック）を利用して，初期検索結果のランキン
       グを修正する．
\end{enumerate}
例えば，「Mac（コンピュータ）」の価格に関する文書がフィードバックとして得
られれば，ユーザがこの話題に関心を持っていると推測できる．そして，この情
報を基に検索結果のランキングを修正することができる．

適合性フィードバックには，ベースとするランキングアルゴリズムに応じて，様々
な手法がある．Rocchio の手法 \cite{Rocchio1971}や Ide の手法
\cite{Ide1971}は，ベクトル空間モデルに基づくランキングアルゴリズム
\cite{Salton1975}に対する適合性フィードバックの手法として有名である．確率
モデルに基づくランキングアルゴリズム \cite{SparckJones2000}においては，
フィードバックを用いて，クエリ中の単語の重みを修正したり，クエリを拡張す
ることができる．言語モデルに基づくランキングアルゴリズム
\cite{Ponte1998}に対しては，Zhai らの手法 \cite{Zhai2001}が代表的である．

このように適合性フィードバックには様々な手法があるが，それらの根底にある
アイディアは同じである．すなわち，適合性フィードバックでは，フィードバッ
クと類似する文書を検索結果の上位にリランキングする．ここで，既存の手法の
多くは，テキスト（フィードバック及び検索結果中の各文書）に表層的に出現す
る単語の情報だけを用いて類似度を算出している．すなわち，テキストに含まれ
ていない単語の情報は利用していない．しかし，表層的には出現していなくても，
そのテキストに潜在的に現れうる単語の情報は，リランキングに役に立ちうると
考えられる．上の「マック」の例であれば，仮にフィードバック（この例では
「Mac（コンピュータ）」の価格に関する文書）に「CPU」や「ハードディスク」
などの単語が含まれていなくても，これらの単語はフィードバックとよく関連し
ており，潜在的にはフィードバックに現れうる．検索結果中の適合文書
（i.e.,「Mac（コンピュータ）」の価格に関する文書）についても同様のことが
言える．仮にある適合文書にこれらの単語が含まれていなくても，これらの単語
は適合文書によく関連しており，潜在的にはその文書に現れうる．このように，
テキストに現れうる単語の情報があれば，フィードバックと検索結果中の各文書
との類似度を算出する際に有用であると考えられる．

そこで，本稿では，テキストに表層的に存在する単語の情報だけでなく，テキス
トに潜在的に現れうる単語の情報も利用する適合性フィードバックの手法を提案
する．提案手法では，まず Latent Dirichlet Allocation (LDA)
\cite{Blei2003}を用いて，テキストに潜在するトピックの分布を推定する．次に，
推定された潜在トピックの分布を基に，各テキストに潜在的に現れうる単語の分
布を推定する．そして，推定された潜在的な単語の分布とテキストの表層的な単
語の分布の両方を用いて，フィードバックと検索結果中の各文書との類似度を算
出し，これを基に検索結果をリランキングする．実験の結果，$2$文書（合計
$3,589$単語）から成るフィードバックが与えられたとき，提案手法が初期検索結
果の Precision at $10$ (P@10) を$27.6\%$改善することが示された．また，提
案手法が，フィードバックが少ない状況でも，初期検索結果のランキング精度を
改善する特性を持つことが示された（e.g., フィードバックに$57$単語しか含ま
れていなくても，P@10 で$5.3\%$の改善が見られた）．

以降，本稿では，次の構成に従って議論を進める．\ref{sec:lm_approaches}章で
は，提案手法の基礎をなす，言語モデルに基づくランキングアルゴリズムについ
て概説する．\ref{sec:lda}章では，提案手法で使用する LDA について解説する．
\ref{sec:proposed_method}章では，提案手法について説明する．
\ref{sec:experiments}章では，提案手法の有効性を調査するために行った実験と，
その結果について報告する．最後に，\ref{sec:conclusion} 章で，本稿の結論を
述べる．



