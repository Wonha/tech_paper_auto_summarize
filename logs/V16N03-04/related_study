本論文では，一般化LR (Generalized LR; GLR)構文解析 \cite{deremer:82,aho:86,tomita:91} に注目する．
一般化LR構文解析は，文法(CFG)規則をLR構文解析表（LR表）と呼ばれる
オートマトンに変換し，効率的に解析を行う
\footnote{一般化LR構文解析は，構文解析結果の順序付けに確率一般化LRモデル
  \cite{inui:00,briscoe:93,charniak:96,jelinek:98}
  を用いることができるので，
  ルールベース手法にコーパスベース手法を融合した
  ハイブリッドな方法であるといえる．}．
このLR表には，CFG規則のほかに品詞（終端記号）間の接続制約
(adjacent symbol connection constraints; ASCCs)を反映させることもできる．
品詞間の接続制約を反映させることにより，
接続制約に違反する解析結果を受理しないLR表を作成できるだけでなく，
LR表のサイズ（状態数や動作（アクション）数）を縮小することもでき，
その結果，構文解析の使用メモリ量や解析所要時間の削減，
統計データを取り入れた場合の解析精度向上の効果の増大が期待できる．
品詞間接続制約をCFG規則に直接反映させることも可能であるが，
非終端記号の細分化によって規則数が組み合わせ的に増大し，
CFG作成者への負担やLR表のサイズの増大を招く．
品詞間接続制約のLR表への組み込み手法は，
これまでにも提案されているが \cite{tanaka:95,li:95}，
従来の手法では，LR表中の不要な動作を十分に削除できない問題があった．
本論文では新しい組み込み手法を提案し，
従来の手法では削除できなかった不要な動作も削除できることを
実験により示す．
score of this paragraph is 3
