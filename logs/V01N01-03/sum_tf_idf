================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:0] 従来の構文解析法は十分な精度の解析結果を得ることができず，とくに長い文の解析が困難であった．
[i:1, score:0] このことは従来の方式が局所的な解析を基本としていたことに原因があり，これを解決するためには文内のできるだけ広い範囲を同時的に調べることが必要である．
[i:2, score:0] 我々は，すでに，このような考え方に基づき，長い文の中に多く存在する並列構造が文節列同士の類似性を発見するという手法でうまく検出できることを示した．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:10, score:0] 従来の構文解析法は基本的に句構造文法あるいは格文法をその拠り所としてきた．
[i:11, score:0] 前者の考え方は局所的統合の繰り返しによって文の構造を認識しようというものである．
[i:12, score:0] しかし，実際にそのような方法で文を解析しようとすると，規則の数が非常に多くなり，なおかつ十分な精度の解析結果を得ることが困難であった．

================================================================
[section type  : proposed_method]
[section title : 並列構造の検出と文の簡単化]
================================================================
[i:36, score:0] 
-----------------------------------------------------
  [subsection title : 並列構造の検出の概要]
-----------------------------------------------------
  [i:lead, 0] 1文中の並列する部分は何らかの意味において類似していると考えることが出来る．
.....
  [i:37, score:0] 1文中の並列する部分は何らかの意味において類似していると考えることが出来る．
  [i:38, score:0] そこで，類似性という観点から並列構造を検出する方法を図[REF_fig:suitei_rei]を用いて説明する(詳細は文献[CITE]参照)．
  [i:39, score:0] 並列構造の存在を機械的に認識することは比較的容易である．
-----------------------------------------------------
  [subsection title : 並列構造間の関係の整理による文の簡単化]
-----------------------------------------------------
  [i:lead, 0] 前節の処理で得られた並列構造の範囲に関する情報をまとめることによって，文の大まかな構造を把握することができる．
.....
  [i:70, score:0] 前節の処理で得られた並列構造の範囲に関する情報をまとめることによって，文の大まかな構造を把握することができる．
  [i:71, score:0] この処理は，まず二つの並列構造間の関係を明らかにし，それをもとに1文内の全ての並列構造間の関係を整理することによって行う．
  [i:72, score:0] 並列構造の範囲は，{起点文節の位置，並列のキーの位置，終点文節の位置}の3組値で表すことができる．
-----------------------------------------------------
  [subsection title : 違反関係にある並列構造の修正]
-----------------------------------------------------
  [i:lead, 0] 文内に違反関係の並列構造がある場合には，並列構造の検出のやり直しを行なう．
.....
  [i:100, score:0] 文内に違反関係の並列構造がある場合には，並列構造の検出のやり直しを行なう．
  [i:101, score:0] 違反関係にある2つの並列構造のうち，スコアの高い方の並列構造の範囲を基準とし，その範囲に対して違反関係にならないような並列構造をもう一方の並列のキーについて再検出する．
  [i:102, score:0] たとえば，前方の並列構造Xの再検出を行なう場合には，x2,y1,y2,y3の値に対して図[REF_fig:kankei]の関係式によって正しい位置関係を与えるようなx1,x3の値の範囲を求める．

================================================================
[section type  : proposed_method]
[section title : 係り受け解析]
================================================================
[i:110, score:0] この結果，簡単化された各部分に対して単純な係り受け解析をするだけで，従来の構文解析よりも頑強な，すなわち長い文に対しても有効な構文解析を行なうことができる．
-----------------------------------------------------
  [subsection title : 係り受け解析の概要]
-----------------------------------------------------
  [i:lead, 0] 係り受け解析の目的は，文節間の係り受け関係を明らかにし，その関係を依存構造木によって表現することである[CITE]．
.....
  [i:111, score:0] 係り受け解析の目的は，文節間の係り受け関係を明らかにし，その関係を依存構造木によって表現することである[CITE]．
  [i:112, score:0] 依存構造木では，木の節点には受けの文節を，その子の節点には係りの文節を配置する．
  [i:113, score:0] 日本語の場合，各文節はそれよりも後ろの文節に係るので，最終的には文末の文節を根節点とする依存構造木が得られる．
-----------------------------------------------------
  [subsection title : 一定範囲内の文節列の係り受け解析]
-----------------------------------------------------
  [i:lead, 0] 並列構造を1つのものと見ることによる文の簡単化がうまくいったとして，次にその各部分をどのような規則で係り受け解析するかということが問題となる．
.....
  [i:127, score:0] 並列構造を1つのものと見ることによる文の簡単化がうまくいったとして，次にその各部分をどのような規則で係り受け解析するかということが問題となる．
  [i:128, score:0] 我々はまず，次のような優先規則によって決定論的に動作する解析を考えた．
  [i:129, score:0] 解析すべき範囲について後ろから順に各文節の係り先を決定する．
-----------------------------------------------------
  [subsection title : 並列構造の範囲の延長]
-----------------------------------------------------
  [i:lead, 0] 前節で述べた並列構造の検出方法ではその前部がどこから始まるかについて正確な情報が得られないので，係り受け解析の段階でこれを明らかにする必要がある．
.....
  [i:176, score:0] 前節で述べた並列構造の検出方法ではその前部がどこから始まるかについて正確な情報が得られないので，係り受け解析の段階でこれを明らかにする必要がある．
  [i:177, score:0] そこで，``検出した並列構造の起点文節より前の文節であっても，その並列構造内の文節に係ることが{妥}{当}{で} {あ}{る}文節は並列構造に含まれるとみなす''という考え方で並列構造の範囲の延長を行なう．
  [i:178, score:0] 延長を行なうのは，述語を含む並列構造，すなわち述語並列の場合と連体修飾節を含む名詞並列の場合である．
-----------------------------------------------------
  [subsection title : 係り受け解析を失敗した場合]
-----------------------------------------------------
  [i:lead, 0] これまで説明してきた規則によって並列構造の各部分を係り受け解析すると，ある文節に対してその係り得る文節がなくなり，解析が失敗するということがある．
.....
  [i:190, score:0] これまで説明してきた規則によって並列構造の各部分を係り受け解析すると，ある文節に対してその係り得る文節がなくなり，解析が失敗するということがある．
  [i:191, score:0] このような失敗は，もともと1つの依存構造木にまとめることができない不完全な部分が並列している場合(このような並列構造を部分並列とよぶことにする)と，検出された並列構造の範囲が誤りである場合に起こる．
  [i:192, score:0] 部分並列は，前部と後部の述語が等しい述語並列において前部の述語が省略された構造である(図[REF_fig:incom_new](a)(b))．

================================================================
[section type  : experiment_result]
[section title : 文解析の結果とその評価]
================================================================
[i:213, score:0] テストサンプルは，文字数が30〜50文字，50〜80文字，80文字以上のものをそれぞれ50文づつランダムに収集した．
-----------------------------------------------------
  [subsection title : 定量的評価]
-----------------------------------------------------
  [i:lead, 0] 150文の解析結果について人手で評価を行なった．
.....
  [i:214, score:0] 150文の解析結果について人手で評価を行なった．
  [i:215, score:0] まず文節を並列のキー，用言に係る文節，体言に係る文節の3タイプに分類し，並列のキーについては正しい終点文節が検出されているか，用言に係る文節，体言に係る文節については正しい係り先が求まっているかを調べた(表[REF_tab:hyouka])．
  [i:216, score:0] また，各文をその長さと並列構造の有無によって分類し，文中の全ての並列構造が正しく求まっているか(文の簡単化が正しく行なわれたかどうか)，さらに文全体の依存構造が正しく求まっているかどうかを調べた(表[REF_tab:hyouka2]上部)．
-----------------------------------------------------
  [subsection title : 関連研究]
-----------------------------------------------------
  [i:lead, 0] 構文解析システムを，実際にテキストを処理するツールとして考えた場合，並列構造と依存構造(または句構造/格構造)に対する優先規則を持つことは必要不可欠である．
.....
  [i:230, score:0] 構文解析システムを，実際にテキストを処理するツールとして考えた場合，並列構造と依存構造(または句構造/格構造)に対する優先規則を持つことは必要不可欠である．
  [i:231, score:0] しかし，日本語文解析において，そのような規則を備えたシステムとその評価結果を示した研究は非常に少ない．
  [i:232, score:0] 実用的機械翻訳システムであるMuシステム[CITE]の日本語解析部では，並列構造，依存構造に対する優先規則による処理を行っているが，その評価は翻訳結果に対して行われており，日本語解析部に対する評価の報告はない[CITE]．
-----------------------------------------------------
  [subsection title : 解析の誤り]
-----------------------------------------------------
  [i:lead, 0] 本手法における係り受け解析誤りの根本的原因を分類し，それらを具体例とともに説明する(表[REF_tab:ayamari]:下線部分は誤った係り先を求めた文節とその誤った係り先の文節，傍点はその正しい係り先の文節を示している)．
.....
  [i:237, score:0] 本手法における係り受け解析誤りの根本的原因を分類し，それらを具体例とともに説明する(表[REF_tab:ayamari]:下線部分は誤った係り先を求めた文節とその誤った係り先の文節，傍点はその正しい係り先の文節を示している)．
  [i:238, score:0] 並列のキーに対する終点文節の検出の誤りについては文献[CITE]で論じたので，ここでは用言に係る文節と体言に係る文節の係り先の誤りに的を絞る．
  [i:239, score:0] 並列構造の前部の範囲と関連するもの

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:257, score:0] 従来方式の構文解析では長い文の中に多く存在する並列構造を正しく認識することが困難であり，そのことが長い文を解析する上での大きな問題であった．
[i:258, score:0] 本論文では，まず文内の並列構造の範囲を文節列同士の類似性を発見するという考え方によって検出し，次に並列構造の情報を利用しながら簡単な係り受け解析を行なうという方法によって，長い文に対しても有効であり，かつ高精度な構文解析が実現できることを示した．
[i:259, score:0] 次のステップでは，構文解析によって求まった依存構造木において依存関係にある文節間の格関係の推定を行ない，同時にその過程で省略語句の復元や指示詞の指示対象の同定を行なうことを考えている．

