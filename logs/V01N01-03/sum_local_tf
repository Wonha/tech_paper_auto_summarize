================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[3368] 我々は，すでに，このような考え方に基づき，長い文の中に多く存在する並列構造が文節列同士の類似性を発見するという手法でうまく検出できることを示した．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[3587] そこで我々は，並列構造の存在を示す表現(名詞並列を示す助詞「と」など)の前後における最も類似度の高い文節列の対を，音声認識などで広く使われているダイナミックプログラミングのマッチング法と同様の考え方を用いて発見するという方法を考案し，このことにより並列構造の高精度な検出が可能であることを示した[CITE]．

================================================================
[section type  : proposed_method]
[section title : 並列構造の検出と文の簡単化]
================================================================
[0] 
-----------------------------------------------------
  [subsection title : 並列構造の検出の概要]
-----------------------------------------------------
  [3383] 名詞並列は，名詞の直後の読点や助詞「と」・「や」などによって認識でき，述語並列は，述語自身が連用形であることや述語が助詞「が」などを伴うことによって認識できる(このように並列構造の存在を示す文節を並列のキーとよぶことにする)．
-----------------------------------------------------
  [subsection title : 並列構造間の関係の整理による文の簡単化]
-----------------------------------------------------
  [3206] なお，I,Jの位置関係は親子関係としたC,Gと左右対称であるが，並列構造の後部については前節の処理で正確な範囲が求まっており後方へ延長することはないので，違反関係とする(Eの親子関係の場合は特別，図[REF_fig:kankei_rei](c)と図[REF_fig:kankei_rei](d)参照)．
-----------------------------------------------------
  [subsection title : 違反関係にある並列構造の修正]
-----------------------------------------------------
  [3525] 図の中に示した表は，並列構造[プログラム，データだけでなく，] - [ファイル，データベースをも]を基準として並列のキー「ファイル，」に対する並列構造を再検出する場合，起点文節が6番目の文節「ファイル，」であり，終点文節が7番目の文節「データベースをも」である並列構造だけが制限を満たすことを示している．

================================================================
[section type  : proposed_method]
[section title : 係り受け解析]
================================================================
[2896] 前章で説明したように，文内の並列構造が決定されると文の大まかな構造がとらえられたことになり，文を簡単化した形で扱うことが可能となる．
-----------------------------------------------------
  [subsection title : 係り受け解析の概要]
-----------------------------------------------------
  [3590] そこで，並列構造を表すためにその2つの依存構造木の根節点(依存構造木の表示では``[MATH]P[MATH]''を付加)を子の節点とする新たな節点(依存構造木の表示では``PARA''と表記，並列節点とよぶことにする)を作り，その上のレベル(親の並列構造，それがない場合には文全体)の係り受け解析では，この並列節点のみが扱われるようにする．
-----------------------------------------------------
  [subsection title : 一定範囲内の文節列の係り受け解析]
-----------------------------------------------------
  [3363] その係り先は区切り文節との相対的関係で微妙であるが，実際の文解析の結果から次のような規則を用いることにした．
-----------------------------------------------------
  [subsection title : 並列構造の範囲の延長]
-----------------------------------------------------
  [3531] たとえば，図[REF_fig:suitei_rei]で示した例文1では，起点文節の前の「その」は「可能性を」に係ると考えて並列構造に含まれるとし，助詞「は」および読点を伴う「解消するためには，」のところで延長の処理を終了する．
-----------------------------------------------------
  [subsection title : 係り受け解析を失敗した場合]
-----------------------------------------------------
  [3749] このような失敗は，もともと1つの依存構造木にまとめることができない不完全な部分が並列している場合(このような並列構造を部分並列とよぶことにする)と，検出された並列構造の範囲が誤りである場合に起こる．

================================================================
[section type  : experiment_result]
[section title : 文解析の結果とその評価]
================================================================
[2070] テストサンプルは，文字数が30〜50文字，50〜80文字，80文字以上のものをそれぞれ50文づつランダムに収集した．
-----------------------------------------------------
  [subsection title : 定量的評価]
-----------------------------------------------------
  [3412] 例文中には，区切り文節は20個(係り受け解析の対象範囲の最後の述語であるために区切り文節としたものは除く)，読点を伴う文節は274個(並列のキー，助詞「は」を伴う文節を除く)，助詞「は」を伴う文節は115個存在したが，それらを扱うために追加した係り受け規則はすべて有効に働き，解析に悪影響を与えた例はなかった．
-----------------------------------------------------
  [subsection title : 関連研究]
-----------------------------------------------------
  [3271] このシステムは，解析対象テキスト中の一意に決定される係り受け関係を用例として利用することにより残りの部分の曖昧性を解消する，というシステムであり，特許請求範囲文10篇に対する文節単位の解析成功率は97%であると報告されている．
-----------------------------------------------------
  [subsection title : 解析の誤り]
-----------------------------------------------------
  [3468] このため，後部の文節数が非常に多い並列構造では後部の範囲が正しく求まらない可能性があり(図[REF_fig:hei_ayamari](a))，この場合は並列のキーに対して終点文節の検出を誤ったということになる．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[3523] 本論文では，まず文内の並列構造の範囲を文節列同士の類似性を発見するという考え方によって検出し，次に並列構造の情報を利用しながら簡単な係り受け解析を行なうという方法によって，長い文に対しても有効であり，かつ高精度な構文解析が実現できることを示した．

