従来の構文解析法は基本的に句構造文法あるいは格文法をその拠り所としてきた．
前者の考え方は局所的統合の繰り返しによって文の構造を認識しようというものである．
しかし，実際にそのような方法で文を解析しようとすると，規則の数が非常に多くなり，なおかつ十分な精度の解析結果を得ることが困難であった．
また，格文法の場合は格要素を決定するための意味素が必ずしもうまく設定できず，またこの場合も基本的には局所的な解析であるため，十分な精度の解析結果が得られていない．
これらの問題を解決するためには，これらの文法的枠組に加えて，局所的記述ではとらえきれない情報を文中の広い範囲を同時的に調べることによって取り出す必要がある．
日本語文解析の困難さの原因の一つである並列構造の範囲に関する曖昧性の問題も，このような「広い範囲を同時的に調べる」ことを必要とする問題の一つである．
日本語文は，特に長い文になればなるほど多くの並列構造を含んでいる．
「〜し，〜し，〜する」のように，いわゆる連用中止法によって複数の文を1文にまとめることができることは日本語文の特徴でもある．
それ以外にも，名詞並列，形容詞並列や，連体修飾節の並列などが頻繁に現れる．
このような並列構造に対する従来の解析方法は，基本的には次のようなものであった[CITE]．
例えば「…原言語を解析する処理と相手言語を生成する処理を…．
」という文では，並列構造前部の主要語である「処理(と)」に対して，それよりも後ろにある名詞の中から最も類似している名詞を探すという方法により後部の主要語を決定していた(この場合「処理(を)」が後部の主要語)．
しかし並列構造においては，主要語間だけではなく，構造内の他の語の間(この例の場合「原言語」と「相手言語」，「解析する」と「生成する」)にも，さらに文節列の並び(「〜を〜する〜と〜を〜する〜」)にも類似性が認められる場合が多く，これらの類似性を考慮することによってより正確に並列構造を認識することができる．
そこで我々は，並列構造の存在を示す表現(名詞並列を示す助詞「と」など)の前後における最も類似度の高い文節列の対を，音声認識などで広く使われているダイナミックプログラミングのマッチング法と同様の考え方を用いて発見するという方法を考案し，このことにより並列構造の高精度な検出が可能であることを示した[CITE]．
本論文では，このようにして検出した並列構造の情報を利用して構文解析を行なう手法を示す．
多くの場合，いったん並列構造が発見されると文の構造は簡単化した形でとらえることができる．
その結果，単純な係り受け規則を適用するだけで高精度な構文解析が可能となる．
本手法は，たとえば，大規模なテキストを解析して，そこから新しい情報を取り出そうとするような場合に特に有用である．
対象テキスト中の専門用語や専門的に使われている述語について，それらの相互間の関係はそこで始めて提示された概念であるかもしれない．
その場合には，そのような概念の相互関係は辞書に記述されておらず，辞書中の意味記述に頼った解析は不成功となる．
また，大規模なテキストを扱うのに十分であるような複雑な文法規則や詳細な格記述を用意することは，実際には非常に困難である．
新しい概念は用語相互間のシンタックスによって示されるのであるから，シンタックスを尊重した解析が重要である．
また，本手法でうまく扱えない問題を整理することによって，構文解析における本質的問題を明らかにすることも重要な問題である．
これまでの，構文解析における曖昧性の議論では，人間にとっても曖昧であるような表現を取り上げたものが多かった．
しかし，従来の構文解析法が十分でないという印象を人間に与えるのは，そのような点ではなく，人間であれば絶対にしないような部分に不必要な曖昧性を認識するためである．
その原因がどこにあるかを調べるためには，本手法のように高精度でかつ決定論的に動作する道具立てが必要である．
