================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:3, score:0.41999] 構文解析において，解析系が文に含まれる痕跡を検出し，その部分に対応する構成素を補完することができると，痕跡のための特別な文法規則を用意する必要がなくなり，文法規則の数が抑えられる．
[i:5, score:0.34946] GLR法は効率の良い構文解析法として知られるが，痕跡処理については考慮されていない．
[i:7, score:0.36002] 主たる問題は，ある文法規則中の痕跡の記述が，その痕跡とは関係のない文法規則に基づく解析に影響を与え，誤った痕跡検出を引き起す，というものである．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:12, score:0.54899] 例えば，``A child who has a toy smiles.''という文では，`a child'がwhoの直後(右隣り)から現在の位置に移動することによって生じた欠落部分に痕跡が存在する．
[i:13, score:0.52300] 痕跡をtで表すと，この文は``A child who t has a toy smiles.''となる．
[i:14, score:0.41999] 構文解析において，解析系が文に含まれる痕跡を検出し，その部分に対応する構成素を補完することができると，痕跡のための特別な文法規則を用意する必要がなくなり，文法規則の数が抑えられる．

================================================================
[section type  : proposed_method]
[section title : GLR法]
================================================================
[i:26, score:0.59650] [MATH]は項の一例であるが，これは「現時点までにカテゴリnpの解析が終了し，次にカテゴリvpの解析を開始する．
[i:28, score:0.45039] 状態を構成する項の集合は，与えられたCFGに文法規則[MATH]を加えて得られる文法から，次に示す関数CLOSUREおよびGOTOによって求められる．
[i:35, score:0.36803] 関数GOTOは，与えられた項の集合[MATH]から，文法カテゴリ[MATH]に対する新たな項の集合GOTO([MATH]，[MATH])を求める．

================================================================
[section type  : proposed_method]
[section title : 文法記述形式]
================================================================
[i:65, score:0.54600] スラッシュ記法では，スラッシュと呼ばれる記号`/'を使用して，非終端カテゴリの記述に痕跡の記述を追加する．
[i:66, score:0.83202] `relC/np'はスラッシュ記法を用いた記述の一例であるが，これは「非終端カテゴリrelCを根とする解析木が作られたとき，その根の下に痕跡を直接構成素として持つカテゴリnpが一つ存在する．
[i:69, score:0.65699] `relC/np'の例では，カテゴリnpはスラッシュカテゴリである．

================================================================
[section type  : proposed_method]
[section title : 痕跡検出]
================================================================
[i:81, score:0.87261] 例えば，図[REF_fig:xgs]の文法規則[MATH]では，relC/npの解析を開始するとき，つまり，項[MATH]を含む状態に解析系が遷移するときに，スラッシュカテゴリであるnpをXリストにプッシュする．
[i:99, score:0.75651] この還元は，Xリストの先頭にあるスラッシュカテゴリnpを構成する左隅の品詞であるdetを先読み情報としておこなわれるべきものである．
[i:100, score:0.77621] しかし，このスラッシュカテゴリnpは痕跡として存在するので，この品詞detが先読み情報として実際の文から得られることはない．

================================================================
[section type  : proposed_method]
[section title : 状態の構成]
================================================================
[i:181, score:0.80061] 状態が芯としてslash項とそうでない項を含む場合，そのslash項ではない項の閉包として得られた項に基づく解析においても，その状態に遷移するときにXリストにプッシュしたスラッシュカテゴリが参照されてしまい，誤った痕跡の検出が引き起される．
[i:182, score:0.62797] 状態が芯として複数のslash項を含む場合，その状態に遷移するときにXリストにプッシュすべきスラッシュカテゴリが複数存在してしまう．
[i:183, score:0.80986] 状態が左隅slash項を含む場合，その左隅slash項の閉包として得られた項以外の項に基づく解析においても，その状態に遷移するときにXリストにプッシュしたスラッシュカテゴリが参照されてしまい，誤った痕跡の検出が引き起される．
-----------------------------------------------------
  [subsection title : 状態分割]
-----------------------------------------------------
  [i:lead, score:0.26864] 図[REF_fig:states2]の状態2(I[MATH])には，(1)に示した問題がある．
.....
  [i:186, score:0.80213] 状態2に遷移するときにXリストにプッシュされたスラッシュカテゴリnpは，カテゴリrelCの解析においてのみ参照されるべきものである．
  [i:187, score:0.80450] しかし，このスラッシュカテゴリnpは，Xリスト上に存在する限り，カテゴリvpの解析，つまり，I[MATH]のうちCLOSURE({[MATH]})に含まれる項に基づく解析においても参照されてしまう．
  [i:196, score:0.82041] ここで，Xリストの先頭にあるスラッシュカテゴリnpに対してLR構文解析表に動作が定義されているため，誤りであるにも関わらず，解析系はhasの直後(右隣り)にこのスラッシュカテゴリnpが痕跡として存在すると判断する．
-----------------------------------------------------
  [subsection title : 依存関係をともなう状態分割]
-----------------------------------------------------
  [i:lead, score:0.00574] 次に，(3)に示した問題について例を用いて述べる．
.....
  [i:272, score:0.87021] この状態xに遷移するときにXリストにプッシュされたスラッシュカテゴリnpは，カテゴリsの解析，つまり，CLOSURE({[relC [MATH] [MATH] s/np]})に含まれる項に基づく解析においてのみ参照されるべきものである．
  [i:273, score:0.83820] しかし，このスラッシュカテゴリnpは，Xリスト上に存在する限り，CLOSURE({[relC [MATH] [MATH] s/np]})には含まれない，[s [MATH] np [MATH] vp]などの項に基づく解析においても参照されてしまう．
  [i:277, score:0.74077] 図[REF_fig:states4]のI[MATH]では，項[MATH]に基づく解析には，CLOSURE({[relC [MATH] [MATH] s/np]})に含まれる項に基づく解析が含まれる．
-----------------------------------------------------
  [subsection title : 文法規則の置き換え]
-----------------------------------------------------
  [i:lead, score:0.43758] 左隅slash項は，右辺の左端にスラッシュ記法が存在する文法規則から生じる．
.....
  [i:318, score:0.43758] 左隅slash項は，右辺の左端にスラッシュ記法が存在する文法規則から生じる．
  [i:321, score:0.31997] そこで，文法に対する前処理として，右辺の左端にスラッシュ記法が存在する文法規則に対して，図[REF_fig:replace]に示す置き換えをおこない，スラッシュ記法を擬似的に右辺の左端から移動させる．
  [i:325, score:0.35437] また，dummyはスラッシュ記法を擬似的に移動させるためだけに導入された非終端カテゴリであり，[MATH]は空文字列を表す．

================================================================
[section type  : proposed_method]
[section title : slash項に基づく状態遷移]
================================================================
[i:327, score:0.40931] slash項[MATH]を含む状態において，Bが構成されたときに解析系がおこなう状態遷移には，二通りのものが考えられる．
[i:330, score:0.74563] 解析系は，この状態に遷移するときにXリストにプッシュしたスラッシュカテゴリCが痕跡検出によって既にポップされているとき，B/Cによる状態遷移をおこなう．
[i:333, score:0.28982] 解析系は，LR構文解析表にBによる状態遷移が定義されているとき，これをおこなう．

================================================================
[section type  : proposed_method]
[section title : 複合名詞句制約]
================================================================
[i:357, score:0.77858] したがって，解析系はこの状態sに遷移するときには，まず一時的にXリストを空にし，その後，スラッシュカテゴリであるnpをXリストにプッシュする．
[i:358, score:0.72760] また，解析系は状態sからrelC/npによる状態遷移をおこなうときには，Xリストの内容をこの状態sに遷移する前のものに復元する．
[i:363, score:0.67547] 状態が左隅enclosed項を含む場合，その左隅enclosed項の閉包として得られた項以外の項に基づく解析に対しても，その状態に遷移するときにおこなわれたXリスト操作が影響し，痕跡が検出されなくなる．

================================================================
[section type  : proposed_method]
[section title : 動作例]
================================================================
[i:376, score:0.62689] |- sentence |- sen_dec |- subj | |- noun_p | |- noun_p | | |- art -- < a > | | |- n -- < child > | |- relC/noun_p | |- relPron -- < who > | |- sen_dec | |- subj | | |- noun_p -- < t > | |- pred_do | |- verb_p | |- verb | |- vt -- < has > | |- obj | |- noun_p | |- art -- < a > | |- n -- < toy > |- pred_do |- verb_p |- verb |- vi -- < smiles >
[i:383, score:0.49011] また，SGLRは痕跡処理を持たないため，図[REF_fig:cfg2]と同様に，痕跡を含むカテゴリに対して，その痕跡に対応する構成素が欠けた文法規則を用意した．
[i:386, score:0.44076] SGLR-plusを使用した場合には，痕跡処理がおこなわれるため，SGLRを使用した場合と比較して3割ほど文法規則が減少している．

================================================================
[section type  : conclusion]
[section title : おわりに]
================================================================
[i:414, score:0.35853] 本論文では，効率の良い構文解析法として知られているGLR法[CITE]に基づく痕跡処理の手法を示した．
[i:415, score:0.42100] この手法では，文法記述形式としてXGS[CITE]を使用し，XGでのXリスト[CITE]と基本的に同じ手法で痕跡を扱った．
[i:417, score:0.38845] また，この手法によって，GLRパーザであるSGLR[CITE]を拡張し痕跡処理を実現した．

