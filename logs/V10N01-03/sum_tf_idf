================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:312] レレバンスフィードバックは検索者が与えた検索条件を利用してシステムが選択する文書(サンプル文書)について，検索者が必要文書と不要文書を選択し，フィードバックすることで，より正確な文書検索を実現する手法である．
[i:2, score:431] 通常のレレバンスフィードバックでは検索要求との関連が最も強いと推定される文書をサンプルとするレレバンスサンプリングが用いられるが，これに対して必要文書か不要文書かを分類するのが難しい文書をサンプルとするuncertaintyサンプリングが提案され，より高い検索精度が得られると報告されている．
[i:9, score:366] NPLテストコレクションを用いた実験の結果，unfamiliarサンプリングによるサンプリング手法の改良とRocchio-Boostにより従来のRocchioフィードバックとレレバンスサンプリングに対して平均適合率を6 %程度向上できることが分かった．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:22, score:384] これらサンプリング手法は検索結果の上位から順に（レレバンスサンプリング），ないし必要文書と不要文書の境界と推定される文書，およびその前後の順位の文書（uncertaintyサンプリング）をサンプル文書として選択する．
[i:30, score:436] AdaBoostは既存の分類アルゴリズム(弱学習アルゴリズム)を組合せることでより精度の高いアルゴリズムを生成する手法であるが，決定株，ベイズ推定法を弱学習アルゴリズムとして用いる場合，サンプル文書が少ない場合にはRocchioフィードバックに劣る精度となることが知られている[CITE]．
[i:31, score:442] 本稿ではRocchioフィードバックを弱学習アルゴリズムとして用いる例(Rocchio-Boost)を示し，実験により少数のサンプル文書でも高い検索精度を実現することを示す．

================================================================
[section type  : proposed_method]
[section title : 従来のレレバンスフィードバック技術]
================================================================
[i:39, score:372] Rocchioフィードバックは検索要求文とその要求に適合するかどうか判定された文書(サンプル文書)を入力として，検索要求を表すベクトルを出力する．
[i:50, score:371] Rocchioフィードバック[CITE]は検索要求文およびサンプル文書のベクトルを用いて以下の式により検索者の意図を反映したベクトルを作成する．
[i:55, score:354] 関連度が高い文書は必要文書に，関連度の低い文書は不要文書に分類されたと考えることができるため，Rocchioフィードバックは必要ないし不要の判定がされたサンプル文書を学習例として，未知の文書について必要ないし不要の判定をする分類学習アルゴリズムと考えられる．

================================================================
[section type  : proposed_method]
[section title : Rocchio-Boost]
================================================================
[i:60, score:337] レレバンスフィードバックへの適用例として決定株，ベイズ推定を弱学習アルゴリズムとする手法が提案されているが，十分な数の学習例が得られる場合にはRocchioフィードバックより優れた精度が得られるものの，決定株，ベイズ推定は学習例が少ない場合には良好な精度が得られないため，これらを弱学習アルゴリズムとするAdaBoostは少ない学習例ではRocchioフィードバックに劣る精度となることが報告されている[CITE]．
[i:62, score:344] Rocchioフィードバックによる検索対象文書の順位付けは文書を必要文書ないし不要文書に分類していると考えることができるため，Rocchioフィードバックを弱学習アルゴリズムとして用いることもできる．
[i:64, score:284] ここではRocchioフィードバックを弱学習アルゴリズムとしてAdaBoostを適用したアルゴリズムの一例(Rocchio-Boost)を示す．

================================================================
[section type  : proposed_method]
[section title : 既存のサンプリング手法]
================================================================
[i:85, score:294] レレバンスサンプリングは最も検索条件に適合すると考えられる文書をサンプル文書とする手法であり，レレバンスフィードバックでのサンプル選択方法として最も良く用いられる．
[i:89, score:282] なお，本稿では各フィードバックにおいて選択されるサンプル文書を[MATH]文書とし，この[MATH]文書を各サンプリング手法により選択するものとする．
[i:102, score:471] uncertaintyサンプリングによるレレバンスフィードバックの過程では，検索者に示されるサンプル文書はレレバンスサンプリングに比べて検索要求との関連は低いため，フィードバックの過程で検索者が閲覧する文書の正解率は低い．

================================================================
[section type  : proposed_method]
[section title : unfamiliarサンプリング]
================================================================
[i:116, score:347] レレバンスサンプリングは検索結果の上位文書を，uncertaintyサンプリングは最も判定が難しい文書をサンプル文書として選択する．
[i:123, score:386] 本稿では[MATH]手法により計算される文書ベクトル間の内積値を文書間距離として用い，レレバンスサンプリングおよびuncertaintyサンプリングにおける追加サンプル文書選択の際にいずれか既存のサンプル文書の最近傍(＝全ての文書の中で内積値が最小となるもの)となっていないか確認する．
[i:138, score:383] このunfamiliarサンプリングをレレバンスサンプリング，uncertaintyサンプリングに適用することで，選択されるサンプル文書はよりバラエティに富んだものとなり，複数の類似した文書がサンプルとして用いられる場合に比べて検索精度の向上が期待できる．

================================================================
[section type  : experiment_result]
[section title : 実験]
================================================================
[i:139, score:5] 本章では実験に用いたデータと実験手順について述べる．
-----------------------------------------------------
  [subsection title : 実験に用いたデータ]
-----------------------------------------------------
  [i:lead, 133] 検索精度の評価には，英文を対象とした文書検索テストコレクションとして広く用いられているNPLテストコレクション[CITE]を用いた（表[REF_table:collections]，対象文書は物理分野の文献の要約）．
.....
  [i:140, score:133] 検索精度の評価には，英文を対象とした文書検索テストコレクションとして広く用いられているNPLテストコレクション[CITE]を用いた（表[REF_table:collections]，対象文書は物理分野の文献の要約）．
  [i:141, score:129] テストコレクションは文書の集合と検索要求文からなり，検索要求文に対して関連する文書（正解）が与えられている．
  [i:142, score:127] テストコレクションの各質問，文書からはFreeWAIS-sf [CITE]の不要語辞書に登場する語を除去後，Porterのstemmingアルゴリズム[CITE]により語幹を取り出して利用した．
-----------------------------------------------------
  [subsection title : 実験手順]
-----------------------------------------------------
  [i:lead, 3] 以下に実験手順を示す．
.....
  [i:148, score:322] 各フィードバックによってサンプル文書が追加されるが，各サンプリング手法，文書順位付け手法によって追加されるサンプル文書が異なり，その違いが検索精度に与える影響を検証する．
  [i:150, score:317] RocchioフィードバックおよびRocchio-Boost(ラウンド数[MATH])により，検索対象文書の順位付けを行う．
  [i:158, score:468] なおRocchioフィードバックによって順位付けを行う場合，uncertaintyサンプリングでの[MATH]による「最も分類が難しい文書」の判定ができないため，代わりにサンプル文書中で最も順位の低い必要文書と最も順位の高い不要文書の中間の順位の文書を「最も分類が難しい文書」として扱い，その文書より上位にある4文書，下位にある5文書をサンプル文書として選択した．

================================================================
[section type  : experiment_result]
[section title : 実験結果]
================================================================
[i:162, score:344] また``順位付け''の欄は検索結果の順位付けに用いた手法を示し，それぞれRocchioフィードバック(Roc)，Rocchio-Boost(Roc-Boo)，決定株を弱学習アルゴリズムとするBoosTexter(Boost)を示す．
[i:164, score:365] 本稿で用いた学習例は30文書([MATH])から60文書([MATH])と比較的少数であるが，Rocchioフィードバックを弱学習アルゴリズムとするAdaBoost(Roc-Boo)がRocchioフィードバック(Roc)より優れた結果を示している．
[i:171, score:440] 表[REF_table:common_sample]に順位付けにRocchio-Boostを用いた場合にレレバンスサンプリングとuncertaintyサンプリングの両方で用いられるサンプル数(共通サンプル数)を示す(サンプル数は全ての検索要求文についての平均)．

================================================================
[section type  : conclusion]
[section title : まとめ]
================================================================
[i:176, score:614] レレバンスフィードバックにおけるサンプル文書選択(サンプリング)において，類似したサンプルが追加されることを防ぐunfamiliarサンプリングと，少ないサンプル数でも良好な検索精度を得ることができるRocchioフィードバックを弱学習アルゴリズムとするAdaBoost(Rocchio-Boost)を提案した．
[i:178, score:504] また弱学習アルゴリズムとして決定株を用いるAdaBoost(BoosTexter)と比較したところ，30から70文書程度の比較的少数のサンプル数ではBoosTexterはRocchioフィードバックに劣る検索精度であるのに対して，Rocchio-BoostはRocchioフィードバックより優れた検索精度を示したことから，少数のサンプル数においてRocchioフィードバックを弱学習アルゴリズムとして用いる手法が有効であることがわかった．
[i:183, score:345] Rocchioフィードバックを弱学習アルゴリズムとして用いる手法は他にも考え得るが，本稿で提案する利用法では検索対象文書との内積計算を一度だけ行えばよい．

