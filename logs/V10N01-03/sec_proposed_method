本章ではレレバンスフィードバックを実現する標準的な手法であるRocchioフィードバックアルゴリズムについて述べる．
Rocchioフィードバック[CITE]はベクトル空間法とTF/IDF法[CITE]を用いた文書検索システムにおいて，レレバンスフィードバックを実現する．
Rocchioフィードバックは検索要求文とその要求に適合するかどうか判定された文書(サンプル文書)を入力として，検索要求を表すベクトルを出力する．
作成されたベクトルと検索対象となる文書のベクトルの内積が，文書と検索要求文との関連度を示す．
ベクトル空間法[CITE]は文書や検索要求文をベクトル空間上のベクトルとして表現する．
このベクトルは文書および文中の単語が持つ重要性を示す``重み''を要素として持つ．
TF/IDF法は，文書データベース中の少数の文書に数多く登場する語を重要な語として扱い，大きな重みを与えることで語の``重み''を決定する[CITE]．
本稿ではTF/IDF法の一つであるltc-lnc手法について述べる[CITE]．
ltc-lnc手法は検索要求文，サンプル文書についてはltc手法により単語の持つ重みを計算することでベクトルを作成し，検索対象文書についてはlnc手法によって同様にベクトルを作成する．
ltc手法は以下の式により単語の重みを計算する．
文ないし文書[MATH]中の単語[MATH]の重み[MATH]は，文ないし文書[MATH]中に単語[MATH]が出現する回数[MATH]（Term Frequency,[MATH]TF）および単語[MATH]が出現する文書データベース中の文書数[MATH]の逆数（Inverted Document Frequency,[MATH]IDF）を用いて以下の式により計算される[CITE]．
なお[MATH]は文書データベース中の文書総数である．
lnc手法は以下の式により単語の重みを計算する．
Rocchioフィードバック[CITE]は検索要求文およびサンプル文書のベクトルを用いて以下の式により検索者の意図を反映したベクトルを作成する．
検索要求文のベクトルを[MATH]，提示した文書中から検索者が選択した必要文書[MATH]件の持つベクトルの和を[MATH]，検索者が選択しなかった文書（不要文書）[MATH]件の持つベクトルの和を[MATH]としたとき，新たなベクトルは
となる．
ここで[MATH]は定数(本稿では各々16,32,8とした)，また重みが負の値となる語は用いない．
得られたベクトルと検索対象となる文書のベクトルの内積値が，検索要求に対する文書の関連度を表す．
関連度が高い文書は必要文書に，関連度の低い文書は不要文書に分類されたと考えることができるため，Rocchioフィードバックは必要ないし不要の判定がされたサンプル文書を学習例として，未知の文書について必要ないし不要の判定をする分類学習アルゴリズムと考えられる．
また内積値の大きさが必要文書に分類される確からしさを表していると考えられる．
AdaBoostはランダム予測より良い予測を行う学習アルゴリズム(弱学習アルゴリズム)を組み合わせることで，より高精度な予測を行う強学習アルゴリズムを構成するアルゴリズムであり，多くの実験結果から既存の分類学習アルゴリズムを弱学習アルゴリズムとして得られる強学習アルゴリズムは，従来の分類学習アルゴリズムに比べて高い性能が得られることが示されている[CITE]．
AdaBoostの特徴は学習例に重みを付け，弱学習アルゴリズムでは学習が難しい学習例の重みを相対的に増加させることで，難しい例に適応した学習結果を得ること，また重み付きの学習例に対する学習の正確さを評価し，その正確さに応じた重みを付けて各学習結果を結合して強学習アルゴリズムを得る点にある．
AdaBoostは多くの実験によりその効果が確認されているが，得られる強学習アルゴリズムの性質は弱学習アルゴリズムの性質に強く依存する．
レレバンスフィードバックへの適用例として決定株，ベイズ推定を弱学習アルゴリズムとする手法が提案されているが，十分な数の学習例が得られる場合にはRocchioフィードバックより優れた精度が得られるものの，決定株，ベイズ推定は学習例が少ない場合には良好な精度が得られないため，これらを弱学習アルゴリズムとするAdaBoostは少ない学習例ではRocchioフィードバックに劣る精度となることが報告されている[CITE]．
これら結果は逆に，Rocchioフィードバックが少数の学習例でも良好な精度を示すと捉えることができる．
Rocchioフィードバックによる検索対象文書の順位付けは文書を必要文書ないし不要文書に分類していると考えることができるため，Rocchioフィードバックを弱学習アルゴリズムとして用いることもできる．
Rocchioフィードバックは少ない学習例でも比較的良好な精度が得られると考えられることから，Rocchioを弱学習アルゴリズムとしてAdaBoostを適用することで，少数の学習例でも良好な結果が得られる可能性がある．
ここではRocchioフィードバックを弱学習アルゴリズムとしてAdaBoostを適用したアルゴリズムの一例(Rocchio-Boost)を示す．
AdaBoostは弱学習アルゴリズムによる分類結果に，分類の確からしさを示すスコアが与えられる場合，これを信頼度(confidence ratio)として利用することができる[CITE]．
以下では長さ1に正規化したRocchioフィードバックによるベクトルと，文書ベクトル間の内積値(0から1までの値を取る)を-1から1にマッピングし，これを信頼度として用いる．
[MATH]を[MATH]番目のサンプル文書，[MATH]を[MATH]が正解文書なら1，不要文書なら-1とする．
[MATH]をサンプル文書数とする．
[MATH]とする(学習例の重みを示す変数)
ラウンド[MATH]を1から1ずつ加算して[MATH]に達するまで以下の作業を繰り返す
Rocchioフィードバックの式により[MATH]を計算する
ここで[MATH]は文書[MATH]のベクトルを表す．
ベクトル[MATH]とする．
[MATH]とサンプル文書[MATH]のベクトルの内積[MATH]を計算し，[MATH]とする([MATH]と文書ベクトルの内積値が0から1までの値を取るため，[MATH]となる)．
弱学習アルゴリズムによる学習の正確さを示す変数[MATH]を以下の式で求める．
学習例の重みを更新する．
[MATH]はいずれのラウンド[MATH]でも
となるよう定める．
ラウンド[MATH]が[MATH]に達したら，各ラウンド[MATH]で得られた[MATH]，[MATH]，[MATH]を用いて最終的な強学習アルゴリズムを得ることができる．
検索対象となる文書[MATH]の文書ベクトルを[MATH]とすると，最終的な強学習アルゴリズム[MATH]は
となり，この式の値が検索要求に対して文書[MATH]が持つ関連度となる．
なお上式では文書[MATH]を評価する際にRocchioフィードバックと同じく内積計算は一度のみ行えばよい．
[MATH]が大きい文書[MATH]ほど検索要求に適合する度合が強いと考えられ，この値の大小で文書をソートし順位付けして出力する．
本章では既存のサンプリング手法について述べる．
レレバンスサンプリングは最も検索条件に適合すると考えられる文書をサンプル文書とする手法であり，レレバンスフィードバックでのサンプル選択方法として最も良く用いられる．
サンプル文書と検索者が閲覧する文書を同一のものとした場合，レレバンスフィードバックの繰り返しの過程で検索者に示されるサンプル文書は，常に既知のサンプルから推定される最も検索要求に合致した文書となる．
このため，少数の正解文書を閲覧すれば十分な場合，サンプル文書の閲覧とフィードバックのみで目的が達成できる．
以下にレレバンスサンプリングのアルゴリズムを示す．
なお，本稿では各フィードバックにおいて選択されるサンプル文書を[MATH]文書とし，この[MATH]文書を各サンプリング手法により選択するものとする．
また各フィードバックにおいては既存のサンプル文書全てを用いる．
このためフィードバックの繰り返しごとにサンプル文書は[MATH]文書ずつ増加する．
検索要求と既存のサンプル文書を用いたレレバンスフィードバックで得られる分類アルゴリズムを[MATH]とする．
[MATH]として[MATH]を1ずつ加算して以下を任意の回数繰り返す．
検索対象の文書[MATH]をアルゴリズム[MATH]により分類し，より必要文書である(検索要求に適合する)と判定された文書の順に順位付けする．
高い順位の文書から[MATH]文書選択する．
なお既存のサンプル文書は選択対象から外す．
選択された[MATH]文書について必要/不要の判定を行い，サンプル文書に追加する．
増加したサンプル文書を用いてレレバンスフィードバックを行い新たな分類アルゴリズム[MATH]を得る．
このレレバンスサンプリングと異なるサンプリング手法としてLewisらによってuncertaintyサンプリングが提案されている[CITE]．
これは文書のうち必要であるか不要であるか最も判定しにくいものをサンプルとする手法である．
このサンプリング手法を用いることで，より良い分類学習が可能となり，最終的に得られる検索結果はレレバンスサンプリングに比して良くなると報告されている．
uncertaintyサンプリングによるレレバンスフィードバックの過程では，検索者に示されるサンプル文書はレレバンスサンプリングに比べて検索要求との関連は低いため，フィードバックの過程で検索者が閲覧する文書の正解率は低い．
このため，少数の正解文書を閲覧すれば十分な場合でも，サンプル文書とは別に検索結果の上位文書を閲覧する必要がある．
以下にuncertaintyサンプリングのアルゴリズムを示す．
検索要求と既存のサンプル文書を用いたレレバンスフィードバックで得られる分類アルゴリズムを[MATH]とする．
[MATH]として[MATH]を1ずつ加算して以下を任意の回数繰り返す．
検索対象の文書[MATH]をアルゴリズム[MATH]により分類し，より必要文書である(検索要求に適合する)と判定された文書の順に順位付けする．
必要文書か不要文書か最も分類が難しい文書から順に[MATH]文書選択する．
「最も分類が難しい文書」としては分類アルゴリズムにより出力される分類の確からしさを表す値を用いて判定するが，AdaBoostでは強学習アルゴリズム[MATH]がこれに相当する．
[MATH]が0に近いほど必要文書か不要文書か最も曖昧な，分類の難しい文書と判定されるので，[MATH]が0に近い文書から[MATH]文書を選択する．
なお既存のサンプル文書は選択対象から外す．
選択された[MATH]文書について必要/不要の判定を行い，サンプル文書に追加する．
増加したサンプル文書を用いてレレバンスフィードバックを行い新たなベクトル[MATH]を得る．
検索要求に対して文書検索結果を順位付きで出力する文書検索システム(例えばWebサイトを検索するインターネット検索サイト等)を用いると，ほとんど同じ内容の文書が近い順位に複数提示されることがある．
これはサンプリングにおいて以下のような問題を起こす可能性がある．
レレバンスサンプリングは検索結果の上位文書を，uncertaintyサンプリングは最も判定が難しい文書をサンプル文書として選択する．
このため検索要求との適合度により順位付けされた検索結果のうち，適合度が一定の範囲にある文書からサンプルが選択される．
互いに類似した文書の文書ベクトルは，多くの共通した単語を同じ重みで持つことが多いため，同じ検索要求との適合度が類似した値となることがあり，これらサンプリング手法は複数の類似した文書をサンプルとして選択する可能性がある．
文書データベースには内容がほぼ同一の文書が複数登録されていることがあるため，サンプルとして追加される文書が全て同じ内容の文書となることすらあり得る．
このような場合，サンプル文書を追加しても，検索精度向上の効果が十分に得られない恐れがある．
この問題点は互いに類似した文書がサンプル文書として用いられるために生じる．
そのため追加サンプル選択の際に，既存のサンプル文書と文書間距離が近い文書を対象から除外することで，この問題を避けることができる．
本稿では[MATH]手法により計算される文書ベクトル間の内積値を文書間距離として用い，レレバンスサンプリングおよびuncertaintyサンプリングにおける追加サンプル文書選択の際にいずれか既存のサンプル文書の最近傍(＝全ての文書の中で内積値が最小となるもの)となっていないか確認する．
もしいずれか既存のサンプル文書の最近傍であれば，既存サンプルの類似文書と考えられるので，この文書はサンプルとして追加しないことで，類似した文書がサンプルに追加されるのを防ぐ．
レレバンスサンプリングに類似サンプル除外の手順を加えると，(2)-(b)の手順が以下の(2)-(b)[MATH]に置き換わる．
[MATH]とし，[MATH]の間，以下を繰り返す．
順位付けされた文書から(2)-(b)[MATH]で処理されていない最も内積値の高い文書[MATH]を取り出す．
なお既存のサンプル文書は対象から外す．
[MATH]がいずれのサンプル文書の最近傍でなければサンプル文書集合に追加し[MATH]を1加算する．
最近傍ならサンプル文書集合に加えない．
uncertaintyサンプリングも手順(2)-(b)が以下の(2)-(b)[MATH]に置き換わる．
[MATH]とし，[MATH]の間，以下を繰り返す．
順位付けされた文書から(2)-(b)[MATH]で処理されていない文書のうち，最も[MATH]が0に近い文書[MATH]を取り出す．
なお既存のサンプル文書は対象から外す．
[MATH]がいずれのサンプル文書の最近傍でなければサンプル文書集合に追加し[MATH]を1加算する．
最近傍なら集合に加えない．
本稿では上記の手順でサンプリングの際に類似文書を除外する手法をunfamiliarサンプリングと呼ぶ．
このunfamiliarサンプリングをレレバンスサンプリング，uncertaintyサンプリングに適用することで，選択されるサンプル文書はよりバラエティに富んだものとなり，複数の類似した文書がサンプルとして用いられる場合に比べて検索精度の向上が期待できる．
