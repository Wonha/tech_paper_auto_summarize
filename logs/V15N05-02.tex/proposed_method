中間言語を用いた対訳辞書の拡充
\label{sec:expansion}

\subsection{対訳辞書の拡充}


ある入力言語から，ある出力言語への対訳辞書を作成するとき，以下のような状
況を仮定する．
\begin{quote}
  \textbf{仮定：}ある中間言語を考えると，入力言語から出力言語への小規
  模な対訳辞書（以下，\textbf{種辞書}と呼ぶ）と，入力言語から中間言語へ
  の大規模な対訳辞書および中間言語から出力言語への大規模な対訳辞書が存在
  する．
\end{quote}
このような仮定は，英語を中間言語とすると，かなり多くの言語対に対して成り
立つことが期待できる．

本論文では，上述の仮定の下で，入力言語から中間言語への大規模対訳辞書には
登録されているが，種辞書には登録されていない語の訳語を推定することによっ
て，種辞書を拡充するというタスク（対訳辞書の拡充）を扱う．


\subsection{中間言語と共起ベクトルを用いた拡充方法}
\label{subsec:提案手法}

本論文で提案する拡充方法は，以下の2段階からなる．
\begin{enumerate}
  \item 入力言語のコーパスを用いて，翻訳したい単語と，種辞書に登録されて
	いる見出し語の単語共起ベクトルを作成する．次に，その単語共起ベク
	トルを，種辞書を用いて，出力言語上のベクトルに変換する．
  \item 入力言語から中間言語への対訳辞書と，中間言語から出力言語への対訳
	辞書を利用して，訳語候補を列挙する．出力言語のコーパスを用いて，
	それぞれの訳語候補について単語共起ベクトルを作成し，前段階で得ら
	れたベクトルとの類似度に基づいて，訳語を決定する．
\end{enumerate}
提案手法の概略を，\figref{fig:提案手法}に示す．

\begin{figure}[b]
  \begin{center}
   \includegraphics{15-5ia2f1.eps}
    \caption{提案手法}
    \label{fig:提案手法}
  \end{center}
\end{figure}

最初に，入力言語上の単語共起ベクトルを，種辞書を用いて，出力言語上のベク
トルに変換する．言語を問わず，コーパス上における単語$w_{i},w_{j}$の共起
頻度は$f(w_{i},w_{j})$と表す．
種辞書$D$の全見出し語を$x_{i}(i=1,2,\ldots,n)$とすると，
入力言語の単語$x_{s}$の共起ベクトル$\bf{v}(x_{s})$は，次式のように表
される．
\begin{equation}
  \bf{v}(x_{s}) = (f(x_{s},x_{1}),\ldots,f(x_{s},x_{n}))
    \label{eq:src_vector}
\end{equation}
つまり，この共起ベクトル$\bf{v}(x_{s})$の各次元は，入力言語の単語と対応し
ている．この共起ベクトル$\bf{v}(x_{s})$を，種辞書を用いて，各次元要素が出
力言語の単語と対応するようなベクトル$\bf{v}_{t}(x_{s})$に変換する．
\begin{equation}
  \bf{v}_{t}(x_{s}) = (f_{t}(x_{s},z_{1}),\ldots,f_{t}(x_{s},z_{m}))
    \label{eq:trans_vector}
\end{equation}
ここで，$z_{j}(j=1,2,\ldots,m)$は，種辞書に現れる全ての訳語である．また，
$f_{t}(x_{s},z_{k})$は，単語$x_{s}$に関する入力言語コーパス上の共起頻度
を，出力言語の単語$z_{j}$との共起の程度を示すように変換する関数であり，
次のように定義する．
\begin{equation}
  f_{t}(x_{s},z_{j}) = \sum_{i=1}^{n}f(x_{s},x_{i})\cdot\delta(x_{i},z_{j})
\end{equation}
ここで，$\delta(x_{i},z_{j})$は，単語$z_{j}$が単語$x_{i}$の訳語であるか
どうかを示す関数であり，単語$x_{i}$を種辞書で調べたときに得られる訳語集
合を$D(x_{i})$とすると，次式によって表される．
\begin{equation}
  \delta(x_{i},z_{j}) = \begin{cases}
			   1 & \mbox{if}\ z_{j}\in D(x_{i})\\
			   0 & \mbox{otherwise}
			 \end{cases}
\end{equation}

次に，訳語候補を，以下の手順で列挙する．最初に，入力言語の単語$x_{s}$につ
いて，入力言語から中間言語への対訳辞書を検索して，
中間言語上の訳語集合$\bf{Y}_{s}$を得る．
続いて，得られた訳語$\bf{y}_{s}\in\bf{Y}_{s}$を用いて，中間言語から出力言
語への対訳辞書を検索し，出力言語上の訳語候補集合$\bf{Z}_{s}$を得る．
ただし，訳語$\bf{y}_{s}$は，一般に，複数の語からなることがあり得る．通常
の対訳辞書において，入力言語の単語$x_{s}$に相当する単語が中間言語上に存在
する場合には，その相当する単語を訳語として使うことができるが，相当する単
語が中間言語上に存在しない場合には，複数の語からなる句または説明文の形の
訳語が使われる．そこで，訳語$\bf{y}_{s}$が単語1語からなっていた場合は，そ
のまま中間言語から出力言語への対訳辞書を検索し，訳語$\bf{y}_{s}$が複数の
語からなっていた場合は，訳語$\bf{y}_{s}$を構成する語全てを1つずつ用いて中
間言語から出力言語への対訳辞書を検索し，得られた全ての訳語候補集合の和集
合を訳語$\bf{y}_{s}$の訳語候補集合とする．
訳語候補$\bf{z}_{s}\in \bf{Z}_{s}$についても同様に，複数の語からなること
があり得る．ある訳語候補$\bf{z}_{s}$が
単語列$z_{s}^{1}z_{s}^{2}\cdots{}z_{s}^{l}$である時，
訳語候補$\bf{z}_{s}$の共起ベクトルを構成語全てを用いて次式のように求める．
\begin{equation}
  \bf{u}(\bf{z}_{s}) = \left(\sum_{k=1}^{l}f(z_{s}^{k},z_{1})\
				,\ldots,\ \sum_{k=1}^{l}f(z_{s}^{k},z_{m})\right)
    \label{eq:dst_vector}
\end{equation}
ベクトル$\bf{v}_{t}(x_{s})$とベクトル$\bf{u}(\bf{z}_{s})$のcosine類似度
$s(\bf{v}_{t}(x_{s}),\bf{u}(\bf{z}_{s}))$を計算し，適当な条件を満たした訳
語候補$\bf{z}_{s}$を，単語$x_{s}$の訳語として出力する．本論文では，条件と
して，(1)類似度の大きい訳語候補から順に出力する，(2)類似度が適当な閾値よ
り大きい訳語候補を出力する，という2通りの方法を考える．この評価については，
\ref{subsec:閾値の比較}節で述べる．

\paragraph{例}\

入力言語としてインドネシア語，出力言語として日本語，中間言語として
英語を用いた場合，提案手法による対訳辞書の拡充が，どのようにして行われる
かを具体例を用いて示す．
拡充対象となる語は，インドネシア語—日本語辞書（種辞書）には登録されていない
が，インドネシア語—英語辞書には登録されている語である\footnote{実際には，
正解訳語の判定を安定して行うために，元々の辞書に登録されている語を一部取
り除いた辞書を種辞書，取り除いた語をテスト単語として実験を行った．詳細に
ついては，\ref{subsec:condition}節を参照．}．そのような語 `peradaban' を
インドネシア語—英語辞書を用いて翻訳すると，2つの英訳語 `civilization', 
`culture' が得られる．次に，この2つの英訳語を，英語—日本語辞書を用いて翻
訳すると，13通りの訳語候補が得られる．
\begin{quote}
  文明，
  文明人，
  文化，
  文化生活，
  教化，
  開化，
  教養，
  都会，
  人口密集地，
  養成する，
  培養する，
  培養，
  菌株
\end{quote}

これらの訳語候補に対して\eqnref{eq:dst_vector}によって求めたベクトル
$u(\mbox{文明}),u(\mbox{文明人}),\ldots,u(\mbox{菌株})$と，
\eqnref{eq:trans_vector}によって求めたベクトル
$v_{t}(\mbox{`peradaban'})$とのcosine類似度と，それぞれの訳語候補が実際に
訳語として正しいかどうかを人手で判定した結果を，\tabref{tbl:example}に示
す．
この場合，13通りの訳語候補から類似度順に上位3個の訳語候補を訳語として出力
すると，出力された3個の訳語中で正しい訳語は1個だけであるから，精度は33\%
となり，正しい2個の訳語中で出力された訳語は1個だけであるから，再現率は
50\%となる．類似度が0.2より大きい訳語候補を選択した場合には，精度は20\%，
再現率は100\%である．
この手順を，対象となる全ての語に対して行うと，インドネシア語—英語辞書と英
語—日本語辞書によって訳語候補が見つかる全ての語を含む拡充された辞書が得ら
れる．

\begin{table}[t]
  \caption{インドネシア語単語 `peradaban' に対する訳語候補の例}
  \label{tbl:example}
  \begin{center}
\input{02table01.txt}
  \end{center}
\end{table}


\subsection{共起ベクトルの補正}

共起ベクトルを求めるとき，単純な共起頻度$f(w_{i},w_{j})$を用いる代わりに，
適当な補正を加える方法が有効である可能性がある．その方法として，本論文で
は，共起頻度を補正する方法と，Latent Semantic Analysis (LSA) に基づいてベ
クトルを変換する方法の2通りを検討する．

まず，情報検索においてしばしば用いられる$TF\cdot IDF$の考え方を応用して，
以下の2通りの補正された頻度を，単純な共起頻度$f(w_{i},w_{j})$の代わりに用
いる方法を比較する．
\begin{align}
  f_{\rm IDF}(w_{i},w_{j}) &= \frac{f(w_{i},w_{j})}{df(w_{j})} \label{eq:IDF}\\
  f_{\rm TFIDF}(w_{i},w_{j}) &= \frac{f(w_{i},w_{j})\cdot{}tf(w_{j})}{df(w_{j})} \label{eq:TFIDF}
\end{align}
ここで，$tf(w)$は，ある単語$w$の単語出現頻度であり，$df(w)$は，ある単語
$w$の文書出現頻度である．

LSA に基づく方法では，まず，日本語コーパス上での単語—文書共起行列$A$を求
める．この行列$A$の$i$行$j$列の要素は，単語$w_{i}$ の文書$d_{j}$中におけ
る頻度である．この時，行列$A$ の行数は，種辞書に出現する語数$m$に等しく，
列数は，コーパスに含まれる文書数$d$に等しい．
このような行列$A$は，次式のように，3つの行列$U,D,V$に特異値分解することが
できる．
\begin{equation}
  A_{m\times d}=U_{m\times r}D_{r\times r}V^{\rm T}_{d\times r}
\end{equation}
ただし，$r$は行列$A$の階数である．
この時，適当な小さい階数$r'$（ただし，$r'< r$）を選ぶと，階数$r'$における行
列$A$の最適近似は次式によって表される．
\begin{equation}
  U'_{m\times r'}D'_{r'\times r'}V'^{\rm T}_{d\times r'}
\end{equation}
ただし，$U',D',V'$の各要素は，それぞれ，行列$U,D,V$の対応する要素と等し
い．
ここで，左特異行列$U'$の各行は，その行に対応する語が，単語—文書という共起
の観点から見て，他の語とどのように類似しているかを表すベクトルと考えるこ
とができる．
このようにして得られた語の類似性を表すベクトルを用いて，
\eqnref{eq:trans_vector}で求められたベクトル$v_{t}(x_{s})$と，
\eqnref{eq:dst_vector}で求められたベクトル$u(z_{s})$を，以下のように補正
する．
\begin{align}
  v_{\mathrm{LSA}}(x_{s}) &= v_{t}(x_{s})\ U' \label{eq:LSA1} \\
  u_{\mathrm{LSA}}(z_{s}) &= u(z_{s})\ U' \label{eq:LSA2}
\end{align}
このように補正することにより，類似語と共起している場合の訳語選択を，より
適切に行えるようになる可能性がある．

これらの補正方法の評価については，\ref{subsec:補正の比較}節で述べる．


