提案手法の有効性を示すために評価実験を行った．
実験にはRST Discourse Treebank (RST-DTB) [CITE]に含まれる要約評価用のテストセットを用いた．
RST-DTBはPenn Treebankコーパスの一部の文書（Wall Street Journalから収集された385記事）からなるコーパスであり，RSTに基づく木構造が人手で付与されている．
さらにその内30記事について，人手で作成された要約文書（参照要約）が存在しており，それらの文書を評価用テストセットとした．
実験に用いたすべての文書は，Penn Tokenizerによりトークンに区切った．
要約システムの入力となる要約長は，参照要約の有するトークン数とした．
テストセットに含まれる30記事の参照要約には，平均して原文書の25%程度の長さのlong要約と，平均して原文書の10%程度の長さのshort要約の二種類が存在する．
本実験では両方のテストセットについて先行研究との比較を行う．
評価尺度としてはROUGE (Recall-Oriented Understudy for Gisting Evaluation)[CITE]を用いる．
抽出粒度の妥当性について検証するため，比較手法としてEDUを単位とした木制約付きナップサック問題による要約手法[CITE]と，文を単位とする木制約付きナップサック問題による要約手法を用意した．
また，単一文書要約において強力なベースラインとなるLEAD法との比較も行った．
LEAD法は，要約長に達するまで文書の冒頭から抽出単位を選択していくことで要約文書を生成する手法である．
本稿ではEDUを抽出単位とするLEAD[MATH]と，文を抽出単位とするLEAD[MATH]との比較を行う．
さらに，提案手法において文（単語間依存木）から部分木を抽出する際に根付き部分木に制限する手法（根付き部分木抽出）も用意し，任意の部分木を抽出対象とする提案手法（任意部分木抽出）との比較を行った．
本実験に用いたすべての文間依存木は，RST-DTBで人手付与されたRST構造を利用しており談話構造解析器は利用していない．
考察において，談話構造解析器を用いた追加実験を行い，精度の変化について考察する．
また，単語依存木はSuzukiらの提案した依存構造解析手法[CITE]を用いて構築した．
なお，本実験では，単語の重要度[MATH]として以下を用いた：
[MATH]は文書における単語[MATH]の単語頻度であり，[MATH]は，文書の文間依存木における文[MATH]の根からの深さである．
また，制約([REF_st_s_has_w])における[MATH]は8とした．
表[REF_tab:results]に，各手法によるROUGE-1,2値を示す．
まず，short要約，long要約セット双方において，提案手法である任意部分木抽出と根付き部分木抽出の間にROUGE値の顕著な差はみられなかった．
これについては[REF_sec:subtree]節において，両手法が抽出した実際の部分木を例に定性的な考察を行う．
以下では，任意部分木を提案手法とし，他の手法との比較を行う．
また，表[REF_tab:results]の下3行はUzedaらによる比較実験の結果から一部の数値を引用している．
ここで，Marcu[MATH] (0.432)とMarcu et al. (0.440)は，どちらも[CITE]の手法による結果を示している．
前者は我々による再実装の数値であり，後者は[CITE]において報告されていた数値である．
数値が異なるのはトークナイゼーションなどの前処理の違いによるものであると考えられるが，Uzedaらの文献に前処理の詳細がないため，完全な比較とはならないことに注意されたい．
とはいえ，両者の数値に大きな差異はないことから，ほぼ同じ実験条件での数値であると判断した．
まず，short要約セットのstopwordを除去した条件（最も左のカラム）において，提案手法の評価値はホルム法による多重比較の結果，他の全ての手法を有意に上回っていることを確認した．
個別の手法と比較すると，文選択手法すなわち文圧縮を一切行わない手法と比較すると，提案手法が大幅に上回っている事がわかる．
これは，文をそのまま抽出する場合は，今回の要約設定（平均圧縮率が約10%）では十分に情報を網羅できないことを示している．
次に，EDU選択手法と比較しても提案手法が上回っている．
EDU選択は文選択を有意に上回っていることから，文よりも細かいEDUを抽出粒度とすることで，要約文書の情報の網羅性を高めることができている．
しかし，EDUという予め決められた長さのテキストスパンを抽出する手法よりも，部分木という可変長のテキストスパンを抽出できる提案手法の方がROUGE値は上回っており，その有効性がわかる．
LEAD法は，報道記事の単一文書要約問題において非常に強力なベースラインである．
これは，報道記事ではしばしば記事の冒頭でその記事全体の小さなまとめが書かれる傾向にあるためである．
今回の実験では抽出単位の異なる二種類のLEAD法を用いたが，いずれも低い数値となった．
これは要約対象となっている文書が，単純な報道記事ではなく，エッセイや社説によって構成されているためであり，冒頭に重要なまとめが記載されているわけではないことが原因である．
一方，long要約セットでは，提案手法とEDU選択手法との間に顕著な差は見られなかった．
これは，25%という圧縮率が比較的緩く，いずれの手法，抽出単位でもある程度の情報が網羅できるために大きな差が生まれなかったためである．
ただし，文を抽出単位とした手法（文選択およびLEAD[MATH]）のROUGEスコアは低いことから，情報網羅性の向上のためには，文よりも小さいテキストスパンを抽出することが重要であるとわかる．
以上の結果から，提案手法のような要約長に柔軟な要約手法は，short要約セットのように比較的圧縮率の高い設定において有効であることがわかる．
表[REF_tab:results]の実験結果は，人手で与えられたRSTに基づく修辞構造を用いていた．
提案手法を任意の文書に適用する場合，文書の修辞構造を自動で解析する解析器が必須である．
しかし，修辞構造の自動解析は難しいタスクの一つであり，人手で付与された談話構造を使用したときと比較して精度が劣化してしまうおそれがある．
そこで本節では，既存の修辞構造解析器を用いて自動で解析した修辞構造を利用した場合の精度の変化を調べる．
今回の実験では自動解析器として，サポートベクターマシンに基づく高い精度を持った解析器であるHILDA [CITE]を用いた．
表[REF_tab:results_auto]に実験結果を示す．
[MATH]と付いている行が，自動解析に基づく依存木を使用した場合の結果である．
結果から，いずれの手法も人手で作成された修辞構造を用いたものよりROUGE値が劣化していることがわかる．
short要約セットの場合は，提案手法の方が劣化が大きい．
これは，提案手法がEDU単位の依存構造を文単位に変更しているためである．
HILDAを始めとする自動解析器は，ボトムアップに修辞構造木を組み上げていくため，それを用いて得た修辞構造木を談話依存構造へと変換すると，距離が近いEDU間の依存関係は比較的高い精度で予測できるが，遠い依存関係の予測精度は低い．
このため，遠距離の依存関係である文間の依存関係の同定に失敗し，提案手法のROUGEが大きく劣化したと考える．
実際，依存先の正解率 を計算すると，EDU単位で0.590，文単位で0.324となった．
しかしながら，short要約セットにおいては，減少幅は大きいものの依然として提案手法の精度が，今回比較したどの手法の数値よりも高いことから，提案手法の有効性がわかる．
long要約セットにおいては，EDU選択手法のROUGE値の減少はほとんど見られなかった．
[REF_sec:rouge]節で述べた通り，long要約セットは低い圧縮率であるため比較的多くの情報を要約に含めることができる．
文単位の依存関係においても，正解率自体は低くとも選択できる文数が増えるため，short要約セットよりもROUGE値の劣化が抑えられている．
すなわち，short要約セットのように圧縮率の厳しい設定では，より高い精度で抽出単位の依存先を推定する必要がある．
前節で，提案手法の有効性をROUGE値によって確認した．
本節では，談話構造，すなわち文間依存木の情報が文書中の重要箇所同定に有効かという点について考察を行う．
現在，文書要約において主流な問題設定は，同じトピックについて書かれた文書の集合からひとつの要約文書を生成する，複数文書要約である．
冒頭で説明した文抽出と文圧縮を組み合わせる手法も全て複数文書要約に取り組んでいるのに対して，今回我々が行った実験は，一つの文書に対し一つの要約文書を生成する単一文書要約問題である．
単一文書要約は複数文書要約と比較して，要約文書に含めるべき文書の重要部分の同定が難しい．
なぜならば複数文書要約では文書集合全体として重要な話題は文書横断的に出現するため，その性質を利用できるが，単一の文書においてそのような情報は利用できないためである．
対象とする文書が報道記事である場合は，冒頭部分に記事全体の要約が書かれやすいという強力な基準があるが，そうでない場合に重要な部分を同定することは困難である．
今回我々が用いた単一文書要約の評価セットは，報道記事ではなく社説やエッセイのような文書で構成されているため重要部分の同定が難しい．
これは表[REF_tab:results]におけるLEAD手法のROUGE値からも確認できる．
文間依存木の情報が文書の重要箇所同定に与える影響について検証するため，提案手法（自動解析含む）の単語重要度から[MATH]を取り除いたもの，すなわち単語の重要度が単にその文書における出現頻度で決まる場合と，文間依存木の情報を一切用いない従来の同時モデルについても同様に実験を行い比較した．
表[REF_tab:results_single]に，それぞれの結果を示す．
提案手法の単語重要度から文間依存木の情報（依存木の根からの深さ）を除いた場合に十分なROUGEスコアが得られないことから，文書の談話構造が単一文書要約における重要箇所の同定に寄与していることがわかる．
なお，同時モデルと異なり，木構造の制約という形で文間依存木の情報は用いていることに注意されたい．
同時モデルの結果を見ると，文抽出と文圧縮の同時最適化のみでは，本評価セットで有効に機能しないことがわかる．
重要文の同定・抽出が困難であるならば，複数文書要約において盛んに取り組まれている文抽出と文圧縮の同時最適化を適用することも困難となり，要約長に柔軟な要約文書の生成も困難となる．
本研究の結果は単一文書における重要部分の同定に対するひとつの手がかりとして，文書の談話構造が有効である可能性を示唆しているといえる．
ここまで，ROUGEの観点から評価実験の結果についての考察を進めてきた．
本節では，単語間依存木からその部分木を抽出する方法として，任意の部分木を抽出することの有用性を，例を示して考察する．
図[REF_fig:sents]に，任意部分木抽出手法と根付き部分木抽出手法が共通して要約文書に含めた文と，そこから抽出した部分木に対応する二つの文を示す．
なお，これはshort要約セットにおける例である．
ここで，[MATH]は依存構造解析器が単語間依存木の根であると出力した語であり，[MATH]は要約システムが部分木の根として選んだ語である．
任意部分木抽出においては，例に示したいずれの文も解析器の根以外の単語を根として部分木を抽出している．
例に見るように，目的節やthat節の内容の方が重要な情報を持つことが多いため，その部分のみを抽出することは，限られた長さで重要な情報のみ要約に含める上で有用であり，今回の実験ではこうした事例が少なかったこともありROUGEスコアで大きな差がでなかったが，特に圧縮率の高い設定では有効であろう．
EDUはRSTにおける談話構造の基本単位であるが，抽出型要約の抽出単位として適切とは限らない．
図[REF_fig:edus]に，ある文とその文を構成するEDUの例を示す．
図のように，EDUはおおよそ節に対応する文よりも細かな単位である．
抽出単位が文よりも細かいEDUであることは，EDU抽出は，文圧縮を逐次適用した要約手法として考えることができる．
つまり，EDU抽出による要約は多くの文を事前に圧縮しつつ抽出していることに相当する．
このように文よりも小さな断片を組み合わせて要約を生成すると，文を組み合わせる場合よりも長さ制約をちょうど満たすように要約を生成することができる可能性が高い．
よって，ROUGE値も上昇する傾向にある．
しかし，EDUは文よりも短いため，たとえ一貫性があろうともそれを読んだ読者が違和感を覚えてしまうだろう．
抽出型要約において，文書中の多くの文から細かな断片を集めることで情報の断片化された要約の生成につながっているかどうかのは，要約文書に含まれる抽出単位集合の元となる文の数が，その一つの指標となる．
言い換えると，生成された要約を構成する文の数が，参照要約すなわち人間によって生成された要約に近い方が，自然で読みやすい要約になっていると考えられる．
そこで本節では各手法が生成した要約文書に含まれる原文書の文数を比較した．
比較に用いた手法は提案手法である任意部分木抽出の他に，文選択とEDU選択である．
文選択は原文書中の文の数，EDU選択は原文書中のEDUに対応する文の数，部分木選択は，部分木に対応する文の数である．
なお，参照要約は人間が自由に生成した要約であるため，必ずしも原文書の文とは対応していないことに注意されたい．
short要約セットにおいて各選択手法が選択した文について箱ひげ図を図[REF_fig:boxes_short]に示す．
各々の箱の上辺と下辺は，それぞれその手法が選択した文数の第一四分位点，第三四分位点を表しており，箱の中の線は中央値を表している．
箱の上下に伸びる線（ひげ）の先は，それぞれ最大値，最小値を表し，ひげよりも外側に見られる[MATH]印は，外れ値である．
図を見ると，EDU選択手法が最も多くの文を用いて要約を生成していることがわかる．
一方で文選択手法は，比較手法の中では最も参照要約の文に近いが，[REF_sec:rouge]節で示した通り情報の網羅性という点で十分な要約を作成できない．
部分木抽出は文選択とEDU選択の間で，両者のように実際に抽出されるテキストスパンの長さを固定せずに要約システムが柔軟に各文から抽出する部分木を選択することができる．
それにより情報の網羅性と要約としての自然さを両立出来ている．
なお，部分木抽出手法の平均文数は4.73であり，中央値は4文であった．
これに対し，EDU選択の平均文数は5.77で中央値は5文であった．
これは提案手法の方が有意に少ない文を用いて要約を生成していることを示している．
自動解析を利用した場合も同様の傾向であるため詳細は割愛する．
同様に，long要約セットについて図[REF_fig:boxes_long]に示す．
圧縮率が低くなった場合も全体の傾向としてはshort要約セットとの大きな差異はない．
全体的にばらつき（箱の縦の長さ）が大きくなっているが，これは参照要約自体の長さのばらつきがshort要約セットよりも大きいことが原因である．
提案手法の有効性を示すために評価実験を行った．
実験にはRST Discourse Treebank (RST-DTB) [CITE]に含まれる要約評価用のテストセットを用いた．
RST-DTBはPenn Treebankコーパスの一部の文書（Wall Street Journalから収集された385記事）からなるコーパスであり，RSTに基づく木構造が人手で付与されている．
さらにその内30記事について，人手で作成された要約文書（参照要約）が存在しており，それらの文書を評価用テストセットとした．
実験に用いたすべての文書は，Penn Tokenizerによりトークンに区切った．
要約システムの入力となる要約長は，参照要約の有するトークン数とした．
テストセットに含まれる30記事の参照要約には，平均して原文書の25%程度の長さのlong要約と，平均して原文書の10%程度の長さのshort要約の二種類が存在する．
本実験では両方のテストセットについて先行研究との比較を行う．
評価尺度としてはROUGE (Recall-Oriented Understudy for Gisting Evaluation)[CITE]を用いる．
抽出粒度の妥当性について検証するため，比較手法としてEDUを単位とした木制約付きナップサック問題による要約手法[CITE]と，文を単位とする木制約付きナップサック問題による要約手法を用意した．
また，単一文書要約において強力なベースラインとなるLEAD法との比較も行った．
LEAD法は，要約長に達するまで文書の冒頭から抽出単位を選択していくことで要約文書を生成する手法である．
本稿ではEDUを抽出単位とするLEAD[MATH]と，文を抽出単位とするLEAD[MATH]との比較を行う．
さらに，提案手法において文（単語間依存木）から部分木を抽出する際に根付き部分木に制限する手法（根付き部分木抽出）も用意し，任意の部分木を抽出対象とする提案手法（任意部分木抽出）との比較を行った．
本実験に用いたすべての文間依存木は，RST-DTBで人手付与されたRST構造を利用しており談話構造解析器は利用していない．
考察において，談話構造解析器を用いた追加実験を行い，精度の変化について考察する．
また，単語依存木はSuzukiらの提案した依存構造解析手法[CITE]を用いて構築した．
なお，本実験では，単語の重要度[MATH]として以下を用いた：
[MATH]は文書における単語[MATH]の単語頻度であり，[MATH]は，文書の文間依存木における文[MATH]の根からの深さである．
また，制約([REF_st_s_has_w])における[MATH]は8とした．
表[REF_tab:results]に，各手法によるROUGE-1,2値を示す．
まず，short要約，long要約セット双方において，提案手法である任意部分木抽出と根付き部分木抽出の間にROUGE値の顕著な差はみられなかった．
これについては[REF_sec:subtree]節において，両手法が抽出した実際の部分木を例に定性的な考察を行う．
以下では，任意部分木を提案手法とし，他の手法との比較を行う．
また，表[REF_tab:results]の下3行はUzedaらによる比較実験の結果から一部の数値を引用している．
ここで，Marcu[MATH] (0.432)とMarcu et al. (0.440)は，どちらも[CITE]の手法による結果を示している．
前者は我々による再実装の数値であり，後者は[CITE]において報告されていた数値である．
数値が異なるのはトークナイゼーションなどの前処理の違いによるものであると考えられるが，Uzedaらの文献に前処理の詳細がないため，完全な比較とはならないことに注意されたい．
とはいえ，両者の数値に大きな差異はないことから，ほぼ同じ実験条件での数値であると判断した．
まず，short要約セットのstopwordを除去した条件（最も左のカラム）において，提案手法の評価値はホルム法による多重比較の結果，他の全ての手法を有意に上回っていることを確認した．
個別の手法と比較すると，文選択手法すなわち文圧縮を一切行わない手法と比較すると，提案手法が大幅に上回っている事がわかる．
これは，文をそのまま抽出する場合は，今回の要約設定（平均圧縮率が約10%）では十分に情報を網羅できないことを示している．
次に，EDU選択手法と比較しても提案手法が上回っている．
EDU選択は文選択を有意に上回っていることから，文よりも細かいEDUを抽出粒度とすることで，要約文書の情報の網羅性を高めることができている．
しかし，EDUという予め決められた長さのテキストスパンを抽出する手法よりも，部分木という可変長のテキストスパンを抽出できる提案手法の方がROUGE値は上回っており，その有効性がわかる．
LEAD法は，報道記事の単一文書要約問題において非常に強力なベースラインである．
これは，報道記事ではしばしば記事の冒頭でその記事全体の小さなまとめが書かれる傾向にあるためである．
今回の実験では抽出単位の異なる二種類のLEAD法を用いたが，いずれも低い数値となった．
これは要約対象となっている文書が，単純な報道記事ではなく，エッセイや社説によって構成されているためであり，冒頭に重要なまとめが記載されているわけではないことが原因である．
一方，long要約セットでは，提案手法とEDU選択手法との間に顕著な差は見られなかった．
これは，25%という圧縮率が比較的緩く，いずれの手法，抽出単位でもある程度の情報が網羅できるために大きな差が生まれなかったためである．
ただし，文を抽出単位とした手法（文選択およびLEAD[MATH]）のROUGEスコアは低いことから，情報網羅性の向上のためには，文よりも小さいテキストスパンを抽出することが重要であるとわかる．
以上の結果から，提案手法のような要約長に柔軟な要約手法は，short要約セットのように比較的圧縮率の高い設定において有効であることがわかる．
表[REF_tab:results]の実験結果は，人手で与えられたRSTに基づく修辞構造を用いていた．
提案手法を任意の文書に適用する場合，文書の修辞構造を自動で解析する解析器が必須である．
しかし，修辞構造の自動解析は難しいタスクの一つであり，人手で付与された談話構造を使用したときと比較して精度が劣化してしまうおそれがある．
そこで本節では，既存の修辞構造解析器を用いて自動で解析した修辞構造を利用した場合の精度の変化を調べる．
今回の実験では自動解析器として，サポートベクターマシンに基づく高い精度を持った解析器であるHILDA [CITE]を用いた．
表[REF_tab:results_auto]に実験結果を示す．
[MATH]と付いている行が，自動解析に基づく依存木を使用した場合の結果である．
結果から，いずれの手法も人手で作成された修辞構造を用いたものよりROUGE値が劣化していることがわかる．
short要約セットの場合は，提案手法の方が劣化が大きい．
これは，提案手法がEDU単位の依存構造を文単位に変更しているためである．
HILDAを始めとする自動解析器は，ボトムアップに修辞構造木を組み上げていくため，それを用いて得た修辞構造木を談話依存構造へと変換すると，距離が近いEDU間の依存関係は比較的高い精度で予測できるが，遠い依存関係の予測精度は低い．
このため，遠距離の依存関係である文間の依存関係の同定に失敗し，提案手法のROUGEが大きく劣化したと考える．
実際，依存先の正解率 を計算すると，EDU単位で0.590，文単位で0.324となった．
しかしながら，short要約セットにおいては，減少幅は大きいものの依然として提案手法の精度が，今回比較したどの手法の数値よりも高いことから，提案手法の有効性がわかる．
long要約セットにおいては，EDU選択手法のROUGE値の減少はほとんど見られなかった．
[REF_sec:rouge]節で述べた通り，long要約セットは低い圧縮率であるため比較的多くの情報を要約に含めることができる．
文単位の依存関係においても，正解率自体は低くとも選択できる文数が増えるため，short要約セットよりもROUGE値の劣化が抑えられている．
すなわち，short要約セットのように圧縮率の厳しい設定では，より高い精度で抽出単位の依存先を推定する必要がある．
前節で，提案手法の有効性をROUGE値によって確認した．
本節では，談話構造，すなわち文間依存木の情報が文書中の重要箇所同定に有効かという点について考察を行う．
現在，文書要約において主流な問題設定は，同じトピックについて書かれた文書の集合からひとつの要約文書を生成する，複数文書要約である．
冒頭で説明した文抽出と文圧縮を組み合わせる手法も全て複数文書要約に取り組んでいるのに対して，今回我々が行った実験は，一つの文書に対し一つの要約文書を生成する単一文書要約問題である．
単一文書要約は複数文書要約と比較して，要約文書に含めるべき文書の重要部分の同定が難しい．
なぜならば複数文書要約では文書集合全体として重要な話題は文書横断的に出現するため，その性質を利用できるが，単一の文書においてそのような情報は利用できないためである．
対象とする文書が報道記事である場合は，冒頭部分に記事全体の要約が書かれやすいという強力な基準があるが，そうでない場合に重要な部分を同定することは困難である．
今回我々が用いた単一文書要約の評価セットは，報道記事ではなく社説やエッセイのような文書で構成されているため重要部分の同定が難しい．
これは表[REF_tab:results]におけるLEAD手法のROUGE値からも確認できる．
文間依存木の情報が文書の重要箇所同定に与える影響について検証するため，提案手法（自動解析含む）の単語重要度から[MATH]を取り除いたもの，すなわち単語の重要度が単にその文書における出現頻度で決まる場合と，文間依存木の情報を一切用いない従来の同時モデルについても同様に実験を行い比較した．
表[REF_tab:results_single]に，それぞれの結果を示す．
提案手法の単語重要度から文間依存木の情報（依存木の根からの深さ）を除いた場合に十分なROUGEスコアが得られないことから，文書の談話構造が単一文書要約における重要箇所の同定に寄与していることがわかる．
なお，同時モデルと異なり，木構造の制約という形で文間依存木の情報は用いていることに注意されたい．
同時モデルの結果を見ると，文抽出と文圧縮の同時最適化のみでは，本評価セットで有効に機能しないことがわかる．
重要文の同定・抽出が困難であるならば，複数文書要約において盛んに取り組まれている文抽出と文圧縮の同時最適化を適用することも困難となり，要約長に柔軟な要約文書の生成も困難となる．
本研究の結果は単一文書における重要部分の同定に対するひとつの手がかりとして，文書の談話構造が有効である可能性を示唆しているといえる．
ここまで，ROUGEの観点から評価実験の結果についての考察を進めてきた．
本節では，単語間依存木からその部分木を抽出する方法として，任意の部分木を抽出することの有用性を，例を示して考察する．
図[REF_fig:sents]に，任意部分木抽出手法と根付き部分木抽出手法が共通して要約文書に含めた文と，そこから抽出した部分木に対応する二つの文を示す．
なお，これはshort要約セットにおける例である．
ここで，[MATH]は依存構造解析器が単語間依存木の根であると出力した語であり，[MATH]は要約システムが部分木の根として選んだ語である．
任意部分木抽出においては，例に示したいずれの文も解析器の根以外の単語を根として部分木を抽出している．
例に見るように，目的節やthat節の内容の方が重要な情報を持つことが多いため，その部分のみを抽出することは，限られた長さで重要な情報のみ要約に含める上で有用であり，今回の実験ではこうした事例が少なかったこともありROUGEスコアで大きな差がでなかったが，特に圧縮率の高い設定では有効であろう．
EDUはRSTにおける談話構造の基本単位であるが，抽出型要約の抽出単位として適切とは限らない．
図[REF_fig:edus]に，ある文とその文を構成するEDUの例を示す．
図のように，EDUはおおよそ節に対応する文よりも細かな単位である．
抽出単位が文よりも細かいEDUであることは，EDU抽出は，文圧縮を逐次適用した要約手法として考えることができる．
つまり，EDU抽出による要約は多くの文を事前に圧縮しつつ抽出していることに相当する．
このように文よりも小さな断片を組み合わせて要約を生成すると，文を組み合わせる場合よりも長さ制約をちょうど満たすように要約を生成することができる可能性が高い．
よって，ROUGE値も上昇する傾向にある．
しかし，EDUは文よりも短いため，たとえ一貫性があろうともそれを読んだ読者が違和感を覚えてしまうだろう．
抽出型要約において，文書中の多くの文から細かな断片を集めることで情報の断片化された要約の生成につながっているかどうかのは，要約文書に含まれる抽出単位集合の元となる文の数が，その一つの指標となる．
言い換えると，生成された要約を構成する文の数が，参照要約すなわち人間によって生成された要約に近い方が，自然で読みやすい要約になっていると考えられる．
そこで本節では各手法が生成した要約文書に含まれる原文書の文数を比較した．
比較に用いた手法は提案手法である任意部分木抽出の他に，文選択とEDU選択である．
文選択は原文書中の文の数，EDU選択は原文書中のEDUに対応する文の数，部分木選択は，部分木に対応する文の数である．
なお，参照要約は人間が自由に生成した要約であるため，必ずしも原文書の文とは対応していないことに注意されたい．
short要約セットにおいて各選択手法が選択した文について箱ひげ図を図[REF_fig:boxes_short]に示す．
各々の箱の上辺と下辺は，それぞれその手法が選択した文数の第一四分位点，第三四分位点を表しており，箱の中の線は中央値を表している．
箱の上下に伸びる線（ひげ）の先は，それぞれ最大値，最小値を表し，ひげよりも外側に見られる[MATH]印は，外れ値である．
図を見ると，EDU選択手法が最も多くの文を用いて要約を生成していることがわかる．
一方で文選択手法は，比較手法の中では最も参照要約の文に近いが，[REF_sec:rouge]節で示した通り情報の網羅性という点で十分な要約を作成できない．
部分木抽出は文選択とEDU選択の間で，両者のように実際に抽出されるテキストスパンの長さを固定せずに要約システムが柔軟に各文から抽出する部分木を選択することができる．
それにより情報の網羅性と要約としての自然さを両立出来ている．
なお，部分木抽出手法の平均文数は4.73であり，中央値は4文であった．
これに対し，EDU選択の平均文数は5.77で中央値は5文であった．
これは提案手法の方が有意に少ない文を用いて要約を生成していることを示している．
自動解析を利用した場合も同様の傾向であるため詳細は割愛する．
同様に，long要約セットについて図[REF_fig:boxes_long]に示す．
圧縮率が低くなった場合も全体の傾向としてはshort要約セットとの大きな差異はない．
全体的にばらつき（箱の縦の長さ）が大きくなっているが，これは参照要約自体の長さのばらつきがshort要約セットよりも大きいことが原因である．
