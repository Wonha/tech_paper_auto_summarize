抽出型要約は現在の文書要約研究において最も広く用いられるアプローチである．
このアプローチは，文書をある言語単位（文，節，単語など）の集合とみなし，その部分集合を選択することで要約文書を生成する．
要約システムに必要とされる側面はいくつかあるが，特に重要なのが，一貫性(coherence) [CITE]と情報の網羅性が高い要約を生成することと，要約長に対し柔軟に対応できることである．
一貫性の高い要約とは，原文書の談話構造（あるいは論理構造）を保持した要約を指す．
要約が原文書の談話構造を保持していない場合，原文書の意図と異なる解釈を誘発する文書が生成されてしまうおそれがある．
すなわち，原文書と似た談話構造を持つように要約文書を生成することは，要約を生成するために重要な要素である．
要約文書において談話構造を考慮するために修辞構造理論(Rhetorical Structure Theory; RST) [CITE]が利用可能である．
RSTは文書の大域的な談話構造を木として表現するため，RSTの木構造を損なわぬように原文書中の抽出単位を選択することで，原文書の談話構造を保持した要約文書が生成できる[CITE]．
従来のRSTを抽出型要約に組み込む従来の手法の問題点は，その抽出粒度にある．
RSTで扱う文書中の最小単位はElementary Discourse Unit (EDU)と呼ばれ，おおよそ節に対応するテキストスパンである．
従来手法は，抽出の単位をEDUとして要約の生成を行ってきたが，それが要約において必ずしも最適な単位であるとは限らない．
また，本節で後に説明するように，それなりの長さを持ったテキストスパンを抽出単位とする場合，要約長に対する柔軟性の面でも問題が生じる．
情報の網羅性は，文書要約の目的そのものでもある非常に重要な要素である．
要約文書は原文書の内容を簡潔にまとめている必要があり，原文書の重要な内容を網羅していることが要求される．
近年，抽出型要約において，原文書から重要な抽出単位の部分集合を選択する問題を整数計画問題(Integer Linear Programming; ILP)として定式化するアプローチが盛んに研究されている．
抽出された部分集合が原文書の情報をなるべく被覆するような目的関数を設定し，最適化問題として解くことで，原文書の情報を網羅した要約文書の生成が可能となる．
実際にこれらの手法は要約文書の情報の網羅性の指標となる自動評価手法であるROUGE (Recall-Oriented Understudy for Gisting Evaluation)[CITE]値の向上に大いに貢献してきた[CITE]．
RSTを要約に組み込む研究の多くはRSTで定義される修辞構造の構造木をそのまま利用したものが多かった[CITE]が，Hiraoら[CITE]は，RSTの談話構造木をそのまま用いることの問題点を指摘し，EDUの依存構造木(DEP-DT)に変換し，依存構造木の刈り込みにより要約を生成する木制約付きナップサック問題[CITE]として要約を定式化した．
ILPの導入によって，高い網羅性を持った要約の生成が可能となった一方で，要約手法が持つ要約長に対する柔軟性は，情報の網羅性と密接な関係をもつようになった．
文書要約では，要約文書が満たすべき上限の長さを指定することが一般的である．
抽出型要約においてよく用いられる抽出単位は文であり，生成された要約の文法性が保証されるという利点がある．
しかし，高い圧縮率，すなわち原文書の長さと比較して非常に短い長さの要約文書が求められている場合，文を抽出単位とすると十分な量の情報を要約文書に含めることが出来ず，情報の網羅性が低くなってしまうという問題があった．
この問題に対し，文抽出と文圧縮を組み合わせるアプローチが存在する．
文圧縮とは，主に単語や句の削除により，対象となる文からより短い文を抽出する手法である．
近年，こうした文圧縮技術と文抽出技術を逐次適用するのではなく，それらを同時に行うアプローチ（以降これらを同時モデルとよぶ）が盛んに研究されており，高い情報の網羅性と要約長への柔軟性を持った要約文書の生成が可能となっている．
本研究の目的は，文書の談話構造に基づく，情報の網羅性と要約長への高い柔軟性を持った要約手法を開発することである．
これまで，文書要約に談話構造を加える試みと，文抽出と文圧縮の同時モデルは，どちらも文書要約において重要な要素であるにもかかわらず，独立に研究されてきた．
その大きな要因の一つは，両者の扱う抽出粒度の違いである．
前者はEDUであり，後者の抽出粒度は文（圧縮され短くなった文も含む）である．
抽出単位を文やEDUというそれなりの長さのテキストスパンにすると，ある要約長制約に対し，選択可能なテキストスパンの組合せは自ずと限られ，情報の網羅性を向上させることが困難な場合がある．
我々は，文間の依存関係に基づく木構造と単語間の依存関係に基づく木構造が入れ子となった入れ子依存木を提案し，その木構造に基いて要約を生成することでこの問題に取り組む．
提案手法について，図[REF_fig:nested_tree]に示す例で説明する．
本研究で提案する入れ子依存木は，文書を文間の依存関係で表した文間依存木で表現する．
文間依存木のノードは文であり，文同士の依存関係をノード間のエッジとして表現する．
各文内では，文が単語間の依存関係に基づいた単語間依存木で表現されている．
単語間依存木のノードは単語であり，単語同士の依存関係をノード間のエッジとして表現する．
このように，文間依存木の各ノードを単語間依存木とすることで，入れ子依存木を構築する．
そして，この入れ子依存木を刈り込む，つまり単語の削除による要約生成をILPとして定式化する．
生成された要約は，文間依存木という観点では必ず文の根付き部分木となっており，その部分木内の各文内，すなわち単語間依存木の観点では単語の部分木となっている．
ここで，文間依存木からは必ず木全体の根ノードを含んだ根付き部分木が抽出されているのに対し，単語間依存木はそうでないものも存在することに注意されたい．
従来，文圧縮を文書要約に組み込む研究では，単語間依存木の場合も必ず根付き部分木が選択されていたが，限られた長さで重要な情報のみを要約に含めることを考えると，単語の根付き部分木という制約が情報の網羅性の向上の妨げとなる可能性がある．
そこで提案手法では，根付きに限らない任意の部分木を抽出するために，部分木の親を文中の任意の単語に設定できるよう拡張を加えた．
提案手法をRST Discourse Treebank [CITE]における要約システムの評価セットで従来の同時モデルや木制約付きナップサック問題による要約手法と比較評価したところ，文書要約の自動評価指標であるROUGEにおいて最高精度が得られることを確認した．
