================================================================
[section type  : abstract]
[section title : abstract]
================================================================
[i:0, score:203] 本論文では，情報検索のための表記の揺れに寛容な類似尺度を提案する．
[i:3, score:310] 表記の揺れに対応することができる尺度として編集距離が知られているが，実際にこの尺度を単純に類似尺度に変換したものを用いて情報検索を行ってみたが，性能がでなかった．
[i:4, score:242] そこで，本論文では，この単純な類似尺度を情報検索に適した表記の揺れに寛容な類似尺度に拡張することを試み，その結果，この拡張によって検索性能が向上したことを示す．

================================================================
[section type  : intro]
[section title : はじめに]
================================================================
[i:17, score:318] そこで，本論文ではまず，この編集距離を一致する文字を計数する類似尺度に変換し，情報検索テストコレクションNTCIR1[CITE]を用いて実験を行ったが，その結果は満足できるものではなかった．
[i:23, score:384] そして，編集距離から最終的に本論文で提案する類似尺度に到達する過程で定義する類似尺度を組み込んだシステムを構築し，類似尺度を拡張することによって表記の揺れに寛容な性質を損なうことなく，情報検索性能が向上するかを検証する．
[i:25, score:397] すなわち，本論文で提案する表記の揺れに寛容な類似尺度を組み込んだ情報検索システムと，形態素解析によって得られた単語を一致する文字列の単位とし，その単語が持つ[MATH]を重みとして累計するシステム，ngramを一致する文字列の単位とし，そのngramが持つ[MATH]を重みとして累計するシステムと比較する．

================================================================
[section type  : proposed_method]
[section title : 編集距離の類似尺度への変換とその拡張]
================================================================
[i:34, score:227] 本論文では，検索性能の低下を招く表記の揺れに寛容な類似尺度を提案する．
[i:35, score:351] そのために，まず編集距離を類似尺度に変換し，次に一致した文字の重みを加算する類似尺度に拡張し，最後に一致した文字列の重みを加算する類似尺度に拡張する．
[i:36, score:103] 本節では，この三つのステップ毎に定義した類似尺度を示すことで，本論文で提案する類似尺度が考慮する性質を明示する．
-----------------------------------------------------
  [subsection title : 編集距離の類似尺度への変換]
-----------------------------------------------------
  [i:lead, 104] 情報検索において，検索対象となるデータに存在する表記の揺れは検索性能の低下を招くものである．
.....
  [i:53, score:259] 本論文では，情報検索に適した編集距離に基づく類似尺度を提案するための第一ステップとして，この定義を変形して，相違尺度である編集距離を類似尺度に変換する．
  [i:54, score:287] 具体的には，編集距離とは逆に類似度が最大になるように，関数[MATH]の代わりに関数[MATH]を用いて一致する文字の位置を決定する尺度に変換する．
  [i:56, score:317] この尺度と編集距離との違いは類似度を最大にするか相違度を最小にするかの違いだけなので，編集距離の持つ表記の揺れに寛容な性質は損なわれていない．
-----------------------------------------------------
  [subsection title : 文字重み編集類似度への拡張]
-----------------------------------------------------
  [i:lead, 273] 単純編集類似度はすべての文字を同等に扱うため，一致する文字の重みはすべて1.0である．
.....
  [i:72, score:393] このような背景から，情報検索に適した編集距離に基づく類似尺度を提案するための第二ステップとして，文字が一致した場合，常に1.0を加算するのではなく，一致した文字が持つ重みを加算する類似尺度に単純編集類似度を拡張する．
  [i:77, score:311] ここで，文字に関して操作ごとに重み付けるのではなく，その文字に対してどの操作が行われても文字が持つ唯一の重みを付けると，編集距離（レーベンシュタイン距離）から単純編集類似度への変形のように，重みづきレーベンシュタイン距離を文字重み編集類似度に変形することができる．
  [i:94, score:308] これらの文に対して，単純編集類似度は一致する文字がひらがなであっても同じ重みを加算するため，高い類似度を与えてしまう．
-----------------------------------------------------
  [subsection title : 文字列重み編集類似度への拡張]
-----------------------------------------------------
  [i:lead, 30] 例[REF_ex:weight]の[MATH]は「自動翻訳システム」であり，この文は「自動」，「翻訳」，「システム」という三つの内容語で構成されている．
.....
  [i:104, score:317] さらに，一単語より長い文字列が検索に大きく貢献するようにngramを単位とし，一致したngramの重みを加算することによって類似度を求める尺度もある．
  [i:108, score:404] このような背景から，情報検索に適した編集距離に基づく類似尺度を提案するための最終ステップとして，一致した文字ではなく，一致した文字列が持つ重みを加算する類似尺度に文字重み編集類似度を拡張する．
  [i:110, score:317] 本論文では，この類似尺度を「文字列重み編集類似度」と呼ぶことにした．

================================================================
[section type  : proposed_method]
[section title : 本論文で用いる重み]
================================================================
[i:119, score:179] 例[REF_ex:weight]では，ひらがな以外の文字に重みを持たせたが，文字に持たせる重みを調節することによって，検索性能を大きく向上することが容易に予測できる．
[i:125, score:199] 本論文で扱う類似尺度が用いる重みはすべて[MATH]に基づくものとし，類似尺度の定義の違いによる検索性能の比較を行った．
[i:130, score:278] 本論文の目的は検索性能の低下を招く表記の揺れに寛容な類似尺度を提案することであるため，最適な重みについては今後の課題と考えている．

================================================================
[section type  : experiment_result]
[section title : 実験の概要]
================================================================
[i:131, score:150] 本論文では，提案する類似尺度の情報検索性能を評価するために，実験対象となる類似尺度を組み込んだ情報検索システムをそれぞれ作成し，検索性能を比較した．
[i:132, score:447] まず，単純編集類似度，文字重み編集類似度，文字列重み編集類似度の情報検索における性能を比較し，順に拡張したことによって表記の揺れに寛容な性質を損なうことなく，予想通り性能の向上を計ることができているかを検証する．
[i:133, score:154] そして，この検証においてもっとも高い性能を持つ類似尺度の検索性能を，多くの情報検索システムに用いられる類似尺度の基となっている二つの類似尺度と比較する．

================================================================
[section type  : proposed_method]
[section title : 編集類似度の性質および検索性能の検証]
================================================================
[i:142, score:452] 本節では，単純編集類似度([MATH])，文字重み編集類似度([MATH])，文字列重み編集類似度([MATH])の情報検索における性能を比較し，順に拡張したことによって表記の揺れに寛容な性質を損なうことなく，予想通り性能の向上を計ることができているかを検証する．
[i:145, score:382] 表[REF_sim-11pt-comp]は，単純編集類似度，文字重み編集類似度，文字列重み編集類似度をそれぞれ用いたシステムで訓練用30問について情報検索を行った結果の11点平均精度(11 point average precision)に示す．
[i:169, score:371] これは，文字重み編集類似度を文字列重み編集類似度に拡張しても表記の揺れに寛容な性質を保持しているということを表している．

================================================================
[section type  : proposed_method]
[section title : 基本的な類似尺度との検索性能比較]
================================================================
[i:175, score:358] [REF_comp-sim]節に示した実験において，本論文で提案する三つの編集類似度のなかで，文字列重み編集類似度がもっとも情報検索において有効であることがわかった．
[i:176, score:370] 本節では，提案する文字列重み編集類似度の検索性能を，多くの情報検索システムに用いられる類似尺度の基となっている類似尺度と比較する．
[i:178, score:326] 本論文では，形態素解析を利用して内容語を抽出し，質問と文書のどちらともに存在する内容語の重みを加算する類似尺度と，質問と文書のどちらともに存在する文字列(ngram)の重みを加算する類似尺度を選び，これらの尺度を用いた二つのシステムをベースラインシステムとした．
-----------------------------------------------------
  [subsection title : ベースラインシステム：BD]
-----------------------------------------------------
  [i:lead, 193] 本論文では，一つ目のベースラインシステムとして，形態素解析を利用し内容語を抽出し，質問と文書のどちらともに存在する内容語の重みを加算することによって類似度を測るシステムを作成した．
.....
  [i:179, score:193] 本論文では，一つ目のベースラインシステムとして，形態素解析を利用し内容語を抽出し，質問と文書のどちらともに存在する内容語の重みを加算することによって類似度を測るシステムを作成した．
  [i:183, score:153] BDシステムはまず，質問と文書それぞれに対して形態素解析を行い，そして，解析結果から内容語（名詞，動詞，未定義語）の原形を抽出し，類似度を測るための内容語だけが並ぶ質問集合のファイルと文書集合のファイルを作成する．
  [i:186, score:297] 内積スコアリング関数は文字列重み編集類似度に用いられる重み関数と同じ[MATH]に基づく重み関数である．
-----------------------------------------------------
  [subsection title : ベースラインシステム：BN]
-----------------------------------------------------
  [i:lead, 299] 本論文では，二つ目のベースラインシステムとして，質問と文書のどちらともに存在する文字列(ngram)の重みを加算することによって類似度を測るシステムを作成した．
.....
  [i:192, score:365] BNシステムは，質問と文書のどちらともに現れる文字列を検出し，文字列重み編集類似度に用いられるScore関数を用いて類似度を求める．
  [i:199, score:349] BNシステムはマッチングの対象が文字列重み編集類似度と同じ文章にある部分文字列(ngram)である．
  [i:200, score:355] BNシステムと文字列重み編集類似度の唯一の違いは，類似尺度の定義が語順を無視した重みの総和をとるか語順を保存した重みの合計の最大値をとるかの違いである．
-----------------------------------------------------
  [subsection title : 検索性能の比較]
-----------------------------------------------------
  [i:lead, 399] 本節では，本論文で提案する文字列重み編集類似度([MATH])を用いたシステムと，[MATH]を用いたBDシステム，[MATH]を用いたBNシステムの検索性能を比較する．
.....
  [i:210, score:399] 本節では，本論文で提案する文字列重み編集類似度([MATH])を用いたシステムと，[MATH]を用いたBDシステム，[MATH]を用いたBNシステムの検索性能を比較する．
  [i:211, score:298] 本論文では，文字列重み編集類似度を用いたシステムをダイナミックプログラミングを用いて計算できることから，「DP」と呼ぶことにした．
  [i:220, score:120] 実験結果において，表[REF_tab:comparison]から[REF_comp-sim]節に示すような仮説を立て，検索性能を検証すると，[MATH]と[MATH]には危険率[MATH]以下のレベルで有意な差があり，[MATH]と[MATH]には危険率[MATH]以下のレベルで有意な差があることがわかる．
-----------------------------------------------------
  [subsection title : BDとの振る舞いの差]
-----------------------------------------------------
  [i:lead, 84] 本論文の実験において，表[REF_tab:comparison]に示すように，DPはBDと同等以上の性能を持つことを示している．
.....
  [i:221, score:84] 本論文の実験において，表[REF_tab:comparison]に示すように，DPはBDと同等以上の性能を持つことを示している．
  [i:225, score:93] BDはデータマイニングを「デー」「タマ」「イニング」に分割してしまうため，その結果，情報検索の性能が低い．
  [i:229, score:65] しかし，未知語を学習することによって検索性能が向上することは明白であるため，システムを相補的に用いることが理想である．
-----------------------------------------------------
  [subsection title : 実行時間]
-----------------------------------------------------
  [i:lead, 21] 実験における各システムの実行時間を表[REF_tab:cost]に示す．
.....
  [i:234, score:157] この表では，``総実行時間''は33万件のドキュメントに対して30個の質問を検索することにかかった時間，``1質問当たり''は総実行時間を30で割った，1質問当たりにかかる平均実行時間，``1ドキュメント当たり''は1質問当たりの時間を33万で割った，1ドキュメントとの類似度を計算することにかかる平均実行時間である．
  [i:237, score:254] そして，文字列重みを利用しても単純な編集距離の計算よりも桁違いに遅くないことがわかる．
  [i:239, score:212] 本論文では，情報検索に利用できる表記の揺れに寛容な類似尺度の提案を目的としているので，インデックスを利用する処理速度の向上は今後の課題と考えている．

================================================================
[section type  : conclusion]
[section title : 考察]
================================================================
[i:240, score:0] 
-----------------------------------------------------
  [subsection title : 単語の順序について]
-----------------------------------------------------
  [i:lead, 331] 定義[REF_df:sim3]に示すように，文字列重み編集類似度は一致する文字列の重みにその文字列以外の部分の類似度を加算する操作をしている．
.....
  [i:241, score:331] 定義[REF_df:sim3]に示すように，文字列重み編集類似度は一致する文字列の重みにその文字列以外の部分の類似度を加算する操作をしている．
  [i:244, score:325] 順序関係を保存しながら，重みの合計が最大になるように部分文字列の組合せを探す尺度のなかで文字列重み編集類似度はすべての文字列の重みを考慮するということが特徴となっている．
  [i:245, score:349] キーワードの検索においても順序を保存することで検索精度が向上するという報告[CITE]があるが，文字列重み編集類似度はキーワードに限定せず質問を構成する文字列の順序を保存する．
-----------------------------------------------------
  [subsection title : 句の検出]
-----------------------------------------------------
  [i:lead, 282] 文字列重み編集類似度は，重みの合算の過程において類似判定に効果のある部分文字列を選び出す処理を行っている．
.....
  [i:248, score:282] 文字列重み編集類似度は，重みの合算の過程において類似判定に効果のある部分文字列を選び出す処理を行っている．
  [i:251, score:309] 言い替えれば，文字列重み編集類似度によって，検索に利用可能な「分離している複合語」を抽出していると解釈できる．
  [i:256, score:282] 実際に，文字列重み編集類似度で選択された一群の文字列の性質を分析することは行う価値のある今後の課題である．
-----------------------------------------------------
  [subsection title : シソーラスの利用]
-----------------------------------------------------
  [i:lead, 89] 文字列の一致の検出を行うときに，シソーラスを利用する拡張が考えられる．
.....
  [i:257, score:89] 文字列の一致の検出を行うときに，シソーラスを利用する拡張が考えられる．
  [i:258, score:135] すなわち，質問中の文字列がシソーラスの見出し語にあるときは，その対応する単語がドキュメントにあったときに文字列が一致しているとみなす拡張である．
  [i:259, score:85] この方法を実装することは簡単であるが，適切な重みを何にするか，実際に検索に効果があるかなどの問題が存在し，今後の課題である．

================================================================
[section type  : conclusion]
[section title : まとめ]
================================================================
[i:260, score:222] 本論文では，情報検索のための表記の揺れに寛容な類似尺度を提案し，その検索性能を評価した．
[i:261, score:275] 表記の揺れに対応できる尺度として編集距離が知られているが，実際にこの尺度を単純に類似尺度に変換したものでは性能がでない．
[i:262, score:329] 本論文では，表記の揺れに寛容な類似尺度を，情報検索に適するように，文字列に対する重みを計算するように拡張した．

