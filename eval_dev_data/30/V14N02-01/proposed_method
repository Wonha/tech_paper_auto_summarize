本章では，Web上の情報を用いて語の関連度を測る手法を提案する．
検索エンジンのヒット件数を用いて2語の関連度を計算する手法について説明する．
ここでは，従来研究で用いられている相互情報量を計算指標として関連度を算出する．
そして，その関連度を検証し，従来手法の問題点について述べる．
具体的な例を使って説明しよう．
ここで用いられている手法は，[CITE]のものと同一である．
関連度を測りたい語を，例えば「インク」「インターレーザー」「プリンタ」「印刷」「液晶」「Aquos」「テレビ」「Sharp」の8語とする．
これらの語群は，Epsonのプリンタであるインターレーザーに関する語と，Sharpの液晶TVであるAquosに関する語であり，各語の関連度を得ることで，2つのグループを適切に分けたいと仮定する．
表[REF_singlehit]に示しているのは，語群の各語に対して，検索エンジンによって得られたヒット件数である．
表[REF_cooccur-list]には，語群中の2語を検索エンジンのクエリーとしたときのヒット件数を行列形式にしたものを示す．
例えば，「インク」と「プリンタ」であれば，
``インク''    ``プリンタ''
をクエリーとして検索エンジンに入力し，そのヒット件数を調べる．
8語に対してこの行列を得るには，[MATH]回のクエリーが必要となる．
Baroniらは，この2つの情報を使って求めた相互情報量の値が，語の関連度を示すよい指標になると述べている．
相互情報量は，語[MATH]の出現確率を[MATH]，語[MATH]の出現確率を[MATH]，語[MATH]と語[MATH]の同時出現確率を[MATH]とすると，
MI(w_a,w_b) & = \log\frac{ p(w_a \cap w_b) }{p(w_a) p(w_b)}
\nonumber & = \log\frac{ N n(w_a,w_b)}{n(w_a) n(w_b)}
と表される．
ここで[MATH]は語[MATH]をクエリーとしたときのヒット数，[MATH]は「語[MATH]語[MATH]」をクエリーとしたときのヒット数であり，また，[MATH]は検索エンジンのクロールした全ページ数である．
Baroniらは[MATH]を3億5千万ページとしているが，2006年末現在では，Googleは約150億ページ，AltaVistaは約120億のページである．
ここでは[MATH]とした．
表[REF_mutual]に相互情報量を示す．
「液晶」の行に注目すると，「液晶」と関連が強いとあらかじめ想定している語は「テレビ」「Aquos」「Sharp」であるが，「プリンタ」や「インターレーザー」との相互情報量が大きく，「テレビ」や「Sharp」との値は小さくなっており，適切な関連度が算出されていない．
この原因は，相互情報量が「出現確率の影響を受ける」という特徴を持つためである．
この特徴は式([REF_MI])を次式のように書き換えるとわかりやすい．
[MATH]は語[MATH]が出現するときに語[MATH]と語[MATH]が共起する条件付き確率を表す．
[MATH]が等しい場合は，[MATH]の出現確率が小さいほど相互情報量は大きい値になる．
この特徴自体は「共起する確率が同じなら，出現確率の低い語と共起する方が関連性が強い」と考えられるので，問題がない．
しかし，検索エンジンにおいては語によって出現頻度に大きなばらつきがあり，また全事象を表す[MATH]が非常に大きいために出現確率の違いによる影響が大きくなり過ぎてしまう．
例えば，「テレビ」のように出現確率の極端に大きい語と他の語の相互情報量が小さくなる．
表[REF_mutual]の「テレビ」の列に注目すると，いずれの語においても「テレビ」との相互情報量が小さくなっていることが分かる．
実際に表[REF_singlehit]の語のヒット件数と表[REF_mutual]の各行との相関係数（式[REF_correlation]）は[MATH]となり，相互情報量と語の出現確率にやや強い負の相関があることが分かる．
それに対し，表[REF_cooccur-list]の共起ヒット件数と表[REF_mutual]の相互情報量のとの相関係数は[MATH]となり，ほとんど相関がないことが分かる．
このように，従来用いられてきた相互情報量は語の出現確率に影響を受けるため，関連度を測る際に各語の出現確率に数千倍，数万倍といった開きがある場合，値の信頼性は低くなるという問題がある．
これは，Jaccard係数やdice係数など他の類似度の指標についても当てはまる．
本論文では，[MATH]値を使った関連度の指標を用いる．
[MATH]値は，あるデータ集合内での統計的な偏りを表す指標であり，機械翻訳やコロケーション処理など，多くの手法で用いられている．
語の関連度としてはCurranらが用いている[CITE]．
[MATH]値を関連度に用いるのは，語の出現頻度のばらつきによる影響を排除するためである．
相互情報量やJaccard係数を関連度に用いる場合の問題点は，語の出現確率に大きな影響を受ける点である．
この問題の解決策として，出現確率を適切に正規化するというアプローチが考えられる．
[MATH]値では，語群を構成する語の出現頻度を正規化要素とし，値の正規化を行ったうえで，共起の偏りを算出するので，出現確率のばらつきによる影響を抑えることができる[CITE]．
このため，値のばらつきが大きい検索エンジンのヒット件数を用いて関連度を算出する場合，[MATH]値を計算指標として用いることが適切であると考えられる．
対象とする語群の中で，共起の偏りを統計的に調べるために，1つ1つの語について，語群内の他の語との共起頻度を標本値とし，「[MATH]が共起する確率は，語[MATH]と語群[MATH]内の語が共起する確率と等しい」という帰無仮説をおいて検定を行う．
語[MATH]と語[MATH]の実際の共起頻度を[MATH]，語[MATH]と語群Gの語との共起頻度の和を[MATH]，全ての共起頻度の和を[MATH]とするとき，語[MATH]と語[MATH]に関する[MATH]値は次式で表される．
\chi^2(w_i,w_j) & = \frac{n(w_i,w_j) - E(w_i,w_j)}{E(w_i,w_j)} \nonumber
E(w_i,w_j) & = S_{w_i} \times\frac{S_{w_j}}{S_G}
[MATH]は語[MATH]の共起頻度の期待値を表している．
例えば，語[MATH]を「プリンタ」，語[MATH]を「インターレーザー」とすると，[MATH]は[MATH]，[MATH]，[MATH]となる．
表[REF_chilist]は，表[REF_cooccur-list]から計算された[MATH]値行列である．
表[REF_chilist]では，「プリンタ」は「印刷」や「インク」と偏って共起している．
また，「インターレーザー」は「プリンタ」との共起が，「Aquos」は「Sharp」との共起が強いなど，良好な結果となっている．
また，表[REF_chilist2]のような，「プリンタ」「液晶」との関連が低いと考えられる4語と「プリンタ」「液晶」の2語で構成される計6語の語群を与えた場合を考える．
この語群では，表[REF_singlehit]の語群と違い，「プリンタ」と「液晶」の関連性が強いと考えられる．
「プリンタ」の行に注目すると，確かに「プリンタ」と「液晶」の[MATH]値が大きくなっており，語群に基づいた適切な結果が得られている．
従来は，確率分布の類似度に基づいた分布クラスタリングの方法を用いて，関連語をクラスタに分けることが多かった．
本研究では，語の関連度からネットワークを構築し，ネットワークに基づく新しいクラスタリングの方法を適用する．
関連語ネットワーク上でNewman法によりクラスタリングを行い，その結果，同じクラスタに分類されたもの同士を関連語として取り出す．
このクラスタリング法は，語の数が大規模になったときにでも適用でき，対象によってはよいクラスタを生成するので近年注目を集めている．
まず，語の関連性を用いて，語のネットワークを構築する．
ノードが語，エッジが強い関連を表す．
本論文では，これを関連語ネットワークと呼ぶ．
関連語ネットワークは次のように構成される．
語群[MATH]を与える．
次式により2語[MATH]の関連度[MATH]を計算する．
\chi^2_{w_i,w_j} & = \frac{n(w_i,w_j) - E(w_i,w_j)}{E(w_i,w_j)} \nonumber
E(w_i,w_j) & = S_{w_i} \times\frac{S_{w_j}}{S_G}
S_{w_i} & = \sum_{k} n(w_i,w_k) \nonumber
S_G & = \sum_{w_i \in G} S_{w_i} \nonumber
各語[MATH]をノードとして配置する．
[MATH]のとき，ノード[MATH]，[MATH]間にエッジを張る．
例を図[REF_related-network]に示す．
これは，Webから獲得したコーパス中に高頻度に出現する計90語をこのネットワークの構成語として用い，ヒット件数を得る検索エンジンとしてGoogleを用いた関連語ネットワークである．
この関連語ネットワーク上では，関連の強い語同士が近く配置されている．
例えば，図[REF_related-network]の左下には「疾患」「患者」などの医学関連の語が密集している．
また，上部では「アプリケーション」「ファイル」などのコンピュータ関連の語が密集している．
このように関連語ネットワーク上では，関連の強い語同士が密集して存在している．
従来のシソーラス構築における語のクラスタリングには確率分布を用いた分布クラスタリング手法が一般的に用いられている．
[CITE]．
また情報検索の分野では，語を属性とする高次元のベクトルを用いた語のクラスタリング手法も多く，LSAやrandom projectionといった次元を圧縮する手法も有効である[CITE]．
一方で，近年ではデータをネットワークとして表した上で，それを分析する手法が提案され，着目を集めており，語の関係性の分析にも用いられている[CITE]．
SigmanはWordNetがネットワーク構造としての性質を持っていることを示し，WordNetにネットワーク分析の手法を適用できることを示している[CITE]．
ネットワークのクラスタリングには，従来，表[REF_Hierarchical]のように距離関数[MATH]を定義し（[MATH]はクラスタ[MATH]に含まれる語の数，[MATH]は[MATH]の類似度を表す），距離の近い順に各クラスタをマージしていく階層的クラスタリング手法や，EMアルゴリズム，NaiveBayesといった機械学習の手法を用いたクラスタリング手法が一般的に用いられてきた．
しかし，ここ数年で新たなクラスタリング手法がいくつも提案されている．
代表例としては，betweennessクラスタリングがあげられる．
betweennessクラスタリングは，グラフのbetweennessというエッジの媒介性を表す指標（あるエッジが他のエッジの最短パスにどの程度の割合で含まれているか）に注目し，できるだけ部分グラフをつなぐようなbetweennessの高いエッジを削除していくことにより，密度の濃いサブグラフを同定する手法である[CITE]．
これらの手法は高次元のベクトルに対しても有効であり，以前の手法と比べて高い精度で現実のクラスタ構造を再現することができる．
その反面，時間計算量が大きく，大規模なネットワークに適用することは難しい．
例えば，ネットワークのノード数を[MATH]，エッジ数を[MATH]とするとき，betweennessクラスタリングの時間計算量は[MATH]または[MATH]であり，ノード数が多いネットワーク上でbetweennessクラスタリングを行うことは困難である．
そこで，本研究では大規模なネットワークにも適用可能なクラスタリング手法であるNewman法を用いる．
Newman法は，階層的クラスタリング手法の一つであるが，クラスタリングを評価関数[MATH]の最大値導出問題に置き換えた手法である[CITE]．
評価関数[MATH]とは，各クラスタの結合度を表す関数であり，[MATH]が大きいほど各クラスタ内の結合が強いことを表している．
Newman法では，[MATH]の高い状態がより適切にクラスタリングされた状態であると定義している．
そして，[MATH]の最大値を求めることで，そのネットワークに最適なクラスタリング結果を得ることを目標としている．
評価関数[MATH]は次式で表される．
[MATH]は頂点vが持っているエッジの本数，[MATH]は全エッジ本数の合計，[MATH]は頂点[MATH]が属しているクラスタを表している．
[MATH]はクロネッカーの[MATH]である．
式([REF_newman])の第1項において，[MATH]は頂点[MATH]間のエッジの有無を表しており，また頂点[MATH]が同じクラスタのときのみ，[MATH]となる．
つまり，第1項は各クラスタ内に含まれるエッジの本数の合計を表している．
同様に第2項においては，[MATH]は頂点[MATH]間にエッジが引かれる確率を表しているため，第2項は，各クラスタ内に含まれるエッジの本数の合計の期待値を表している．
すなわち，評価関数[MATH]とは，クラスター内に存在するエッジの本数の合計が期待値からどの程度ずれているかを相対的に表した値である．
クラスター内のエッジ本数の和が期待値と同じなら[MATH]，それより強いクラスターなら[MATH]であり，弱いクラスターなら[MATH]となる．
[MATH]が最大であるとき，各クラスター内での結合度が最大であるので，ネットワーク全体として最も良くクラスタリングされた状態であると考えられる．
しかし[MATH]の最大値を求める場合，エッジ数[MATH]，ノード数[MATH]のとき，計算量が[MATH]もしくは[MATH]となり，大きくなってしまう．
そこでNewman法ではGreedyアルゴリズムを用いて[MATH]の値が極大値をとるようにクラスタリングを行う．
Greedyアルゴリズムなので，「[MATH]の変化量[MATH]が最大になるようにクラスタ，もしくはノードをマージする」という手順を繰り返していく．
そして「[MATH]」となった時点でクラスタリングを終了とする．
このようにして[MATH]の極大値を求めている．
この際，常に「[MATH]が最大になるような2つのクラスタを選んでマージ」するため，クラスタがマージされていく順序は一意であり，初期条件によってクラスタリングの結果は変化しない．
また，クラスタ数を任意に制御したい場合は，終了条件を[MATH]ではなくクラスタ数にすることも可能である．
Newman法とbetweennessクラスタリングを比較すると，NewmanらによりNewman法はbetweennessクラスタリングとほぼ同じ精度のクラスタリング結果が得られることが示されている．
また，Newman法の時間計算量は[MATH]もしくは[MATH]であり，時間計算量が[MATH]あるいは[MATH]であるbetweennessクラスタリングと比べ，計算量が少なく，高速な手法となっている．
そのため，Newman法はノード数やエッジ数が大きい大規模ネットワークに適用可能である．
語群[MATH]を用いてシソーラスを構築する場合，Newman法を用いて関連語を同定する手順は次のようになる．
検索エンジンのヒット件数と[MATH]値を用いて語群[MATH]の語の関連度を算出する．
関連度をもとに語群[MATH]を構成語とする関連語ネットワークを構築する．
1つの語を1つのクラスタとする．
ある2つのクラスタが1つのクラスタになったと仮定して，[MATH]の変化量[MATH]（式[REF_deltaq]）を計算する．
(4)を全てのクラスタの組み合わせについて行う．
[MATH]が最大となるような2つのクラスタをマージし，1つのクラスタとする．
ただし，最大の[MATH]なら(8)へ．
マージしたクラスタの[MATH]を再計算し，(4)に戻る．
同じクラスタに属している語を関連語とみなす．
\Delta Q_{ij} & = 2(e_{ij}-a_i a_j) \nonumber
e_{ij} & =クラスタi，j間のエッジの本数（割合）
a_i & = \sum_{i} e_{ii} \nonumber
語の関連は，相対的なものである．
候補となる語群によって，あるときは関連した語同士でも，他の場合には関連していないこともあり得る．
ある語群において全ての語同士の関連度が分かっているとき，どの語とどの語を関連語と見なすかは，関連度によって規定される語の関係性によると考えられる．
語の関連性を図[REF_ex-clustering]のようなネットワーク図（ノード間の距離を（1/語の関連度）とおく）で可視化すると，図[REF_ex-clustering]-aのような時は部分集合A,B,Cそれぞれが，関連語の集まった関連語群であると言える．
同様に図[REF_ex-clustering]-bであれば，部分集合A,B,C,Dそれぞれが関連語群であると言える．
このように語のネットワーク上で周囲と比べて密度が高くなっている部分を抽出することで，各語の関連語を同定することができる．
Webは非常に多様性に富んだテキストから構成されている．
したがって，目的に合わせた語の関連性を得るには，Webから適切な文書集合を切り出した上で，その文書集合内での関連度を求めるという方法が考えられる．
これには，検索クエリーに特定の検索語(keyword spice)を加える方法が有効であろう[CITE]．
本論文では，関連語ネットワーク上のエッジには重みを与えていないが，語の関連性が多値的であることを考えると，重みを考慮する必要がある．
ただし，既存のNewman法は重みのあるネットワークに対応していない．
そこで，重みを扱えるようにNewman法を改良することで，重みつきのネットワーク上でクラスタリングを行うことが考えられる．
語の関連性を「関連がある，ない」の2値ではなく，重みという多値で扱うことで，クラスタ数の自動取得も含めて，より適切なクラスタリング結果が得られることが予想される．
加えて，Newman法では1語が1つのクラスタリングにしか所属できないハードクラスタリングであるため，語の持つ多義性を解消することができない，という問題点がある．
しかし，Newman法をもとにしたソフトクラスタリングの手法も提案されており[CITE]，この手法を関連語ネットワークに適用することで語の多義性を解消できると考えられる．
また本研究では，同義・類義，上位語・下位語，連想語をすべて関連語としたが，こういった語を関係性を分類していくことも重要であろう．
こういった研究には，前置詞を手がかりとして語の関係性を同定する[CITE]の手法があるが，これを検索エンジンを利用していかに効率的に行うかは今後の検討課題のひとつである．
